(module
 (type $0 (func (param i32 i32) (result i32)))
 (type $1 (func (param i32) (result i32)))
 (type $2 (func))
 (import "env" "memory" (memory $0 256 256))
 (import "env" "memoryBase" (global $gimport$1 i32))
 (data (get_global $gimport$1) "debugInfo.asm.js")
 (export "add" (func $add))
 (export "ret" (func $ret))
 (export "opts" (func $opts))
 (export "fib" (func $fib))
 (export "switch_reach" (func $switch_reach))
 (export "nofile" (func $nofile))
 (func $add (; 0 ;) (type $0) (param $var$0 i32) (param $var$1 i32) (result i32)
  (i32.add
   (get_local $var$1)
   (get_local $var$1)
  )
 )
 (func $ret (; 1 ;) (type $1) (param $var$0 i32) (result i32)
  (set_local $var$0
   (i32.shl
    (get_local $var$0)
    (i32.const 1)
   )
  )
  ;;@ tests/other_file.cpp:314159:0
  (i32.add
   (get_local $var$0)
   (i32.const 1)
  )
 )
 (func $i32s-rem (; 2 ;) (type $0) (param $var$0 i32) (param $var$1 i32) (result i32)
  ;;@ return.cpp:100:0
  (if (result i32)
   ;;@ return.cpp:50:0
   (get_local $var$1)
   ;;@ return.cpp:100:0
   (i32.rem_s
    ;;@ return.cpp:50:0
    (get_local $var$0)
    (get_local $var$1)
   )
   ;;@ return.cpp:100:0
   (i32.const 0)
  )
 )
 (func $opts (; 3 ;) (type $0) (param $var$0 i32) (param $var$1 i32) (result i32)
  (set_local $var$0
   (i32.add
    (get_local $var$0)
    (get_local $var$1)
   )
  )
  (set_local $var$1
   (i32.shr_s
    (get_local $var$1)
    (get_local $var$0)
   )
  )
  ;;@ even-opted.cpp:2:0
  (i32.add
   ;;@ even-opted.cpp:1:0
   (call $i32s-rem
    (get_local $var$0)
    (get_local $var$1)
   )
   (get_local $var$1)
  )
 )
 (func $fib (; 4 ;) (type $1) (param $var$0 i32) (result i32)
  (local $var$1 i32)
  (local $var$2 i32)
  (local $var$3 i32)
  (local $var$4 i32)
  ;;@ fib.c:3:0
  (set_local $var$4
   (if (result i32)
    (i32.gt_s
     (get_local $var$0)
     (i32.const 0)
    )
    (block (result i32)
     (set_local $var$3
      (i32.const 1)
     )
     (i32.const 0)
    )
    (block (result i32)
     (set_local $var$1
      (i32.const 1)
     )
     (return
      (get_local $var$1)
     )
    )
   )
  )
  (loop $label$3
   (set_local $var$1
    (i32.add
     (get_local $var$3)
     (get_local $var$4)
    )
   )
   ;;@ fib.c:8:0
   (set_local $var$2
    (i32.add
     (get_local $var$2)
     (i32.const 1)
    )
   )
   ;;@ fib.c:3:0
   (if
    ;;@ fib.c:4:0
    (i32.ne
     (get_local $var$2)
     (get_local $var$0)
    )
    (block
     ;;@ fib.c:3:0
     (set_local $var$4
      (get_local $var$3)
     )
     (set_local $var$3
      (get_local $var$1)
     )
     (br $label$3)
    )
   )
  )
  (get_local $var$1)
 )
 (func $switch_reach (; 5 ;) (type $1) (param $var$0 i32) (result i32)
  (local $var$1 i32)
  ;;@ fib.c:8:0
  (set_local $var$1
   (block $label$1 (result i32)
    (block $label$2
     (br $label$1
      (if (result i32)
       (i32.lt_s
        (tee_local $var$1
         (i32.add
          (get_local $var$0)
          (i32.const 52)
         )
        )
        (i32.const 1369188723)
       )
       (block (result i32)
        (br_if $label$2
         (i32.eqz
          (i32.sub
           (get_local $var$1)
           (i32.const -1108210269)
          )
         )
        )
        (i32.const 0)
       )
       (block (result i32)
        (br_if $label$2
         (i32.eqz
          (i32.sub
           (get_local $var$1)
           (i32.const 1369188723)
          )
         )
        )
        (i32.const 0)
       )
      )
     )
    )
    (call $switch_reach
     (get_local $var$0)
    )
   )
  )
  (drop
   (call $switch_reach
    (get_local $var$0)
   )
  )
  (get_local $var$1)
 )
 (func $nofile (; 6 ;) (type $2)
  (call $nofile)
 )
)

