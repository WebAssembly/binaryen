(module
 (type $FUNCSIG$vii (func (param i32 i32)))
 (import "env" "memory" (memory $0 256 256))
 (import "env" "table" (table 0 0 anyfunc))
 (import "env" "memoryBase" (global $memoryBase i32))
 (import "env" "tableBase" (global $tableBase i32))
 (global $STACKTOP (mut i32) (i32.const 0))
 (export "add" (func $add))
 (export "ret" (func $ret))
 (export "opts" (func $opts))
 (export "fib" (func $fib))
 (export "switch_reach" (func $switch_reach))
 (func $add (param $x i32) (param $y i32) (result i32)
  ;; tests/hello_world.c:5
  (set_local $x
   (get_local $x)
  )
  ;; tests/hello_world.c:6
  (set_local $y
   (get_local $y)
  )
  ;; tests/other_file.cpp:314159
  (set_local $x
   (get_local $y)
  )
  (return
   (i32.add
    (get_local $x)
    (get_local $y)
   )
  )
 )
 (func $ret (param $x i32) (result i32)
  ;; return.cpp:50
  (set_local $x
   (i32.shl
    (get_local $x)
    (i32.const 1)
   )
  )
  ;; return.cpp:100
  (return
   (i32.add
    (get_local $x)
    (i32.const 1)
   )
  )
 )
 (func $i32s-rem (param $0 i32) (param $1 i32) (result i32)
  (if i32
   (i32.eqz
    (get_local $1)
   )
   (i32.const 0)
   (i32.rem_s
    (get_local $0)
    (get_local $1)
   )
  )
 )
 (func $opts (param $x i32) (param $y i32) (result i32)
  ;; even-opted.cpp:1
  (set_local $x
   (i32.add
    (get_local $x)
    (get_local $y)
   )
  )
  ;; even-opted.cpp:2
  (set_local $y
   (i32.shr_s
    (get_local $y)
    (get_local $x)
   )
  )
  ;; even-opted.cpp:3
  (set_local $x
   (call $i32s-rem
    (get_local $x)
    (get_local $y)
   )
  )
  (return
   (i32.add
    (get_local $x)
    (get_local $y)
   )
  )
 )
 (func $fib (param $$0 i32) (result i32)
  (local $$$0$lcssa i32)
  (local $$$01518 i32)
  (local $$$01518$phi i32)
  (local $$$01617 i32)
  (local $$$019 i32)
  (local $$1 i32)
  (local $$2 i32)
  (local $$3 i32)
  (local $$exitcond i32)
  (local $label i32)
  (local $sp i32)
  (set_local $sp
   (get_global $STACKTOP)
  )
  ;; fib.c:3
  (set_local $$1
   (i32.gt_s
    (get_local $$0)
    (i32.const 0)
   )
  )
  (if
   (get_local $$1)
   (block
    (set_local $$$01518
     (i32.const 0)
    )
    (set_local $$$01617
     (i32.const 0)
    )
    (set_local $$$019
     (i32.const 1)
    )
   )
   (block
    (set_local $$$0$lcssa
     (i32.const 1)
    )
    ;; fib.c:8
    (return
     (get_local $$$0$lcssa)
    )
   )
  )
  (loop $while-in
   (block $while-out
    ;; fib.c:4
    (set_local $$2
     (i32.add
      (get_local $$$019)
      (get_local $$$01518)
     )
    )
    ;; fib.c:3
    (set_local $$3
     (i32.add
      (get_local $$$01617)
      (i32.const 1)
     )
    )
    ;; fib.c:3
    (set_local $$exitcond
     (i32.eq
      (get_local $$3)
      (get_local $$0)
     )
    )
    (if
     (get_local $$exitcond)
     (block
      (set_local $$$0$lcssa
       (get_local $$2)
      )
      (br $while-out)
     )
     (block
      (set_local $$$01518$phi
       (get_local $$$019)
      )
      (set_local $$$01617
       (get_local $$3)
      )
      (set_local $$$019
       (get_local $$2)
      )
      (set_local $$$01518
       (get_local $$$01518$phi)
      )
     )
    )
    (br $while-in)
   )
  )
  ;; fib.c:8
  (return
   (get_local $$$0$lcssa)
  )
 )
 (func $switch_reach (param $$p i32) (result i32)
  (local $$0 i32)
  (local $$call i32)
  (local $$magic i32)
  (local $$rc$0 i32)
  (local $$switch$split2D i32)
  (local $label i32)
  (local $sp i32)
  (set_local $sp
   (get_global $STACKTOP)
  )
  (set_local $$magic
   (i32.add
    (get_local $$p)
    (i32.const 52)
   )
  )
  (set_local $$0
   (get_local $$magic)
  )
  (set_local $$switch$split2D
   (i32.lt_s
    (get_local $$0)
    (i32.const 1369188723)
   )
  )
  (if
   (get_local $$switch$split2D)
   (block $switch
    (block $switch-default
     (block $switch-case
      (br_table $switch-case $switch-default
       (i32.sub
        (get_local $$0)
        (i32.const -1108210269)
       )
      )
     )
     (block
      (set_local $label
       (i32.const 2)
      )
      (br $switch)
     )
    )
    (set_local $$rc$0
     (i32.const 0)
    )
   )
   (block $switch0
    (block $switch-default2
     (block $switch-case1
      (br_table $switch-case1 $switch-default2
       (i32.sub
        (get_local $$0)
        (i32.const 1369188723)
       )
      )
     )
     (block
      (set_local $label
       (i32.const 2)
      )
      (br $switch0)
     )
    )
    (set_local $$rc$0
     (i32.const 0)
    )
   )
  )
  (if
   (i32.eq
    (get_local $label)
    (i32.const 2)
   )
   (block
    (set_local $$call
     (call $switch_reach
      (get_local $$p)
     )
    )
    (set_local $$rc$0
     (get_local $$call)
    )
   )
  )
  (drop
   (call $switch_reach
    (get_local $$p)
   )
  )
  ;; /tmp/emscripten_test_binaryen2_28hnAe/src.c:59950
  (return
   (get_local $$rc$0)
  )
 )
)
