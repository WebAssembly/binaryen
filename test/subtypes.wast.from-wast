(module
 (type $struct-rec-one (sub (struct (field (ref $struct-rec-one)))))
 (type $struct-rec-two (sub $struct-rec-one (struct (field (ref $struct-rec-two)) (field (ref $struct-rec-two)))))
 (type $vector-i32 (array i32))
 (type $struct-any (sub (struct (field (ref any)))))
 (type $struct-i31 (sub $struct-any (struct (field (ref i31)))))
 (type $5 (func (param (ref $vector-i32) (ref null $vector-i32))))
 (type $vector-any (sub (array (ref any))))
 (type $vector-i31 (sub $vector-any (array (ref i31))))
 (type $8 (func (param (ref $vector-i31) (ref $vector-any))))
 (type $9 (func (param (ref $struct-i31) (ref $struct-any))))
 (type $struct-i31_any (sub $struct-i31 (struct (field (ref i31)) (field (ref any)))))
 (type $11 (func (param (ref $struct-i31) (ref $struct-i31_any))))
 (type $12 (func (param (ref $struct-rec-one) (ref $struct-rec-two))))
 (func $foo (type $5) (param $no-null (ref $vector-i32)) (param $yes-null (ref null $vector-i32))
  (local.set $yes-null
   (local.get $no-null)
  )
 )
 (func $bar (type $8) (param $v-i31 (ref $vector-i31)) (param $v-any (ref $vector-any))
  (local.set $v-any
   (local.get $v-i31)
  )
 )
 (func $baz (type $9) (param $s-i31 (ref $struct-i31)) (param $s-any (ref $struct-any))
  (local.set $s-any
   (local.get $s-i31)
  )
 )
 (func $boo (type $11) (param $s-i31 (ref $struct-i31)) (param $s-i31_any (ref $struct-i31_any))
  (local.set $s-i31
   (local.get $s-i31_any)
  )
 )
 (func $coinductive (type $12) (param $rec-one (ref $struct-rec-one)) (param $rec-two (ref $struct-rec-two))
  (local.set $rec-one
   (local.get $rec-two)
  )
 )
)
