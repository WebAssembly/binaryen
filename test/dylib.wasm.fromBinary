(module
 (type $0 (func (result i32)))
 (type $1 (func))
 (type $2 (func (param i32) (result i32)))
 (type $3 (func (param i32 i32) (result i32)))
 (import "env" "memory" (memory $mimport$0 0))
 (import "env" "__memory_base" (global $gimport$0 i32))
 (import "env" "g$waka_mine" (func $fimport$0 (result i32)))
 (import "env" "g$waka_others" (func $fimport$1 (result i32)))
 (import "env" "fp$_Z16waka_func_theirsi$ii" (func $fimport$2 (result i32)))
 (import "env" "fp$_Z14waka_func_minei$ii" (func $fimport$3 (result i32)))
 (global $g0 (mut i32) (i32.const 0))
 (global $g1 (mut i32) (i32.const 0))
 (global $g2 (mut i32) (i32.const 0))
 (global $g3 (mut i32) (i32.const 0))
 (global $g4 i32 (i32.const 0))
 (global $g5 i32 (i32.const 0))
 (data $0 (global.get $gimport$0) "*\00\00\00")
 (export "__wasm_apply_relocs" (func $f0))
 (export "_Z14waka_func_minei" (func $f1))
 (export "__original_main" (func $f2))
 (export "waka_mine" (global $g4))
 (export "main" (func $f3))
 (export "__dso_handle" (global $g5))
 (export "__post_instantiate" (func $f4))
 (func $f0
  (nop)
 )
 (func $f1 (param $0 i32) (result i32)
  (i32.add
   (local.get $0)
   (i32.const 1)
  )
 )
 (func $f2 (result i32)
  (i32.add
   (i32.load
    (global.get $g3)
   )
   (i32.add
    (i32.load
     (global.get $g2)
    )
    (i32.add
     (global.get $g0)
     (global.get $g1)
    )
   )
  )
 )
 (func $f3 (param $0 i32) (param $1 i32) (result i32)
  (i32.add
   (i32.load
    (global.get $g3)
   )
   (i32.add
    (i32.load
     (global.get $g2)
    )
    (i32.add
     (global.get $g0)
     (global.get $g1)
    )
   )
  )
 )
 (func $f4
  (global.set $g2
   (call $fimport$0)
  )
  (global.set $g3
   (call $fimport$1)
  )
  (global.set $g0
   (call $fimport$2)
  )
  (global.set $g1
   (call $fimport$3)
  )
 )
 ;; dylink section
 ;;   memorysize: 4
 ;;   memoryalignment: 2
 ;;   tablesize: 0
 ;;   tablealignment: 0
)

