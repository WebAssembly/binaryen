(module
 (type $legaltype$illegalImportResult (func (result i32)))
 (import "env" "memory" (memory $0 256 256))
 (import "env" "memoryBase" (global $memoryBase i32))
 (import "env" "illegalImportResult" (func $legalimport$illegalImportResult (result i32)))
 (global $tempRet0 (mut i32) (i32.const 0))
 (data (get_global $memoryBase) "i64-setTempRet0.asm.js")
 (export "illegalResult" (func $legalstub$illegalResult))
 (export "imports" (func $imports))
 (func $imports (; 1 ;) (; has Stack IR ;) (result i32)
  (i32.wrap/i64
   (i64.or
    (i64.extend_u/i32
     (call $legalimport$illegalImportResult)
    )
    (i64.shl
     (i64.extend_u/i32
      (get_global $tempRet0)
     )
     (i64.const 32)
    )
   )
  )
 )
 (func $legalstub$illegalResult (; 2 ;) (; has Stack IR ;) (result i32)
  (set_global $tempRet0
   (i32.const 2)
  )
  (i32.const 1)
 )
)
