(module
 (type $0 (func (param i32) (result v128)))
 (type $1 (func (param i32 v128)))
 (type $2 (func (result v128)))
 (type $3 (func (param v128 v128) (result v128)))
 (type $4 (func (param v128) (result i32)))
 (type $5 (func (param v128 i32) (result v128)))
 (type $6 (func (param v128) (result i64)))
 (type $7 (func (param v128 i64) (result v128)))
 (type $8 (func (param f32) (result v128)))
 (type $9 (func (param v128) (result f32)))
 (type $10 (func (param v128 f32) (result v128)))
 (type $11 (func (param f64) (result v128)))
 (type $12 (func (param v128) (result f64)))
 (type $13 (func (param v128 f64) (result v128)))
 (type $14 (func (param v128) (result v128)))
 (type $15 (func (param v128 v128 v128) (result v128)))
 (func $0 (; 0 ;) (type $0) (param $0 i32) (result v128)
  (v128.load
   (local.get $0)
  )
 )
 (func $1 (; 1 ;) (type $1) (param $0 i32) (param $1 v128)
  (v128.store
   (local.get $0)
   (local.get $1)
  )
 )
 (func $2 (; 2 ;) (type $2) (result v128)
  (v128.const i32 0x1 0x0 0x0 0x0 0x2 0x0 0x0 0x0 0x3 0x0 0x0 0x0 0x4 0x0 0x0 0x0)
 )
 (func $3 (; 3 ;) (type $3) (param $0 v128) (param $1 v128) (result v128)
  (v8x16.shuffle 0 17 2 19 4 21 6 23 8 25 10 27 12 29 14 31
   (local.get $0)
   (local.get $1)
  )
 )
 (func $4 (; 4 ;) (type $0) (param $0 i32) (result v128)
  (i8x16.splat
   (local.get $0)
  )
 )
 (func $5 (; 5 ;) (type $4) (param $0 v128) (result i32)
  (i8x16.extract_lane_s 0
   (local.get $0)
  )
 )
 (func $6 (; 6 ;) (type $4) (param $0 v128) (result i32)
  (i8x16.extract_lane_u 0
   (local.get $0)
  )
 )
 (func $7 (; 7 ;) (type $5) (param $0 v128) (param $1 i32) (result v128)
  (i8x16.replace_lane 0
   (local.get $0)
   (local.get $1)
  )
 )
 (func $8 (; 8 ;) (type $0) (param $0 i32) (result v128)
  (i16x8.splat
   (local.get $0)
  )
 )
 (func $9 (; 9 ;) (type $4) (param $0 v128) (result i32)
  (i16x8.extract_lane_s 0
   (local.get $0)
  )
 )
 (func $10 (; 10 ;) (type $4) (param $0 v128) (result i32)
  (i16x8.extract_lane_u 0
   (local.get $0)
  )
 )
 (func $11 (; 11 ;) (type $5) (param $0 v128) (param $1 i32) (result v128)
  (i16x8.replace_lane 0
   (local.get $0)
   (local.get $1)
  )
 )
 (func $12 (; 12 ;) (type $0) (param $0 i32) (result v128)
  (i32x4.splat
   (local.get $0)
  )
 )
 (func $13 (; 13 ;) (type $4) (param $0 v128) (result i32)
  (i32x4.extract_lane 0
   (local.get $0)
  )
 )
 (func $14 (; 14 ;) (type $5) (param $0 v128) (param $1 i32) (result v128)
  (i32x4.replace_lane 0
   (local.get $0)
   (local.get $1)
  )
 )
 (func $15 (; 15 ;) (type $6) (param $0 v128) (result i64)
  (i64x2.extract_lane 0
   (local.get $0)
  )
 )
 (func $16 (; 16 ;) (type $7) (param $0 v128) (param $1 i64) (result v128)
  (i64x2.replace_lane 0
   (local.get $0)
   (local.get $1)
  )
 )
 (func $17 (; 17 ;) (type $8) (param $0 f32) (result v128)
  (f32x4.splat
   (local.get $0)
  )
 )
 (func $18 (; 18 ;) (type $9) (param $0 v128) (result f32)
  (f32x4.extract_lane 0
   (local.get $0)
  )
 )
 (func $19 (; 19 ;) (type $10) (param $0 v128) (param $1 f32) (result v128)
  (f32x4.replace_lane 0
   (local.get $0)
   (local.get $1)
  )
 )
 (func $20 (; 20 ;) (type $11) (param $0 f64) (result v128)
  (f64x2.splat
   (local.get $0)
  )
 )
 (func $21 (; 21 ;) (type $12) (param $0 v128) (result f64)
  (f64x2.extract_lane 0
   (local.get $0)
  )
 )
 (func $22 (; 22 ;) (type $13) (param $0 v128) (param $1 f64) (result v128)
  (f64x2.replace_lane 0
   (local.get $0)
   (local.get $1)
  )
 )
 (func $23 (; 23 ;) (type $3) (param $0 v128) (param $1 v128) (result v128)
  (i8x16.eq
   (local.get $0)
   (local.get $1)
  )
 )
 (func $24 (; 24 ;) (type $3) (param $0 v128) (param $1 v128) (result v128)
  (i8x16.ne
   (local.get $0)
   (local.get $1)
  )
 )
 (func $25 (; 25 ;) (type $3) (param $0 v128) (param $1 v128) (result v128)
  (i8x16.lt_s
   (local.get $0)
   (local.get $1)
  )
 )
 (func $26 (; 26 ;) (type $3) (param $0 v128) (param $1 v128) (result v128)
  (i8x16.lt_u
   (local.get $0)
   (local.get $1)
  )
 )
 (func $27 (; 27 ;) (type $3) (param $0 v128) (param $1 v128) (result v128)
  (i8x16.gt_s
   (local.get $0)
   (local.get $1)
  )
 )
 (func $28 (; 28 ;) (type $3) (param $0 v128) (param $1 v128) (result v128)
  (i8x16.gt_u
   (local.get $0)
   (local.get $1)
  )
 )
 (func $29 (; 29 ;) (type $3) (param $0 v128) (param $1 v128) (result v128)
  (i8x16.le_s
   (local.get $0)
   (local.get $1)
  )
 )
 (func $30 (; 30 ;) (type $3) (param $0 v128) (param $1 v128) (result v128)
  (i8x16.le_u
   (local.get $0)
   (local.get $1)
  )
 )
 (func $31 (; 31 ;) (type $3) (param $0 v128) (param $1 v128) (result v128)
  (i8x16.ge_s
   (local.get $0)
   (local.get $1)
  )
 )
 (func $32 (; 32 ;) (type $3) (param $0 v128) (param $1 v128) (result v128)
  (i8x16.ge_u
   (local.get $0)
   (local.get $1)
  )
 )
 (func $33 (; 33 ;) (type $3) (param $0 v128) (param $1 v128) (result v128)
  (i16x8.eq
   (local.get $0)
   (local.get $1)
  )
 )
 (func $34 (; 34 ;) (type $3) (param $0 v128) (param $1 v128) (result v128)
  (i16x8.ne
   (local.get $0)
   (local.get $1)
  )
 )
 (func $35 (; 35 ;) (type $3) (param $0 v128) (param $1 v128) (result v128)
  (i16x8.lt_s
   (local.get $0)
   (local.get $1)
  )
 )
 (func $36 (; 36 ;) (type $3) (param $0 v128) (param $1 v128) (result v128)
  (i16x8.lt_u
   (local.get $0)
   (local.get $1)
  )
 )
 (func $37 (; 37 ;) (type $3) (param $0 v128) (param $1 v128) (result v128)
  (i16x8.gt_s
   (local.get $0)
   (local.get $1)
  )
 )
 (func $38 (; 38 ;) (type $3) (param $0 v128) (param $1 v128) (result v128)
  (i16x8.gt_u
   (local.get $0)
   (local.get $1)
  )
 )
 (func $39 (; 39 ;) (type $3) (param $0 v128) (param $1 v128) (result v128)
  (i16x8.le_s
   (local.get $0)
   (local.get $1)
  )
 )
 (func $40 (; 40 ;) (type $3) (param $0 v128) (param $1 v128) (result v128)
  (i16x8.le_u
   (local.get $0)
   (local.get $1)
  )
 )
 (func $41 (; 41 ;) (type $3) (param $0 v128) (param $1 v128) (result v128)
  (i16x8.ge_s
   (local.get $0)
   (local.get $1)
  )
 )
 (func $42 (; 42 ;) (type $3) (param $0 v128) (param $1 v128) (result v128)
  (i16x8.ge_u
   (local.get $0)
   (local.get $1)
  )
 )
 (func $43 (; 43 ;) (type $3) (param $0 v128) (param $1 v128) (result v128)
  (i32x4.eq
   (local.get $0)
   (local.get $1)
  )
 )
 (func $44 (; 44 ;) (type $3) (param $0 v128) (param $1 v128) (result v128)
  (i32x4.ne
   (local.get $0)
   (local.get $1)
  )
 )
 (func $45 (; 45 ;) (type $3) (param $0 v128) (param $1 v128) (result v128)
  (i32x4.lt_s
   (local.get $0)
   (local.get $1)
  )
 )
 (func $46 (; 46 ;) (type $3) (param $0 v128) (param $1 v128) (result v128)
  (i32x4.lt_u
   (local.get $0)
   (local.get $1)
  )
 )
 (func $47 (; 47 ;) (type $3) (param $0 v128) (param $1 v128) (result v128)
  (i32x4.gt_s
   (local.get $0)
   (local.get $1)
  )
 )
 (func $48 (; 48 ;) (type $3) (param $0 v128) (param $1 v128) (result v128)
  (i32x4.gt_u
   (local.get $0)
   (local.get $1)
  )
 )
 (func $49 (; 49 ;) (type $3) (param $0 v128) (param $1 v128) (result v128)
  (i32x4.le_s
   (local.get $0)
   (local.get $1)
  )
 )
 (func $50 (; 50 ;) (type $3) (param $0 v128) (param $1 v128) (result v128)
  (i32x4.le_u
   (local.get $0)
   (local.get $1)
  )
 )
 (func $51 (; 51 ;) (type $3) (param $0 v128) (param $1 v128) (result v128)
  (i32x4.ge_s
   (local.get $0)
   (local.get $1)
  )
 )
 (func $52 (; 52 ;) (type $3) (param $0 v128) (param $1 v128) (result v128)
  (i32x4.ge_u
   (local.get $0)
   (local.get $1)
  )
 )
 (func $53 (; 53 ;) (type $3) (param $0 v128) (param $1 v128) (result v128)
  (f32x4.eq
   (local.get $0)
   (local.get $1)
  )
 )
 (func $54 (; 54 ;) (type $3) (param $0 v128) (param $1 v128) (result v128)
  (f32x4.ne
   (local.get $0)
   (local.get $1)
  )
 )
 (func $55 (; 55 ;) (type $3) (param $0 v128) (param $1 v128) (result v128)
  (f32x4.lt
   (local.get $0)
   (local.get $1)
  )
 )
 (func $56 (; 56 ;) (type $3) (param $0 v128) (param $1 v128) (result v128)
  (f32x4.gt
   (local.get $0)
   (local.get $1)
  )
 )
 (func $57 (; 57 ;) (type $3) (param $0 v128) (param $1 v128) (result v128)
  (f32x4.le
   (local.get $0)
   (local.get $1)
  )
 )
 (func $58 (; 58 ;) (type $3) (param $0 v128) (param $1 v128) (result v128)
  (f32x4.ge
   (local.get $0)
   (local.get $1)
  )
 )
 (func $59 (; 59 ;) (type $3) (param $0 v128) (param $1 v128) (result v128)
  (f64x2.eq
   (local.get $0)
   (local.get $1)
  )
 )
 (func $60 (; 60 ;) (type $3) (param $0 v128) (param $1 v128) (result v128)
  (f64x2.ne
   (local.get $0)
   (local.get $1)
  )
 )
 (func $61 (; 61 ;) (type $3) (param $0 v128) (param $1 v128) (result v128)
  (f64x2.lt
   (local.get $0)
   (local.get $1)
  )
 )
 (func $62 (; 62 ;) (type $3) (param $0 v128) (param $1 v128) (result v128)
  (f64x2.gt
   (local.get $0)
   (local.get $1)
  )
 )
 (func $63 (; 63 ;) (type $3) (param $0 v128) (param $1 v128) (result v128)
  (f64x2.le
   (local.get $0)
   (local.get $1)
  )
 )
 (func $64 (; 64 ;) (type $3) (param $0 v128) (param $1 v128) (result v128)
  (f64x2.ge
   (local.get $0)
   (local.get $1)
  )
 )
 (func $65 (; 65 ;) (type $14) (param $0 v128) (result v128)
  (v128.not
   (local.get $0)
  )
 )
 (func $66 (; 66 ;) (type $3) (param $0 v128) (param $1 v128) (result v128)
  (v128.and
   (local.get $0)
   (local.get $1)
  )
 )
 (func $67 (; 67 ;) (type $3) (param $0 v128) (param $1 v128) (result v128)
  (v128.or
   (local.get $0)
   (local.get $1)
  )
 )
 (func $68 (; 68 ;) (type $3) (param $0 v128) (param $1 v128) (result v128)
  (v128.xor
   (local.get $0)
   (local.get $1)
  )
 )
 (func $69 (; 69 ;) (type $15) (param $0 v128) (param $1 v128) (param $2 v128) (result v128)
  (v128.bitselect
   (local.get $0)
   (local.get $1)
   (local.get $2)
  )
 )
 (func $70 (; 70 ;) (type $14) (param $0 v128) (result v128)
  (i8x16.neg
   (local.get $0)
  )
 )
 (func $71 (; 71 ;) (type $4) (param $0 v128) (result i32)
  (i8x16.any_true
   (local.get $0)
  )
 )
 (func $72 (; 72 ;) (type $4) (param $0 v128) (result i32)
  (i8x16.all_true
   (local.get $0)
  )
 )
 (func $73 (; 73 ;) (type $5) (param $0 v128) (param $1 i32) (result v128)
  (i8x16.shl
   (local.get $0)
   (local.get $1)
  )
 )
 (func $74 (; 74 ;) (type $5) (param $0 v128) (param $1 i32) (result v128)
  (i8x16.shr_s
   (local.get $0)
   (local.get $1)
  )
 )
 (func $75 (; 75 ;) (type $5) (param $0 v128) (param $1 i32) (result v128)
  (i8x16.shr_u
   (local.get $0)
   (local.get $1)
  )
 )
 (func $76 (; 76 ;) (type $3) (param $0 v128) (param $1 v128) (result v128)
  (i8x16.add
   (local.get $0)
   (local.get $1)
  )
 )
 (func $77 (; 77 ;) (type $3) (param $0 v128) (param $1 v128) (result v128)
  (i8x16.add_saturate_s
   (local.get $0)
   (local.get $1)
  )
 )
 (func $78 (; 78 ;) (type $3) (param $0 v128) (param $1 v128) (result v128)
  (i8x16.add_saturate_u
   (local.get $0)
   (local.get $1)
  )
 )
 (func $79 (; 79 ;) (type $3) (param $0 v128) (param $1 v128) (result v128)
  (i8x16.sub
   (local.get $0)
   (local.get $1)
  )
 )
 (func $80 (; 80 ;) (type $3) (param $0 v128) (param $1 v128) (result v128)
  (i8x16.sub_saturate_s
   (local.get $0)
   (local.get $1)
  )
 )
 (func $81 (; 81 ;) (type $3) (param $0 v128) (param $1 v128) (result v128)
  (i8x16.sub_saturate_u
   (local.get $0)
   (local.get $1)
  )
 )
 (func $82 (; 82 ;) (type $3) (param $0 v128) (param $1 v128) (result v128)
  (i8x16.mul
   (local.get $0)
   (local.get $1)
  )
 )
 (func $83 (; 83 ;) (type $14) (param $0 v128) (result v128)
  (i16x8.neg
   (local.get $0)
  )
 )
 (func $84 (; 84 ;) (type $4) (param $0 v128) (result i32)
  (i16x8.any_true
   (local.get $0)
  )
 )
 (func $85 (; 85 ;) (type $4) (param $0 v128) (result i32)
  (i16x8.all_true
   (local.get $0)
  )
 )
 (func $86 (; 86 ;) (type $5) (param $0 v128) (param $1 i32) (result v128)
  (i16x8.shl
   (local.get $0)
   (local.get $1)
  )
 )
 (func $87 (; 87 ;) (type $5) (param $0 v128) (param $1 i32) (result v128)
  (i16x8.shr_s
   (local.get $0)
   (local.get $1)
  )
 )
 (func $88 (; 88 ;) (type $5) (param $0 v128) (param $1 i32) (result v128)
  (i16x8.shr_u
   (local.get $0)
   (local.get $1)
  )
 )
 (func $89 (; 89 ;) (type $3) (param $0 v128) (param $1 v128) (result v128)
  (i16x8.add
   (local.get $0)
   (local.get $1)
  )
 )
 (func $90 (; 90 ;) (type $3) (param $0 v128) (param $1 v128) (result v128)
  (i16x8.add_saturate_s
   (local.get $0)
   (local.get $1)
  )
 )
 (func $91 (; 91 ;) (type $3) (param $0 v128) (param $1 v128) (result v128)
  (i16x8.add_saturate_u
   (local.get $0)
   (local.get $1)
  )
 )
 (func $92 (; 92 ;) (type $3) (param $0 v128) (param $1 v128) (result v128)
  (i16x8.sub
   (local.get $0)
   (local.get $1)
  )
 )
 (func $93 (; 93 ;) (type $3) (param $0 v128) (param $1 v128) (result v128)
  (i16x8.sub_saturate_s
   (local.get $0)
   (local.get $1)
  )
 )
 (func $94 (; 94 ;) (type $3) (param $0 v128) (param $1 v128) (result v128)
  (i16x8.sub_saturate_u
   (local.get $0)
   (local.get $1)
  )
 )
 (func $95 (; 95 ;) (type $3) (param $0 v128) (param $1 v128) (result v128)
  (i16x8.mul
   (local.get $0)
   (local.get $1)
  )
 )
 (func $96 (; 96 ;) (type $14) (param $0 v128) (result v128)
  (i32x4.neg
   (local.get $0)
  )
 )
 (func $97 (; 97 ;) (type $4) (param $0 v128) (result i32)
  (i32x4.any_true
   (local.get $0)
  )
 )
 (func $98 (; 98 ;) (type $4) (param $0 v128) (result i32)
  (i32x4.all_true
   (local.get $0)
  )
 )
 (func $99 (; 99 ;) (type $5) (param $0 v128) (param $1 i32) (result v128)
  (i32x4.shl
   (local.get $0)
   (local.get $1)
  )
 )
 (func $100 (; 100 ;) (type $5) (param $0 v128) (param $1 i32) (result v128)
  (i32x4.shr_s
   (local.get $0)
   (local.get $1)
  )
 )
 (func $101 (; 101 ;) (type $5) (param $0 v128) (param $1 i32) (result v128)
  (i32x4.shr_u
   (local.get $0)
   (local.get $1)
  )
 )
 (func $102 (; 102 ;) (type $3) (param $0 v128) (param $1 v128) (result v128)
  (i32x4.add
   (local.get $0)
   (local.get $1)
  )
 )
 (func $103 (; 103 ;) (type $3) (param $0 v128) (param $1 v128) (result v128)
  (i32x4.sub
   (local.get $0)
   (local.get $1)
  )
 )
 (func $104 (; 104 ;) (type $3) (param $0 v128) (param $1 v128) (result v128)
  (i32x4.mul
   (local.get $0)
   (local.get $1)
  )
 )
 (func $105 (; 105 ;) (type $14) (param $0 v128) (result v128)
  (i64x2.neg
   (local.get $0)
  )
 )
 (func $106 (; 106 ;) (type $4) (param $0 v128) (result i32)
  (i64x2.any_true
   (local.get $0)
  )
 )
 (func $107 (; 107 ;) (type $4) (param $0 v128) (result i32)
  (i64x2.all_true
   (local.get $0)
  )
 )
 (func $108 (; 108 ;) (type $5) (param $0 v128) (param $1 i32) (result v128)
  (i64x2.shl
   (local.get $0)
   (local.get $1)
  )
 )
 (func $109 (; 109 ;) (type $5) (param $0 v128) (param $1 i32) (result v128)
  (i64x2.shr_s
   (local.get $0)
   (local.get $1)
  )
 )
 (func $110 (; 110 ;) (type $5) (param $0 v128) (param $1 i32) (result v128)
  (i64x2.shr_u
   (local.get $0)
   (local.get $1)
  )
 )
 (func $111 (; 111 ;) (type $3) (param $0 v128) (param $1 v128) (result v128)
  (i64x2.add
   (local.get $0)
   (local.get $1)
  )
 )
 (func $112 (; 112 ;) (type $3) (param $0 v128) (param $1 v128) (result v128)
  (i64x2.sub
   (local.get $0)
   (local.get $1)
  )
 )
 (func $113 (; 113 ;) (type $3) (param $0 v128) (param $1 v128) (result v128)
  (f32x4.add
   (local.get $0)
   (local.get $1)
  )
 )
 (func $114 (; 114 ;) (type $3) (param $0 v128) (param $1 v128) (result v128)
  (f32x4.sub
   (local.get $0)
   (local.get $1)
  )
 )
 (func $115 (; 115 ;) (type $3) (param $0 v128) (param $1 v128) (result v128)
  (f32x4.mul
   (local.get $0)
   (local.get $1)
  )
 )
 (func $116 (; 116 ;) (type $3) (param $0 v128) (param $1 v128) (result v128)
  (f32x4.div
   (local.get $0)
   (local.get $1)
  )
 )
 (func $117 (; 117 ;) (type $3) (param $0 v128) (param $1 v128) (result v128)
  (f32x4.min
   (local.get $0)
   (local.get $1)
  )
 )
 (func $118 (; 118 ;) (type $3) (param $0 v128) (param $1 v128) (result v128)
  (f32x4.max
   (local.get $0)
   (local.get $1)
  )
 )
 (func $119 (; 119 ;) (type $14) (param $0 v128) (result v128)
  (f32x4.abs
   (local.get $0)
  )
 )
 (func $120 (; 120 ;) (type $14) (param $0 v128) (result v128)
  (f32x4.neg
   (local.get $0)
  )
 )
 (func $121 (; 121 ;) (type $14) (param $0 v128) (result v128)
  (f32x4.sqrt
   (local.get $0)
  )
 )
 (func $122 (; 122 ;) (type $3) (param $0 v128) (param $1 v128) (result v128)
  (f64x2.add
   (local.get $0)
   (local.get $1)
  )
 )
 (func $123 (; 123 ;) (type $3) (param $0 v128) (param $1 v128) (result v128)
  (f64x2.sub
   (local.get $0)
   (local.get $1)
  )
 )
 (func $124 (; 124 ;) (type $3) (param $0 v128) (param $1 v128) (result v128)
  (f64x2.mul
   (local.get $0)
   (local.get $1)
  )
 )
 (func $125 (; 125 ;) (type $3) (param $0 v128) (param $1 v128) (result v128)
  (f64x2.div
   (local.get $0)
   (local.get $1)
  )
 )
 (func $126 (; 126 ;) (type $3) (param $0 v128) (param $1 v128) (result v128)
  (f64x2.min
   (local.get $0)
   (local.get $1)
  )
 )
 (func $127 (; 127 ;) (type $3) (param $0 v128) (param $1 v128) (result v128)
  (f64x2.max
   (local.get $0)
   (local.get $1)
  )
 )
 (func $128 (; 128 ;) (type $14) (param $0 v128) (result v128)
  (f64x2.abs
   (local.get $0)
  )
 )
 (func $129 (; 129 ;) (type $14) (param $0 v128) (result v128)
  (f64x2.neg
   (local.get $0)
  )
 )
 (func $130 (; 130 ;) (type $14) (param $0 v128) (result v128)
  (f64x2.sqrt
   (local.get $0)
  )
 )
 (func $131 (; 131 ;) (type $14) (param $0 v128) (result v128)
  (i32x4.trunc_sat_f32x4_s
   (local.get $0)
  )
 )
 (func $132 (; 132 ;) (type $14) (param $0 v128) (result v128)
  (i32x4.trunc_sat_f32x4_u
   (local.get $0)
  )
 )
 (func $133 (; 133 ;) (type $14) (param $0 v128) (result v128)
  (i64x2.trunc_sat_f64x2_s
   (local.get $0)
  )
 )
 (func $134 (; 134 ;) (type $14) (param $0 v128) (result v128)
  (i64x2.trunc_sat_f64x2_u
   (local.get $0)
  )
 )
 (func $135 (; 135 ;) (type $14) (param $0 v128) (result v128)
  (f32x4.convert_i32x4_s
   (local.get $0)
  )
 )
 (func $136 (; 136 ;) (type $14) (param $0 v128) (result v128)
  (f32x4.convert_i32x4_u
   (local.get $0)
  )
 )
 (func $137 (; 137 ;) (type $14) (param $0 v128) (result v128)
  (f64x2.convert_i64x2_s
   (local.get $0)
  )
 )
 (func $138 (; 138 ;) (type $14) (param $0 v128) (result v128)
  (f64x2.convert_i64x2_u
   (local.get $0)
  )
 )
)

