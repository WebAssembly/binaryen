;; NOTE: Assertions have been generated by update_lit_checks.py --all-items and should not be edited.

;; RUN: wasm-split %s -all --keep-funcs=use-funcs -g -o1 %t.1.wasm -o2 %t.2.wasm
;; RUN: wasm-dis %t.1.wasm | filecheck %s --check-prefix PRIMARY
;; RUN: wasm-dis %t.2.wasm | filecheck %s --check-prefix SECONDARY

(module

 ;; PRIMARY:      (type $0 (func))

 ;; PRIMARY:      (type $data-array (array i8))
 (type $data-array (array i8))

 ;; PRIMARY:      (type $elem-array (array externref))
 (type $elem-array (array externref))

 ;; PRIMARY:      (import "placeholder" "0" (func $placeholder_0 (type $0)))

 ;; PRIMARY:      (memory $mem 0)
 (memory $mem 0)

 ;; PRIMARY:      (data $data "hello world")
 (data $data "hello world")

 ;; PRIMARY:      (table $0 1 funcref)

 ;; PRIMARY:      (elem $elem externref)
 (elem $elem externref)

 ;; PRIMARY:      (elem $1 (i32.const 0) $placeholder_0)

 ;; PRIMARY:      (export "memory" (memory $mem))

 ;; PRIMARY:      (export "table" (table $0))

 ;; PRIMARY:      (func $data.drop (type $0)
 ;; PRIMARY-NEXT:  (data.drop $data)
 ;; PRIMARY-NEXT: )
 (func $data.drop
  (data.drop $data)
 )

 ;; PRIMARY:      (func $memory.init (type $0)
 ;; PRIMARY-NEXT:  (memory.init $data
 ;; PRIMARY-NEXT:   (i32.const 0)
 ;; PRIMARY-NEXT:   (i32.const 0)
 ;; PRIMARY-NEXT:   (i32.const 0)
 ;; PRIMARY-NEXT:  )
 ;; PRIMARY-NEXT: )
 (func $memory.init
  (memory.init $mem $data
   (i32.const 0)
   (i32.const 0)
   (i32.const 0)
  )
 )

 ;; PRIMARY:      (func $array.new_data (type $0)
 ;; PRIMARY-NEXT:  (drop
 ;; PRIMARY-NEXT:   (array.new_data $data-array $data
 ;; PRIMARY-NEXT:    (i32.const 0)
 ;; PRIMARY-NEXT:    (i32.const 0)
 ;; PRIMARY-NEXT:   )
 ;; PRIMARY-NEXT:  )
 ;; PRIMARY-NEXT: )
 (func $array.new_data
  (drop
   (array.new_data $data-array $data
    (i32.const 0)
    (i32.const 0)
   )
  )
 )

 ;; PRIMARY:      (func $array.new_elem (type $0)
 ;; PRIMARY-NEXT:  (drop
 ;; PRIMARY-NEXT:   (array.new_elem $elem-array $elem
 ;; PRIMARY-NEXT:    (i32.const 0)
 ;; PRIMARY-NEXT:    (i32.const 0)
 ;; PRIMARY-NEXT:   )
 ;; PRIMARY-NEXT:  )
 ;; PRIMARY-NEXT: )
 (func $array.new_elem
  (drop
   (array.new_elem $elem-array $elem
    (i32.const 0)
    (i32.const 0)
   )
  )
 )

 ;; SECONDARY:      (type $0 (func))

 ;; SECONDARY:      (import "primary" "table" (table $timport$0 1 funcref))

 ;; SECONDARY:      (elem $0 (i32.const 0) $no-segment)

 ;; SECONDARY:      (func $no-segment (type $0)
 ;; SECONDARY-NEXT:  (nop)
 ;; SECONDARY-NEXT: )
 (func $no-segment
  (nop)
 )

 ;; PRIMARY:      (func $use-funcs (type $0)
 ;; PRIMARY-NEXT:  (call $data.drop)
 ;; PRIMARY-NEXT:  (call $memory.init)
 ;; PRIMARY-NEXT:  (call $array.new_data)
 ;; PRIMARY-NEXT:  (call $array.new_elem)
 ;; PRIMARY-NEXT:  (call_indirect $0 (type $0)
 ;; PRIMARY-NEXT:   (i32.const 0)
 ;; PRIMARY-NEXT:  )
 ;; PRIMARY-NEXT: )
 (func $use-funcs
  (call $data.drop)
  (call $memory.init)
  (call $array.new_data)
  (call $array.new_elem)
  (call $no-segment)
 )
)
