;; NOTE: Assertions have been generated by update_lit_checks.py --all-items and should not be edited.

;; RUN: foreach %s %t wasm-opt --tail-call-optimization --enable-tail-call --optimize-level 2 --shrink-level 0 -S -o - | filecheck %s

;; Tests for tail call optimization

(module
  ;; CHECK:      (type $0 (func (result i32)))

  ;; CHECK:      (type $1 (func (param i32) (result i32)))

  ;; CHECK:      (type $2 (func (param i32)))

  ;; CHECK:      (type $3 (func))

  ;; CHECK:      (func $f (result i32)
  ;; CHECK-NEXT:  (i32.const 0)
  ;; CHECK-NEXT: )
  (func $f (result i32)
    i32.const 0
  )
  ;; CHECK:      (func $implicit_return (result i32)
  ;; CHECK-NEXT:  (return_call $f)
  ;; CHECK-NEXT: )
  (func $implicit_return (result i32)
    call $f
  )
  ;; CHECK:      (func $explicit_return (result i32)
  ;; CHECK-NEXT:  (return_call $f)
  ;; CHECK-NEXT: )
  (func $explicit_return (result i32)
    call $f
  )
  ;; CHECK:      (func $return_through_tee (param $0 i32) (result i32)
  ;; CHECK-NEXT:  (local.tee $0
  ;; CHECK-NEXT:   (return_call $f)
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT: )
  (func $return_through_tee (param $0 i32) (result i32)
    call $f
    local.tee $0
  )
  ;; CHECK:      (func $return_through_block (result i32)
  ;; CHECK-NEXT:  (return_call $f)
  ;; CHECK-NEXT: )
  (func $return_through_block (result i32)
    block (result i32)
      call $f
    end
  )
  ;; CHECK:      (func $return_through_loop (result i32)
  ;; CHECK-NEXT:  (loop
  ;; CHECK-NEXT:   (return_call $f)
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT: )
  (func $return_through_loop (result i32)
    loop (result i32)
      call $f
    end
  )
  ;; CHECK:      (func $return_through_if_then (param $0 i32) (result i32)
  ;; CHECK-NEXT:  (if (result i32)
  ;; CHECK-NEXT:   (local.get $0)
  ;; CHECK-NEXT:   (then
  ;; CHECK-NEXT:    (return_call $f)
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:   (else
  ;; CHECK-NEXT:    (i32.const 0)
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT: )
  (func $return_through_if_then (param $0 i32) (result i32)
    local.get $0
    if (result i32)
      call $f
    else
      i32.const 0
    end
  )
  ;; CHECK:      (func $return_through_if_else (param $0 i32) (result i32)
  ;; CHECK-NEXT:  (if (result i32)
  ;; CHECK-NEXT:   (local.get $0)
  ;; CHECK-NEXT:   (then
  ;; CHECK-NEXT:    (i32.const 0)
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:   (else
  ;; CHECK-NEXT:    (return_call $f)
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT: )
  (func $return_through_if_else (param $0 i32) (result i32)
    local.get $0
    if (result i32)
      i32.const 0
    else
      call $f
    end
  )
  ;; CHECK:      (func $return_through_if_both (param $0 i32) (result i32)
  ;; CHECK-NEXT:  (if
  ;; CHECK-NEXT:   (local.get $0)
  ;; CHECK-NEXT:   (then
  ;; CHECK-NEXT:    (return_call $f)
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:   (else
  ;; CHECK-NEXT:    (return_call $f)
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT: )
  (func $return_through_if_both (param $0 i32) (result i32)
    local.get $0
    if (result i32)
      call $f
    else
      call $f
    end
  )
  ;; CHECK:      (func $return_through_br_if (param $0 i32) (result i32)
  ;; CHECK-NEXT:  (block $block
  ;; CHECK-NEXT:   (block
  ;; CHECK-NEXT:    (return_call $f)
  ;; CHECK-NEXT:    (drop
  ;; CHECK-NEXT:     (i32.const 1)
  ;; CHECK-NEXT:    )
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT: )
  (func $return_through_br_if (param $0 i32) (result i32)
    block (result i32)
      call $f
      i32.const 1
      br_if 0
    end
  )

  ;; CHECK:      (func $g (param $0 i32)
  ;; CHECK-NEXT: )
  (func $g (param i32))
  ;; CHECK:      (func $return_without_value
  ;; CHECK-NEXT:  (return_call $g
  ;; CHECK-NEXT:   (i32.const 1)
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT: )
  (func $return_without_value
    i32.const 1
    call $g
  )
  ;; CHECK:      (func $return_without_value_through_block (param $0 i32)
  ;; CHECK-NEXT:  (return_call $g
  ;; CHECK-NEXT:   (local.get $0)
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT: )
  (func $return_without_value_through_block (param $0 i32)
    block
      local.get 0
      call $g
    end
  )
  ;; CHECK:      (func $return_without_value_through_if (param $0 i32)
  ;; CHECK-NEXT:  (if
  ;; CHECK-NEXT:   (local.get $0)
  ;; CHECK-NEXT:   (then
  ;; CHECK-NEXT:    (return_call $g
  ;; CHECK-NEXT:     (local.get $0)
  ;; CHECK-NEXT:    )
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT: )
  (func $return_without_value_through_if (param $0 i32)
    local.get 0
    if
      local.get 0
      call $g
    end
  )
)

(module $NYI
  ;; CHECK:      (type $0 (func (result i32)))

  ;; CHECK:      (type $1 (func (param i32) (result i32)))

  ;; CHECK:      (func $f (result i32)
  ;; CHECK-NEXT:  (i32.const 0)
  ;; CHECK-NEXT: )
  (func $f (result i32)
    i32.const 0
  )
  ;; CHECK:      (func $return_through_br (param $0 i32) (result i32)
  ;; CHECK-NEXT:  (block $block (result i32)
  ;; CHECK-NEXT:   (br $block
  ;; CHECK-NEXT:    (call $f)
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT: )
  (func $return_through_br (param $0 i32) (result i32)
    block (result i32)
      call $f
      br 0
    end
  )
)
