;; Verify stacky EH binary can be parsed correctly.
;;
;; stacky-eh-old.test.wasm contains below:
;; try
;;   nop
;; catch 0 # tag type i32
;;   i32.const 3
;;   local.set 1
;;   local.set 2
;;
;; (This binary was generated by
;;  'wasm-opt --optimize-level=3 --generate-stack-ir -optimize-stack-ir')
;;
;; This code is 'stacky' in Binaryen parlance. In the binary reader, Binaryen has
;; a special routine of creating a block and a local.get/local.set to read stacky
;; code into Binaryen AST. This test checks that we do not emit anything invalid
;; for the pop in such a case.

RUN: wasm-opt -all %s.wasm --print | filecheck %s

;; CHECK:      (func $0 (type $1)
;; CHECK-NEXT:  (local $0 i32)
;; CHECK-NEXT:  (local $1 i32)
;; CHECK-NEXT:  (local $2 i32)
;; CHECK-NEXT:  (local $3 i32)
;; CHECK-NEXT:  (try $label$3
;; CHECK-NEXT:   (do
;; CHECK-NEXT:    (nop)
;; CHECK-NEXT:   )
;; CHECK-NEXT:   (catch $tag$0
;; CHECK-NEXT:    (local.set $2
;; CHECK-NEXT:     (block (result i32)
;; CHECK-NEXT:      (local.set $3
;; CHECK-NEXT:       (pop i32)
;; CHECK-NEXT:      )
;; CHECK-NEXT:      (local.set $1
;; CHECK-NEXT:       (i32.const 3)
;; CHECK-NEXT:      )
;; CHECK-NEXT:      (local.get $3)
;; CHECK-NEXT:     )
;; CHECK-NEXT:    )
;; CHECK-NEXT:   )
;; CHECK-NEXT:  )
;; CHECK-NEXT: )
;; CHECK-NEXT:)
