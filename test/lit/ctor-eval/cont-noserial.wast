;; NOTE: Assertions have been generated by update_lit_checks.py --all-items and should not be edited.

;; Test that we do not error on trying to serialize continuations (which cannot
;; be serialized). When we do not pass --kept-exports, we can at least remove
;; that "test" export, since we don't need to serialize anything when it doesn't
;; stick around.

;; RUN: foreach %s %t wasm-ctor-eval --ctors=test --kept-exports=test -all --ignore-external-input -S -o - | filecheck %s
;; RUN: foreach %s %t wasm-ctor-eval --ctors=test                     -all --ignore-external-input -S -o - | filecheck %s --check-prefix=NOKEEP

(module
 ;; CHECK:      (type $func (func))
 ;; NOKEEP:      (type $func (func))
 (type $func (func))
 ;; CHECK:      (type $cont (cont $func))
 (type $cont (cont $func))

 ;; CHECK:      (type $2 (func (result (ref $cont))))

 ;; CHECK:      (elem declare func $func)

 ;; CHECK:      (export "export" (func $export))

 ;; CHECK:      (export "test" (func $test))
 (export "test" (func $test))

 ;; CHECK:      (func $func (type $func)
 ;; CHECK-NEXT:  (nop)
 ;; CHECK-NEXT: )
 (func $func
 )

 ;; CHECK:      (func $test (type $2) (result (ref $cont))
 ;; CHECK-NEXT:  (cont.new $cont
 ;; CHECK-NEXT:   (ref.func $func)
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT: )
 (func $test (result (ref $cont))
  (cont.new $cont
   (ref.func $func)
  )
 )

 ;; CHECK:      (func $export (type $func)
 ;; CHECK-NEXT:  (nop)
 ;; CHECK-NEXT: )
 ;; NOKEEP:      (export "export" (func $export))

 ;; NOKEEP:      (func $export (type $func)
 ;; NOKEEP-NEXT:  (nop)
 ;; NOKEEP-NEXT: )
 (func $export (export "export")
  ;; A dummy export, just to avoid the NOKEEP case ending up with a blank
  ;; module and no CHECKs.
 )
)

