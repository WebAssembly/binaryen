;; RUN: wasm-emscripten-finalize --help | filecheck %s

;; CHECK-NEXT: wasm-emscripten-finalize INFILE
;; CHECK-NEXT:
;; CHECK-NEXT: Performs Emscripten-specific transforms on .wasm files
;; CHECK-NEXT:

;; Skip standard tool options

;; CHECK:        --no-validation,-n                   Disables validation, assumes inputs are
;; CHECK-NEXT:                                        correct
;; CHECK-NEXT:
;; CHECK-NEXT:   --pass-arg,-pa                       An argument passed along to optimization
;; CHECK-NEXT:                                        passes being run. Must be in the form
;; CHECK-NEXT:                                        KEY@VALUE
;; CHECK-NEXT:
;; CHECK-NEXT:   --nominal                            Use the prototype nominal type system
;; CHECK-NEXT:                                        instead of the normal equirecursive type
;; CHECK-NEXT:                                        system.
;; CHECK-NEXT:
;; CHECK-NEXT:   --output,-o                          Output file
;; CHECK-NEXT:
;; CHECK-NEXT:   --debuginfo,-g                       Emit names section in wasm binary (or
;; CHECK-NEXT:                                        full debuginfo in wast)
;; CHECK-NEXT:
;; CHECK-NEXT:   --dwarf                              Update DWARF debug info
;; CHECK-NEXT:
;; CHECK-NEXT:   --emit-text,-S                       Emit text instead of binary for the
;; CHECK-NEXT:                                        output file. In this mode if no output
;; CHECK-NEXT:                                        file is specified, we write to stdout.
;; CHECK-NEXT:
;; CHECK-NEXT:   --global-base                        The address at which static globals were
;; CHECK-NEXT:                                        placed
;; CHECK-NEXT:
;; CHECK-NEXT:   --initial-stack-pointer              ignored - will be removed in a future
;; CHECK-NEXT:                                        release
;; CHECK-NEXT:
;; CHECK-NEXT:   --side-module                        Input is an emscripten side module
;; CHECK-NEXT:
;; CHECK-NEXT:   --new-pic-abi                        Use new/llvm PIC abi
;; CHECK-NEXT:
;; CHECK-NEXT:   --input-source-map,-ism              Consume source map from the specified
;; CHECK-NEXT:                                        file
;; CHECK-NEXT:
;; CHECK-NEXT:   --no-legalize-javascript-ffi,-nj     Do not fully legalize (i64->i32,
;; CHECK-NEXT:                                        f32->f64) the imports and exports for
;; CHECK-NEXT:                                        interfacing with JS
;; CHECK-NEXT:
;; CHECK-NEXT:   --bigint,-bi                         Assume JS will use wasm/JS BigInt
;; CHECK-NEXT:                                        integration, so wasm i64s will turn into
;; CHECK-NEXT:                                        JS BigInts, and there is no need for any
;; CHECK-NEXT:                                        legalization at all (not even minimal
;; CHECK-NEXT:                                        legalization of dynCalls)
;; CHECK-NEXT:
;; CHECK-NEXT:   --output-source-map,-osm             Emit source map to the specified file
;; CHECK-NEXT:
;; CHECK-NEXT:   --output-source-map-url,-osu         Emit specified string as source map URL
;; CHECK-NEXT:
;; CHECK-NEXT:   --separate-data-segments             Separate data segments to a file
;; CHECK-NEXT:
;; CHECK-NEXT:   --check-stack-overflow               Check for stack overflows every time the
;; CHECK-NEXT:                                        stack is extended
;; CHECK-NEXT:
;; CHECK-NEXT:   --standalone-wasm                    Emit a wasm file that does not depend on
;; CHECK-NEXT:                                        JS, as much as possible, using wasi and
;; CHECK-NEXT:                                        other standard conventions etc. where
;; CHECK-NEXT:                                        possible
;; CHECK-NEXT:
;; CHECK-NEXT:   --minimize-wasm-changes              Modify the wasm as little as possible.
;; CHECK-NEXT:                                        This is useful during development as we
;; CHECK-NEXT:                                        reduce the number of changes to the wasm,
;; CHECK-NEXT:                                        as it lets emscripten control how much
;; CHECK-NEXT:                                        modifications to do.
;; CHECK-NEXT:
;; CHECK-NEXT:   --no-dyncalls
;; CHECK-NEXT:
;; CHECK-NEXT:   --dyncalls-i64
