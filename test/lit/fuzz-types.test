;; RUN: wasm-fuzz-types -v --seed=0 | filecheck %s

;; CHECK:      Running with seed 0
;; CHECK-NEXT: Built 20 types:
;; CHECK-NEXT: (rec
;; CHECK-NEXT:  (type $0 (sub (shared (array i8))))
;; CHECK-NEXT:  (type $1 (shared (array (ref $1))))
;; CHECK-NEXT:  (type $2 (sub (shared (func (param i64 (ref null $5) i64) (result (ref $2))))))
;; CHECK-NEXT:  (type $3 (sub $0 (shared (array i8))))
;; CHECK-NEXT:  (type $4 (sub (array (ref null $9))))
;; CHECK-NEXT:  (type $5 (sub final $0 (shared (array i8))))
;; CHECK-NEXT:  (type $6 (sub $2 (shared (func (param i64 (ref null (shared eq)) i64) (result (ref $8))))))
;; CHECK-NEXT:  (type $7 (sub (shared (descriptor $9 (struct (field (ref null $7)) (field (mut i64)) (field (mut i8)) (field i32) (field (mut i32)))))))
;; CHECK-NEXT:  (type $8 (sub $2 (shared (func (param i64 (ref null $0) i64) (result (ref $8))))))
;; CHECK-NEXT:  (type $9 (shared (describes $7 (descriptor $12 (struct (field i32) (field (mut (ref $8))) (field f64))))))
;; CHECK-NEXT:  (type $10 (sub (array (mut externref))))
;; CHECK-NEXT:  (type $11 (sub $4 (array (ref $9))))
;; CHECK-NEXT:  (type $12 (sub (shared (describes $9 (struct (field (mut f64)) (field (mut i32)) (field (mut f64)))))))
;; CHECK-NEXT: )
;; CHECK-NEXT: (rec
;; CHECK-NEXT:  (type $13 (sub (struct (field (mut i16)) (field i64) (field (mut (ref (shared func)))))))
;; CHECK-NEXT:  (type $14 (sub (shared (array (ref null $14)))))
;; CHECK-NEXT: )
;; CHECK-NEXT: (rec
;; CHECK-NEXT:  (type $15 (shared (array (ref null (shared extern)))))
;; CHECK-NEXT:  (type $16 (sub final $14 (shared (array (ref null $16)))))
;; CHECK-NEXT: )
;; CHECK-NEXT: (rec
;; CHECK-NEXT:  (type $17 (shared (struct (field (mut (ref null $2))) (field i32) (field (mut (ref $14))))))
;; CHECK-NEXT:  (type $18 (sub $11 (array (ref $9))))
;; CHECK-NEXT:  (type $19 (sub $2 (shared (func (param i64 (ref null $0) i64) (result (ref $6))))))
;; CHECK-NEXT: )
;; CHECK-NEXT: 
;; CHECK-NEXT: Inhabitable types:
;; CHECK-NEXT: 
;; CHECK-NEXT: Built 20 types:
;; CHECK-NEXT: (rec
;; CHECK-NEXT:  (type $0 (sub (shared (array i8))))
;; CHECK-NEXT:  (type $1 (shared (array (ref null $1))))
;; CHECK-NEXT:  (type $2 (sub (shared (func (param i64 (ref null $5) i64) (result (ref $2))))))
;; CHECK-NEXT:  (type $3 (sub $0 (shared (array i8))))
;; CHECK-NEXT:  (type $4 (sub (array (ref null $9))))
;; CHECK-NEXT:  (type $5 (sub final $0 (shared (array i8))))
;; CHECK-NEXT:  (type $6 (sub $2 (shared (func (param i64 (ref null (shared eq)) i64) (result (ref $8))))))
;; CHECK-NEXT:  (type $7 (sub (shared (descriptor $9 (struct (field (ref null $7)) (field (mut i64)) (field (mut i8)) (field i32) (field (mut i32)))))))
;; CHECK-NEXT:  (type $8 (sub $2 (shared (func (param i64 (ref null $0) i64) (result (ref $8))))))
;; CHECK-NEXT:  (type $9 (shared (describes $7 (descriptor $12 (struct (field i32) (field (mut (ref $8))) (field f64))))))
;; CHECK-NEXT:  (type $10 (sub (array (mut externref))))
;; CHECK-NEXT:  (type $11 (sub $4 (array (ref $9))))
;; CHECK-NEXT:  (type $12 (sub (shared (describes $9 (struct (field (mut f64)) (field (mut i32)) (field (mut f64)))))))
;; CHECK-NEXT: )
;; CHECK-NEXT: (rec
;; CHECK-NEXT:  (type $13 (sub (struct (field (mut i16)) (field i64) (field (mut (ref (shared func)))))))
;; CHECK-NEXT:  (type $14 (sub (shared (array (ref null $14)))))
;; CHECK-NEXT: )
;; CHECK-NEXT: (rec
;; CHECK-NEXT:  (type $15 (shared (array (ref null (shared extern)))))
;; CHECK-NEXT:  (type $16 (sub final $14 (shared (array (ref null $16)))))
;; CHECK-NEXT: )
;; CHECK-NEXT: (rec
;; CHECK-NEXT:  (type $17 (shared (struct (field (mut (ref null $2))) (field i32) (field (mut (ref $14))))))
;; CHECK-NEXT:  (type $18 (sub $11 (array (ref $9))))
;; CHECK-NEXT:  (type $19 (sub $2 (shared (func (param i64 (ref null $0) i64) (result (ref $6))))))
;; CHECK-NEXT: )