;; RUN: wasm-fuzz-types -v --seed=0 | filecheck %s

;; CHECK:      Running with seed 0
;; CHECK-NEXT: Built 20 types:
;; CHECK-NEXT: (rec
;; CHECK-NEXT:  (type $0 (sub (func (param (ref (shared func)) f32 i64) (result (ref $7)))))
;; CHECK-NEXT:  (type $1 (sub (array (mut i16))))
;; CHECK-NEXT:  (type $2 (sub (shared (func (param f64 (ref null $5) (ref $9)) (result (ref null $6) (ref $3) (ref null $8))))))
;; CHECK-NEXT:  (type $3 (sub final $2 (shared (func (param f64 (ref null $1) (ref $0)) (result (ref $6) (ref $3) (ref $8))))))
;; CHECK-NEXT:  (type $4 (sub $1 (array (mut i16))))
;; CHECK-NEXT:  (type $5 (sub final $4 (array (mut i16))))
;; CHECK-NEXT:  (type $6 (sub $2 (shared (func (param f64 arrayref funcref) (result (ref $6) (ref $3) (ref $8))))))
;; CHECK-NEXT:  (type $7 (sub $0 (func (param (ref (shared func)) f32 i64) (result (ref $9)))))
;; CHECK-NEXT:  (type $8 (sub final $0 (func (param (ref (shared func)) f32 i64) (result (ref $9)))))
;; CHECK-NEXT:  (type $9 (sub $7 (func (param (ref (shared func)) f32 i64) (result (ref $9)))))
;; CHECK-NEXT:  (type $10 (sub $2 (shared (func (param f64 (ref null $5) (ref func)) (result (ref $6) (ref $3) (ref null $8))))))
;; CHECK-NEXT:  (type $11 (sub final $2 (shared (func (param f64 arrayref (ref $0)) (result (ref $6) (ref $3) (ref $8))))))
;; CHECK-NEXT:  (type $12 (sub $10 (shared (func (param f64 (ref null $1) funcref) (result (ref $6) (ref (shared nofunc)) (ref $8))))))
;; CHECK-NEXT: )
;; CHECK-NEXT: (rec
;; CHECK-NEXT:  (type $13 (sub (func (param f64 f32))))
;; CHECK-NEXT:  (type $14 (func (param i64) (result v128 (ref null $2) (ref $12) f32 v128)))
;; CHECK-NEXT:  (type $15 (sub final $12 (shared (func (param f64 anyref funcref) (result (ref $6) (ref (shared nofunc)) (ref $8))))))
;; CHECK-NEXT: )
;; CHECK-NEXT: (rec
;; CHECK-NEXT:  (type $16 (sub final $7 (func (param (ref (shared func)) f32 i64) (result (ref nofunc)))))
;; CHECK-NEXT:  (type $17 (sub (shared (func (param (ref $11) i64 (ref (shared extern)))))))
;; CHECK-NEXT:  (type $18 (sub (struct)))
;; CHECK-NEXT:  (type $19 (sub $7 (func (param (ref null (shared func)) f32 i64) (result (ref $9)))))
;; CHECK-NEXT: )
;; CHECK-NEXT: 
;; CHECK-NEXT: Inhabitable types:
;; CHECK-NEXT: 
;; CHECK-NEXT: Built 20 types:
;; CHECK-NEXT: (rec
;; CHECK-NEXT:  (type $0 (sub (func (param (ref (shared func)) f32 i64) (result (ref $7)))))
;; CHECK-NEXT:  (type $1 (sub (array (mut i16))))
;; CHECK-NEXT:  (type $2 (sub (shared (func (param f64 (ref null $5) (ref $9)) (result (ref null $6) (ref $3) (ref null $8))))))
;; CHECK-NEXT:  (type $3 (sub final $2 (shared (func (param f64 (ref null $1) (ref $0)) (result (ref $6) (ref $3) (ref $8))))))
;; CHECK-NEXT:  (type $4 (sub $1 (array (mut i16))))
;; CHECK-NEXT:  (type $5 (sub final $4 (array (mut i16))))
;; CHECK-NEXT:  (type $6 (sub $2 (shared (func (param f64 arrayref funcref) (result (ref $6) (ref $3) (ref $8))))))
;; CHECK-NEXT:  (type $7 (sub $0 (func (param (ref (shared func)) f32 i64) (result (ref $9)))))
;; CHECK-NEXT:  (type $8 (sub final $0 (func (param (ref (shared func)) f32 i64) (result (ref $9)))))
;; CHECK-NEXT:  (type $9 (sub $7 (func (param (ref (shared func)) f32 i64) (result (ref $9)))))
;; CHECK-NEXT:  (type $10 (sub $2 (shared (func (param f64 (ref null $5) (ref func)) (result (ref $6) (ref $3) (ref null $8))))))
;; CHECK-NEXT:  (type $11 (sub final $2 (shared (func (param f64 arrayref (ref $0)) (result (ref $6) (ref $3) (ref $8))))))
;; CHECK-NEXT:  (type $12 (sub $10 (shared (func (param f64 (ref null $1) funcref) (result (ref $6) (ref (shared nofunc)) (ref $8))))))
;; CHECK-NEXT: )
;; CHECK-NEXT: (rec
;; CHECK-NEXT:  (type $13 (sub (func (param f64 f32))))
;; CHECK-NEXT:  (type $14 (func (param i64) (result v128 (ref null $2) (ref $12) f32 v128)))
;; CHECK-NEXT:  (type $15 (sub final $12 (shared (func (param f64 anyref funcref) (result (ref $6) (ref (shared nofunc)) (ref $8))))))
;; CHECK-NEXT: )
;; CHECK-NEXT: (rec
;; CHECK-NEXT:  (type $16 (sub final $7 (func (param (ref (shared func)) f32 i64) (result (ref nofunc)))))
;; CHECK-NEXT:  (type $17 (sub (shared (func (param (ref $11) i64 (ref (shared extern)))))))
;; CHECK-NEXT:  (type $18 (sub (struct)))
;; CHECK-NEXT:  (type $19 (sub $7 (func (param (ref null (shared func)) f32 i64) (result (ref $9)))))
;; CHECK-NEXT: )
