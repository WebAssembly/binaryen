;; NOTE: Assertions have been generated by update_lit_checks.py and should not be edited.
;; RUN: wasm-opt %s -all --nominal -S -o - | filecheck %s
;; RUN: wasm-opt %s -all --nominal --roundtrip -S -o - | filecheck %s

(module

  (type $sub-struct (struct i32 i64) (extends $super-struct))
  (type $super-struct (struct i32))

  (type $sub-array (array (ref $sub-struct)) (extends $super-array))
  (type $super-array (array (ref $super-struct)))

  ;; CHECK:      (func $make-sub-struct (result (ref $sub-struct))
  ;; CHECK-NEXT:  (struct.new_with_rtt $sub-struct
  ;; CHECK-NEXT:   (i32.const 42)
  ;; CHECK-NEXT:   (i64.const 7)
  ;; CHECK-NEXT:   (rtt.canon $sub-struct)
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT: )
  (func $make-sub-struct (result (ref $sub-struct))
    (struct.new_with_rtt $sub-struct
      (i32.const 42)
      (i64.const 7)
      (rtt.canon $sub-struct)
    )
  )

  ;; CHECK:      (func $make-super-struct (result (ref $super-struct))
  ;; CHECK-NEXT:  (call $make-sub-struct)
  ;; CHECK-NEXT: )
  (func $make-super-struct (result (ref $super-struct))
    (call $make-sub-struct)
  )

  ;; CHECK:      (func $make-sub-array (result (ref $sub-array))
  ;; CHECK-NEXT:  (array.new_with_rtt $sub-array
  ;; CHECK-NEXT:   (call $make-sub-struct)
  ;; CHECK-NEXT:   (i32.const 8)
  ;; CHECK-NEXT:   (rtt.canon $sub-array)
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT: )
  (func $make-sub-array (result (ref $sub-array))
    (array.new_with_rtt $sub-array
      (call $make-sub-struct)
      (i32.const 8)
      (rtt.canon $sub-array)
    )
  )

  ;; CHECK:      (func $make-super-array (result (ref $super-array))
  ;; CHECK-NEXT:  (call $make-sub-array)
  ;; CHECK-NEXT: )
  (func $make-super-array (result (ref $super-array))
    (call $make-sub-array)
  )
)
