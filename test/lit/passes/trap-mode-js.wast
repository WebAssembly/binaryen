;; NOTE: Assertions have been generated by update_lit_checks.py --all-items and should not be edited.
;; NOTE: This test was ported using port_test.py and could be cleaned up.

;; RUN: foreach %s %t wasm-opt --trap-mode-js -S -o - | filecheck %s

(module
 ;; CHECK:      (type $i32_i32_=>_i32 (func (param i32 i32) (result i32)))

 ;; CHECK:      (type $i64_i64_=>_i64 (func (param i64 i64) (result i64)))

 ;; CHECK:      (type $i32_i64_=>_none (func (param i32 i64)))

 ;; CHECK:      (type $f32_=>_i64 (func (param f32) (result i64)))

 ;; CHECK:      (type $f64_=>_i64 (func (param f64) (result i64)))

 ;; CHECK:      (type $f32_=>_none (func (param f32)))

 ;; CHECK:      (type $f64_=>_none (func (param f64)))

 ;; CHECK:      (type $f64_=>_i32 (func (param f64) (result i32)))

 ;; CHECK:      (import "asm2wasm" "f64-to-int" (func $f64-to-int (param f64) (result i32)))

 ;; CHECK:      (func $test_div (param $0 i32) (param $1 i64)
 ;; CHECK-NEXT:  (drop
 ;; CHECK-NEXT:   (call $i32s-div
 ;; CHECK-NEXT:    (local.get $0)
 ;; CHECK-NEXT:    (local.get $0)
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (drop
 ;; CHECK-NEXT:   (call $i32u-div
 ;; CHECK-NEXT:    (local.get $0)
 ;; CHECK-NEXT:    (local.get $0)
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (drop
 ;; CHECK-NEXT:   (call $i64s-div
 ;; CHECK-NEXT:    (local.get $1)
 ;; CHECK-NEXT:    (local.get $1)
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (drop
 ;; CHECK-NEXT:   (call $i64u-div
 ;; CHECK-NEXT:    (local.get $1)
 ;; CHECK-NEXT:    (local.get $1)
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT: )
 (func $test_div (param $0 i32) (param $1 i64)
  (drop (i32.div_s (local.get $0) (local.get $0)))
  (drop (i32.div_u (local.get $0) (local.get $0)))
  (drop (i64.div_s (local.get $1) (local.get $1)))
  (drop (i64.div_u (local.get $1) (local.get $1)))
 )
 ;; CHECK:      (func $test_rem (param $0 i32) (param $1 i64)
 ;; CHECK-NEXT:  (drop
 ;; CHECK-NEXT:   (call $i32s-rem
 ;; CHECK-NEXT:    (local.get $0)
 ;; CHECK-NEXT:    (local.get $0)
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (drop
 ;; CHECK-NEXT:   (call $i32u-rem
 ;; CHECK-NEXT:    (local.get $0)
 ;; CHECK-NEXT:    (local.get $0)
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (drop
 ;; CHECK-NEXT:   (call $i64s-rem
 ;; CHECK-NEXT:    (local.get $1)
 ;; CHECK-NEXT:    (local.get $1)
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (drop
 ;; CHECK-NEXT:   (call $i64u-rem
 ;; CHECK-NEXT:    (local.get $1)
 ;; CHECK-NEXT:    (local.get $1)
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT: )
 (func $test_rem (param $0 i32) (param $1 i64)
  (drop (i32.rem_s (local.get $0) (local.get $0)))
  (drop (i32.rem_u (local.get $0) (local.get $0)))
  (drop (i64.rem_s (local.get $1) (local.get $1)))
  (drop (i64.rem_u (local.get $1) (local.get $1)))
 )
 ;; CHECK:      (func $test_f32_to_int (param $0 f32)
 ;; CHECK-NEXT:  (drop
 ;; CHECK-NEXT:   (call $f64-to-int
 ;; CHECK-NEXT:    (f64.promote_f32
 ;; CHECK-NEXT:     (local.get $0)
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (drop
 ;; CHECK-NEXT:   (call $f64-to-int
 ;; CHECK-NEXT:    (f64.promote_f32
 ;; CHECK-NEXT:     (local.get $0)
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (drop
 ;; CHECK-NEXT:   (call $f32-to-int64
 ;; CHECK-NEXT:    (local.get $0)
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (drop
 ;; CHECK-NEXT:   (call $f32-to-uint64
 ;; CHECK-NEXT:    (local.get $0)
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT: )
 (func $test_f32_to_int (param $0 f32)
  (drop (i32.trunc_f32_s (local.get $0)))
  (drop (i32.trunc_f32_u (local.get $0)))
  (drop (i64.trunc_f32_s (local.get $0)))
  (drop (i64.trunc_f32_u (local.get $0)))
 )
 ;; CHECK:      (func $test_f64_to_int (param $0 f64)
 ;; CHECK-NEXT:  (drop
 ;; CHECK-NEXT:   (call $f64-to-int
 ;; CHECK-NEXT:    (local.get $0)
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (drop
 ;; CHECK-NEXT:   (call $f64-to-int
 ;; CHECK-NEXT:    (local.get $0)
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (drop
 ;; CHECK-NEXT:   (call $f64-to-int64
 ;; CHECK-NEXT:    (local.get $0)
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (drop
 ;; CHECK-NEXT:   (call $f64-to-uint64
 ;; CHECK-NEXT:    (local.get $0)
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT: )
 (func $test_f64_to_int (param $0 f64)
  (drop (i32.trunc_f64_s (local.get $0)))
  (drop (i32.trunc_f64_u (local.get $0)))
  (drop (i64.trunc_f64_s (local.get $0)))
  (drop (i64.trunc_f64_u (local.get $0)))
 )
)
;; CHECK:      (func $f32-to-int64 (param $0 f32) (result i64)
;; CHECK-NEXT:  (if (result i64)
;; CHECK-NEXT:   (f32.ne
;; CHECK-NEXT:    (local.get $0)
;; CHECK-NEXT:    (local.get $0)
;; CHECK-NEXT:   )
;; CHECK-NEXT:   (i64.const -9223372036854775808)
;; CHECK-NEXT:   (if (result i64)
;; CHECK-NEXT:    (f32.ge
;; CHECK-NEXT:     (local.get $0)
;; CHECK-NEXT:     (f32.const 9223372036854775808)
;; CHECK-NEXT:    )
;; CHECK-NEXT:    (i64.const -9223372036854775808)
;; CHECK-NEXT:    (if (result i64)
;; CHECK-NEXT:     (f32.le
;; CHECK-NEXT:      (local.get $0)
;; CHECK-NEXT:      (f32.const -9223372036854775808)
;; CHECK-NEXT:     )
;; CHECK-NEXT:     (i64.const -9223372036854775808)
;; CHECK-NEXT:     (i64.trunc_f32_s
;; CHECK-NEXT:      (local.get $0)
;; CHECK-NEXT:     )
;; CHECK-NEXT:    )
;; CHECK-NEXT:   )
;; CHECK-NEXT:  )
;; CHECK-NEXT: )

;; CHECK:      (func $f32-to-uint64 (param $0 f32) (result i64)
;; CHECK-NEXT:  (if (result i64)
;; CHECK-NEXT:   (f32.ne
;; CHECK-NEXT:    (local.get $0)
;; CHECK-NEXT:    (local.get $0)
;; CHECK-NEXT:   )
;; CHECK-NEXT:   (i64.const 0)
;; CHECK-NEXT:   (if (result i64)
;; CHECK-NEXT:    (f32.ge
;; CHECK-NEXT:     (local.get $0)
;; CHECK-NEXT:     (f32.const 18446744073709551615)
;; CHECK-NEXT:    )
;; CHECK-NEXT:    (i64.const 0)
;; CHECK-NEXT:    (if (result i64)
;; CHECK-NEXT:     (f32.le
;; CHECK-NEXT:      (local.get $0)
;; CHECK-NEXT:      (f32.const -1)
;; CHECK-NEXT:     )
;; CHECK-NEXT:     (i64.const 0)
;; CHECK-NEXT:     (i64.trunc_f32_u
;; CHECK-NEXT:      (local.get $0)
;; CHECK-NEXT:     )
;; CHECK-NEXT:    )
;; CHECK-NEXT:   )
;; CHECK-NEXT:  )
;; CHECK-NEXT: )

;; CHECK:      (func $f64-to-int64 (param $0 f64) (result i64)
;; CHECK-NEXT:  (if (result i64)
;; CHECK-NEXT:   (f64.ne
;; CHECK-NEXT:    (local.get $0)
;; CHECK-NEXT:    (local.get $0)
;; CHECK-NEXT:   )
;; CHECK-NEXT:   (i64.const -9223372036854775808)
;; CHECK-NEXT:   (if (result i64)
;; CHECK-NEXT:    (f64.ge
;; CHECK-NEXT:     (local.get $0)
;; CHECK-NEXT:     (f64.const 9223372036854775808)
;; CHECK-NEXT:    )
;; CHECK-NEXT:    (i64.const -9223372036854775808)
;; CHECK-NEXT:    (if (result i64)
;; CHECK-NEXT:     (f64.le
;; CHECK-NEXT:      (local.get $0)
;; CHECK-NEXT:      (f64.const -9223372036854775808)
;; CHECK-NEXT:     )
;; CHECK-NEXT:     (i64.const -9223372036854775808)
;; CHECK-NEXT:     (i64.trunc_f64_s
;; CHECK-NEXT:      (local.get $0)
;; CHECK-NEXT:     )
;; CHECK-NEXT:    )
;; CHECK-NEXT:   )
;; CHECK-NEXT:  )
;; CHECK-NEXT: )

;; CHECK:      (func $f64-to-uint64 (param $0 f64) (result i64)
;; CHECK-NEXT:  (if (result i64)
;; CHECK-NEXT:   (f64.ne
;; CHECK-NEXT:    (local.get $0)
;; CHECK-NEXT:    (local.get $0)
;; CHECK-NEXT:   )
;; CHECK-NEXT:   (i64.const 0)
;; CHECK-NEXT:   (if (result i64)
;; CHECK-NEXT:    (f64.ge
;; CHECK-NEXT:     (local.get $0)
;; CHECK-NEXT:     (f64.const 18446744073709551615)
;; CHECK-NEXT:    )
;; CHECK-NEXT:    (i64.const 0)
;; CHECK-NEXT:    (if (result i64)
;; CHECK-NEXT:     (f64.le
;; CHECK-NEXT:      (local.get $0)
;; CHECK-NEXT:      (f64.const -1)
;; CHECK-NEXT:     )
;; CHECK-NEXT:     (i64.const 0)
;; CHECK-NEXT:     (i64.trunc_f64_u
;; CHECK-NEXT:      (local.get $0)
;; CHECK-NEXT:     )
;; CHECK-NEXT:    )
;; CHECK-NEXT:   )
;; CHECK-NEXT:  )
;; CHECK-NEXT: )

;; CHECK:      (func $i32s-div (param $0 i32) (param $1 i32) (result i32)
;; CHECK-NEXT:  (if (result i32)
;; CHECK-NEXT:   (i32.eqz
;; CHECK-NEXT:    (local.get $1)
;; CHECK-NEXT:   )
;; CHECK-NEXT:   (i32.const 0)
;; CHECK-NEXT:   (if (result i32)
;; CHECK-NEXT:    (i32.and
;; CHECK-NEXT:     (i32.eq
;; CHECK-NEXT:      (local.get $0)
;; CHECK-NEXT:      (i32.const -2147483648)
;; CHECK-NEXT:     )
;; CHECK-NEXT:     (i32.eq
;; CHECK-NEXT:      (local.get $1)
;; CHECK-NEXT:      (i32.const -1)
;; CHECK-NEXT:     )
;; CHECK-NEXT:    )
;; CHECK-NEXT:    (i32.const 0)
;; CHECK-NEXT:    (i32.div_s
;; CHECK-NEXT:     (local.get $0)
;; CHECK-NEXT:     (local.get $1)
;; CHECK-NEXT:    )
;; CHECK-NEXT:   )
;; CHECK-NEXT:  )
;; CHECK-NEXT: )

;; CHECK:      (func $i32s-rem (param $0 i32) (param $1 i32) (result i32)
;; CHECK-NEXT:  (if (result i32)
;; CHECK-NEXT:   (i32.eqz
;; CHECK-NEXT:    (local.get $1)
;; CHECK-NEXT:   )
;; CHECK-NEXT:   (i32.const 0)
;; CHECK-NEXT:   (i32.rem_s
;; CHECK-NEXT:    (local.get $0)
;; CHECK-NEXT:    (local.get $1)
;; CHECK-NEXT:   )
;; CHECK-NEXT:  )
;; CHECK-NEXT: )

;; CHECK:      (func $i32u-div (param $0 i32) (param $1 i32) (result i32)
;; CHECK-NEXT:  (if (result i32)
;; CHECK-NEXT:   (i32.eqz
;; CHECK-NEXT:    (local.get $1)
;; CHECK-NEXT:   )
;; CHECK-NEXT:   (i32.const 0)
;; CHECK-NEXT:   (i32.div_u
;; CHECK-NEXT:    (local.get $0)
;; CHECK-NEXT:    (local.get $1)
;; CHECK-NEXT:   )
;; CHECK-NEXT:  )
;; CHECK-NEXT: )

;; CHECK:      (func $i32u-rem (param $0 i32) (param $1 i32) (result i32)
;; CHECK-NEXT:  (if (result i32)
;; CHECK-NEXT:   (i32.eqz
;; CHECK-NEXT:    (local.get $1)
;; CHECK-NEXT:   )
;; CHECK-NEXT:   (i32.const 0)
;; CHECK-NEXT:   (i32.rem_u
;; CHECK-NEXT:    (local.get $0)
;; CHECK-NEXT:    (local.get $1)
;; CHECK-NEXT:   )
;; CHECK-NEXT:  )
;; CHECK-NEXT: )

;; CHECK:      (func $i64s-div (param $0 i64) (param $1 i64) (result i64)
;; CHECK-NEXT:  (if (result i64)
;; CHECK-NEXT:   (i64.eqz
;; CHECK-NEXT:    (local.get $1)
;; CHECK-NEXT:   )
;; CHECK-NEXT:   (i64.const 0)
;; CHECK-NEXT:   (if (result i64)
;; CHECK-NEXT:    (i32.and
;; CHECK-NEXT:     (i64.eq
;; CHECK-NEXT:      (local.get $0)
;; CHECK-NEXT:      (i64.const -9223372036854775808)
;; CHECK-NEXT:     )
;; CHECK-NEXT:     (i64.eq
;; CHECK-NEXT:      (local.get $1)
;; CHECK-NEXT:      (i64.const -1)
;; CHECK-NEXT:     )
;; CHECK-NEXT:    )
;; CHECK-NEXT:    (i64.const 0)
;; CHECK-NEXT:    (i64.div_s
;; CHECK-NEXT:     (local.get $0)
;; CHECK-NEXT:     (local.get $1)
;; CHECK-NEXT:    )
;; CHECK-NEXT:   )
;; CHECK-NEXT:  )
;; CHECK-NEXT: )

;; CHECK:      (func $i64s-rem (param $0 i64) (param $1 i64) (result i64)
;; CHECK-NEXT:  (if (result i64)
;; CHECK-NEXT:   (i64.eqz
;; CHECK-NEXT:    (local.get $1)
;; CHECK-NEXT:   )
;; CHECK-NEXT:   (i64.const 0)
;; CHECK-NEXT:   (i64.rem_s
;; CHECK-NEXT:    (local.get $0)
;; CHECK-NEXT:    (local.get $1)
;; CHECK-NEXT:   )
;; CHECK-NEXT:  )
;; CHECK-NEXT: )

;; CHECK:      (func $i64u-div (param $0 i64) (param $1 i64) (result i64)
;; CHECK-NEXT:  (if (result i64)
;; CHECK-NEXT:   (i64.eqz
;; CHECK-NEXT:    (local.get $1)
;; CHECK-NEXT:   )
;; CHECK-NEXT:   (i64.const 0)
;; CHECK-NEXT:   (i64.div_u
;; CHECK-NEXT:    (local.get $0)
;; CHECK-NEXT:    (local.get $1)
;; CHECK-NEXT:   )
;; CHECK-NEXT:  )
;; CHECK-NEXT: )

;; CHECK:      (func $i64u-rem (param $0 i64) (param $1 i64) (result i64)
;; CHECK-NEXT:  (if (result i64)
;; CHECK-NEXT:   (i64.eqz
;; CHECK-NEXT:    (local.get $1)
;; CHECK-NEXT:   )
;; CHECK-NEXT:   (i64.const 0)
;; CHECK-NEXT:   (i64.rem_u
;; CHECK-NEXT:    (local.get $0)
;; CHECK-NEXT:    (local.get $1)
;; CHECK-NEXT:   )
;; CHECK-NEXT:  )
;; CHECK-NEXT: )
