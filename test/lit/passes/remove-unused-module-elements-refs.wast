;; NOTE: Assertions have been generated by update_lit_checks.py --all-items and should not be edited.
;; RUN: foreach %s %t wasm-opt --remove-unused-module-elements --nominal -all -S -o - | filecheck %s

(module
  (type $A (func))
  (type $B (func))

  (func $foo (export "foo")
    ;; This export has two RefFuncs, and one CallRef.
    (drop
      (ref.func $target-A)
    )
    (drop
      (ref.func $target-B)
    )
    (call_ref
      (ref.null $A)
    )
  )

  (func $target-A (type $A)
    ;; This function is reachable from the export "foo": there is a RefFunc and
    ;; a CallRef for it there.
  )

  (func $target-A-noref (type $A)
    ;; This function is not reachable. We have a CallRef of the right type, but
    ;; no RefFunc.
  )

  (func $target-B (type $B)
    ;; This function is not reachable. We have a RefFunc in "foo" but no
    ;; suitable CallRef.
  )
)

;; As above, but reverse the order inside $foo, so we see the CallRef first.
(module
  (type $A (func))
  (type $B (func))

  (func $foo (export "foo")
    (call_ref
      (ref.null $A)
    )
    (drop
      (ref.func $target-A)
    )
  )

  (func $target-A (type $A)
    ;; This function is reachable.
  )

  (func $target-A-noref (type $A)
    ;; This function is not reachable.
  )
)

;; As above, but interleave CallRefs with RefFuncs.
(module
  (type $A (func))
  (type $B (func))

  (func $foo (export "foo")
    (call_ref
      (ref.null $A)
    )
    (drop
      (ref.func $target-A-1)
    )
    (call_ref
      (ref.null $A)
    )
    (drop
      (ref.func $target-A-2)
    )
  )

  (func $target-A-1 (type $A)
    ;; This function is reachable.
  )

  (func $target-A-2 (type $A)
    ;; This function is reachable.
  )

  (func $target-A-3 (type $A)
    ;; This function is not reachable.
  )
)

;; As above, with the order reversed inside $foo. The results should be the
;; same.
(module
  (type $A (func))
  (type $B (func))

  (func $foo (export "foo")
    (drop
      (ref.func $target-A-1)
    )
    (call_ref
      (ref.null $A)
    )
    (drop
      (ref.func $target-A-2)
    )
    (call_ref
      (ref.null $A)
    )
  )

  (func $target-A-1 (type $A)
    ;; This function is reachable.
  )

  (func $target-A-2 (type $A)
    ;; This function is reachable.
  )

  (func $target-A-3 (type $A)
    ;; This function is not reachable.
  )
)
