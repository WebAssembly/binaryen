;; NOTE: Assertions have been generated by update_lit_checks.py --all-items and should not be edited.
;; NOTE: This test was ported using port_passes_tests_to_lit.py and could be cleaned up.

;; RUN: foreach %s %t wasm-opt --remove-unused-module-elements -all      -S -o - | filecheck %s
;; RUN: foreach %s %t wasm-opt --remove-unused-module-elements -tnh -all -S -o - | filecheck %s --check-prefix=T_N_H

;; The data segment here will trap during startup as it is out of bounds. We
;; can only remove such segments if we assume TrapsNeverHappen.

(module
 ;; CHECK:      (type $0 (func (param i32)))

 ;; CHECK:      (type $1 (func))

 ;; CHECK:      (import "fuzzing-support" "log-i32" (func $fimport$0 (type $0) (param i32)))
 ;; T_N_H:      (type $0 (func (param i32)))

 ;; T_N_H:      (type $1 (func))

 ;; T_N_H:      (import "fuzzing-support" "log-i32" (func $fimport$0 (type $0) (param i32)))
 (import "fuzzing-support" "log-i32" (func $fimport$0 (param i32)))

 ;; CHECK:      (memory $0 16 17 shared)
 (memory $0 16 17 shared)
 ;; CHECK:      (data $1 (i32.const -1) "")
 (data $1 (i32.const -1) "")

 ;; CHECK:      (export "func_13_invoker" (func $0))
 ;; T_N_H:      (export "func_13_invoker" (func $0))
 (export "func_13_invoker" (func $0))

 ;; CHECK:      (func $0 (type $1)
 ;; CHECK-NEXT:  (call $fimport$0
 ;; CHECK-NEXT:   (i32.const 0)
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT: )
 ;; T_N_H:      (func $0 (type $1)
 ;; T_N_H-NEXT:  (call $fimport$0
 ;; T_N_H-NEXT:   (i32.const 0)
 ;; T_N_H-NEXT:  )
 ;; T_N_H-NEXT: )
 (func $0
  (call $fimport$0
   (i32.const 0)
  )
 )
)
