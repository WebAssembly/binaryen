;; NOTE: Assertions have been generated by update_lit_checks.py and should not be edited.
;; RUN: wasm-opt %s -all --roundtrip -S -o - | filecheck %s
;; RUN: wasm-opt %s -all --roundtrip --nominal -S -o - | filecheck %s --check-prefix NOMNL

;; Regression test for an issue in which roundtripping failed to reproduce the
;; original types because type canonicalization was incorrect when the canonical
;; types already existed in the store.

(module
 ;; CHECK:      (type $A (struct (field (ref $C))))
 ;; NOMNL:      (type $A (struct_subtype (field (ref $C)) data))
 (type $A (struct (field (ref $C))))
 ;; CHECK:      (type $D (struct (field (ref $C)) (field (ref $A))))

 ;; CHECK:      (type $C (struct (field (mut (ref $B)))))

 ;; CHECK:      (type $B (func (param (ref $A)) (result (ref $B))))
 ;; NOMNL:      (type $D (struct_subtype (field (ref $C)) (field (ref $A)) $A))

 ;; NOMNL:      (type $C (struct_subtype (field (mut (ref $B))) data))

 ;; NOMNL:      (type $B (func_subtype (param (ref $A)) (result (ref $B)) func))
 (type $B (func (param (ref $A)) (result (ref $B))))
 (type $C (struct (field (mut (ref $B)))))
 (type $D (struct_subtype (field (ref $C)) (field (ref $A)) $A))
 ;; CHECK:      (global $g0 (rtt 0 $A) (rtt.canon $A))
 ;; NOMNL:      (global $g0 (rtt 0 $A) (rtt.canon $A))
 (global $g0 (rtt 0 $A) (rtt.canon $A))
 ;; CHECK:      (global $g1 (rtt 1 $D) (rtt.sub $D
 ;; CHECK-NEXT:  (global.get $g0)
 ;; CHECK-NEXT: ))
 ;; NOMNL:      (global $g1 (rtt 1 $D) (rtt.sub $D
 ;; NOMNL-NEXT:  (global.get $g0)
 ;; NOMNL-NEXT: ))
 (global $g1 (rtt 1 $D) (rtt.sub $D
  (global.get $g0)
 ))
)
