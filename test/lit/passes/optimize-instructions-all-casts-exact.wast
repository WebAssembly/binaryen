;; NOTE: Assertions have been generated by update_lit_checks.py and should not be edited.
;; NOTE: Test has been generated by scripts/test/gen-cast-test.py --enable-custom-descs. Do not edit manually.

;; Exhaustively test optimization of all interesting casts.

;; RUN: wasm-opt %s -all --optimize-instructions -S -o - | filecheck %s

(module
  ;; CHECK:      (type $super (sub (struct)))
  (type $super (sub (struct)))
  ;; CHECK:      (type $sub-final (sub final $super (struct)))

  ;; CHECK:      (type $sub (sub $super (struct)))
  (type $sub (sub $super (struct)))
  (type $sub-final (sub final $super (struct)))

  ;; CHECK:      (func $cast-to-self-nonfinal-null-exact-to-null-exact (type $3) (param $0 (ref null (exact $super))) (result (ref null (exact $super)))
  ;; CHECK-NEXT:  (local $1 anyref)
  ;; CHECK-NEXT:  (local $2 (ref null (exact $super)))
  ;; CHECK-NEXT:  (drop
  ;; CHECK-NEXT:   (local.tee $1
  ;; CHECK-NEXT:    (local.tee $2
  ;; CHECK-NEXT:     (local.get $0)
  ;; CHECK-NEXT:    )
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT:  (local.get $2)
  ;; CHECK-NEXT: )
  (func $cast-to-self-nonfinal-null-exact-to-null-exact (param (ref null (exact $super))) (result (ref null (exact $super)))
    (local anyref)
    (ref.cast (ref null (exact $super))
      (local.tee 1
        (local.get 0)
      )
    )
  )

  ;; CHECK:      (func $cast-to-self-nonfinal-null-exact-to-non-null-exact (type $4) (param $0 (ref null (exact $super))) (result (ref (exact $super)))
  ;; CHECK-NEXT:  (local $1 anyref)
  ;; CHECK-NEXT:  (local $2 (ref null (exact $super)))
  ;; CHECK-NEXT:  (drop
  ;; CHECK-NEXT:   (local.tee $1
  ;; CHECK-NEXT:    (local.tee $2
  ;; CHECK-NEXT:     (local.get $0)
  ;; CHECK-NEXT:    )
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT:  (ref.as_non_null
  ;; CHECK-NEXT:   (local.get $2)
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT: )
  (func $cast-to-self-nonfinal-null-exact-to-non-null-exact (param (ref null (exact $super))) (result (ref (exact $super)))
    (local anyref)
    (ref.cast (ref (exact $super))
      (local.tee 1
        (local.get 0)
      )
    )
  )

  ;; CHECK:      (func $cast-to-self-nonfinal-null-inexact-to-null-exact (type $5) (param $0 (ref null $super)) (result (ref null (exact $super)))
  ;; CHECK-NEXT:  (local $1 anyref)
  ;; CHECK-NEXT:  (ref.cast (ref null (exact $super))
  ;; CHECK-NEXT:   (local.tee $1
  ;; CHECK-NEXT:    (local.get $0)
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT: )
  (func $cast-to-self-nonfinal-null-inexact-to-null-exact (param (ref null $super)) (result (ref null (exact $super)))
    (local anyref)
    (ref.cast (ref null (exact $super))
      (local.tee 1
        (local.get 0)
      )
    )
  )

  ;; CHECK:      (func $cast-to-self-nonfinal-null-inexact-to-non-null-exact (type $6) (param $0 (ref null $super)) (result (ref (exact $super)))
  ;; CHECK-NEXT:  (local $1 anyref)
  ;; CHECK-NEXT:  (ref.cast (ref (exact $super))
  ;; CHECK-NEXT:   (local.tee $1
  ;; CHECK-NEXT:    (local.get $0)
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT: )
  (func $cast-to-self-nonfinal-null-inexact-to-non-null-exact (param (ref null $super)) (result (ref (exact $super)))
    (local anyref)
    (ref.cast (ref (exact $super))
      (local.tee 1
        (local.get 0)
      )
    )
  )

  ;; CHECK:      (func $cast-to-self-nonfinal-non-null-exact-to-null-exact (type $7) (param $0 (ref (exact $super))) (result (ref null (exact $super)))
  ;; CHECK-NEXT:  (local $1 anyref)
  ;; CHECK-NEXT:  (local $2 (ref (exact $super)))
  ;; CHECK-NEXT:  (drop
  ;; CHECK-NEXT:   (local.tee $1
  ;; CHECK-NEXT:    (local.tee $2
  ;; CHECK-NEXT:     (local.get $0)
  ;; CHECK-NEXT:    )
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT:  (local.get $2)
  ;; CHECK-NEXT: )
  (func $cast-to-self-nonfinal-non-null-exact-to-null-exact (param (ref (exact $super))) (result (ref null (exact $super)))
    (local anyref)
    (ref.cast (ref null (exact $super))
      (local.tee 1
        (local.get 0)
      )
    )
  )

  ;; CHECK:      (func $cast-to-self-nonfinal-non-null-exact-to-non-null-exact (type $8) (param $0 (ref (exact $super))) (result (ref (exact $super)))
  ;; CHECK-NEXT:  (local $1 anyref)
  ;; CHECK-NEXT:  (local $2 (ref (exact $super)))
  ;; CHECK-NEXT:  (drop
  ;; CHECK-NEXT:   (local.tee $1
  ;; CHECK-NEXT:    (local.tee $2
  ;; CHECK-NEXT:     (local.get $0)
  ;; CHECK-NEXT:    )
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT:  (local.get $2)
  ;; CHECK-NEXT: )
  (func $cast-to-self-nonfinal-non-null-exact-to-non-null-exact (param (ref (exact $super))) (result (ref (exact $super)))
    (local anyref)
    (ref.cast (ref (exact $super))
      (local.tee 1
        (local.get 0)
      )
    )
  )

  ;; CHECK:      (func $cast-to-self-nonfinal-non-null-inexact-to-null-exact (type $9) (param $0 (ref $super)) (result (ref null (exact $super)))
  ;; CHECK-NEXT:  (local $1 anyref)
  ;; CHECK-NEXT:  (ref.cast (ref (exact $super))
  ;; CHECK-NEXT:   (local.tee $1
  ;; CHECK-NEXT:    (local.get $0)
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT: )
  (func $cast-to-self-nonfinal-non-null-inexact-to-null-exact (param (ref $super)) (result (ref null (exact $super)))
    (local anyref)
    (ref.cast (ref null (exact $super))
      (local.tee 1
        (local.get 0)
      )
    )
  )

  ;; CHECK:      (func $cast-to-self-nonfinal-non-null-inexact-to-non-null-exact (type $10) (param $0 (ref $super)) (result (ref (exact $super)))
  ;; CHECK-NEXT:  (local $1 anyref)
  ;; CHECK-NEXT:  (ref.cast (ref (exact $super))
  ;; CHECK-NEXT:   (local.tee $1
  ;; CHECK-NEXT:    (local.get $0)
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT: )
  (func $cast-to-self-nonfinal-non-null-inexact-to-non-null-exact (param (ref $super)) (result (ref (exact $super)))
    (local anyref)
    (ref.cast (ref (exact $super))
      (local.tee 1
        (local.get 0)
      )
    )
  )

  ;; CHECK:      (func $cast-to-self-final-null-exact-to-null-exact (type $11) (param $0 (ref null (exact $sub-final))) (result (ref null (exact $sub-final)))
  ;; CHECK-NEXT:  (local $1 anyref)
  ;; CHECK-NEXT:  (local $2 (ref null (exact $sub-final)))
  ;; CHECK-NEXT:  (drop
  ;; CHECK-NEXT:   (local.tee $1
  ;; CHECK-NEXT:    (local.tee $2
  ;; CHECK-NEXT:     (local.get $0)
  ;; CHECK-NEXT:    )
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT:  (local.get $2)
  ;; CHECK-NEXT: )
  (func $cast-to-self-final-null-exact-to-null-exact (param (ref null (exact $sub-final))) (result (ref null (exact $sub-final)))
    (local anyref)
    (ref.cast (ref null (exact $sub-final))
      (local.tee 1
        (local.get 0)
      )
    )
  )

  ;; CHECK:      (func $cast-to-self-final-null-exact-to-non-null-exact (type $12) (param $0 (ref null (exact $sub-final))) (result (ref (exact $sub-final)))
  ;; CHECK-NEXT:  (local $1 anyref)
  ;; CHECK-NEXT:  (local $2 (ref null (exact $sub-final)))
  ;; CHECK-NEXT:  (drop
  ;; CHECK-NEXT:   (local.tee $1
  ;; CHECK-NEXT:    (local.tee $2
  ;; CHECK-NEXT:     (local.get $0)
  ;; CHECK-NEXT:    )
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT:  (ref.as_non_null
  ;; CHECK-NEXT:   (local.get $2)
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT: )
  (func $cast-to-self-final-null-exact-to-non-null-exact (param (ref null (exact $sub-final))) (result (ref (exact $sub-final)))
    (local anyref)
    (ref.cast (ref (exact $sub-final))
      (local.tee 1
        (local.get 0)
      )
    )
  )

  ;; CHECK:      (func $cast-to-self-final-null-inexact-to-null-exact (type $13) (param $0 (ref null $sub-final)) (result (ref null (exact $sub-final)))
  ;; CHECK-NEXT:  (local $1 anyref)
  ;; CHECK-NEXT:  (ref.cast (ref null (exact $sub-final))
  ;; CHECK-NEXT:   (local.tee $1
  ;; CHECK-NEXT:    (local.get $0)
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT: )
  (func $cast-to-self-final-null-inexact-to-null-exact (param (ref null $sub-final)) (result (ref null (exact $sub-final)))
    (local anyref)
    (ref.cast (ref null (exact $sub-final))
      (local.tee 1
        (local.get 0)
      )
    )
  )

  ;; CHECK:      (func $cast-to-self-final-null-inexact-to-non-null-exact (type $14) (param $0 (ref null $sub-final)) (result (ref (exact $sub-final)))
  ;; CHECK-NEXT:  (local $1 anyref)
  ;; CHECK-NEXT:  (ref.cast (ref (exact $sub-final))
  ;; CHECK-NEXT:   (local.tee $1
  ;; CHECK-NEXT:    (local.get $0)
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT: )
  (func $cast-to-self-final-null-inexact-to-non-null-exact (param (ref null $sub-final)) (result (ref (exact $sub-final)))
    (local anyref)
    (ref.cast (ref (exact $sub-final))
      (local.tee 1
        (local.get 0)
      )
    )
  )

  ;; CHECK:      (func $cast-to-self-final-non-null-exact-to-null-exact (type $15) (param $0 (ref (exact $sub-final))) (result (ref null (exact $sub-final)))
  ;; CHECK-NEXT:  (local $1 anyref)
  ;; CHECK-NEXT:  (local $2 (ref (exact $sub-final)))
  ;; CHECK-NEXT:  (drop
  ;; CHECK-NEXT:   (local.tee $1
  ;; CHECK-NEXT:    (local.tee $2
  ;; CHECK-NEXT:     (local.get $0)
  ;; CHECK-NEXT:    )
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT:  (local.get $2)
  ;; CHECK-NEXT: )
  (func $cast-to-self-final-non-null-exact-to-null-exact (param (ref (exact $sub-final))) (result (ref null (exact $sub-final)))
    (local anyref)
    (ref.cast (ref null (exact $sub-final))
      (local.tee 1
        (local.get 0)
      )
    )
  )

  ;; CHECK:      (func $cast-to-self-final-non-null-exact-to-non-null-exact (type $16) (param $0 (ref (exact $sub-final))) (result (ref (exact $sub-final)))
  ;; CHECK-NEXT:  (local $1 anyref)
  ;; CHECK-NEXT:  (local $2 (ref (exact $sub-final)))
  ;; CHECK-NEXT:  (drop
  ;; CHECK-NEXT:   (local.tee $1
  ;; CHECK-NEXT:    (local.tee $2
  ;; CHECK-NEXT:     (local.get $0)
  ;; CHECK-NEXT:    )
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT:  (local.get $2)
  ;; CHECK-NEXT: )
  (func $cast-to-self-final-non-null-exact-to-non-null-exact (param (ref (exact $sub-final))) (result (ref (exact $sub-final)))
    (local anyref)
    (ref.cast (ref (exact $sub-final))
      (local.tee 1
        (local.get 0)
      )
    )
  )

  ;; CHECK:      (func $cast-to-self-final-non-null-inexact-to-null-exact (type $17) (param $0 (ref $sub-final)) (result (ref null (exact $sub-final)))
  ;; CHECK-NEXT:  (local $1 anyref)
  ;; CHECK-NEXT:  (ref.cast (ref (exact $sub-final))
  ;; CHECK-NEXT:   (local.tee $1
  ;; CHECK-NEXT:    (local.get $0)
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT: )
  (func $cast-to-self-final-non-null-inexact-to-null-exact (param (ref $sub-final)) (result (ref null (exact $sub-final)))
    (local anyref)
    (ref.cast (ref null (exact $sub-final))
      (local.tee 1
        (local.get 0)
      )
    )
  )

  ;; CHECK:      (func $cast-to-self-final-non-null-inexact-to-non-null-exact (type $18) (param $0 (ref $sub-final)) (result (ref (exact $sub-final)))
  ;; CHECK-NEXT:  (local $1 anyref)
  ;; CHECK-NEXT:  (ref.cast (ref (exact $sub-final))
  ;; CHECK-NEXT:   (local.tee $1
  ;; CHECK-NEXT:    (local.get $0)
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT: )
  (func $cast-to-self-final-non-null-inexact-to-non-null-exact (param (ref $sub-final)) (result (ref (exact $sub-final)))
    (local anyref)
    (ref.cast (ref (exact $sub-final))
      (local.tee 1
        (local.get 0)
      )
    )
  )

  ;; CHECK:      (func $cast-to-super-null-exact-to-null-exact (type $19) (param $0 (ref null (exact $sub))) (result (ref null (exact $super)))
  ;; CHECK-NEXT:  (local $1 anyref)
  ;; CHECK-NEXT:  (ref.cast nullref
  ;; CHECK-NEXT:   (local.tee $1
  ;; CHECK-NEXT:    (local.get $0)
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT: )
  (func $cast-to-super-null-exact-to-null-exact (param (ref null (exact $sub))) (result (ref null (exact $super)))
    (local anyref)
    (ref.cast (ref null (exact $super))
      (local.tee 1
        (local.get 0)
      )
    )
  )

  ;; CHECK:      (func $cast-to-super-null-exact-to-non-null-exact (type $20) (param $0 (ref null (exact $sub))) (result (ref (exact $super)))
  ;; CHECK-NEXT:  (local $1 anyref)
  ;; CHECK-NEXT:  (drop
  ;; CHECK-NEXT:   (local.tee $1
  ;; CHECK-NEXT:    (local.get $0)
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT:  (unreachable)
  ;; CHECK-NEXT: )
  (func $cast-to-super-null-exact-to-non-null-exact (param (ref null (exact $sub))) (result (ref (exact $super)))
    (local anyref)
    (ref.cast (ref (exact $super))
      (local.tee 1
        (local.get 0)
      )
    )
  )

  ;; CHECK:      (func $cast-to-super-null-inexact-to-null-exact (type $21) (param $0 (ref null $sub)) (result (ref null (exact $super)))
  ;; CHECK-NEXT:  (local $1 anyref)
  ;; CHECK-NEXT:  (ref.cast nullref
  ;; CHECK-NEXT:   (local.tee $1
  ;; CHECK-NEXT:    (local.get $0)
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT: )
  (func $cast-to-super-null-inexact-to-null-exact (param (ref null $sub)) (result (ref null (exact $super)))
    (local anyref)
    (ref.cast (ref null (exact $super))
      (local.tee 1
        (local.get 0)
      )
    )
  )

  ;; CHECK:      (func $cast-to-super-null-inexact-to-non-null-exact (type $22) (param $0 (ref null $sub)) (result (ref (exact $super)))
  ;; CHECK-NEXT:  (local $1 anyref)
  ;; CHECK-NEXT:  (drop
  ;; CHECK-NEXT:   (local.tee $1
  ;; CHECK-NEXT:    (local.get $0)
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT:  (unreachable)
  ;; CHECK-NEXT: )
  (func $cast-to-super-null-inexact-to-non-null-exact (param (ref null $sub)) (result (ref (exact $super)))
    (local anyref)
    (ref.cast (ref (exact $super))
      (local.tee 1
        (local.get 0)
      )
    )
  )

  ;; CHECK:      (func $cast-to-super-non-null-exact-to-null-exact (type $23) (param $0 (ref (exact $sub))) (result (ref null (exact $super)))
  ;; CHECK-NEXT:  (local $1 anyref)
  ;; CHECK-NEXT:  (drop
  ;; CHECK-NEXT:   (local.tee $1
  ;; CHECK-NEXT:    (local.get $0)
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT:  (unreachable)
  ;; CHECK-NEXT: )
  (func $cast-to-super-non-null-exact-to-null-exact (param (ref (exact $sub))) (result (ref null (exact $super)))
    (local anyref)
    (ref.cast (ref null (exact $super))
      (local.tee 1
        (local.get 0)
      )
    )
  )

  ;; CHECK:      (func $cast-to-super-non-null-exact-to-non-null-exact (type $24) (param $0 (ref (exact $sub))) (result (ref (exact $super)))
  ;; CHECK-NEXT:  (local $1 anyref)
  ;; CHECK-NEXT:  (drop
  ;; CHECK-NEXT:   (local.tee $1
  ;; CHECK-NEXT:    (local.get $0)
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT:  (unreachable)
  ;; CHECK-NEXT: )
  (func $cast-to-super-non-null-exact-to-non-null-exact (param (ref (exact $sub))) (result (ref (exact $super)))
    (local anyref)
    (ref.cast (ref (exact $super))
      (local.tee 1
        (local.get 0)
      )
    )
  )

  ;; CHECK:      (func $cast-to-super-non-null-inexact-to-null-exact (type $25) (param $0 (ref $sub)) (result (ref null (exact $super)))
  ;; CHECK-NEXT:  (local $1 anyref)
  ;; CHECK-NEXT:  (drop
  ;; CHECK-NEXT:   (local.tee $1
  ;; CHECK-NEXT:    (local.get $0)
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT:  (unreachable)
  ;; CHECK-NEXT: )
  (func $cast-to-super-non-null-inexact-to-null-exact (param (ref $sub)) (result (ref null (exact $super)))
    (local anyref)
    (ref.cast (ref null (exact $super))
      (local.tee 1
        (local.get 0)
      )
    )
  )

  ;; CHECK:      (func $cast-to-super-non-null-inexact-to-non-null-exact (type $26) (param $0 (ref $sub)) (result (ref (exact $super)))
  ;; CHECK-NEXT:  (local $1 anyref)
  ;; CHECK-NEXT:  (drop
  ;; CHECK-NEXT:   (local.tee $1
  ;; CHECK-NEXT:    (local.get $0)
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT:  (unreachable)
  ;; CHECK-NEXT: )
  (func $cast-to-super-non-null-inexact-to-non-null-exact (param (ref $sub)) (result (ref (exact $super)))
    (local anyref)
    (ref.cast (ref (exact $super))
      (local.tee 1
        (local.get 0)
      )
    )
  )

  ;; CHECK:      (func $cast-to-sub-null-exact-to-null-exact (type $27) (param $0 (ref null (exact $super))) (result (ref null (exact $sub)))
  ;; CHECK-NEXT:  (local $1 anyref)
  ;; CHECK-NEXT:  (ref.cast nullref
  ;; CHECK-NEXT:   (local.tee $1
  ;; CHECK-NEXT:    (local.get $0)
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT: )
  (func $cast-to-sub-null-exact-to-null-exact (param (ref null (exact $super))) (result (ref null (exact $sub)))
    (local anyref)
    (ref.cast (ref null (exact $sub))
      (local.tee 1
        (local.get 0)
      )
    )
  )

  ;; CHECK:      (func $cast-to-sub-null-exact-to-non-null-exact (type $28) (param $0 (ref null (exact $super))) (result (ref (exact $sub)))
  ;; CHECK-NEXT:  (local $1 anyref)
  ;; CHECK-NEXT:  (drop
  ;; CHECK-NEXT:   (local.tee $1
  ;; CHECK-NEXT:    (local.get $0)
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT:  (unreachable)
  ;; CHECK-NEXT: )
  (func $cast-to-sub-null-exact-to-non-null-exact (param (ref null (exact $super))) (result (ref (exact $sub)))
    (local anyref)
    (ref.cast (ref (exact $sub))
      (local.tee 1
        (local.get 0)
      )
    )
  )

  ;; CHECK:      (func $cast-to-sub-null-inexact-to-null-exact (type $29) (param $0 (ref null $super)) (result (ref null (exact $sub)))
  ;; CHECK-NEXT:  (local $1 anyref)
  ;; CHECK-NEXT:  (ref.cast (ref null (exact $sub))
  ;; CHECK-NEXT:   (local.tee $1
  ;; CHECK-NEXT:    (local.get $0)
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT: )
  (func $cast-to-sub-null-inexact-to-null-exact (param (ref null $super)) (result (ref null (exact $sub)))
    (local anyref)
    (ref.cast (ref null (exact $sub))
      (local.tee 1
        (local.get 0)
      )
    )
  )

  ;; CHECK:      (func $cast-to-sub-null-inexact-to-non-null-exact (type $30) (param $0 (ref null $super)) (result (ref (exact $sub)))
  ;; CHECK-NEXT:  (local $1 anyref)
  ;; CHECK-NEXT:  (ref.cast (ref (exact $sub))
  ;; CHECK-NEXT:   (local.tee $1
  ;; CHECK-NEXT:    (local.get $0)
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT: )
  (func $cast-to-sub-null-inexact-to-non-null-exact (param (ref null $super)) (result (ref (exact $sub)))
    (local anyref)
    (ref.cast (ref (exact $sub))
      (local.tee 1
        (local.get 0)
      )
    )
  )

  ;; CHECK:      (func $cast-to-sub-non-null-exact-to-null-exact (type $31) (param $0 (ref (exact $super))) (result (ref null (exact $sub)))
  ;; CHECK-NEXT:  (local $1 anyref)
  ;; CHECK-NEXT:  (drop
  ;; CHECK-NEXT:   (local.tee $1
  ;; CHECK-NEXT:    (local.get $0)
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT:  (unreachable)
  ;; CHECK-NEXT: )
  (func $cast-to-sub-non-null-exact-to-null-exact (param (ref (exact $super))) (result (ref null (exact $sub)))
    (local anyref)
    (ref.cast (ref null (exact $sub))
      (local.tee 1
        (local.get 0)
      )
    )
  )

  ;; CHECK:      (func $cast-to-sub-non-null-exact-to-non-null-exact (type $32) (param $0 (ref (exact $super))) (result (ref (exact $sub)))
  ;; CHECK-NEXT:  (local $1 anyref)
  ;; CHECK-NEXT:  (drop
  ;; CHECK-NEXT:   (local.tee $1
  ;; CHECK-NEXT:    (local.get $0)
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT:  (unreachable)
  ;; CHECK-NEXT: )
  (func $cast-to-sub-non-null-exact-to-non-null-exact (param (ref (exact $super))) (result (ref (exact $sub)))
    (local anyref)
    (ref.cast (ref (exact $sub))
      (local.tee 1
        (local.get 0)
      )
    )
  )

  ;; CHECK:      (func $cast-to-sub-non-null-inexact-to-null-exact (type $33) (param $0 (ref $super)) (result (ref null (exact $sub)))
  ;; CHECK-NEXT:  (local $1 anyref)
  ;; CHECK-NEXT:  (ref.cast (ref (exact $sub))
  ;; CHECK-NEXT:   (local.tee $1
  ;; CHECK-NEXT:    (local.get $0)
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT: )
  (func $cast-to-sub-non-null-inexact-to-null-exact (param (ref $super)) (result (ref null (exact $sub)))
    (local anyref)
    (ref.cast (ref null (exact $sub))
      (local.tee 1
        (local.get 0)
      )
    )
  )

  ;; CHECK:      (func $cast-to-sub-non-null-inexact-to-non-null-exact (type $34) (param $0 (ref $super)) (result (ref (exact $sub)))
  ;; CHECK-NEXT:  (local $1 anyref)
  ;; CHECK-NEXT:  (ref.cast (ref (exact $sub))
  ;; CHECK-NEXT:   (local.tee $1
  ;; CHECK-NEXT:    (local.get $0)
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT: )
  (func $cast-to-sub-non-null-inexact-to-non-null-exact (param (ref $super)) (result (ref (exact $sub)))
    (local anyref)
    (ref.cast (ref (exact $sub))
      (local.tee 1
        (local.get 0)
      )
    )
  )

  ;; CHECK:      (func $cast-to-sibling-null-exact-to-null-exact (type $35) (param $0 (ref null (exact $sub-final))) (result (ref null (exact $sub)))
  ;; CHECK-NEXT:  (local $1 anyref)
  ;; CHECK-NEXT:  (ref.cast nullref
  ;; CHECK-NEXT:   (local.tee $1
  ;; CHECK-NEXT:    (local.get $0)
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT: )
  (func $cast-to-sibling-null-exact-to-null-exact (param (ref null (exact $sub-final))) (result (ref null (exact $sub)))
    (local anyref)
    (ref.cast (ref null (exact $sub))
      (local.tee 1
        (local.get 0)
      )
    )
  )

  ;; CHECK:      (func $cast-to-sibling-null-exact-to-non-null-exact (type $36) (param $0 (ref null (exact $sub-final))) (result (ref (exact $sub)))
  ;; CHECK-NEXT:  (local $1 anyref)
  ;; CHECK-NEXT:  (drop
  ;; CHECK-NEXT:   (local.tee $1
  ;; CHECK-NEXT:    (local.get $0)
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT:  (unreachable)
  ;; CHECK-NEXT: )
  (func $cast-to-sibling-null-exact-to-non-null-exact (param (ref null (exact $sub-final))) (result (ref (exact $sub)))
    (local anyref)
    (ref.cast (ref (exact $sub))
      (local.tee 1
        (local.get 0)
      )
    )
  )

  ;; CHECK:      (func $cast-to-sibling-null-inexact-to-null-exact (type $37) (param $0 (ref null $sub-final)) (result (ref null (exact $sub)))
  ;; CHECK-NEXT:  (local $1 anyref)
  ;; CHECK-NEXT:  (ref.cast nullref
  ;; CHECK-NEXT:   (local.tee $1
  ;; CHECK-NEXT:    (local.get $0)
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT: )
  (func $cast-to-sibling-null-inexact-to-null-exact (param (ref null $sub-final)) (result (ref null (exact $sub)))
    (local anyref)
    (ref.cast (ref null (exact $sub))
      (local.tee 1
        (local.get 0)
      )
    )
  )

  ;; CHECK:      (func $cast-to-sibling-null-inexact-to-non-null-exact (type $38) (param $0 (ref null $sub-final)) (result (ref (exact $sub)))
  ;; CHECK-NEXT:  (local $1 anyref)
  ;; CHECK-NEXT:  (drop
  ;; CHECK-NEXT:   (local.tee $1
  ;; CHECK-NEXT:    (local.get $0)
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT:  (unreachable)
  ;; CHECK-NEXT: )
  (func $cast-to-sibling-null-inexact-to-non-null-exact (param (ref null $sub-final)) (result (ref (exact $sub)))
    (local anyref)
    (ref.cast (ref (exact $sub))
      (local.tee 1
        (local.get 0)
      )
    )
  )

  ;; CHECK:      (func $cast-to-sibling-non-null-exact-to-null-exact (type $39) (param $0 (ref (exact $sub-final))) (result (ref null (exact $sub)))
  ;; CHECK-NEXT:  (local $1 anyref)
  ;; CHECK-NEXT:  (drop
  ;; CHECK-NEXT:   (local.tee $1
  ;; CHECK-NEXT:    (local.get $0)
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT:  (unreachable)
  ;; CHECK-NEXT: )
  (func $cast-to-sibling-non-null-exact-to-null-exact (param (ref (exact $sub-final))) (result (ref null (exact $sub)))
    (local anyref)
    (ref.cast (ref null (exact $sub))
      (local.tee 1
        (local.get 0)
      )
    )
  )

  ;; CHECK:      (func $cast-to-sibling-non-null-exact-to-non-null-exact (type $40) (param $0 (ref (exact $sub-final))) (result (ref (exact $sub)))
  ;; CHECK-NEXT:  (local $1 anyref)
  ;; CHECK-NEXT:  (drop
  ;; CHECK-NEXT:   (local.tee $1
  ;; CHECK-NEXT:    (local.get $0)
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT:  (unreachable)
  ;; CHECK-NEXT: )
  (func $cast-to-sibling-non-null-exact-to-non-null-exact (param (ref (exact $sub-final))) (result (ref (exact $sub)))
    (local anyref)
    (ref.cast (ref (exact $sub))
      (local.tee 1
        (local.get 0)
      )
    )
  )

  ;; CHECK:      (func $cast-to-sibling-non-null-inexact-to-null-exact (type $41) (param $0 (ref $sub-final)) (result (ref null (exact $sub)))
  ;; CHECK-NEXT:  (local $1 anyref)
  ;; CHECK-NEXT:  (drop
  ;; CHECK-NEXT:   (local.tee $1
  ;; CHECK-NEXT:    (local.get $0)
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT:  (unreachable)
  ;; CHECK-NEXT: )
  (func $cast-to-sibling-non-null-inexact-to-null-exact (param (ref $sub-final)) (result (ref null (exact $sub)))
    (local anyref)
    (ref.cast (ref null (exact $sub))
      (local.tee 1
        (local.get 0)
      )
    )
  )

  ;; CHECK:      (func $cast-to-sibling-non-null-inexact-to-non-null-exact (type $42) (param $0 (ref $sub-final)) (result (ref (exact $sub)))
  ;; CHECK-NEXT:  (local $1 anyref)
  ;; CHECK-NEXT:  (drop
  ;; CHECK-NEXT:   (local.tee $1
  ;; CHECK-NEXT:    (local.get $0)
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT:  (unreachable)
  ;; CHECK-NEXT: )
  (func $cast-to-sibling-non-null-inexact-to-non-null-exact (param (ref $sub-final)) (result (ref (exact $sub)))
    (local anyref)
    (ref.cast (ref (exact $sub))
      (local.tee 1
        (local.get 0)
      )
    )
  )

  ;; CHECK:      (func $cast-from-bottom-null-inexact-to-null-exact (type $43) (param $0 nullref) (result (ref null (exact $super)))
  ;; CHECK-NEXT:  (local $1 anyref)
  ;; CHECK-NEXT:  (drop
  ;; CHECK-NEXT:   (local.tee $1
  ;; CHECK-NEXT:    (local.get $0)
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT:  (ref.null none)
  ;; CHECK-NEXT: )
  (func $cast-from-bottom-null-inexact-to-null-exact (param (ref null none)) (result (ref null (exact $super)))
    (local anyref)
    (ref.cast (ref null (exact $super))
      (local.tee 1
        (local.get 0)
      )
    )
  )

  ;; CHECK:      (func $cast-from-bottom-null-inexact-to-non-null-exact (type $44) (param $0 nullref) (result (ref (exact $super)))
  ;; CHECK-NEXT:  (local $1 anyref)
  ;; CHECK-NEXT:  (drop
  ;; CHECK-NEXT:   (local.tee $1
  ;; CHECK-NEXT:    (local.get $0)
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT:  (unreachable)
  ;; CHECK-NEXT: )
  (func $cast-from-bottom-null-inexact-to-non-null-exact (param (ref null none)) (result (ref (exact $super)))
    (local anyref)
    (ref.cast (ref (exact $super))
      (local.tee 1
        (local.get 0)
      )
    )
  )

  ;; CHECK:      (func $cast-from-bottom-non-null-inexact-to-null-exact (type $45) (param $0 (ref none)) (result (ref null (exact $super)))
  ;; CHECK-NEXT:  (local $1 anyref)
  ;; CHECK-NEXT:  (drop
  ;; CHECK-NEXT:   (local.tee $1
  ;; CHECK-NEXT:    (local.get $0)
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT:  (unreachable)
  ;; CHECK-NEXT: )
  (func $cast-from-bottom-non-null-inexact-to-null-exact (param (ref none)) (result (ref null (exact $super)))
    (local anyref)
    (ref.cast (ref null (exact $super))
      (local.tee 1
        (local.get 0)
      )
    )
  )

  ;; CHECK:      (func $cast-from-bottom-non-null-inexact-to-non-null-exact (type $46) (param $0 (ref none)) (result (ref (exact $super)))
  ;; CHECK-NEXT:  (local $1 anyref)
  ;; CHECK-NEXT:  (drop
  ;; CHECK-NEXT:   (local.tee $1
  ;; CHECK-NEXT:    (local.get $0)
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT:  (unreachable)
  ;; CHECK-NEXT: )
  (func $cast-from-bottom-non-null-inexact-to-non-null-exact (param (ref none)) (result (ref (exact $super)))
    (local anyref)
    (ref.cast (ref (exact $super))
      (local.tee 1
        (local.get 0)
      )
    )
  )
)
