;; NOTE: Assertions have been generated by update_lit_checks.py --all-items and should not be edited.

;; Reorder types with the real cost model instead of the testing cost model to
;; make sure it still respects ordering constraints, no matter what order the
;; types are found in.

;; RUN: foreach %s %t wasm-opt -all --closed-world --reorder-types -S -o - \
;; RUN:     | filecheck %s

(module
  (rec
    ;; CHECK:      (rec
    ;; CHECK-NEXT:  (type $A (sub (struct)))
    (type $A (sub (struct)))
    ;; CHECK:       (type $B (sub $A (struct)))
    (type $B (sub $A (struct)))
    ;; CHECK:       (type $2 (func))

    ;; CHECK:       (type $C (sub $B (struct)))
    (type $C (sub $B (struct)))
  )

  ;; CHECK:      (func $test (type $2)
  ;; CHECK-NEXT:  (local $0 (ref $A))
  ;; CHECK-NEXT:  (local $1 (ref $B))
  ;; CHECK-NEXT:  (local $2 (ref $C))
  ;; CHECK-NEXT: )
  (func $test
    (local (ref $A))
    (local (ref $B))
    (local (ref $C))
  )
)

(module
  (rec
    ;; CHECK:      (rec
    ;; CHECK-NEXT:  (type $A (sub (struct)))
    (type $A (sub (struct)))
    ;; CHECK:       (type $B (sub $A (struct)))
    (type $B (sub $A (struct)))
    ;; CHECK:       (type $2 (func))

    ;; CHECK:       (type $C (sub $B (struct)))
    (type $C (sub $B (struct)))
  )

  ;; CHECK:      (func $test (type $2)
  ;; CHECK-NEXT:  (local $0 (ref $A))
  ;; CHECK-NEXT:  (local $1 (ref $C))
  ;; CHECK-NEXT:  (local $2 (ref $B))
  ;; CHECK-NEXT: )
  (func $test
    (local (ref $A))
    (local (ref $C))
    (local (ref $B))
  )
)

(module
  (rec
    ;; CHECK:      (rec
    ;; CHECK-NEXT:  (type $A (sub (struct)))
    (type $A (sub (struct)))
    ;; CHECK:       (type $B (sub $A (struct)))
    (type $B (sub $A (struct)))
    ;; CHECK:       (type $2 (func))

    ;; CHECK:       (type $C (sub $B (struct)))
    (type $C (sub $B (struct)))
  )

  ;; CHECK:      (func $test (type $2)
  ;; CHECK-NEXT:  (local $0 (ref $B))
  ;; CHECK-NEXT:  (local $1 (ref $A))
  ;; CHECK-NEXT:  (local $2 (ref $C))
  ;; CHECK-NEXT: )
  (func $test
    (local (ref $B))
    (local (ref $A))
    (local (ref $C))
  )
)

(module
  (rec
    ;; CHECK:      (rec
    ;; CHECK-NEXT:  (type $A (sub (struct)))
    (type $A (sub (struct)))
    ;; CHECK:       (type $B (sub $A (struct)))
    (type $B (sub $A (struct)))
    ;; CHECK:       (type $2 (func))

    ;; CHECK:       (type $C (sub $B (struct)))
    (type $C (sub $B (struct)))
  )

  ;; CHECK:      (func $test (type $2)
  ;; CHECK-NEXT:  (local $0 (ref $B))
  ;; CHECK-NEXT:  (local $1 (ref $C))
  ;; CHECK-NEXT:  (local $2 (ref $A))
  ;; CHECK-NEXT: )
  (func $test
    (local (ref $B))
    (local (ref $C))
    (local (ref $A))
  )
)

(module
  (rec
    ;; CHECK:      (rec
    ;; CHECK-NEXT:  (type $A (sub (struct)))
    (type $A (sub (struct)))
    ;; CHECK:       (type $B (sub $A (struct)))
    (type $B (sub $A (struct)))
    ;; CHECK:       (type $2 (func))

    ;; CHECK:       (type $C (sub $B (struct)))
    (type $C (sub $B (struct)))
  )

  ;; CHECK:      (func $test (type $2)
  ;; CHECK-NEXT:  (local $0 (ref $C))
  ;; CHECK-NEXT:  (local $1 (ref $A))
  ;; CHECK-NEXT:  (local $2 (ref $B))
  ;; CHECK-NEXT: )
  (func $test
    (local (ref $C))
    (local (ref $A))
    (local (ref $B))
  )
)

(module
  (rec
    ;; CHECK:      (rec
    ;; CHECK-NEXT:  (type $A (sub (struct)))
    (type $A (sub (struct)))
    ;; CHECK:       (type $B (sub $A (struct)))
    (type $B (sub $A (struct)))
    ;; CHECK:       (type $2 (func))

    ;; CHECK:       (type $C (sub $B (struct)))
    (type $C (sub $B (struct)))
  )

  ;; CHECK:      (func $test (type $2)
  ;; CHECK-NEXT:  (local $0 (ref $C))
  ;; CHECK-NEXT:  (local $1 (ref $B))
  ;; CHECK-NEXT:  (local $2 (ref $A))
  ;; CHECK-NEXT: )
  (func $test
    (local (ref $C))
    (local (ref $B))
    (local (ref $A))
  )
)

;; Test with a chain of 128 types and one more. The other type should come
;; first.
(module
  (rec
    ;; CHECK:      (rec
    ;; CHECK-NEXT:  (type $other (struct))

    ;; CHECK:       (type $129 (func))

    ;; CHECK:       (type $1 (sub (struct)))
    (type $1 (sub (struct)))
    ;; CHECK:       (type $2 (sub $1 (struct)))
    (type $2 (sub $1 (struct)))
    ;; CHECK:       (type $3 (sub $2 (struct)))
    (type $3 (sub $2 (struct)))
    ;; CHECK:       (type $4 (sub $3 (struct)))
    (type $4 (sub $3 (struct)))
    ;; CHECK:       (type $5 (sub $4 (struct)))
    (type $5 (sub $4 (struct)))
    ;; CHECK:       (type $6 (sub $5 (struct)))
    (type $6 (sub $5 (struct)))
    ;; CHECK:       (type $7 (sub $6 (struct)))
    (type $7 (sub $6 (struct)))
    ;; CHECK:       (type $8 (sub $7 (struct)))
    (type $8 (sub $7 (struct)))
    ;; CHECK:       (type $9 (sub $8 (struct)))
    (type $9 (sub $8 (struct)))
    ;; CHECK:       (type $10 (sub $9 (struct)))
    (type $10 (sub $9 (struct)))
    ;; CHECK:       (type $11 (sub $10 (struct)))
    (type $11 (sub $10(struct)))
    ;; CHECK:       (type $12 (sub $11 (struct)))
    (type $12 (sub $11 (struct)))
    ;; CHECK:       (type $13 (sub $12 (struct)))
    (type $13 (sub $12 (struct)))
    ;; CHECK:       (type $14 (sub $13 (struct)))
    (type $14 (sub $13 (struct)))
    ;; CHECK:       (type $15 (sub $14 (struct)))
    (type $15 (sub $14 (struct)))
    ;; CHECK:       (type $16 (sub $15 (struct)))
    (type $16 (sub $15 (struct)))
    ;; CHECK:       (type $17 (sub $16 (struct)))
    (type $17 (sub $16 (struct)))
    ;; CHECK:       (type $18 (sub $17 (struct)))
    (type $18 (sub $17 (struct)))
    ;; CHECK:       (type $19 (sub $18 (struct)))
    (type $19 (sub $18 (struct)))
    ;; CHECK:       (type $20 (sub $19 (struct)))
    (type $20 (sub $19 (struct)))
    ;; CHECK:       (type $21 (sub $20 (struct)))
    (type $21 (sub $20 (struct)))
    ;; CHECK:       (type $22 (sub $21 (struct)))
    (type $22 (sub $21 (struct)))
    ;; CHECK:       (type $23 (sub $22 (struct)))
    (type $23 (sub $22 (struct)))
    ;; CHECK:       (type $24 (sub $23 (struct)))
    (type $24 (sub $23 (struct)))
    ;; CHECK:       (type $25 (sub $24 (struct)))
    (type $25 (sub $24 (struct)))
    ;; CHECK:       (type $26 (sub $25 (struct)))
    (type $26 (sub $25 (struct)))
    ;; CHECK:       (type $27 (sub $26 (struct)))
    (type $27 (sub $26 (struct)))
    ;; CHECK:       (type $28 (sub $27 (struct)))
    (type $28 (sub $27 (struct)))
    ;; CHECK:       (type $29 (sub $28 (struct)))
    (type $29 (sub $28 (struct)))
    ;; CHECK:       (type $30 (sub $29 (struct)))
    (type $30 (sub $29 (struct)))
    ;; CHECK:       (type $31 (sub $30 (struct)))
    (type $31 (sub $30 (struct)))
    ;; CHECK:       (type $32 (sub $31 (struct)))
    (type $32 (sub $31 (struct)))
    ;; CHECK:       (type $33 (sub $32 (struct)))
    (type $33 (sub $32 (struct)))
    ;; CHECK:       (type $34 (sub $33 (struct)))
    (type $34 (sub $33 (struct)))
    ;; CHECK:       (type $35 (sub $34 (struct)))
    (type $35 (sub $34 (struct)))
    ;; CHECK:       (type $36 (sub $35 (struct)))
    (type $36 (sub $35 (struct)))
    ;; CHECK:       (type $37 (sub $36 (struct)))
    (type $37 (sub $36 (struct)))
    ;; CHECK:       (type $38 (sub $37 (struct)))
    (type $38 (sub $37 (struct)))
    ;; CHECK:       (type $39 (sub $38 (struct)))
    (type $39 (sub $38 (struct)))
    ;; CHECK:       (type $40 (sub $39 (struct)))
    (type $40 (sub $39 (struct)))
    ;; CHECK:       (type $41 (sub $40 (struct)))
    (type $41 (sub $40 (struct)))
    ;; CHECK:       (type $42 (sub $41 (struct)))
    (type $42 (sub $41 (struct)))
    ;; CHECK:       (type $43 (sub $42 (struct)))
    (type $43 (sub $42 (struct)))
    ;; CHECK:       (type $44 (sub $43 (struct)))
    (type $44 (sub $43 (struct)))
    ;; CHECK:       (type $45 (sub $44 (struct)))
    (type $45 (sub $44 (struct)))
    ;; CHECK:       (type $46 (sub $45 (struct)))
    (type $46 (sub $45 (struct)))
    ;; CHECK:       (type $47 (sub $46 (struct)))
    (type $47 (sub $46 (struct)))
    ;; CHECK:       (type $48 (sub $47 (struct)))
    (type $48 (sub $47 (struct)))
    ;; CHECK:       (type $49 (sub $48 (struct)))
    (type $49 (sub $48 (struct)))
    ;; CHECK:       (type $50 (sub $49 (struct)))
    (type $50 (sub $49 (struct)))
    ;; CHECK:       (type $51 (sub $50 (struct)))
    (type $51 (sub $50 (struct)))
    ;; CHECK:       (type $52 (sub $51 (struct)))
    (type $52 (sub $51 (struct)))
    ;; CHECK:       (type $53 (sub $52 (struct)))
    (type $53 (sub $52 (struct)))
    ;; CHECK:       (type $54 (sub $53 (struct)))
    (type $54 (sub $53 (struct)))
    ;; CHECK:       (type $55 (sub $54 (struct)))
    (type $55 (sub $54 (struct)))
    ;; CHECK:       (type $56 (sub $55 (struct)))
    (type $56 (sub $55 (struct)))
    ;; CHECK:       (type $57 (sub $56 (struct)))
    (type $57 (sub $56 (struct)))
    ;; CHECK:       (type $58 (sub $57 (struct)))
    (type $58 (sub $57 (struct)))
    ;; CHECK:       (type $59 (sub $58 (struct)))
    (type $59 (sub $58 (struct)))
    ;; CHECK:       (type $60 (sub $59 (struct)))
    (type $60 (sub $59 (struct)))
    ;; CHECK:       (type $61 (sub $60 (struct)))
    (type $61 (sub $60 (struct)))
    ;; CHECK:       (type $62 (sub $61 (struct)))
    (type $62 (sub $61 (struct)))
    ;; CHECK:       (type $63 (sub $62 (struct)))
    (type $63 (sub $62 (struct)))
    ;; CHECK:       (type $64 (sub $63 (struct)))
    (type $64 (sub $63 (struct)))
    ;; CHECK:       (type $65 (sub $64 (struct)))
    (type $65 (sub $64 (struct)))
    ;; CHECK:       (type $66 (sub $65 (struct)))
    (type $66 (sub $65 (struct)))
    ;; CHECK:       (type $67 (sub $66 (struct)))
    (type $67 (sub $66 (struct)))
    ;; CHECK:       (type $68 (sub $67 (struct)))
    (type $68 (sub $67 (struct)))
    ;; CHECK:       (type $69 (sub $68 (struct)))
    (type $69 (sub $68 (struct)))
    ;; CHECK:       (type $70 (sub $69 (struct)))
    (type $70 (sub $69 (struct)))
    ;; CHECK:       (type $71 (sub $70 (struct)))
    (type $71 (sub $70 (struct)))
    ;; CHECK:       (type $72 (sub $71 (struct)))
    (type $72 (sub $71 (struct)))
    ;; CHECK:       (type $73 (sub $72 (struct)))
    (type $73 (sub $72 (struct)))
    ;; CHECK:       (type $74 (sub $73 (struct)))
    (type $74 (sub $73 (struct)))
    ;; CHECK:       (type $75 (sub $74 (struct)))
    (type $75 (sub $74 (struct)))
    ;; CHECK:       (type $76 (sub $75 (struct)))
    (type $76 (sub $75 (struct)))
    ;; CHECK:       (type $77 (sub $76 (struct)))
    (type $77 (sub $76 (struct)))
    ;; CHECK:       (type $78 (sub $77 (struct)))
    (type $78 (sub $77 (struct)))
    ;; CHECK:       (type $79 (sub $78 (struct)))
    (type $79 (sub $78 (struct)))
    ;; CHECK:       (type $80 (sub $79 (struct)))
    (type $80 (sub $79 (struct)))
    ;; CHECK:       (type $81 (sub $80 (struct)))
    (type $81 (sub $80 (struct)))
    ;; CHECK:       (type $82 (sub $81 (struct)))
    (type $82 (sub $81 (struct)))
    ;; CHECK:       (type $83 (sub $82 (struct)))
    (type $83 (sub $82 (struct)))
    ;; CHECK:       (type $84 (sub $83 (struct)))
    (type $84 (sub $83 (struct)))
    ;; CHECK:       (type $85 (sub $84 (struct)))
    (type $85 (sub $84 (struct)))
    ;; CHECK:       (type $86 (sub $85 (struct)))
    (type $86 (sub $85 (struct)))
    ;; CHECK:       (type $87 (sub $86 (struct)))
    (type $87 (sub $86 (struct)))
    ;; CHECK:       (type $88 (sub $87 (struct)))
    (type $88 (sub $87 (struct)))
    ;; CHECK:       (type $89 (sub $88 (struct)))
    (type $89 (sub $88 (struct)))
    ;; CHECK:       (type $90 (sub $89 (struct)))
    (type $90 (sub $89 (struct)))
    ;; CHECK:       (type $91 (sub $90 (struct)))
    (type $91 (sub $90 (struct)))
    ;; CHECK:       (type $92 (sub $91 (struct)))
    (type $92 (sub $91 (struct)))
    ;; CHECK:       (type $93 (sub $92 (struct)))
    (type $93 (sub $92 (struct)))
    ;; CHECK:       (type $94 (sub $93 (struct)))
    (type $94 (sub $93 (struct)))
    ;; CHECK:       (type $95 (sub $94 (struct)))
    (type $95 (sub $94 (struct)))
    ;; CHECK:       (type $96 (sub $95 (struct)))
    (type $96 (sub $95 (struct)))
    ;; CHECK:       (type $97 (sub $96 (struct)))
    (type $97 (sub $96 (struct)))
    ;; CHECK:       (type $98 (sub $97 (struct)))
    (type $98 (sub $97 (struct)))
    ;; CHECK:       (type $99 (sub $98 (struct)))
    (type $99 (sub $98 (struct)))
    ;; CHECK:       (type $100 (sub $99 (struct)))
    (type $100 (sub $99 (struct)))
    ;; CHECK:       (type $101 (sub $100 (struct)))
    (type $101 (sub $100 (struct)))
    ;; CHECK:       (type $102 (sub $101 (struct)))
    (type $102 (sub $101 (struct)))
    ;; CHECK:       (type $103 (sub $102 (struct)))
    (type $103 (sub $102 (struct)))
    ;; CHECK:       (type $104 (sub $103 (struct)))
    (type $104 (sub $103 (struct)))
    ;; CHECK:       (type $105 (sub $104 (struct)))
    (type $105 (sub $104 (struct)))
    ;; CHECK:       (type $106 (sub $105 (struct)))
    (type $106 (sub $105 (struct)))
    ;; CHECK:       (type $107 (sub $106 (struct)))
    (type $107 (sub $106 (struct)))
    ;; CHECK:       (type $108 (sub $107 (struct)))
    (type $108 (sub $107 (struct)))
    ;; CHECK:       (type $109 (sub $108 (struct)))
    (type $109 (sub $108 (struct)))
    ;; CHECK:       (type $110 (sub $109 (struct)))
    (type $110 (sub $109 (struct)))
    ;; CHECK:       (type $111 (sub $110 (struct)))
    (type $111 (sub $110 (struct)))
    ;; CHECK:       (type $112 (sub $111 (struct)))
    (type $112 (sub $111 (struct)))
    ;; CHECK:       (type $113 (sub $112 (struct)))
    (type $113 (sub $112 (struct)))
    ;; CHECK:       (type $114 (sub $113 (struct)))
    (type $114 (sub $113 (struct)))
    ;; CHECK:       (type $115 (sub $114 (struct)))
    (type $115 (sub $114 (struct)))
    ;; CHECK:       (type $116 (sub $115 (struct)))
    (type $116 (sub $115 (struct)))
    ;; CHECK:       (type $117 (sub $116 (struct)))
    (type $117 (sub $116 (struct)))
    ;; CHECK:       (type $118 (sub $117 (struct)))
    (type $118 (sub $117 (struct)))
    ;; CHECK:       (type $119 (sub $118 (struct)))
    (type $119 (sub $118 (struct)))
    ;; CHECK:       (type $120 (sub $119 (struct)))
    (type $120 (sub $119 (struct)))
    ;; CHECK:       (type $121 (sub $120 (struct)))
    (type $121 (sub $120 (struct)))
    ;; CHECK:       (type $122 (sub $121 (struct)))
    (type $122 (sub $121 (struct)))
    ;; CHECK:       (type $123 (sub $122 (struct)))
    (type $123 (sub $122 (struct)))
    ;; CHECK:       (type $124 (sub $123 (struct)))
    (type $124 (sub $123 (struct)))
    ;; CHECK:       (type $125 (sub $124 (struct)))
    (type $125 (sub $124 (struct)))
    ;; CHECK:       (type $126 (sub $125 (struct)))
    (type $126 (sub $125 (struct)))
    ;; CHECK:       (type $127 (sub $126 (struct)))
    (type $127 (sub $126 (struct)))
    ;; CHECK:       (type $128 (sub $127 (struct)))
    (type $128 (sub $127 (struct)))
    (type $other (struct))
  )

  ;; CHECK:      (func $test (type $129)
  ;; CHECK-NEXT:  (local $0 (ref $128))
  ;; CHECK-NEXT:  (local $1 (ref $other))
  ;; CHECK-NEXT:  (local $2 (ref $other))
  ;; CHECK-NEXT:  (local $3 (ref $other))
  ;; CHECK-NEXT: )
  (func $test
     (local (ref $128))
     (local (ref $other))
     (local (ref $other))
     (local (ref $other))
  )
)

;; Same, but now the other type should come last.
(module
  (rec
    ;; CHECK:      (rec
    ;; CHECK-NEXT:  (type $1 (sub (struct)))
    (type $1 (sub (struct)))
    ;; CHECK:       (type $2 (sub $1 (struct)))
    (type $2 (sub $1 (struct)))
    ;; CHECK:       (type $3 (sub $2 (struct)))
    (type $3 (sub $2 (struct)))
    ;; CHECK:       (type $4 (sub $3 (struct)))
    (type $4 (sub $3 (struct)))
    ;; CHECK:       (type $5 (sub $4 (struct)))
    (type $5 (sub $4 (struct)))
    ;; CHECK:       (type $6 (sub $5 (struct)))
    (type $6 (sub $5 (struct)))
    ;; CHECK:       (type $7 (sub $6 (struct)))
    (type $7 (sub $6 (struct)))
    ;; CHECK:       (type $8 (sub $7 (struct)))
    (type $8 (sub $7 (struct)))
    ;; CHECK:       (type $9 (sub $8 (struct)))
    (type $9 (sub $8 (struct)))
    ;; CHECK:       (type $10 (sub $9 (struct)))
    (type $10 (sub $9 (struct)))
    ;; CHECK:       (type $11 (sub $10 (struct)))
    (type $11 (sub $10(struct)))
    ;; CHECK:       (type $12 (sub $11 (struct)))
    (type $12 (sub $11 (struct)))
    ;; CHECK:       (type $13 (sub $12 (struct)))
    (type $13 (sub $12 (struct)))
    ;; CHECK:       (type $14 (sub $13 (struct)))
    (type $14 (sub $13 (struct)))
    ;; CHECK:       (type $15 (sub $14 (struct)))
    (type $15 (sub $14 (struct)))
    ;; CHECK:       (type $16 (sub $15 (struct)))
    (type $16 (sub $15 (struct)))
    ;; CHECK:       (type $17 (sub $16 (struct)))
    (type $17 (sub $16 (struct)))
    ;; CHECK:       (type $18 (sub $17 (struct)))
    (type $18 (sub $17 (struct)))
    ;; CHECK:       (type $19 (sub $18 (struct)))
    (type $19 (sub $18 (struct)))
    ;; CHECK:       (type $20 (sub $19 (struct)))
    (type $20 (sub $19 (struct)))
    ;; CHECK:       (type $21 (sub $20 (struct)))
    (type $21 (sub $20 (struct)))
    ;; CHECK:       (type $22 (sub $21 (struct)))
    (type $22 (sub $21 (struct)))
    ;; CHECK:       (type $23 (sub $22 (struct)))
    (type $23 (sub $22 (struct)))
    ;; CHECK:       (type $24 (sub $23 (struct)))
    (type $24 (sub $23 (struct)))
    ;; CHECK:       (type $25 (sub $24 (struct)))
    (type $25 (sub $24 (struct)))
    ;; CHECK:       (type $26 (sub $25 (struct)))
    (type $26 (sub $25 (struct)))
    ;; CHECK:       (type $27 (sub $26 (struct)))
    (type $27 (sub $26 (struct)))
    ;; CHECK:       (type $28 (sub $27 (struct)))
    (type $28 (sub $27 (struct)))
    ;; CHECK:       (type $29 (sub $28 (struct)))
    (type $29 (sub $28 (struct)))
    ;; CHECK:       (type $30 (sub $29 (struct)))
    (type $30 (sub $29 (struct)))
    ;; CHECK:       (type $31 (sub $30 (struct)))
    (type $31 (sub $30 (struct)))
    ;; CHECK:       (type $32 (sub $31 (struct)))
    (type $32 (sub $31 (struct)))
    ;; CHECK:       (type $33 (sub $32 (struct)))
    (type $33 (sub $32 (struct)))
    ;; CHECK:       (type $34 (sub $33 (struct)))
    (type $34 (sub $33 (struct)))
    ;; CHECK:       (type $35 (sub $34 (struct)))
    (type $35 (sub $34 (struct)))
    ;; CHECK:       (type $36 (sub $35 (struct)))
    (type $36 (sub $35 (struct)))
    ;; CHECK:       (type $37 (sub $36 (struct)))
    (type $37 (sub $36 (struct)))
    ;; CHECK:       (type $38 (sub $37 (struct)))
    (type $38 (sub $37 (struct)))
    ;; CHECK:       (type $39 (sub $38 (struct)))
    (type $39 (sub $38 (struct)))
    ;; CHECK:       (type $40 (sub $39 (struct)))
    (type $40 (sub $39 (struct)))
    ;; CHECK:       (type $41 (sub $40 (struct)))
    (type $41 (sub $40 (struct)))
    ;; CHECK:       (type $42 (sub $41 (struct)))
    (type $42 (sub $41 (struct)))
    ;; CHECK:       (type $43 (sub $42 (struct)))
    (type $43 (sub $42 (struct)))
    ;; CHECK:       (type $44 (sub $43 (struct)))
    (type $44 (sub $43 (struct)))
    ;; CHECK:       (type $45 (sub $44 (struct)))
    (type $45 (sub $44 (struct)))
    ;; CHECK:       (type $46 (sub $45 (struct)))
    (type $46 (sub $45 (struct)))
    ;; CHECK:       (type $47 (sub $46 (struct)))
    (type $47 (sub $46 (struct)))
    ;; CHECK:       (type $48 (sub $47 (struct)))
    (type $48 (sub $47 (struct)))
    ;; CHECK:       (type $49 (sub $48 (struct)))
    (type $49 (sub $48 (struct)))
    ;; CHECK:       (type $50 (sub $49 (struct)))
    (type $50 (sub $49 (struct)))
    ;; CHECK:       (type $51 (sub $50 (struct)))
    (type $51 (sub $50 (struct)))
    ;; CHECK:       (type $52 (sub $51 (struct)))
    (type $52 (sub $51 (struct)))
    ;; CHECK:       (type $53 (sub $52 (struct)))
    (type $53 (sub $52 (struct)))
    ;; CHECK:       (type $54 (sub $53 (struct)))
    (type $54 (sub $53 (struct)))
    ;; CHECK:       (type $55 (sub $54 (struct)))
    (type $55 (sub $54 (struct)))
    ;; CHECK:       (type $56 (sub $55 (struct)))
    (type $56 (sub $55 (struct)))
    ;; CHECK:       (type $57 (sub $56 (struct)))
    (type $57 (sub $56 (struct)))
    ;; CHECK:       (type $58 (sub $57 (struct)))
    (type $58 (sub $57 (struct)))
    ;; CHECK:       (type $59 (sub $58 (struct)))
    (type $59 (sub $58 (struct)))
    ;; CHECK:       (type $60 (sub $59 (struct)))
    (type $60 (sub $59 (struct)))
    ;; CHECK:       (type $61 (sub $60 (struct)))
    (type $61 (sub $60 (struct)))
    ;; CHECK:       (type $62 (sub $61 (struct)))
    (type $62 (sub $61 (struct)))
    ;; CHECK:       (type $63 (sub $62 (struct)))
    (type $63 (sub $62 (struct)))
    ;; CHECK:       (type $64 (sub $63 (struct)))
    (type $64 (sub $63 (struct)))
    ;; CHECK:       (type $65 (sub $64 (struct)))
    (type $65 (sub $64 (struct)))
    ;; CHECK:       (type $66 (sub $65 (struct)))
    (type $66 (sub $65 (struct)))
    ;; CHECK:       (type $67 (sub $66 (struct)))
    (type $67 (sub $66 (struct)))
    ;; CHECK:       (type $68 (sub $67 (struct)))
    (type $68 (sub $67 (struct)))
    ;; CHECK:       (type $69 (sub $68 (struct)))
    (type $69 (sub $68 (struct)))
    ;; CHECK:       (type $70 (sub $69 (struct)))
    (type $70 (sub $69 (struct)))
    ;; CHECK:       (type $71 (sub $70 (struct)))
    (type $71 (sub $70 (struct)))
    ;; CHECK:       (type $72 (sub $71 (struct)))
    (type $72 (sub $71 (struct)))
    ;; CHECK:       (type $73 (sub $72 (struct)))
    (type $73 (sub $72 (struct)))
    ;; CHECK:       (type $74 (sub $73 (struct)))
    (type $74 (sub $73 (struct)))
    ;; CHECK:       (type $75 (sub $74 (struct)))
    (type $75 (sub $74 (struct)))
    ;; CHECK:       (type $76 (sub $75 (struct)))
    (type $76 (sub $75 (struct)))
    ;; CHECK:       (type $77 (sub $76 (struct)))
    (type $77 (sub $76 (struct)))
    ;; CHECK:       (type $78 (sub $77 (struct)))
    (type $78 (sub $77 (struct)))
    ;; CHECK:       (type $79 (sub $78 (struct)))
    (type $79 (sub $78 (struct)))
    ;; CHECK:       (type $80 (sub $79 (struct)))
    (type $80 (sub $79 (struct)))
    ;; CHECK:       (type $81 (sub $80 (struct)))
    (type $81 (sub $80 (struct)))
    ;; CHECK:       (type $82 (sub $81 (struct)))
    (type $82 (sub $81 (struct)))
    ;; CHECK:       (type $83 (sub $82 (struct)))
    (type $83 (sub $82 (struct)))
    ;; CHECK:       (type $84 (sub $83 (struct)))
    (type $84 (sub $83 (struct)))
    ;; CHECK:       (type $85 (sub $84 (struct)))
    (type $85 (sub $84 (struct)))
    ;; CHECK:       (type $86 (sub $85 (struct)))
    (type $86 (sub $85 (struct)))
    ;; CHECK:       (type $87 (sub $86 (struct)))
    (type $87 (sub $86 (struct)))
    ;; CHECK:       (type $88 (sub $87 (struct)))
    (type $88 (sub $87 (struct)))
    ;; CHECK:       (type $89 (sub $88 (struct)))
    (type $89 (sub $88 (struct)))
    ;; CHECK:       (type $90 (sub $89 (struct)))
    (type $90 (sub $89 (struct)))
    ;; CHECK:       (type $91 (sub $90 (struct)))
    (type $91 (sub $90 (struct)))
    ;; CHECK:       (type $92 (sub $91 (struct)))
    (type $92 (sub $91 (struct)))
    ;; CHECK:       (type $93 (sub $92 (struct)))
    (type $93 (sub $92 (struct)))
    ;; CHECK:       (type $94 (sub $93 (struct)))
    (type $94 (sub $93 (struct)))
    ;; CHECK:       (type $95 (sub $94 (struct)))
    (type $95 (sub $94 (struct)))
    ;; CHECK:       (type $96 (sub $95 (struct)))
    (type $96 (sub $95 (struct)))
    ;; CHECK:       (type $97 (sub $96 (struct)))
    (type $97 (sub $96 (struct)))
    ;; CHECK:       (type $98 (sub $97 (struct)))
    (type $98 (sub $97 (struct)))
    ;; CHECK:       (type $99 (sub $98 (struct)))
    (type $99 (sub $98 (struct)))
    ;; CHECK:       (type $100 (sub $99 (struct)))
    (type $100 (sub $99 (struct)))
    ;; CHECK:       (type $101 (sub $100 (struct)))
    (type $101 (sub $100 (struct)))
    ;; CHECK:       (type $102 (sub $101 (struct)))
    (type $102 (sub $101 (struct)))
    ;; CHECK:       (type $103 (sub $102 (struct)))
    (type $103 (sub $102 (struct)))
    ;; CHECK:       (type $104 (sub $103 (struct)))
    (type $104 (sub $103 (struct)))
    ;; CHECK:       (type $105 (sub $104 (struct)))
    (type $105 (sub $104 (struct)))
    ;; CHECK:       (type $106 (sub $105 (struct)))
    (type $106 (sub $105 (struct)))
    ;; CHECK:       (type $107 (sub $106 (struct)))
    (type $107 (sub $106 (struct)))
    ;; CHECK:       (type $108 (sub $107 (struct)))
    (type $108 (sub $107 (struct)))
    ;; CHECK:       (type $109 (sub $108 (struct)))
    (type $109 (sub $108 (struct)))
    ;; CHECK:       (type $110 (sub $109 (struct)))
    (type $110 (sub $109 (struct)))
    ;; CHECK:       (type $111 (sub $110 (struct)))
    (type $111 (sub $110 (struct)))
    ;; CHECK:       (type $112 (sub $111 (struct)))
    (type $112 (sub $111 (struct)))
    ;; CHECK:       (type $113 (sub $112 (struct)))
    (type $113 (sub $112 (struct)))
    ;; CHECK:       (type $114 (sub $113 (struct)))
    (type $114 (sub $113 (struct)))
    ;; CHECK:       (type $115 (sub $114 (struct)))
    (type $115 (sub $114 (struct)))
    ;; CHECK:       (type $116 (sub $115 (struct)))
    (type $116 (sub $115 (struct)))
    ;; CHECK:       (type $117 (sub $116 (struct)))
    (type $117 (sub $116 (struct)))
    ;; CHECK:       (type $118 (sub $117 (struct)))
    (type $118 (sub $117 (struct)))
    ;; CHECK:       (type $119 (sub $118 (struct)))
    (type $119 (sub $118 (struct)))
    ;; CHECK:       (type $120 (sub $119 (struct)))
    (type $120 (sub $119 (struct)))
    ;; CHECK:       (type $121 (sub $120 (struct)))
    (type $121 (sub $120 (struct)))
    ;; CHECK:       (type $122 (sub $121 (struct)))
    (type $122 (sub $121 (struct)))
    ;; CHECK:       (type $123 (sub $122 (struct)))
    (type $123 (sub $122 (struct)))
    ;; CHECK:       (type $124 (sub $123 (struct)))
    (type $124 (sub $123 (struct)))
    ;; CHECK:       (type $125 (sub $124 (struct)))
    (type $125 (sub $124 (struct)))
    ;; CHECK:       (type $126 (sub $125 (struct)))
    (type $126 (sub $125 (struct)))
    ;; CHECK:       (type $127 (sub $126 (struct)))
    (type $127 (sub $126 (struct)))
    ;; CHECK:       (type $128 (sub $127 (struct)))
    (type $128 (sub $127 (struct)))
    ;; CHECK:       (type $129 (func))

    ;; CHECK:       (type $other (struct))
    (type $other (struct))
  )

  ;; CHECK:      (func $test (type $129)
  ;; CHECK-NEXT:  (local $0 (ref $128))
  ;; CHECK-NEXT:  (local $1 (ref $128))
  ;; CHECK-NEXT:  (local $2 (ref $other))
  ;; CHECK-NEXT: )
  (func $test
     (local (ref $128))
     (local (ref $128))
     (local (ref $other))
  )
)
