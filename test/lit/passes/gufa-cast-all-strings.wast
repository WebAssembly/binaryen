;; NOTE: Assertions have been generated by update_lit_checks.py --all-items and should not be edited.

;; RUN: foreach %s %t wasm-opt -all --gufa-cast-all -S -o - | filecheck %s

(module
  ;; CHECK:      (type $0 (func (param stringref stringview_wtf8 stringview_wtf16 stringview_iter)))

  ;; CHECK:      (export "strings-caller" (func $strings-caller))

  ;; CHECK:      (func $strings-target (type $0) (param $a stringref) (param $b stringview_wtf8) (param $c stringview_wtf16) (param $d stringview_iter)
  ;; CHECK-NEXT:  (drop
  ;; CHECK-NEXT:   (ref.as_non_null
  ;; CHECK-NEXT:    (local.get $a)
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT:  (drop
  ;; CHECK-NEXT:   (ref.as_non_null
  ;; CHECK-NEXT:    (local.get $b)
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT:  (drop
  ;; CHECK-NEXT:   (ref.as_non_null
  ;; CHECK-NEXT:    (local.get $c)
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT:  (drop
  ;; CHECK-NEXT:   (ref.as_non_null
  ;; CHECK-NEXT:    (local.get $d)
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT: )
  (func $strings-target
    (param $a (ref null string))
    (param $b (ref null stringview_wtf8))
    (param $c (ref null stringview_wtf16))
    (param $d (ref null stringview_iter))
    ;; These params are only called with non-null values, so we can cast them
    ;; to non-null. We must not use ref.cast for that, which is disallowed on
    ;; strings and views.
    (drop
      (local.get $a)
    )
    (drop
      (local.get $b)
    )
    (drop
      (local.get $c)
    )
    (drop
      (local.get $d)
    )
  )

  ;; CHECK:      (func $strings-caller (type $0) (param $a stringref) (param $b stringview_wtf8) (param $c stringview_wtf16) (param $d stringview_iter)
  ;; CHECK-NEXT:  (call $strings-target
  ;; CHECK-NEXT:   (ref.as_non_null
  ;; CHECK-NEXT:    (local.get $a)
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:   (ref.as_non_null
  ;; CHECK-NEXT:    (local.get $b)
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:   (ref.as_non_null
  ;; CHECK-NEXT:    (local.get $c)
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:   (ref.as_non_null
  ;; CHECK-NEXT:    (local.get $d)
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT: )
  (func $strings-caller (export "strings-caller")
    (param $a (ref null string))
    (param $b (ref null stringview_wtf8))
    (param $c (ref null stringview_wtf16))
    (param $d (ref null stringview_iter))
    (call $strings-target
      (ref.as_non_null
        (local.get $a)
      )
      (ref.as_non_null
        (local.get $b)
      )
      (ref.as_non_null
        (local.get $c)
      )
      (ref.as_non_null
        (local.get $d)
      )
    )
  )
)
