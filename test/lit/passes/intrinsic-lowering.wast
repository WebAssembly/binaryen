;; NOTE: Assertions have been generated by update_lit_checks.py and should not be edited.
;; RUN: wasm-opt %s --intrinsic-lowering -all -S -o - | filecheck %s

(module
  ;; The actual intrinsic, properly defined.
  ;; CHECK:      (import "binaryen-intrinsics" "consumer.used" (func $used (result i32)))
  (import "binaryen-intrinsics" "consumer.used" (func $used (result i32)))

  ;; Wrong result.
  ;; CHECK:      (import "binaryen-intrinsics" "consumer.used" (func $not-used-1 (result f64)))
  (import "binaryen-intrinsics" "consumer.used" (func $not-used-1 (result f64)))

  ;; Wrong params.
  ;; CHECK:      (import "binaryen-intrinsics" "consumer.used" (func $not-used-2 (param i32) (result i32)))
  (import "binaryen-intrinsics" "consumer.used" (func $not-used-2 (param i32) (result i32)))

  ;; Wrong module name.
  ;; CHECK:      (import "binaryen-intrinsics_" "consumer.used" (func $not-used-3 (result i32)))
  (import "binaryen-intrinsics_" "consumer.used" (func $not-used-3 (result i32)))

  ;; Wrong base name.
  ;; CHECK:      (import "binaryen-intrinsics" "consumer.used_" (func $not-used-4 (result i32)))
  (import "binaryen-intrinsics" "consumer.used_" (func $not-used-4 (result i32)))

  ;; CHECK:      (func $test
  ;; CHECK-NEXT:  (drop
  ;; CHECK-NEXT:   (i32.const 1)
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT:  (drop
  ;; CHECK-NEXT:   (call $not-used-1)
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT:  (drop
  ;; CHECK-NEXT:   (call $not-used-2
  ;; CHECK-NEXT:    (i32.const 1)
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT:  (drop
  ;; CHECK-NEXT:   (call $not-used-3)
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT:  (drop
  ;; CHECK-NEXT:   (call $not-used-4)
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT: )
  (func $test
    (drop (call $used))
    (drop (call $not-used-1))
    (drop (call $not-used-2 (i32.const 1)))
    (drop (call $not-used-3))
    (drop (call $not-used-4))
  )
)
