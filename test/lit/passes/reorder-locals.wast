;; NOTE: Assertions have been generated by update_lit_checks.py --all-items and should not be edited.
;; NOTE: This test was ported using port_test.py and could be cleaned up.

;; RUN: foreach %s %t wasm-opt --reorder-locals -S -o - | filecheck %s

(module
  (memory 256 256)
  ;; CHECK:      (type $1 (func))

  ;; CHECK:      (type $0 (func (param i32 i32)))
  (type $0 (func (param i32 i32)))
  (type $1 (func))
  ;; CHECK:      (memory $0 256 256)

  ;; CHECK:      (func $b0-yes (param $a i32) (param $b i32)
  ;; CHECK-NEXT:  (local $z i32)
  ;; CHECK-NEXT:  (local $y i32)
  ;; CHECK-NEXT:  (local $x i32)
  ;; CHECK-NEXT:  (local.set $x
  ;; CHECK-NEXT:   (local.get $x)
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT:  (local.set $y
  ;; CHECK-NEXT:   (local.get $y)
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT:  (local.set $y
  ;; CHECK-NEXT:   (local.get $y)
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT:  (local.set $z
  ;; CHECK-NEXT:   (local.get $z)
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT:  (local.set $z
  ;; CHECK-NEXT:   (local.get $z)
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT:  (local.set $z
  ;; CHECK-NEXT:   (local.get $z)
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT:  (local.set $b
  ;; CHECK-NEXT:   (local.get $b)
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT:  (local.set $b
  ;; CHECK-NEXT:   (local.get $b)
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT:  (local.set $b
  ;; CHECK-NEXT:   (local.get $b)
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT:  (local.set $b
  ;; CHECK-NEXT:   (local.get $b)
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT:  (local.set $b
  ;; CHECK-NEXT:   (local.get $b)
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT:  (local.set $b
  ;; CHECK-NEXT:   (local.get $b)
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT: )
  (func $b0-yes (type $0) (param $a i32) (param $b i32)
    (local $x i32)
    (local $y i32)
    (local $z i32)
    (local.set $x
      (local.get $x)
    )
    (local.set $y
      (local.get $y)
    )
    (local.set $y
      (local.get $y)
    )
    (local.set $z
      (local.get $z)
    )
    (local.set $z
      (local.get $z)
    )
    (local.set $z
      (local.get $z)
    )
    (local.set $b
      (local.get $b)
    )
    (local.set $b
      (local.get $b)
    )
    (local.set $b
      (local.get $b)
    )
    (local.set $b
      (local.get $b)
    )
    (local.set $b
      (local.get $b)
    )
    (local.set $b
      (local.get $b)
    )
  )
  ;; CHECK:      (func $zero
  ;; CHECK-NEXT:  (local $b i32)
  ;; CHECK-NEXT:  (drop
  ;; CHECK-NEXT:   (local.get $b)
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT: )
  (func $zero (type $1)
    (local $a i32)
    (local $b i32)
    (local $c i32)
    (drop
      (local.get $b)
    )
  )
  ;; CHECK:      (func $null
  ;; CHECK-NEXT:  (nop)
  ;; CHECK-NEXT: )
  (func $null (type $1)
    (local $a i32)
    (local $c i32)
    (nop)
  )
)
