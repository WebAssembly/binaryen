;; NOTE: Assertions have been generated by update_lit_checks.py --all-items and should not be edited.
;; NOTE: This test was ported using port_passes_tests_to_lit.py and could be cleaned up.

;; RUN: foreach %s %t wasm-opt --enable-exception-handling --asyncify --pass-arg=asyncify-asserts --pass-arg=asyncify-onlylist@level0,level1 -S -o - | filecheck %s

(module
  ;; CHECK:      (type $0 (func))

  ;; CHECK:      (type $1 (func (param i32)))

  ;; CHECK:      (type $2 (func (result i32)))

  ;; CHECK:      (import "extmod" "exttag" (tag $default (type $1) (param i32)))
  (import "extmod" "exttag" (tag $default (param i32)))
  ;; CHECK:      (import "extmod" "exttag" (tag $ret (type $1) (param i32)))
  (import "extmod" "exttag" (tag $ret (param i32)))
  ;; CHECK:      (import "extmod" "exttag" (tag $brif (type $1) (param i32)))
  (import "extmod" "exttag" (tag $brif (param i32)))

  (memory 1 2)

  ;; CHECK:      (global $__asyncify_state (mut i32) (i32.const 0))

  ;; CHECK:      (global $__asyncify_catch_counter (mut i32) (i32.const 0))

  ;; CHECK:      (global $__asyncify_data (mut i32) (i32.const 0))

  ;; CHECK:      (memory $0 1 2)

  ;; CHECK:      (export "asyncify_start_unwind" (func $asyncify_start_unwind))

  ;; CHECK:      (export "asyncify_stop_unwind" (func $asyncify_stop_unwind))

  ;; CHECK:      (export "asyncify_start_rewind" (func $asyncify_start_rewind))

  ;; CHECK:      (export "asyncify_stop_rewind" (func $asyncify_stop_rewind))

  ;; CHECK:      (export "asyncify_get_state" (func $asyncify_get_state))

  ;; CHECK:      (export "asyncify_get_catch_counter" (func $asyncify_get_catch_counter))

  ;; CHECK:      (func $level0
  ;; CHECK-NEXT:  (local $0 i32)
  ;; CHECK-NEXT:  (local $1 i32)
  ;; CHECK-NEXT:  (local $2 i32)
  ;; CHECK-NEXT:  (local $3 i32)
  ;; CHECK-NEXT:  (local $4 i32)
  ;; CHECK-NEXT:  (local $5 i32)
  ;; CHECK-NEXT:  (local $6 i32)
  ;; CHECK-NEXT:  (local $7 i32)
  ;; CHECK-NEXT:  (local $8 i32)
  ;; CHECK-NEXT:  (local $9 i32)
  ;; CHECK-NEXT:  (local $10 i32)
  ;; CHECK-NEXT:  (local $11 i32)
  ;; CHECK-NEXT:  (local $12 i32)
  ;; CHECK-NEXT:  (local $13 i32)
  ;; CHECK-NEXT:  (local $14 i32)
  ;; CHECK-NEXT:  (local $15 i32)
  ;; CHECK-NEXT:  (local $16 i32)
  ;; CHECK-NEXT:  (if
  ;; CHECK-NEXT:   (i32.eq
  ;; CHECK-NEXT:    (global.get $__asyncify_state)
  ;; CHECK-NEXT:    (i32.const 2)
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:   (then
  ;; CHECK-NEXT:    (nop)
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT:  (local.tee $15
  ;; CHECK-NEXT:   (block $__asyncify_unwind
  ;; CHECK-NEXT:    (block
  ;; CHECK-NEXT:     (block
  ;; CHECK-NEXT:      (if
  ;; CHECK-NEXT:       (i32.eq
  ;; CHECK-NEXT:        (global.get $__asyncify_state)
  ;; CHECK-NEXT:        (i32.const 2)
  ;; CHECK-NEXT:       )
  ;; CHECK-NEXT:       (then
  ;; CHECK-NEXT:        (i32.store
  ;; CHECK-NEXT:         (global.get $__asyncify_data)
  ;; CHECK-NEXT:         (i32.add
  ;; CHECK-NEXT:          (i32.load
  ;; CHECK-NEXT:           (global.get $__asyncify_data)
  ;; CHECK-NEXT:          )
  ;; CHECK-NEXT:          (i32.const -4)
  ;; CHECK-NEXT:         )
  ;; CHECK-NEXT:        )
  ;; CHECK-NEXT:        (local.set $16
  ;; CHECK-NEXT:         (i32.load
  ;; CHECK-NEXT:          (i32.load
  ;; CHECK-NEXT:           (global.get $__asyncify_data)
  ;; CHECK-NEXT:          )
  ;; CHECK-NEXT:         )
  ;; CHECK-NEXT:        )
  ;; CHECK-NEXT:       )
  ;; CHECK-NEXT:      )
  ;; CHECK-NEXT:      (if
  ;; CHECK-NEXT:       (i32.eq
  ;; CHECK-NEXT:        (global.get $__asyncify_state)
  ;; CHECK-NEXT:        (i32.const 0)
  ;; CHECK-NEXT:       )
  ;; CHECK-NEXT:       (then
  ;; CHECK-NEXT:        (block $label
  ;; CHECK-NEXT:         (try $try1
  ;; CHECK-NEXT:          (do
  ;; CHECK-NEXT:           (local.set $1
  ;; CHECK-NEXT:            (local.get $0)
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:           (local.set $2
  ;; CHECK-NEXT:            (i32.eqz
  ;; CHECK-NEXT:             (local.get $1)
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:           (br_if $label
  ;; CHECK-NEXT:            (local.get $2)
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:           (block
  ;; CHECK-NEXT:            (local.set $3
  ;; CHECK-NEXT:             (local.get $0)
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:            (local.set $4
  ;; CHECK-NEXT:             (i32.eqz
  ;; CHECK-NEXT:              (local.get $3)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:            (if
  ;; CHECK-NEXT:             (local.get $4)
  ;; CHECK-NEXT:             (then
  ;; CHECK-NEXT:              (return)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:           (call $fn1)
  ;; CHECK-NEXT:          )
  ;; CHECK-NEXT:          (catch $default
  ;; CHECK-NEXT:           (local.set $12
  ;; CHECK-NEXT:            (pop i32)
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:           (try $level0-finally-1
  ;; CHECK-NEXT:            (do
  ;; CHECK-NEXT:             (block $level0-pop-1
  ;; CHECK-NEXT:              (local.set $5
  ;; CHECK-NEXT:               (local.get $12)
  ;; CHECK-NEXT:              )
  ;; CHECK-NEXT:              (global.set $__asyncify_catch_counter
  ;; CHECK-NEXT:               (i32.add
  ;; CHECK-NEXT:                (global.get $__asyncify_catch_counter)
  ;; CHECK-NEXT:                (i32.const 1)
  ;; CHECK-NEXT:               )
  ;; CHECK-NEXT:              )
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:             (local.set $0
  ;; CHECK-NEXT:              (local.get $5)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:             (call $fn2)
  ;; CHECK-NEXT:             (global.set $__asyncify_catch_counter
  ;; CHECK-NEXT:              (i32.sub
  ;; CHECK-NEXT:               (global.get $__asyncify_catch_counter)
  ;; CHECK-NEXT:               (i32.const 1)
  ;; CHECK-NEXT:              )
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:            (catch_all
  ;; CHECK-NEXT:             (global.set $__asyncify_catch_counter
  ;; CHECK-NEXT:              (i32.sub
  ;; CHECK-NEXT:               (global.get $__asyncify_catch_counter)
  ;; CHECK-NEXT:               (i32.const 1)
  ;; CHECK-NEXT:              )
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:             (rethrow $level0-finally-1)
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:          )
  ;; CHECK-NEXT:          (catch $ret
  ;; CHECK-NEXT:           (local.set $13
  ;; CHECK-NEXT:            (pop i32)
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:           (try $level0-finally-2
  ;; CHECK-NEXT:            (do
  ;; CHECK-NEXT:             (block $level0-pop-2
  ;; CHECK-NEXT:              (local.set $6
  ;; CHECK-NEXT:               (local.get $13)
  ;; CHECK-NEXT:              )
  ;; CHECK-NEXT:              (global.set $__asyncify_catch_counter
  ;; CHECK-NEXT:               (i32.add
  ;; CHECK-NEXT:                (global.get $__asyncify_catch_counter)
  ;; CHECK-NEXT:                (i32.const 1)
  ;; CHECK-NEXT:               )
  ;; CHECK-NEXT:              )
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:             (local.set $0
  ;; CHECK-NEXT:              (local.get $6)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:             (block
  ;; CHECK-NEXT:              (local.set $7
  ;; CHECK-NEXT:               (local.get $0)
  ;; CHECK-NEXT:              )
  ;; CHECK-NEXT:              (local.set $8
  ;; CHECK-NEXT:               (i32.eqz
  ;; CHECK-NEXT:                (local.get $7)
  ;; CHECK-NEXT:               )
  ;; CHECK-NEXT:              )
  ;; CHECK-NEXT:              (if
  ;; CHECK-NEXT:               (local.get $8)
  ;; CHECK-NEXT:               (then
  ;; CHECK-NEXT:                (block
  ;; CHECK-NEXT:                 (global.set $__asyncify_catch_counter
  ;; CHECK-NEXT:                  (i32.sub
  ;; CHECK-NEXT:                   (global.get $__asyncify_catch_counter)
  ;; CHECK-NEXT:                   (i32.const 1)
  ;; CHECK-NEXT:                  )
  ;; CHECK-NEXT:                 )
  ;; CHECK-NEXT:                 (return)
  ;; CHECK-NEXT:                )
  ;; CHECK-NEXT:               )
  ;; CHECK-NEXT:              )
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:             (call $fn2)
  ;; CHECK-NEXT:             (global.set $__asyncify_catch_counter
  ;; CHECK-NEXT:              (i32.sub
  ;; CHECK-NEXT:               (global.get $__asyncify_catch_counter)
  ;; CHECK-NEXT:               (i32.const 1)
  ;; CHECK-NEXT:              )
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:            (catch_all
  ;; CHECK-NEXT:             (global.set $__asyncify_catch_counter
  ;; CHECK-NEXT:              (i32.sub
  ;; CHECK-NEXT:               (global.get $__asyncify_catch_counter)
  ;; CHECK-NEXT:               (i32.const 1)
  ;; CHECK-NEXT:              )
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:             (rethrow $level0-finally-2)
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:          )
  ;; CHECK-NEXT:          (catch $brif
  ;; CHECK-NEXT:           (local.set $14
  ;; CHECK-NEXT:            (pop i32)
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:           (try $level0-finally-3
  ;; CHECK-NEXT:            (do
  ;; CHECK-NEXT:             (block $level0-pop-3
  ;; CHECK-NEXT:              (local.set $9
  ;; CHECK-NEXT:               (local.get $14)
  ;; CHECK-NEXT:              )
  ;; CHECK-NEXT:              (global.set $__asyncify_catch_counter
  ;; CHECK-NEXT:               (i32.add
  ;; CHECK-NEXT:                (global.get $__asyncify_catch_counter)
  ;; CHECK-NEXT:                (i32.const 1)
  ;; CHECK-NEXT:               )
  ;; CHECK-NEXT:              )
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:             (local.set $0
  ;; CHECK-NEXT:              (local.get $9)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:             (local.set $10
  ;; CHECK-NEXT:              (local.get $0)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:             (local.set $11
  ;; CHECK-NEXT:              (i32.eqz
  ;; CHECK-NEXT:               (local.get $10)
  ;; CHECK-NEXT:              )
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:             (if
  ;; CHECK-NEXT:              (local.get $11)
  ;; CHECK-NEXT:              (then
  ;; CHECK-NEXT:               (global.set $__asyncify_catch_counter
  ;; CHECK-NEXT:                (i32.sub
  ;; CHECK-NEXT:                 (global.get $__asyncify_catch_counter)
  ;; CHECK-NEXT:                 (i32.const 1)
  ;; CHECK-NEXT:                )
  ;; CHECK-NEXT:               )
  ;; CHECK-NEXT:               (br $label)
  ;; CHECK-NEXT:              )
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:             (call $fn2)
  ;; CHECK-NEXT:             (global.set $__asyncify_catch_counter
  ;; CHECK-NEXT:              (i32.sub
  ;; CHECK-NEXT:               (global.get $__asyncify_catch_counter)
  ;; CHECK-NEXT:               (i32.const 1)
  ;; CHECK-NEXT:              )
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:            (catch_all
  ;; CHECK-NEXT:             (global.set $__asyncify_catch_counter
  ;; CHECK-NEXT:              (i32.sub
  ;; CHECK-NEXT:               (global.get $__asyncify_catch_counter)
  ;; CHECK-NEXT:               (i32.const 1)
  ;; CHECK-NEXT:              )
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:             (rethrow $level0-finally-3)
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:          )
  ;; CHECK-NEXT:          (catch_all
  ;; CHECK-NEXT:           (try $level0-finally-4
  ;; CHECK-NEXT:            (do
  ;; CHECK-NEXT:             (global.set $__asyncify_catch_counter
  ;; CHECK-NEXT:              (i32.add
  ;; CHECK-NEXT:               (global.get $__asyncify_catch_counter)
  ;; CHECK-NEXT:               (i32.const 1)
  ;; CHECK-NEXT:              )
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:             (call $fn3)
  ;; CHECK-NEXT:             (global.set $__asyncify_catch_counter
  ;; CHECK-NEXT:              (i32.sub
  ;; CHECK-NEXT:               (global.get $__asyncify_catch_counter)
  ;; CHECK-NEXT:               (i32.const 1)
  ;; CHECK-NEXT:              )
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:            (catch_all
  ;; CHECK-NEXT:             (global.set $__asyncify_catch_counter
  ;; CHECK-NEXT:              (i32.sub
  ;; CHECK-NEXT:               (global.get $__asyncify_catch_counter)
  ;; CHECK-NEXT:               (i32.const 1)
  ;; CHECK-NEXT:              )
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:             (rethrow $level0-finally-4)
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:          )
  ;; CHECK-NEXT:         )
  ;; CHECK-NEXT:        )
  ;; CHECK-NEXT:       )
  ;; CHECK-NEXT:      )
  ;; CHECK-NEXT:     )
  ;; CHECK-NEXT:     (return)
  ;; CHECK-NEXT:    )
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT:  (block
  ;; CHECK-NEXT:   (i32.store
  ;; CHECK-NEXT:    (i32.load
  ;; CHECK-NEXT:     (global.get $__asyncify_data)
  ;; CHECK-NEXT:    )
  ;; CHECK-NEXT:    (local.get $15)
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:   (i32.store
  ;; CHECK-NEXT:    (global.get $__asyncify_data)
  ;; CHECK-NEXT:    (i32.add
  ;; CHECK-NEXT:     (i32.load
  ;; CHECK-NEXT:      (global.get $__asyncify_data)
  ;; CHECK-NEXT:     )
  ;; CHECK-NEXT:     (i32.const 4)
  ;; CHECK-NEXT:    )
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT:  (nop)
  ;; CHECK-NEXT: )
  (func $level0
    (local $0 i32)
    (try $try1
      (do
        (br_if $try1
          (i32.eqz
            (local.get $0)
          )
        )
        (if
          (i32.eqz
            (local.get $0)
          )
          (then
            (return)
          )
        )
        (call $fn1)
      )
      (catch $default
        (local.set $0
          (pop i32)
        )
        (call $fn2)
      )
      (catch $ret
        (local.set $0
          (pop i32)
        )
        (if
          (i32.eqz
            (local.get $0)
          )
          (then
            (return)
          )
        )
        (call $fn2)
      )
      (catch $brif
        (local.set $0
          (pop i32)
        )
        (br_if $try1
          (i32.eqz
            (local.get $0)
          )
        )
        (call $fn2)
      )
      (catch_all
        (call $fn3)
      )
    )
  )

  ;; CHECK:      (func $level1
  ;; CHECK-NEXT:  (local $0 i32)
  ;; CHECK-NEXT:  (local $1 i32)
  ;; CHECK-NEXT:  (local $2 i32)
  ;; CHECK-NEXT:  (local $3 i32)
  ;; CHECK-NEXT:  (local $4 i32)
  ;; CHECK-NEXT:  (local $5 i32)
  ;; CHECK-NEXT:  (local $6 i32)
  ;; CHECK-NEXT:  (local $7 i32)
  ;; CHECK-NEXT:  (local $8 i32)
  ;; CHECK-NEXT:  (local $9 i32)
  ;; CHECK-NEXT:  (local $10 i32)
  ;; CHECK-NEXT:  (local $11 i32)
  ;; CHECK-NEXT:  (local $12 i32)
  ;; CHECK-NEXT:  (local $13 i32)
  ;; CHECK-NEXT:  (local $14 i32)
  ;; CHECK-NEXT:  (local $15 i32)
  ;; CHECK-NEXT:  (local $16 i32)
  ;; CHECK-NEXT:  (local $17 i32)
  ;; CHECK-NEXT:  (local $18 i32)
  ;; CHECK-NEXT:  (local $19 i32)
  ;; CHECK-NEXT:  (local $20 i32)
  ;; CHECK-NEXT:  (local $21 i32)
  ;; CHECK-NEXT:  (local $22 i32)
  ;; CHECK-NEXT:  (if
  ;; CHECK-NEXT:   (i32.eq
  ;; CHECK-NEXT:    (global.get $__asyncify_state)
  ;; CHECK-NEXT:    (i32.const 2)
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:   (then
  ;; CHECK-NEXT:    (nop)
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT:  (local.tee $21
  ;; CHECK-NEXT:   (block $__asyncify_unwind
  ;; CHECK-NEXT:    (block
  ;; CHECK-NEXT:     (block
  ;; CHECK-NEXT:      (if
  ;; CHECK-NEXT:       (i32.eq
  ;; CHECK-NEXT:        (global.get $__asyncify_state)
  ;; CHECK-NEXT:        (i32.const 2)
  ;; CHECK-NEXT:       )
  ;; CHECK-NEXT:       (then
  ;; CHECK-NEXT:        (i32.store
  ;; CHECK-NEXT:         (global.get $__asyncify_data)
  ;; CHECK-NEXT:         (i32.add
  ;; CHECK-NEXT:          (i32.load
  ;; CHECK-NEXT:           (global.get $__asyncify_data)
  ;; CHECK-NEXT:          )
  ;; CHECK-NEXT:          (i32.const -4)
  ;; CHECK-NEXT:         )
  ;; CHECK-NEXT:        )
  ;; CHECK-NEXT:        (local.set $22
  ;; CHECK-NEXT:         (i32.load
  ;; CHECK-NEXT:          (i32.load
  ;; CHECK-NEXT:           (global.get $__asyncify_data)
  ;; CHECK-NEXT:          )
  ;; CHECK-NEXT:         )
  ;; CHECK-NEXT:        )
  ;; CHECK-NEXT:       )
  ;; CHECK-NEXT:      )
  ;; CHECK-NEXT:      (if
  ;; CHECK-NEXT:       (i32.eq
  ;; CHECK-NEXT:        (global.get $__asyncify_state)
  ;; CHECK-NEXT:        (i32.const 0)
  ;; CHECK-NEXT:       )
  ;; CHECK-NEXT:       (then
  ;; CHECK-NEXT:        (block $label
  ;; CHECK-NEXT:         (try $try1
  ;; CHECK-NEXT:          (do
  ;; CHECK-NEXT:           (try
  ;; CHECK-NEXT:            (do
  ;; CHECK-NEXT:             (local.set $1
  ;; CHECK-NEXT:              (local.get $0)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:             (local.set $2
  ;; CHECK-NEXT:              (i32.eqz
  ;; CHECK-NEXT:               (local.get $1)
  ;; CHECK-NEXT:              )
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:             (br_if $label
  ;; CHECK-NEXT:              (local.get $2)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:             (block
  ;; CHECK-NEXT:              (local.set $3
  ;; CHECK-NEXT:               (local.get $0)
  ;; CHECK-NEXT:              )
  ;; CHECK-NEXT:              (local.set $4
  ;; CHECK-NEXT:               (i32.eqz
  ;; CHECK-NEXT:                (local.get $3)
  ;; CHECK-NEXT:               )
  ;; CHECK-NEXT:              )
  ;; CHECK-NEXT:              (if
  ;; CHECK-NEXT:               (local.get $4)
  ;; CHECK-NEXT:               (then
  ;; CHECK-NEXT:                (return)
  ;; CHECK-NEXT:               )
  ;; CHECK-NEXT:              )
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:             (call $fn1)
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:            (catch_all
  ;; CHECK-NEXT:             (try $level1-finally-1
  ;; CHECK-NEXT:              (do
  ;; CHECK-NEXT:               (global.set $__asyncify_catch_counter
  ;; CHECK-NEXT:                (i32.add
  ;; CHECK-NEXT:                 (global.get $__asyncify_catch_counter)
  ;; CHECK-NEXT:                 (i32.const 1)
  ;; CHECK-NEXT:                )
  ;; CHECK-NEXT:               )
  ;; CHECK-NEXT:               (call $fn2)
  ;; CHECK-NEXT:               (global.set $__asyncify_catch_counter
  ;; CHECK-NEXT:                (i32.sub
  ;; CHECK-NEXT:                 (global.get $__asyncify_catch_counter)
  ;; CHECK-NEXT:                 (i32.const 1)
  ;; CHECK-NEXT:                )
  ;; CHECK-NEXT:               )
  ;; CHECK-NEXT:              )
  ;; CHECK-NEXT:              (catch_all
  ;; CHECK-NEXT:               (global.set $__asyncify_catch_counter
  ;; CHECK-NEXT:                (i32.sub
  ;; CHECK-NEXT:                 (global.get $__asyncify_catch_counter)
  ;; CHECK-NEXT:                 (i32.const 1)
  ;; CHECK-NEXT:                )
  ;; CHECK-NEXT:               )
  ;; CHECK-NEXT:               (rethrow $level1-finally-1)
  ;; CHECK-NEXT:              )
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:           (call $fn3)
  ;; CHECK-NEXT:          )
  ;; CHECK-NEXT:          (catch $default
  ;; CHECK-NEXT:           (local.set $18
  ;; CHECK-NEXT:            (pop i32)
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:           (try $level1-finally-2
  ;; CHECK-NEXT:            (do
  ;; CHECK-NEXT:             (block $level1-pop-1
  ;; CHECK-NEXT:              (local.set $5
  ;; CHECK-NEXT:               (local.get $18)
  ;; CHECK-NEXT:              )
  ;; CHECK-NEXT:              (global.set $__asyncify_catch_counter
  ;; CHECK-NEXT:               (i32.add
  ;; CHECK-NEXT:                (global.get $__asyncify_catch_counter)
  ;; CHECK-NEXT:                (i32.const 1)
  ;; CHECK-NEXT:               )
  ;; CHECK-NEXT:              )
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:             (local.set $0
  ;; CHECK-NEXT:              (local.get $5)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:             (try
  ;; CHECK-NEXT:              (do
  ;; CHECK-NEXT:               (call $fn1)
  ;; CHECK-NEXT:              )
  ;; CHECK-NEXT:              (catch_all
  ;; CHECK-NEXT:               (call $fn3)
  ;; CHECK-NEXT:              )
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:             (call $fn2)
  ;; CHECK-NEXT:             (global.set $__asyncify_catch_counter
  ;; CHECK-NEXT:              (i32.sub
  ;; CHECK-NEXT:               (global.get $__asyncify_catch_counter)
  ;; CHECK-NEXT:               (i32.const 1)
  ;; CHECK-NEXT:              )
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:            (catch_all
  ;; CHECK-NEXT:             (global.set $__asyncify_catch_counter
  ;; CHECK-NEXT:              (i32.sub
  ;; CHECK-NEXT:               (global.get $__asyncify_catch_counter)
  ;; CHECK-NEXT:               (i32.const 1)
  ;; CHECK-NEXT:              )
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:             (rethrow $level1-finally-2)
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:          )
  ;; CHECK-NEXT:          (catch $ret
  ;; CHECK-NEXT:           (local.set $19
  ;; CHECK-NEXT:            (pop i32)
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:           (try $level1-finally-3
  ;; CHECK-NEXT:            (do
  ;; CHECK-NEXT:             (block $level1-pop-2
  ;; CHECK-NEXT:              (local.set $6
  ;; CHECK-NEXT:               (local.get $19)
  ;; CHECK-NEXT:              )
  ;; CHECK-NEXT:              (global.set $__asyncify_catch_counter
  ;; CHECK-NEXT:               (i32.add
  ;; CHECK-NEXT:                (global.get $__asyncify_catch_counter)
  ;; CHECK-NEXT:                (i32.const 1)
  ;; CHECK-NEXT:               )
  ;; CHECK-NEXT:              )
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:             (local.set $0
  ;; CHECK-NEXT:              (local.get $6)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:             (try
  ;; CHECK-NEXT:              (do
  ;; CHECK-NEXT:               (call $fn1)
  ;; CHECK-NEXT:              )
  ;; CHECK-NEXT:              (catch_all
  ;; CHECK-NEXT:               (block
  ;; CHECK-NEXT:                (local.set $7
  ;; CHECK-NEXT:                 (local.get $0)
  ;; CHECK-NEXT:                )
  ;; CHECK-NEXT:                (local.set $8
  ;; CHECK-NEXT:                 (i32.eqz
  ;; CHECK-NEXT:                  (local.get $7)
  ;; CHECK-NEXT:                 )
  ;; CHECK-NEXT:                )
  ;; CHECK-NEXT:                (if
  ;; CHECK-NEXT:                 (local.get $8)
  ;; CHECK-NEXT:                 (then
  ;; CHECK-NEXT:                  (block
  ;; CHECK-NEXT:                   (global.set $__asyncify_catch_counter
  ;; CHECK-NEXT:                    (i32.sub
  ;; CHECK-NEXT:                     (global.get $__asyncify_catch_counter)
  ;; CHECK-NEXT:                     (i32.const 1)
  ;; CHECK-NEXT:                    )
  ;; CHECK-NEXT:                   )
  ;; CHECK-NEXT:                   (return)
  ;; CHECK-NEXT:                  )
  ;; CHECK-NEXT:                 )
  ;; CHECK-NEXT:                )
  ;; CHECK-NEXT:               )
  ;; CHECK-NEXT:               (call $fn3)
  ;; CHECK-NEXT:              )
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:             (block
  ;; CHECK-NEXT:              (local.set $9
  ;; CHECK-NEXT:               (local.get $0)
  ;; CHECK-NEXT:              )
  ;; CHECK-NEXT:              (local.set $10
  ;; CHECK-NEXT:               (i32.eqz
  ;; CHECK-NEXT:                (local.get $9)
  ;; CHECK-NEXT:               )
  ;; CHECK-NEXT:              )
  ;; CHECK-NEXT:              (if
  ;; CHECK-NEXT:               (local.get $10)
  ;; CHECK-NEXT:               (then
  ;; CHECK-NEXT:                (block
  ;; CHECK-NEXT:                 (global.set $__asyncify_catch_counter
  ;; CHECK-NEXT:                  (i32.sub
  ;; CHECK-NEXT:                   (global.get $__asyncify_catch_counter)
  ;; CHECK-NEXT:                   (i32.const 1)
  ;; CHECK-NEXT:                  )
  ;; CHECK-NEXT:                 )
  ;; CHECK-NEXT:                 (return)
  ;; CHECK-NEXT:                )
  ;; CHECK-NEXT:               )
  ;; CHECK-NEXT:              )
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:             (call $fn2)
  ;; CHECK-NEXT:             (global.set $__asyncify_catch_counter
  ;; CHECK-NEXT:              (i32.sub
  ;; CHECK-NEXT:               (global.get $__asyncify_catch_counter)
  ;; CHECK-NEXT:               (i32.const 1)
  ;; CHECK-NEXT:              )
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:            (catch_all
  ;; CHECK-NEXT:             (global.set $__asyncify_catch_counter
  ;; CHECK-NEXT:              (i32.sub
  ;; CHECK-NEXT:               (global.get $__asyncify_catch_counter)
  ;; CHECK-NEXT:               (i32.const 1)
  ;; CHECK-NEXT:              )
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:             (rethrow $level1-finally-3)
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:          )
  ;; CHECK-NEXT:          (catch $brif
  ;; CHECK-NEXT:           (local.set $20
  ;; CHECK-NEXT:            (pop i32)
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:           (try $level1-finally-4
  ;; CHECK-NEXT:            (do
  ;; CHECK-NEXT:             (block $level1-pop-3
  ;; CHECK-NEXT:              (local.set $11
  ;; CHECK-NEXT:               (local.get $20)
  ;; CHECK-NEXT:              )
  ;; CHECK-NEXT:              (global.set $__asyncify_catch_counter
  ;; CHECK-NEXT:               (i32.add
  ;; CHECK-NEXT:                (global.get $__asyncify_catch_counter)
  ;; CHECK-NEXT:                (i32.const 1)
  ;; CHECK-NEXT:               )
  ;; CHECK-NEXT:              )
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:             (local.set $0
  ;; CHECK-NEXT:              (local.get $11)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:             (block $nottop
  ;; CHECK-NEXT:              (try
  ;; CHECK-NEXT:               (do
  ;; CHECK-NEXT:                (call $fn1)
  ;; CHECK-NEXT:               )
  ;; CHECK-NEXT:               (catch_all
  ;; CHECK-NEXT:                (local.set $12
  ;; CHECK-NEXT:                 (local.get $0)
  ;; CHECK-NEXT:                )
  ;; CHECK-NEXT:                (local.set $13
  ;; CHECK-NEXT:                 (i32.eqz
  ;; CHECK-NEXT:                  (local.get $12)
  ;; CHECK-NEXT:                 )
  ;; CHECK-NEXT:                )
  ;; CHECK-NEXT:                (br_if $nottop
  ;; CHECK-NEXT:                 (local.get $13)
  ;; CHECK-NEXT:                )
  ;; CHECK-NEXT:                (local.set $14
  ;; CHECK-NEXT:                 (local.get $0)
  ;; CHECK-NEXT:                )
  ;; CHECK-NEXT:                (local.set $15
  ;; CHECK-NEXT:                 (i32.eqz
  ;; CHECK-NEXT:                  (local.get $14)
  ;; CHECK-NEXT:                 )
  ;; CHECK-NEXT:                )
  ;; CHECK-NEXT:                (if
  ;; CHECK-NEXT:                 (local.get $15)
  ;; CHECK-NEXT:                 (then
  ;; CHECK-NEXT:                  (global.set $__asyncify_catch_counter
  ;; CHECK-NEXT:                   (i32.sub
  ;; CHECK-NEXT:                    (global.get $__asyncify_catch_counter)
  ;; CHECK-NEXT:                    (i32.const 1)
  ;; CHECK-NEXT:                   )
  ;; CHECK-NEXT:                  )
  ;; CHECK-NEXT:                  (br $label)
  ;; CHECK-NEXT:                 )
  ;; CHECK-NEXT:                )
  ;; CHECK-NEXT:                (call $fn3)
  ;; CHECK-NEXT:               )
  ;; CHECK-NEXT:              )
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:             (local.set $16
  ;; CHECK-NEXT:              (local.get $0)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:             (local.set $17
  ;; CHECK-NEXT:              (i32.eqz
  ;; CHECK-NEXT:               (local.get $16)
  ;; CHECK-NEXT:              )
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:             (if
  ;; CHECK-NEXT:              (local.get $17)
  ;; CHECK-NEXT:              (then
  ;; CHECK-NEXT:               (global.set $__asyncify_catch_counter
  ;; CHECK-NEXT:                (i32.sub
  ;; CHECK-NEXT:                 (global.get $__asyncify_catch_counter)
  ;; CHECK-NEXT:                 (i32.const 1)
  ;; CHECK-NEXT:                )
  ;; CHECK-NEXT:               )
  ;; CHECK-NEXT:               (br $label)
  ;; CHECK-NEXT:              )
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:             (call $fn2)
  ;; CHECK-NEXT:             (global.set $__asyncify_catch_counter
  ;; CHECK-NEXT:              (i32.sub
  ;; CHECK-NEXT:               (global.get $__asyncify_catch_counter)
  ;; CHECK-NEXT:               (i32.const 1)
  ;; CHECK-NEXT:              )
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:            (catch_all
  ;; CHECK-NEXT:             (global.set $__asyncify_catch_counter
  ;; CHECK-NEXT:              (i32.sub
  ;; CHECK-NEXT:               (global.get $__asyncify_catch_counter)
  ;; CHECK-NEXT:               (i32.const 1)
  ;; CHECK-NEXT:              )
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:             (rethrow $level1-finally-4)
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:          )
  ;; CHECK-NEXT:          (catch_all
  ;; CHECK-NEXT:           (try $level1-finally-5
  ;; CHECK-NEXT:            (do
  ;; CHECK-NEXT:             (global.set $__asyncify_catch_counter
  ;; CHECK-NEXT:              (i32.add
  ;; CHECK-NEXT:               (global.get $__asyncify_catch_counter)
  ;; CHECK-NEXT:               (i32.const 1)
  ;; CHECK-NEXT:              )
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:             (try
  ;; CHECK-NEXT:              (do
  ;; CHECK-NEXT:               (call $fn1)
  ;; CHECK-NEXT:              )
  ;; CHECK-NEXT:              (catch_all
  ;; CHECK-NEXT:               (call $fn2)
  ;; CHECK-NEXT:              )
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:             (call $fn3)
  ;; CHECK-NEXT:             (global.set $__asyncify_catch_counter
  ;; CHECK-NEXT:              (i32.sub
  ;; CHECK-NEXT:               (global.get $__asyncify_catch_counter)
  ;; CHECK-NEXT:               (i32.const 1)
  ;; CHECK-NEXT:              )
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:            (catch_all
  ;; CHECK-NEXT:             (global.set $__asyncify_catch_counter
  ;; CHECK-NEXT:              (i32.sub
  ;; CHECK-NEXT:               (global.get $__asyncify_catch_counter)
  ;; CHECK-NEXT:               (i32.const 1)
  ;; CHECK-NEXT:              )
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:             (rethrow $level1-finally-5)
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:          )
  ;; CHECK-NEXT:         )
  ;; CHECK-NEXT:        )
  ;; CHECK-NEXT:       )
  ;; CHECK-NEXT:      )
  ;; CHECK-NEXT:     )
  ;; CHECK-NEXT:     (return)
  ;; CHECK-NEXT:    )
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT:  (block
  ;; CHECK-NEXT:   (i32.store
  ;; CHECK-NEXT:    (i32.load
  ;; CHECK-NEXT:     (global.get $__asyncify_data)
  ;; CHECK-NEXT:    )
  ;; CHECK-NEXT:    (local.get $21)
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:   (i32.store
  ;; CHECK-NEXT:    (global.get $__asyncify_data)
  ;; CHECK-NEXT:    (i32.add
  ;; CHECK-NEXT:     (i32.load
  ;; CHECK-NEXT:      (global.get $__asyncify_data)
  ;; CHECK-NEXT:     )
  ;; CHECK-NEXT:     (i32.const 4)
  ;; CHECK-NEXT:    )
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT:  (nop)
  ;; CHECK-NEXT: )
  (func $level1
    (local $0 i32)
    (try $try1
      (do
        (try
          (do
            (br_if $try1
              (i32.eqz
                (local.get $0)
              )
            )
            (if
              (i32.eqz
                (local.get $0)
              )
              (then
                (return)
              )
            )
            (call $fn1)
          )
          (catch_all
            (call $fn2)
          )
        )
        (call $fn3)
      )
      (catch $default
        (local.set $0
          (pop i32)
        )
        (try
          (do
            (call $fn1)
          )
          (catch_all
            (call $fn3)
          )
        )
        (call $fn2)
      )
      (catch $ret
        (local.set $0
          (pop i32)
        )
        (try
          (do
            (call $fn1)
          )
          (catch_all
            (if
              (i32.eqz
                (local.get $0)
              )
              (then
                (return)
              )
            )
            (call $fn3)
          )
        )
        (if
          (i32.eqz
            (local.get $0)
          )
          (then
            (return)
          )
        )
        (call $fn2)
      )
      (catch $brif
        (local.set $0
          (pop i32)
        )
        (block $nottop
          (try
            (do
              (call $fn1)
            )
            (catch_all
              (br_if $nottop
                (i32.eqz
                  (local.get $0)
                )
              )
              (br_if $try1
                (i32.eqz
                  (local.get $0)
                )
              )
              (call $fn3)
            )
          )
        )
        (br_if $try1
          (i32.eqz
            (local.get $0)
          )
        )
        (call $fn2)
      )
      (catch_all
        (try
          (do
            (call $fn1)
          )
          (catch_all
            (call $fn2)
          )
        )
        (call $fn3)
      )
    )
  )
  ;; CHECK:      (func $fn1
  ;; CHECK-NEXT:  (local $0 i32)
  ;; CHECK-NEXT:  (local.set $0
  ;; CHECK-NEXT:   (global.get $__asyncify_state)
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT:  (block
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT: )
  (func $fn1
  )

  ;; CHECK:      (func $fn2
  ;; CHECK-NEXT:  (local $0 i32)
  ;; CHECK-NEXT:  (local.set $0
  ;; CHECK-NEXT:   (global.get $__asyncify_state)
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT:  (block
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT: )
  (func $fn2
  )

  ;; CHECK:      (func $fn3
  ;; CHECK-NEXT:  (local $0 i32)
  ;; CHECK-NEXT:  (local.set $0
  ;; CHECK-NEXT:   (global.get $__asyncify_state)
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT:  (block
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT: )
  (func $fn3
  )
)
;; CHECK:      (func $asyncify_start_unwind (param $0 i32)
;; CHECK-NEXT:  (if
;; CHECK-NEXT:   (i32.ne
;; CHECK-NEXT:    (global.get $__asyncify_catch_counter)
;; CHECK-NEXT:    (i32.const 0)
;; CHECK-NEXT:   )
;; CHECK-NEXT:   (then
;; CHECK-NEXT:    (unreachable)
;; CHECK-NEXT:   )
;; CHECK-NEXT:  )
;; CHECK-NEXT:  (global.set $__asyncify_state
;; CHECK-NEXT:   (i32.const 1)
;; CHECK-NEXT:  )
;; CHECK-NEXT:  (global.set $__asyncify_data
;; CHECK-NEXT:   (local.get $0)
;; CHECK-NEXT:  )
;; CHECK-NEXT:  (if
;; CHECK-NEXT:   (i32.gt_u
;; CHECK-NEXT:    (i32.load
;; CHECK-NEXT:     (global.get $__asyncify_data)
;; CHECK-NEXT:    )
;; CHECK-NEXT:    (i32.load offset=4
;; CHECK-NEXT:     (global.get $__asyncify_data)
;; CHECK-NEXT:    )
;; CHECK-NEXT:   )
;; CHECK-NEXT:   (then
;; CHECK-NEXT:    (unreachable)
;; CHECK-NEXT:   )
;; CHECK-NEXT:  )
;; CHECK-NEXT: )

;; CHECK:      (func $asyncify_stop_unwind
;; CHECK-NEXT:  (global.set $__asyncify_state
;; CHECK-NEXT:   (i32.const 0)
;; CHECK-NEXT:  )
;; CHECK-NEXT:  (if
;; CHECK-NEXT:   (i32.gt_u
;; CHECK-NEXT:    (i32.load
;; CHECK-NEXT:     (global.get $__asyncify_data)
;; CHECK-NEXT:    )
;; CHECK-NEXT:    (i32.load offset=4
;; CHECK-NEXT:     (global.get $__asyncify_data)
;; CHECK-NEXT:    )
;; CHECK-NEXT:   )
;; CHECK-NEXT:   (then
;; CHECK-NEXT:    (unreachable)
;; CHECK-NEXT:   )
;; CHECK-NEXT:  )
;; CHECK-NEXT: )

;; CHECK:      (func $asyncify_start_rewind (param $0 i32)
;; CHECK-NEXT:  (global.set $__asyncify_state
;; CHECK-NEXT:   (i32.const 2)
;; CHECK-NEXT:  )
;; CHECK-NEXT:  (global.set $__asyncify_data
;; CHECK-NEXT:   (local.get $0)
;; CHECK-NEXT:  )
;; CHECK-NEXT:  (if
;; CHECK-NEXT:   (i32.gt_u
;; CHECK-NEXT:    (i32.load
;; CHECK-NEXT:     (global.get $__asyncify_data)
;; CHECK-NEXT:    )
;; CHECK-NEXT:    (i32.load offset=4
;; CHECK-NEXT:     (global.get $__asyncify_data)
;; CHECK-NEXT:    )
;; CHECK-NEXT:   )
;; CHECK-NEXT:   (then
;; CHECK-NEXT:    (unreachable)
;; CHECK-NEXT:   )
;; CHECK-NEXT:  )
;; CHECK-NEXT: )

;; CHECK:      (func $asyncify_stop_rewind
;; CHECK-NEXT:  (global.set $__asyncify_state
;; CHECK-NEXT:   (i32.const 0)
;; CHECK-NEXT:  )
;; CHECK-NEXT:  (if
;; CHECK-NEXT:   (i32.gt_u
;; CHECK-NEXT:    (i32.load
;; CHECK-NEXT:     (global.get $__asyncify_data)
;; CHECK-NEXT:    )
;; CHECK-NEXT:    (i32.load offset=4
;; CHECK-NEXT:     (global.get $__asyncify_data)
;; CHECK-NEXT:    )
;; CHECK-NEXT:   )
;; CHECK-NEXT:   (then
;; CHECK-NEXT:    (unreachable)
;; CHECK-NEXT:   )
;; CHECK-NEXT:  )
;; CHECK-NEXT: )

;; CHECK:      (func $asyncify_get_state (result i32)
;; CHECK-NEXT:  (global.get $__asyncify_state)
;; CHECK-NEXT: )

;; CHECK:      (func $asyncify_get_catch_counter (result i32)
;; CHECK-NEXT:  (global.get $__asyncify_catch_counter)
;; CHECK-NEXT: )
