;; NOTE: Assertions have been generated by update_lit_checks.py --all-items and should not be edited.
;; NOTE: This test was ported using port_test.py and could be cleaned up.

;; RUN: foreach %s %t wasm-opt --pick-load-signs --all-features -S -o - | filecheck %s

(module
 ;; CHECK:      (type $none_=>_i32 (func (result i32)))

 ;; CHECK:      (memory $0 (shared 16 16))
 (memory $0 (shared 16 16))
 ;; CHECK:      (func $atomics-are-always-unsigned (result i32)
 ;; CHECK-NEXT:  (local $0 i32)
 ;; CHECK-NEXT:  (drop
 ;; CHECK-NEXT:   (block $block (result i32)
 ;; CHECK-NEXT:    (local.set $0
 ;; CHECK-NEXT:     (i32.atomic.load16_u
 ;; CHECK-NEXT:      (i32.const 27)
 ;; CHECK-NEXT:     )
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:    (i32.shr_s
 ;; CHECK-NEXT:     (i32.shl
 ;; CHECK-NEXT:      (local.get $0)
 ;; CHECK-NEXT:      (i32.const 16)
 ;; CHECK-NEXT:     )
 ;; CHECK-NEXT:     (i32.const 16)
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (i32.const -65)
 ;; CHECK-NEXT: )
 (func $atomics-are-always-unsigned (result i32)
  (local $0 i32)
  (drop
   (block (result i32)
    (local.set $0
     (i32.atomic.load16_u ;; an atomic load cannot become signed
      (i32.const 27)
     )
    )
    (i32.shr_s
     (i32.shl
      (local.get $0)
      (i32.const 16)
     )
     (i32.const 16)
    )
   )
  )
  (i32.const -65)
 )
)
