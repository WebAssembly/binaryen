;; NOTE: Assertions have been generated by update_lit_checks.py and should not be edited.

;; Check that exact casts are only added when custom descriptors are enabled.

;; RUN: wasm-opt %s -all                              --gufa-cast-all -S -o -  | filecheck %s
;; RUN: wasm-opt %s -all --disable-custom-descriptors --gufa-cast-all -S -o -  | filecheck %s --check-prefix=NO_CD

(module
  ;; CHECK:      (type $foo (struct))
  ;; NO_CD:      (type $foo (struct))
  (type $foo (struct))

  ;; CHECK:      (import "" "" (global $g (ref (exact $foo))))
  ;; NO_CD:      (import "" "" (global $g (ref (exact $foo))))
  (import "" "" (global $g (ref (exact $foo))))

  ;; CHECK:      (func $callee (type $1) (result (ref $foo))
  ;; CHECK-NEXT:  (global.get $g)
  ;; CHECK-NEXT: )
  ;; NO_CD:      (func $callee (type $1) (result (ref $foo))
  ;; NO_CD-NEXT:  (global.get $g)
  ;; NO_CD-NEXT: )
  (func $callee (result (ref $foo))
    (global.get $g)
  )

  ;; CHECK:      (func $caller (type $2)
  ;; CHECK-NEXT:  (drop
  ;; CHECK-NEXT:   (block (result (ref (exact $foo)))
  ;; CHECK-NEXT:    (drop
  ;; CHECK-NEXT:     (ref.cast (ref (exact $foo))
  ;; CHECK-NEXT:      (call $callee)
  ;; CHECK-NEXT:     )
  ;; CHECK-NEXT:    )
  ;; CHECK-NEXT:    (global.get $g)
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT: )
  ;; NO_CD:      (func $caller (type $2)
  ;; NO_CD-NEXT:  (drop
  ;; NO_CD-NEXT:   (block (result (ref (exact $foo)))
  ;; NO_CD-NEXT:    (drop
  ;; NO_CD-NEXT:     (call $callee)
  ;; NO_CD-NEXT:    )
  ;; NO_CD-NEXT:    (global.get $g)
  ;; NO_CD-NEXT:   )
  ;; NO_CD-NEXT:  )
  ;; NO_CD-NEXT: )
  (func $caller
    (drop
      (call $callee)
    )
  )
)
