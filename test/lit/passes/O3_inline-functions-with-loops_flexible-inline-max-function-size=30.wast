;; NOTE: Assertions have been generated by update_lit_checks.py --all-items and should not be edited.
;; NOTE: This test was ported using port_test.py and could be cleaned up.

;; RUN: foreach %s %t wasm-opt -O3 --inline-functions-with-loops --flexible-inline-max-function-size=30 -S -o - | filecheck %s

(module
  ;; CHECK:      (type $t0 (func (param i32) (result i32)))
  (type $t0 (func (param i32) (result i32)))
  ;; CHECK:      (memory $memory 0)

  ;; CHECK:      (export "fib" (func $fib))

  ;; CHECK:      (export "looped" (func $looped))

  ;; CHECK:      (export "t0" (func $looped))

  ;; CHECK:      (export "t1" (func $t1))

  ;; CHECK:      (export "t2" (func $t2))

  ;; CHECK:      (export "t3" (func $t3))

  ;; CHECK:      (export "memory" (memory $memory))

  ;; CHECK:      (func $fib (; has Stack IR ;) (param $0 i32) (result i32)
  ;; CHECK-NEXT:  (if
  ;; CHECK-NEXT:   (i32.le_s
  ;; CHECK-NEXT:    (local.get $0)
  ;; CHECK-NEXT:    (i32.const 2)
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:   (return
  ;; CHECK-NEXT:    (local.get $0)
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT:  (i32.add
  ;; CHECK-NEXT:   (call $fib
  ;; CHECK-NEXT:    (i32.sub
  ;; CHECK-NEXT:     (local.get $0)
  ;; CHECK-NEXT:     (i32.const 1)
  ;; CHECK-NEXT:    )
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:   (call $fib
  ;; CHECK-NEXT:    (i32.sub
  ;; CHECK-NEXT:     (local.get $0)
  ;; CHECK-NEXT:     (i32.const 2)
  ;; CHECK-NEXT:    )
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT: )
  (func $fib (export "fib") (type $t0) (param $p0 i32) (result i32)
    (if $I0
      (i32.le_s
        (local.get $p0)
        (i32.const 2)
      )
      (then
        (return
          (local.get $p0)
        )
      )
    )
    (i32.add
      (call $fib
        (i32.sub
          (local.get $p0)
          (i32.const 1)
        )
      )
      (call $fib
        (i32.sub
          (local.get $p0)
          (i32.const 2)
        )
      )
    )
  )
  ;; CHECK:      (func $looped (; has Stack IR ;) (param $0 i32) (result i32)
  ;; CHECK-NEXT:  (loop $L0
  ;; CHECK-NEXT:   (if
  ;; CHECK-NEXT:    (i32.ge_s
  ;; CHECK-NEXT:     (local.get $0)
  ;; CHECK-NEXT:     (i32.const 0)
  ;; CHECK-NEXT:    )
  ;; CHECK-NEXT:    (block
  ;; CHECK-NEXT:     (local.set $0
  ;; CHECK-NEXT:      (i32.sub
  ;; CHECK-NEXT:       (local.get $0)
  ;; CHECK-NEXT:       (i32.const 1)
  ;; CHECK-NEXT:      )
  ;; CHECK-NEXT:     )
  ;; CHECK-NEXT:     (br $L0)
  ;; CHECK-NEXT:    )
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT:  (local.get $0)
  ;; CHECK-NEXT: )
  (func $looped (export "looped") (type $t0) (param $p0 i32) (result i32)
    (loop $L0
      (if $I1
        (i32.ge_s
          (local.get $p0)
          (i32.const 0)
        )
        (then
          (local.set $p0
            (i32.sub
              (local.get $p0)
              (i32.const 1)
            )
          )
          (br $L0)
        )
      )
    )
    (local.get $p0)
  )

  (func $t0 (export "t0") (type $t0) (param $p0 i32) (result i32)
    (call $looped
      (local.get $p0)
    )
  )

  ;; CHECK:      (func $t1 (; has Stack IR ;) (param $0 i32) (result i32)
  ;; CHECK-NEXT:  (local.set $0
  ;; CHECK-NEXT:   (i32.add
  ;; CHECK-NEXT:    (local.get $0)
  ;; CHECK-NEXT:    (i32.const 1)
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT:  (loop $L0
  ;; CHECK-NEXT:   (if
  ;; CHECK-NEXT:    (i32.ge_s
  ;; CHECK-NEXT:     (local.get $0)
  ;; CHECK-NEXT:     (i32.const 0)
  ;; CHECK-NEXT:    )
  ;; CHECK-NEXT:    (block
  ;; CHECK-NEXT:     (local.set $0
  ;; CHECK-NEXT:      (i32.sub
  ;; CHECK-NEXT:       (local.get $0)
  ;; CHECK-NEXT:       (i32.const 1)
  ;; CHECK-NEXT:      )
  ;; CHECK-NEXT:     )
  ;; CHECK-NEXT:     (br $L0)
  ;; CHECK-NEXT:    )
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT:  (local.get $0)
  ;; CHECK-NEXT: )
  (func $t1 (export "t1") (type $t0) (param $p0 i32) (result i32)
    (call $looped
      (i32.add
        (local.get $p0)
        (i32.const 1)
      )
    )
  )
  ;; CHECK:      (func $t2 (; has Stack IR ;) (param $0 i32) (result i32)
  ;; CHECK-NEXT:  (local $1 i32)
  ;; CHECK-NEXT:  (local $2 i32)
  ;; CHECK-NEXT:  (local $3 i32)
  ;; CHECK-NEXT:  (local $4 i32)
  ;; CHECK-NEXT:  (if (result i32)
  ;; CHECK-NEXT:   (i32.le_s
  ;; CHECK-NEXT:    (local.get $0)
  ;; CHECK-NEXT:    (i32.const 2)
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:   (local.get $0)
  ;; CHECK-NEXT:   (i32.add
  ;; CHECK-NEXT:    (block $__inlined_func$fib (result i32)
  ;; CHECK-NEXT:     (drop
  ;; CHECK-NEXT:      (br_if $__inlined_func$fib
  ;; CHECK-NEXT:       (local.tee $1
  ;; CHECK-NEXT:        (i32.sub
  ;; CHECK-NEXT:         (local.get $0)
  ;; CHECK-NEXT:         (i32.const 1)
  ;; CHECK-NEXT:        )
  ;; CHECK-NEXT:       )
  ;; CHECK-NEXT:       (i32.le_s
  ;; CHECK-NEXT:        (local.get $1)
  ;; CHECK-NEXT:        (i32.const 2)
  ;; CHECK-NEXT:       )
  ;; CHECK-NEXT:      )
  ;; CHECK-NEXT:     )
  ;; CHECK-NEXT:     (i32.add
  ;; CHECK-NEXT:      (block $__inlined_func$fib0 (result i32)
  ;; CHECK-NEXT:       (drop
  ;; CHECK-NEXT:        (br_if $__inlined_func$fib0
  ;; CHECK-NEXT:         (local.tee $2
  ;; CHECK-NEXT:          (i32.sub
  ;; CHECK-NEXT:           (local.get $1)
  ;; CHECK-NEXT:           (i32.const 1)
  ;; CHECK-NEXT:          )
  ;; CHECK-NEXT:         )
  ;; CHECK-NEXT:         (i32.le_s
  ;; CHECK-NEXT:          (local.get $2)
  ;; CHECK-NEXT:          (i32.const 2)
  ;; CHECK-NEXT:         )
  ;; CHECK-NEXT:        )
  ;; CHECK-NEXT:       )
  ;; CHECK-NEXT:       (i32.add
  ;; CHECK-NEXT:        (block $__inlined_func$fib1 (result i32)
  ;; CHECK-NEXT:         (drop
  ;; CHECK-NEXT:          (br_if $__inlined_func$fib1
  ;; CHECK-NEXT:           (local.tee $3
  ;; CHECK-NEXT:            (i32.sub
  ;; CHECK-NEXT:             (local.get $2)
  ;; CHECK-NEXT:             (i32.const 1)
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:           (i32.le_s
  ;; CHECK-NEXT:            (local.get $3)
  ;; CHECK-NEXT:            (i32.const 2)
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:          )
  ;; CHECK-NEXT:         )
  ;; CHECK-NEXT:         (i32.add
  ;; CHECK-NEXT:          (block $__inlined_func$fib2 (result i32)
  ;; CHECK-NEXT:           (drop
  ;; CHECK-NEXT:            (br_if $__inlined_func$fib2
  ;; CHECK-NEXT:             (local.tee $4
  ;; CHECK-NEXT:              (i32.sub
  ;; CHECK-NEXT:               (local.get $3)
  ;; CHECK-NEXT:               (i32.const 1)
  ;; CHECK-NEXT:              )
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:             (i32.le_s
  ;; CHECK-NEXT:              (local.get $4)
  ;; CHECK-NEXT:              (i32.const 2)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:           (i32.add
  ;; CHECK-NEXT:            (call $fib
  ;; CHECK-NEXT:             (i32.sub
  ;; CHECK-NEXT:              (local.get $4)
  ;; CHECK-NEXT:              (i32.const 1)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:            (call $fib
  ;; CHECK-NEXT:             (i32.sub
  ;; CHECK-NEXT:              (local.get $4)
  ;; CHECK-NEXT:              (i32.const 2)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:          )
  ;; CHECK-NEXT:          (block $__inlined_func$fib3 (result i32)
  ;; CHECK-NEXT:           (drop
  ;; CHECK-NEXT:            (br_if $__inlined_func$fib3
  ;; CHECK-NEXT:             (local.tee $3
  ;; CHECK-NEXT:              (i32.sub
  ;; CHECK-NEXT:               (local.get $3)
  ;; CHECK-NEXT:               (i32.const 2)
  ;; CHECK-NEXT:              )
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:             (i32.le_s
  ;; CHECK-NEXT:              (local.get $3)
  ;; CHECK-NEXT:              (i32.const 2)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:           (i32.add
  ;; CHECK-NEXT:            (call $fib
  ;; CHECK-NEXT:             (i32.sub
  ;; CHECK-NEXT:              (local.get $3)
  ;; CHECK-NEXT:              (i32.const 1)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:            (call $fib
  ;; CHECK-NEXT:             (i32.sub
  ;; CHECK-NEXT:              (local.get $3)
  ;; CHECK-NEXT:              (i32.const 2)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:          )
  ;; CHECK-NEXT:         )
  ;; CHECK-NEXT:        )
  ;; CHECK-NEXT:        (block $__inlined_func$fib24 (result i32)
  ;; CHECK-NEXT:         (drop
  ;; CHECK-NEXT:          (br_if $__inlined_func$fib24
  ;; CHECK-NEXT:           (local.tee $2
  ;; CHECK-NEXT:            (i32.sub
  ;; CHECK-NEXT:             (local.get $2)
  ;; CHECK-NEXT:             (i32.const 2)
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:           (i32.le_s
  ;; CHECK-NEXT:            (local.get $2)
  ;; CHECK-NEXT:            (i32.const 2)
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:          )
  ;; CHECK-NEXT:         )
  ;; CHECK-NEXT:         (i32.add
  ;; CHECK-NEXT:          (block $__inlined_func$fib5 (result i32)
  ;; CHECK-NEXT:           (drop
  ;; CHECK-NEXT:            (br_if $__inlined_func$fib5
  ;; CHECK-NEXT:             (local.tee $3
  ;; CHECK-NEXT:              (i32.sub
  ;; CHECK-NEXT:               (local.get $2)
  ;; CHECK-NEXT:               (i32.const 1)
  ;; CHECK-NEXT:              )
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:             (i32.le_s
  ;; CHECK-NEXT:              (local.get $3)
  ;; CHECK-NEXT:              (i32.const 2)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:           (i32.add
  ;; CHECK-NEXT:            (call $fib
  ;; CHECK-NEXT:             (i32.sub
  ;; CHECK-NEXT:              (local.get $3)
  ;; CHECK-NEXT:              (i32.const 1)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:            (call $fib
  ;; CHECK-NEXT:             (i32.sub
  ;; CHECK-NEXT:              (local.get $3)
  ;; CHECK-NEXT:              (i32.const 2)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:          )
  ;; CHECK-NEXT:          (block $__inlined_func$fib6 (result i32)
  ;; CHECK-NEXT:           (drop
  ;; CHECK-NEXT:            (br_if $__inlined_func$fib6
  ;; CHECK-NEXT:             (local.tee $2
  ;; CHECK-NEXT:              (i32.sub
  ;; CHECK-NEXT:               (local.get $2)
  ;; CHECK-NEXT:               (i32.const 2)
  ;; CHECK-NEXT:              )
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:             (i32.le_s
  ;; CHECK-NEXT:              (local.get $2)
  ;; CHECK-NEXT:              (i32.const 2)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:           (i32.add
  ;; CHECK-NEXT:            (call $fib
  ;; CHECK-NEXT:             (i32.sub
  ;; CHECK-NEXT:              (local.get $2)
  ;; CHECK-NEXT:              (i32.const 1)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:            (call $fib
  ;; CHECK-NEXT:             (i32.sub
  ;; CHECK-NEXT:              (local.get $2)
  ;; CHECK-NEXT:              (i32.const 2)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:          )
  ;; CHECK-NEXT:         )
  ;; CHECK-NEXT:        )
  ;; CHECK-NEXT:       )
  ;; CHECK-NEXT:      )
  ;; CHECK-NEXT:      (block $__inlined_func$fib13 (result i32)
  ;; CHECK-NEXT:       (drop
  ;; CHECK-NEXT:        (br_if $__inlined_func$fib13
  ;; CHECK-NEXT:         (local.tee $1
  ;; CHECK-NEXT:          (i32.sub
  ;; CHECK-NEXT:           (local.get $1)
  ;; CHECK-NEXT:           (i32.const 2)
  ;; CHECK-NEXT:          )
  ;; CHECK-NEXT:         )
  ;; CHECK-NEXT:         (i32.le_s
  ;; CHECK-NEXT:          (local.get $1)
  ;; CHECK-NEXT:          (i32.const 2)
  ;; CHECK-NEXT:         )
  ;; CHECK-NEXT:        )
  ;; CHECK-NEXT:       )
  ;; CHECK-NEXT:       (i32.add
  ;; CHECK-NEXT:        (block $__inlined_func$fib4 (result i32)
  ;; CHECK-NEXT:         (drop
  ;; CHECK-NEXT:          (br_if $__inlined_func$fib4
  ;; CHECK-NEXT:           (local.tee $2
  ;; CHECK-NEXT:            (i32.sub
  ;; CHECK-NEXT:             (local.get $1)
  ;; CHECK-NEXT:             (i32.const 1)
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:           (i32.le_s
  ;; CHECK-NEXT:            (local.get $2)
  ;; CHECK-NEXT:            (i32.const 2)
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:          )
  ;; CHECK-NEXT:         )
  ;; CHECK-NEXT:         (i32.add
  ;; CHECK-NEXT:          (block $__inlined_func$fib7 (result i32)
  ;; CHECK-NEXT:           (drop
  ;; CHECK-NEXT:            (br_if $__inlined_func$fib7
  ;; CHECK-NEXT:             (local.tee $3
  ;; CHECK-NEXT:              (i32.sub
  ;; CHECK-NEXT:               (local.get $2)
  ;; CHECK-NEXT:               (i32.const 1)
  ;; CHECK-NEXT:              )
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:             (i32.le_s
  ;; CHECK-NEXT:              (local.get $3)
  ;; CHECK-NEXT:              (i32.const 2)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:           (i32.add
  ;; CHECK-NEXT:            (call $fib
  ;; CHECK-NEXT:             (i32.sub
  ;; CHECK-NEXT:              (local.get $3)
  ;; CHECK-NEXT:              (i32.const 1)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:            (call $fib
  ;; CHECK-NEXT:             (i32.sub
  ;; CHECK-NEXT:              (local.get $3)
  ;; CHECK-NEXT:              (i32.const 2)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:          )
  ;; CHECK-NEXT:          (block $__inlined_func$fib8 (result i32)
  ;; CHECK-NEXT:           (drop
  ;; CHECK-NEXT:            (br_if $__inlined_func$fib8
  ;; CHECK-NEXT:             (local.tee $2
  ;; CHECK-NEXT:              (i32.sub
  ;; CHECK-NEXT:               (local.get $2)
  ;; CHECK-NEXT:               (i32.const 2)
  ;; CHECK-NEXT:              )
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:             (i32.le_s
  ;; CHECK-NEXT:              (local.get $2)
  ;; CHECK-NEXT:              (i32.const 2)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:           (i32.add
  ;; CHECK-NEXT:            (call $fib
  ;; CHECK-NEXT:             (i32.sub
  ;; CHECK-NEXT:              (local.get $2)
  ;; CHECK-NEXT:              (i32.const 1)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:            (call $fib
  ;; CHECK-NEXT:             (i32.sub
  ;; CHECK-NEXT:              (local.get $2)
  ;; CHECK-NEXT:              (i32.const 2)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:          )
  ;; CHECK-NEXT:         )
  ;; CHECK-NEXT:        )
  ;; CHECK-NEXT:        (block $__inlined_func$fib59 (result i32)
  ;; CHECK-NEXT:         (drop
  ;; CHECK-NEXT:          (br_if $__inlined_func$fib59
  ;; CHECK-NEXT:           (local.tee $1
  ;; CHECK-NEXT:            (i32.sub
  ;; CHECK-NEXT:             (local.get $1)
  ;; CHECK-NEXT:             (i32.const 2)
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:           (i32.le_s
  ;; CHECK-NEXT:            (local.get $1)
  ;; CHECK-NEXT:            (i32.const 2)
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:          )
  ;; CHECK-NEXT:         )
  ;; CHECK-NEXT:         (i32.add
  ;; CHECK-NEXT:          (block $__inlined_func$fib10 (result i32)
  ;; CHECK-NEXT:           (drop
  ;; CHECK-NEXT:            (br_if $__inlined_func$fib10
  ;; CHECK-NEXT:             (local.tee $2
  ;; CHECK-NEXT:              (i32.sub
  ;; CHECK-NEXT:               (local.get $1)
  ;; CHECK-NEXT:               (i32.const 1)
  ;; CHECK-NEXT:              )
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:             (i32.le_s
  ;; CHECK-NEXT:              (local.get $2)
  ;; CHECK-NEXT:              (i32.const 2)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:           (i32.add
  ;; CHECK-NEXT:            (call $fib
  ;; CHECK-NEXT:             (i32.sub
  ;; CHECK-NEXT:              (local.get $2)
  ;; CHECK-NEXT:              (i32.const 1)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:            (call $fib
  ;; CHECK-NEXT:             (i32.sub
  ;; CHECK-NEXT:              (local.get $2)
  ;; CHECK-NEXT:              (i32.const 2)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:          )
  ;; CHECK-NEXT:          (block $__inlined_func$fib11 (result i32)
  ;; CHECK-NEXT:           (drop
  ;; CHECK-NEXT:            (br_if $__inlined_func$fib11
  ;; CHECK-NEXT:             (local.tee $1
  ;; CHECK-NEXT:              (i32.sub
  ;; CHECK-NEXT:               (local.get $1)
  ;; CHECK-NEXT:               (i32.const 2)
  ;; CHECK-NEXT:              )
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:             (i32.le_s
  ;; CHECK-NEXT:              (local.get $1)
  ;; CHECK-NEXT:              (i32.const 2)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:           (i32.add
  ;; CHECK-NEXT:            (call $fib
  ;; CHECK-NEXT:             (i32.sub
  ;; CHECK-NEXT:              (local.get $1)
  ;; CHECK-NEXT:              (i32.const 1)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:            (call $fib
  ;; CHECK-NEXT:             (i32.sub
  ;; CHECK-NEXT:              (local.get $1)
  ;; CHECK-NEXT:              (i32.const 2)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:          )
  ;; CHECK-NEXT:         )
  ;; CHECK-NEXT:        )
  ;; CHECK-NEXT:       )
  ;; CHECK-NEXT:      )
  ;; CHECK-NEXT:     )
  ;; CHECK-NEXT:    )
  ;; CHECK-NEXT:    (block $__inlined_func$fib02 (result i32)
  ;; CHECK-NEXT:     (drop
  ;; CHECK-NEXT:      (br_if $__inlined_func$fib02
  ;; CHECK-NEXT:       (local.tee $0
  ;; CHECK-NEXT:        (i32.sub
  ;; CHECK-NEXT:         (local.get $0)
  ;; CHECK-NEXT:         (i32.const 2)
  ;; CHECK-NEXT:        )
  ;; CHECK-NEXT:       )
  ;; CHECK-NEXT:       (i32.le_s
  ;; CHECK-NEXT:        (local.get $0)
  ;; CHECK-NEXT:        (i32.const 2)
  ;; CHECK-NEXT:       )
  ;; CHECK-NEXT:      )
  ;; CHECK-NEXT:     )
  ;; CHECK-NEXT:     (i32.add
  ;; CHECK-NEXT:      (block $__inlined_func$fib312 (result i32)
  ;; CHECK-NEXT:       (drop
  ;; CHECK-NEXT:        (br_if $__inlined_func$fib312
  ;; CHECK-NEXT:         (local.tee $1
  ;; CHECK-NEXT:          (i32.sub
  ;; CHECK-NEXT:           (local.get $0)
  ;; CHECK-NEXT:           (i32.const 1)
  ;; CHECK-NEXT:          )
  ;; CHECK-NEXT:         )
  ;; CHECK-NEXT:         (i32.le_s
  ;; CHECK-NEXT:          (local.get $1)
  ;; CHECK-NEXT:          (i32.const 2)
  ;; CHECK-NEXT:         )
  ;; CHECK-NEXT:        )
  ;; CHECK-NEXT:       )
  ;; CHECK-NEXT:       (i32.add
  ;; CHECK-NEXT:        (block $__inlined_func$fib613 (result i32)
  ;; CHECK-NEXT:         (drop
  ;; CHECK-NEXT:          (br_if $__inlined_func$fib613
  ;; CHECK-NEXT:           (local.tee $2
  ;; CHECK-NEXT:            (i32.sub
  ;; CHECK-NEXT:             (local.get $1)
  ;; CHECK-NEXT:             (i32.const 1)
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:           (i32.le_s
  ;; CHECK-NEXT:            (local.get $2)
  ;; CHECK-NEXT:            (i32.const 2)
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:          )
  ;; CHECK-NEXT:         )
  ;; CHECK-NEXT:         (i32.add
  ;; CHECK-NEXT:          (block $__inlined_func$fib14 (result i32)
  ;; CHECK-NEXT:           (drop
  ;; CHECK-NEXT:            (br_if $__inlined_func$fib14
  ;; CHECK-NEXT:             (local.tee $3
  ;; CHECK-NEXT:              (i32.sub
  ;; CHECK-NEXT:               (local.get $2)
  ;; CHECK-NEXT:               (i32.const 1)
  ;; CHECK-NEXT:              )
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:             (i32.le_s
  ;; CHECK-NEXT:              (local.get $3)
  ;; CHECK-NEXT:              (i32.const 2)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:           (i32.add
  ;; CHECK-NEXT:            (call $fib
  ;; CHECK-NEXT:             (i32.sub
  ;; CHECK-NEXT:              (local.get $3)
  ;; CHECK-NEXT:              (i32.const 1)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:            (call $fib
  ;; CHECK-NEXT:             (i32.sub
  ;; CHECK-NEXT:              (local.get $3)
  ;; CHECK-NEXT:              (i32.const 2)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:          )
  ;; CHECK-NEXT:          (block $__inlined_func$fib15 (result i32)
  ;; CHECK-NEXT:           (drop
  ;; CHECK-NEXT:            (br_if $__inlined_func$fib15
  ;; CHECK-NEXT:             (local.tee $2
  ;; CHECK-NEXT:              (i32.sub
  ;; CHECK-NEXT:               (local.get $2)
  ;; CHECK-NEXT:               (i32.const 2)
  ;; CHECK-NEXT:              )
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:             (i32.le_s
  ;; CHECK-NEXT:              (local.get $2)
  ;; CHECK-NEXT:              (i32.const 2)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:           (i32.add
  ;; CHECK-NEXT:            (call $fib
  ;; CHECK-NEXT:             (i32.sub
  ;; CHECK-NEXT:              (local.get $2)
  ;; CHECK-NEXT:              (i32.const 1)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:            (call $fib
  ;; CHECK-NEXT:             (i32.sub
  ;; CHECK-NEXT:              (local.get $2)
  ;; CHECK-NEXT:              (i32.const 2)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:          )
  ;; CHECK-NEXT:         )
  ;; CHECK-NEXT:        )
  ;; CHECK-NEXT:        (block $__inlined_func$fib716 (result i32)
  ;; CHECK-NEXT:         (drop
  ;; CHECK-NEXT:          (br_if $__inlined_func$fib716
  ;; CHECK-NEXT:           (local.tee $1
  ;; CHECK-NEXT:            (i32.sub
  ;; CHECK-NEXT:             (local.get $1)
  ;; CHECK-NEXT:             (i32.const 2)
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:           (i32.le_s
  ;; CHECK-NEXT:            (local.get $1)
  ;; CHECK-NEXT:            (i32.const 2)
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:          )
  ;; CHECK-NEXT:         )
  ;; CHECK-NEXT:         (i32.add
  ;; CHECK-NEXT:          (block $__inlined_func$fib17 (result i32)
  ;; CHECK-NEXT:           (drop
  ;; CHECK-NEXT:            (br_if $__inlined_func$fib17
  ;; CHECK-NEXT:             (local.tee $2
  ;; CHECK-NEXT:              (i32.sub
  ;; CHECK-NEXT:               (local.get $1)
  ;; CHECK-NEXT:               (i32.const 1)
  ;; CHECK-NEXT:              )
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:             (i32.le_s
  ;; CHECK-NEXT:              (local.get $2)
  ;; CHECK-NEXT:              (i32.const 2)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:           (i32.add
  ;; CHECK-NEXT:            (call $fib
  ;; CHECK-NEXT:             (i32.sub
  ;; CHECK-NEXT:              (local.get $2)
  ;; CHECK-NEXT:              (i32.const 1)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:            (call $fib
  ;; CHECK-NEXT:             (i32.sub
  ;; CHECK-NEXT:              (local.get $2)
  ;; CHECK-NEXT:              (i32.const 2)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:          )
  ;; CHECK-NEXT:          (block $__inlined_func$fib18 (result i32)
  ;; CHECK-NEXT:           (drop
  ;; CHECK-NEXT:            (br_if $__inlined_func$fib18
  ;; CHECK-NEXT:             (local.tee $1
  ;; CHECK-NEXT:              (i32.sub
  ;; CHECK-NEXT:               (local.get $1)
  ;; CHECK-NEXT:               (i32.const 2)
  ;; CHECK-NEXT:              )
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:             (i32.le_s
  ;; CHECK-NEXT:              (local.get $1)
  ;; CHECK-NEXT:              (i32.const 2)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:           (i32.add
  ;; CHECK-NEXT:            (call $fib
  ;; CHECK-NEXT:             (i32.sub
  ;; CHECK-NEXT:              (local.get $1)
  ;; CHECK-NEXT:              (i32.const 1)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:            (call $fib
  ;; CHECK-NEXT:             (i32.sub
  ;; CHECK-NEXT:              (local.get $1)
  ;; CHECK-NEXT:              (i32.const 2)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:          )
  ;; CHECK-NEXT:         )
  ;; CHECK-NEXT:        )
  ;; CHECK-NEXT:       )
  ;; CHECK-NEXT:      )
  ;; CHECK-NEXT:      (block $__inlined_func$fib48 (result i32)
  ;; CHECK-NEXT:       (drop
  ;; CHECK-NEXT:        (br_if $__inlined_func$fib48
  ;; CHECK-NEXT:         (local.tee $0
  ;; CHECK-NEXT:          (i32.sub
  ;; CHECK-NEXT:           (local.get $0)
  ;; CHECK-NEXT:           (i32.const 2)
  ;; CHECK-NEXT:          )
  ;; CHECK-NEXT:         )
  ;; CHECK-NEXT:         (i32.le_s
  ;; CHECK-NEXT:          (local.get $0)
  ;; CHECK-NEXT:          (i32.const 2)
  ;; CHECK-NEXT:         )
  ;; CHECK-NEXT:        )
  ;; CHECK-NEXT:       )
  ;; CHECK-NEXT:       (i32.add
  ;; CHECK-NEXT:        (block $__inlined_func$fib9 (result i32)
  ;; CHECK-NEXT:         (drop
  ;; CHECK-NEXT:          (br_if $__inlined_func$fib9
  ;; CHECK-NEXT:           (local.tee $1
  ;; CHECK-NEXT:            (i32.sub
  ;; CHECK-NEXT:             (local.get $0)
  ;; CHECK-NEXT:             (i32.const 1)
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:           (i32.le_s
  ;; CHECK-NEXT:            (local.get $1)
  ;; CHECK-NEXT:            (i32.const 2)
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:          )
  ;; CHECK-NEXT:         )
  ;; CHECK-NEXT:         (i32.add
  ;; CHECK-NEXT:          (block $__inlined_func$fib19 (result i32)
  ;; CHECK-NEXT:           (drop
  ;; CHECK-NEXT:            (br_if $__inlined_func$fib19
  ;; CHECK-NEXT:             (local.tee $2
  ;; CHECK-NEXT:              (i32.sub
  ;; CHECK-NEXT:               (local.get $1)
  ;; CHECK-NEXT:               (i32.const 1)
  ;; CHECK-NEXT:              )
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:             (i32.le_s
  ;; CHECK-NEXT:              (local.get $2)
  ;; CHECK-NEXT:              (i32.const 2)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:           (i32.add
  ;; CHECK-NEXT:            (call $fib
  ;; CHECK-NEXT:             (i32.sub
  ;; CHECK-NEXT:              (local.get $2)
  ;; CHECK-NEXT:              (i32.const 1)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:            (call $fib
  ;; CHECK-NEXT:             (i32.sub
  ;; CHECK-NEXT:              (local.get $2)
  ;; CHECK-NEXT:              (i32.const 2)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:          )
  ;; CHECK-NEXT:          (block $__inlined_func$fib20 (result i32)
  ;; CHECK-NEXT:           (drop
  ;; CHECK-NEXT:            (br_if $__inlined_func$fib20
  ;; CHECK-NEXT:             (local.tee $1
  ;; CHECK-NEXT:              (i32.sub
  ;; CHECK-NEXT:               (local.get $1)
  ;; CHECK-NEXT:               (i32.const 2)
  ;; CHECK-NEXT:              )
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:             (i32.le_s
  ;; CHECK-NEXT:              (local.get $1)
  ;; CHECK-NEXT:              (i32.const 2)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:           (i32.add
  ;; CHECK-NEXT:            (call $fib
  ;; CHECK-NEXT:             (i32.sub
  ;; CHECK-NEXT:              (local.get $1)
  ;; CHECK-NEXT:              (i32.const 1)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:            (call $fib
  ;; CHECK-NEXT:             (i32.sub
  ;; CHECK-NEXT:              (local.get $1)
  ;; CHECK-NEXT:              (i32.const 2)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:          )
  ;; CHECK-NEXT:         )
  ;; CHECK-NEXT:        )
  ;; CHECK-NEXT:        (block $__inlined_func$fib1021 (result i32)
  ;; CHECK-NEXT:         (drop
  ;; CHECK-NEXT:          (br_if $__inlined_func$fib1021
  ;; CHECK-NEXT:           (local.tee $0
  ;; CHECK-NEXT:            (i32.sub
  ;; CHECK-NEXT:             (local.get $0)
  ;; CHECK-NEXT:             (i32.const 2)
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:           (i32.le_s
  ;; CHECK-NEXT:            (local.get $0)
  ;; CHECK-NEXT:            (i32.const 2)
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:          )
  ;; CHECK-NEXT:         )
  ;; CHECK-NEXT:         (i32.add
  ;; CHECK-NEXT:          (block $__inlined_func$fib22 (result i32)
  ;; CHECK-NEXT:           (drop
  ;; CHECK-NEXT:            (br_if $__inlined_func$fib22
  ;; CHECK-NEXT:             (local.tee $1
  ;; CHECK-NEXT:              (i32.sub
  ;; CHECK-NEXT:               (local.get $0)
  ;; CHECK-NEXT:               (i32.const 1)
  ;; CHECK-NEXT:              )
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:             (i32.le_s
  ;; CHECK-NEXT:              (local.get $1)
  ;; CHECK-NEXT:              (i32.const 2)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:           (i32.add
  ;; CHECK-NEXT:            (call $fib
  ;; CHECK-NEXT:             (i32.sub
  ;; CHECK-NEXT:              (local.get $1)
  ;; CHECK-NEXT:              (i32.const 1)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:            (call $fib
  ;; CHECK-NEXT:             (i32.sub
  ;; CHECK-NEXT:              (local.get $1)
  ;; CHECK-NEXT:              (i32.const 2)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:          )
  ;; CHECK-NEXT:          (block $__inlined_func$fib23 (result i32)
  ;; CHECK-NEXT:           (drop
  ;; CHECK-NEXT:            (br_if $__inlined_func$fib23
  ;; CHECK-NEXT:             (local.tee $0
  ;; CHECK-NEXT:              (i32.sub
  ;; CHECK-NEXT:               (local.get $0)
  ;; CHECK-NEXT:               (i32.const 2)
  ;; CHECK-NEXT:              )
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:             (i32.le_s
  ;; CHECK-NEXT:              (local.get $0)
  ;; CHECK-NEXT:              (i32.const 2)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:           (i32.add
  ;; CHECK-NEXT:            (call $fib
  ;; CHECK-NEXT:             (i32.sub
  ;; CHECK-NEXT:              (local.get $0)
  ;; CHECK-NEXT:              (i32.const 1)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:            (call $fib
  ;; CHECK-NEXT:             (i32.sub
  ;; CHECK-NEXT:              (local.get $0)
  ;; CHECK-NEXT:              (i32.const 2)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:          )
  ;; CHECK-NEXT:         )
  ;; CHECK-NEXT:        )
  ;; CHECK-NEXT:       )
  ;; CHECK-NEXT:      )
  ;; CHECK-NEXT:     )
  ;; CHECK-NEXT:    )
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT: )
  (func $t2 (export "t2") (type $t0) (param $p0 i32) (result i32)
    (call $fib
      (local.get $p0)
    )
  )

  ;; CHECK:      (func $t3 (; has Stack IR ;) (param $0 i32) (result i32)
  ;; CHECK-NEXT:  (local $1 i32)
  ;; CHECK-NEXT:  (local $2 i32)
  ;; CHECK-NEXT:  (local $3 i32)
  ;; CHECK-NEXT:  (local $4 i32)
  ;; CHECK-NEXT:  (block $__inlined_func$fib (result i32)
  ;; CHECK-NEXT:   (drop
  ;; CHECK-NEXT:    (br_if $__inlined_func$fib
  ;; CHECK-NEXT:     (local.tee $0
  ;; CHECK-NEXT:      (i32.add
  ;; CHECK-NEXT:       (local.get $0)
  ;; CHECK-NEXT:       (i32.const 1)
  ;; CHECK-NEXT:      )
  ;; CHECK-NEXT:     )
  ;; CHECK-NEXT:     (i32.le_s
  ;; CHECK-NEXT:      (local.get $0)
  ;; CHECK-NEXT:      (i32.const 2)
  ;; CHECK-NEXT:     )
  ;; CHECK-NEXT:    )
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:   (i32.add
  ;; CHECK-NEXT:    (block $__inlined_func$fib0 (result i32)
  ;; CHECK-NEXT:     (drop
  ;; CHECK-NEXT:      (br_if $__inlined_func$fib0
  ;; CHECK-NEXT:       (local.tee $1
  ;; CHECK-NEXT:        (i32.sub
  ;; CHECK-NEXT:         (local.get $0)
  ;; CHECK-NEXT:         (i32.const 1)
  ;; CHECK-NEXT:        )
  ;; CHECK-NEXT:       )
  ;; CHECK-NEXT:       (i32.le_s
  ;; CHECK-NEXT:        (local.get $1)
  ;; CHECK-NEXT:        (i32.const 2)
  ;; CHECK-NEXT:       )
  ;; CHECK-NEXT:      )
  ;; CHECK-NEXT:     )
  ;; CHECK-NEXT:     (i32.add
  ;; CHECK-NEXT:      (block $__inlined_func$fib1 (result i32)
  ;; CHECK-NEXT:       (drop
  ;; CHECK-NEXT:        (br_if $__inlined_func$fib1
  ;; CHECK-NEXT:         (local.tee $2
  ;; CHECK-NEXT:          (i32.sub
  ;; CHECK-NEXT:           (local.get $1)
  ;; CHECK-NEXT:           (i32.const 1)
  ;; CHECK-NEXT:          )
  ;; CHECK-NEXT:         )
  ;; CHECK-NEXT:         (i32.le_s
  ;; CHECK-NEXT:          (local.get $2)
  ;; CHECK-NEXT:          (i32.const 2)
  ;; CHECK-NEXT:         )
  ;; CHECK-NEXT:        )
  ;; CHECK-NEXT:       )
  ;; CHECK-NEXT:       (i32.add
  ;; CHECK-NEXT:        (block $__inlined_func$fib2 (result i32)
  ;; CHECK-NEXT:         (drop
  ;; CHECK-NEXT:          (br_if $__inlined_func$fib2
  ;; CHECK-NEXT:           (local.tee $3
  ;; CHECK-NEXT:            (i32.sub
  ;; CHECK-NEXT:             (local.get $2)
  ;; CHECK-NEXT:             (i32.const 1)
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:           (i32.le_s
  ;; CHECK-NEXT:            (local.get $3)
  ;; CHECK-NEXT:            (i32.const 2)
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:          )
  ;; CHECK-NEXT:         )
  ;; CHECK-NEXT:         (i32.add
  ;; CHECK-NEXT:          (block $__inlined_func$fib3 (result i32)
  ;; CHECK-NEXT:           (drop
  ;; CHECK-NEXT:            (br_if $__inlined_func$fib3
  ;; CHECK-NEXT:             (local.tee $4
  ;; CHECK-NEXT:              (i32.sub
  ;; CHECK-NEXT:               (local.get $3)
  ;; CHECK-NEXT:               (i32.const 1)
  ;; CHECK-NEXT:              )
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:             (i32.le_s
  ;; CHECK-NEXT:              (local.get $4)
  ;; CHECK-NEXT:              (i32.const 2)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:           (i32.add
  ;; CHECK-NEXT:            (call $fib
  ;; CHECK-NEXT:             (i32.sub
  ;; CHECK-NEXT:              (local.get $4)
  ;; CHECK-NEXT:              (i32.const 1)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:            (call $fib
  ;; CHECK-NEXT:             (i32.sub
  ;; CHECK-NEXT:              (local.get $4)
  ;; CHECK-NEXT:              (i32.const 2)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:          )
  ;; CHECK-NEXT:          (block $__inlined_func$fib4 (result i32)
  ;; CHECK-NEXT:           (drop
  ;; CHECK-NEXT:            (br_if $__inlined_func$fib4
  ;; CHECK-NEXT:             (local.tee $3
  ;; CHECK-NEXT:              (i32.sub
  ;; CHECK-NEXT:               (local.get $3)
  ;; CHECK-NEXT:               (i32.const 2)
  ;; CHECK-NEXT:              )
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:             (i32.le_s
  ;; CHECK-NEXT:              (local.get $3)
  ;; CHECK-NEXT:              (i32.const 2)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:           (i32.add
  ;; CHECK-NEXT:            (call $fib
  ;; CHECK-NEXT:             (i32.sub
  ;; CHECK-NEXT:              (local.get $3)
  ;; CHECK-NEXT:              (i32.const 1)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:            (call $fib
  ;; CHECK-NEXT:             (i32.sub
  ;; CHECK-NEXT:              (local.get $3)
  ;; CHECK-NEXT:              (i32.const 2)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:          )
  ;; CHECK-NEXT:         )
  ;; CHECK-NEXT:        )
  ;; CHECK-NEXT:        (block $__inlined_func$fib35 (result i32)
  ;; CHECK-NEXT:         (drop
  ;; CHECK-NEXT:          (br_if $__inlined_func$fib35
  ;; CHECK-NEXT:           (local.tee $2
  ;; CHECK-NEXT:            (i32.sub
  ;; CHECK-NEXT:             (local.get $2)
  ;; CHECK-NEXT:             (i32.const 2)
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:           (i32.le_s
  ;; CHECK-NEXT:            (local.get $2)
  ;; CHECK-NEXT:            (i32.const 2)
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:          )
  ;; CHECK-NEXT:         )
  ;; CHECK-NEXT:         (i32.add
  ;; CHECK-NEXT:          (block $__inlined_func$fib6 (result i32)
  ;; CHECK-NEXT:           (drop
  ;; CHECK-NEXT:            (br_if $__inlined_func$fib6
  ;; CHECK-NEXT:             (local.tee $3
  ;; CHECK-NEXT:              (i32.sub
  ;; CHECK-NEXT:               (local.get $2)
  ;; CHECK-NEXT:               (i32.const 1)
  ;; CHECK-NEXT:              )
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:             (i32.le_s
  ;; CHECK-NEXT:              (local.get $3)
  ;; CHECK-NEXT:              (i32.const 2)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:           (i32.add
  ;; CHECK-NEXT:            (call $fib
  ;; CHECK-NEXT:             (i32.sub
  ;; CHECK-NEXT:              (local.get $3)
  ;; CHECK-NEXT:              (i32.const 1)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:            (call $fib
  ;; CHECK-NEXT:             (i32.sub
  ;; CHECK-NEXT:              (local.get $3)
  ;; CHECK-NEXT:              (i32.const 2)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:          )
  ;; CHECK-NEXT:          (block $__inlined_func$fib7 (result i32)
  ;; CHECK-NEXT:           (drop
  ;; CHECK-NEXT:            (br_if $__inlined_func$fib7
  ;; CHECK-NEXT:             (local.tee $2
  ;; CHECK-NEXT:              (i32.sub
  ;; CHECK-NEXT:               (local.get $2)
  ;; CHECK-NEXT:               (i32.const 2)
  ;; CHECK-NEXT:              )
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:             (i32.le_s
  ;; CHECK-NEXT:              (local.get $2)
  ;; CHECK-NEXT:              (i32.const 2)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:           (i32.add
  ;; CHECK-NEXT:            (call $fib
  ;; CHECK-NEXT:             (i32.sub
  ;; CHECK-NEXT:              (local.get $2)
  ;; CHECK-NEXT:              (i32.const 1)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:            (call $fib
  ;; CHECK-NEXT:             (i32.sub
  ;; CHECK-NEXT:              (local.get $2)
  ;; CHECK-NEXT:              (i32.const 2)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:          )
  ;; CHECK-NEXT:         )
  ;; CHECK-NEXT:        )
  ;; CHECK-NEXT:       )
  ;; CHECK-NEXT:      )
  ;; CHECK-NEXT:      (block $__inlined_func$fib24 (result i32)
  ;; CHECK-NEXT:       (drop
  ;; CHECK-NEXT:        (br_if $__inlined_func$fib24
  ;; CHECK-NEXT:         (local.tee $1
  ;; CHECK-NEXT:          (i32.sub
  ;; CHECK-NEXT:           (local.get $1)
  ;; CHECK-NEXT:           (i32.const 2)
  ;; CHECK-NEXT:          )
  ;; CHECK-NEXT:         )
  ;; CHECK-NEXT:         (i32.le_s
  ;; CHECK-NEXT:          (local.get $1)
  ;; CHECK-NEXT:          (i32.const 2)
  ;; CHECK-NEXT:         )
  ;; CHECK-NEXT:        )
  ;; CHECK-NEXT:       )
  ;; CHECK-NEXT:       (i32.add
  ;; CHECK-NEXT:        (block $__inlined_func$fib5 (result i32)
  ;; CHECK-NEXT:         (drop
  ;; CHECK-NEXT:          (br_if $__inlined_func$fib5
  ;; CHECK-NEXT:           (local.tee $2
  ;; CHECK-NEXT:            (i32.sub
  ;; CHECK-NEXT:             (local.get $1)
  ;; CHECK-NEXT:             (i32.const 1)
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:           (i32.le_s
  ;; CHECK-NEXT:            (local.get $2)
  ;; CHECK-NEXT:            (i32.const 2)
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:          )
  ;; CHECK-NEXT:         )
  ;; CHECK-NEXT:         (i32.add
  ;; CHECK-NEXT:          (block $__inlined_func$fib8 (result i32)
  ;; CHECK-NEXT:           (drop
  ;; CHECK-NEXT:            (br_if $__inlined_func$fib8
  ;; CHECK-NEXT:             (local.tee $3
  ;; CHECK-NEXT:              (i32.sub
  ;; CHECK-NEXT:               (local.get $2)
  ;; CHECK-NEXT:               (i32.const 1)
  ;; CHECK-NEXT:              )
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:             (i32.le_s
  ;; CHECK-NEXT:              (local.get $3)
  ;; CHECK-NEXT:              (i32.const 2)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:           (i32.add
  ;; CHECK-NEXT:            (call $fib
  ;; CHECK-NEXT:             (i32.sub
  ;; CHECK-NEXT:              (local.get $3)
  ;; CHECK-NEXT:              (i32.const 1)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:            (call $fib
  ;; CHECK-NEXT:             (i32.sub
  ;; CHECK-NEXT:              (local.get $3)
  ;; CHECK-NEXT:              (i32.const 2)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:          )
  ;; CHECK-NEXT:          (block $__inlined_func$fib9 (result i32)
  ;; CHECK-NEXT:           (drop
  ;; CHECK-NEXT:            (br_if $__inlined_func$fib9
  ;; CHECK-NEXT:             (local.tee $2
  ;; CHECK-NEXT:              (i32.sub
  ;; CHECK-NEXT:               (local.get $2)
  ;; CHECK-NEXT:               (i32.const 2)
  ;; CHECK-NEXT:              )
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:             (i32.le_s
  ;; CHECK-NEXT:              (local.get $2)
  ;; CHECK-NEXT:              (i32.const 2)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:           (i32.add
  ;; CHECK-NEXT:            (call $fib
  ;; CHECK-NEXT:             (i32.sub
  ;; CHECK-NEXT:              (local.get $2)
  ;; CHECK-NEXT:              (i32.const 1)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:            (call $fib
  ;; CHECK-NEXT:             (i32.sub
  ;; CHECK-NEXT:              (local.get $2)
  ;; CHECK-NEXT:              (i32.const 2)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:          )
  ;; CHECK-NEXT:         )
  ;; CHECK-NEXT:        )
  ;; CHECK-NEXT:        (block $__inlined_func$fib610 (result i32)
  ;; CHECK-NEXT:         (drop
  ;; CHECK-NEXT:          (br_if $__inlined_func$fib610
  ;; CHECK-NEXT:           (local.tee $1
  ;; CHECK-NEXT:            (i32.sub
  ;; CHECK-NEXT:             (local.get $1)
  ;; CHECK-NEXT:             (i32.const 2)
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:           (i32.le_s
  ;; CHECK-NEXT:            (local.get $1)
  ;; CHECK-NEXT:            (i32.const 2)
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:          )
  ;; CHECK-NEXT:         )
  ;; CHECK-NEXT:         (i32.add
  ;; CHECK-NEXT:          (block $__inlined_func$fib11 (result i32)
  ;; CHECK-NEXT:           (drop
  ;; CHECK-NEXT:            (br_if $__inlined_func$fib11
  ;; CHECK-NEXT:             (local.tee $2
  ;; CHECK-NEXT:              (i32.sub
  ;; CHECK-NEXT:               (local.get $1)
  ;; CHECK-NEXT:               (i32.const 1)
  ;; CHECK-NEXT:              )
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:             (i32.le_s
  ;; CHECK-NEXT:              (local.get $2)
  ;; CHECK-NEXT:              (i32.const 2)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:           (i32.add
  ;; CHECK-NEXT:            (call $fib
  ;; CHECK-NEXT:             (i32.sub
  ;; CHECK-NEXT:              (local.get $2)
  ;; CHECK-NEXT:              (i32.const 1)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:            (call $fib
  ;; CHECK-NEXT:             (i32.sub
  ;; CHECK-NEXT:              (local.get $2)
  ;; CHECK-NEXT:              (i32.const 2)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:          )
  ;; CHECK-NEXT:          (block $__inlined_func$fib12 (result i32)
  ;; CHECK-NEXT:           (drop
  ;; CHECK-NEXT:            (br_if $__inlined_func$fib12
  ;; CHECK-NEXT:             (local.tee $1
  ;; CHECK-NEXT:              (i32.sub
  ;; CHECK-NEXT:               (local.get $1)
  ;; CHECK-NEXT:               (i32.const 2)
  ;; CHECK-NEXT:              )
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:             (i32.le_s
  ;; CHECK-NEXT:              (local.get $1)
  ;; CHECK-NEXT:              (i32.const 2)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:           (i32.add
  ;; CHECK-NEXT:            (call $fib
  ;; CHECK-NEXT:             (i32.sub
  ;; CHECK-NEXT:              (local.get $1)
  ;; CHECK-NEXT:              (i32.const 1)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:            (call $fib
  ;; CHECK-NEXT:             (i32.sub
  ;; CHECK-NEXT:              (local.get $1)
  ;; CHECK-NEXT:              (i32.const 2)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:          )
  ;; CHECK-NEXT:         )
  ;; CHECK-NEXT:        )
  ;; CHECK-NEXT:       )
  ;; CHECK-NEXT:      )
  ;; CHECK-NEXT:     )
  ;; CHECK-NEXT:    )
  ;; CHECK-NEXT:    (block $__inlined_func$fib13 (result i32)
  ;; CHECK-NEXT:     (drop
  ;; CHECK-NEXT:      (br_if $__inlined_func$fib13
  ;; CHECK-NEXT:       (local.tee $0
  ;; CHECK-NEXT:        (i32.sub
  ;; CHECK-NEXT:         (local.get $0)
  ;; CHECK-NEXT:         (i32.const 2)
  ;; CHECK-NEXT:        )
  ;; CHECK-NEXT:       )
  ;; CHECK-NEXT:       (i32.le_s
  ;; CHECK-NEXT:        (local.get $0)
  ;; CHECK-NEXT:        (i32.const 2)
  ;; CHECK-NEXT:       )
  ;; CHECK-NEXT:      )
  ;; CHECK-NEXT:     )
  ;; CHECK-NEXT:     (i32.add
  ;; CHECK-NEXT:      (block $__inlined_func$fib413 (result i32)
  ;; CHECK-NEXT:       (drop
  ;; CHECK-NEXT:        (br_if $__inlined_func$fib413
  ;; CHECK-NEXT:         (local.tee $1
  ;; CHECK-NEXT:          (i32.sub
  ;; CHECK-NEXT:           (local.get $0)
  ;; CHECK-NEXT:           (i32.const 1)
  ;; CHECK-NEXT:          )
  ;; CHECK-NEXT:         )
  ;; CHECK-NEXT:         (i32.le_s
  ;; CHECK-NEXT:          (local.get $1)
  ;; CHECK-NEXT:          (i32.const 2)
  ;; CHECK-NEXT:         )
  ;; CHECK-NEXT:        )
  ;; CHECK-NEXT:       )
  ;; CHECK-NEXT:       (i32.add
  ;; CHECK-NEXT:        (block $__inlined_func$fib714 (result i32)
  ;; CHECK-NEXT:         (drop
  ;; CHECK-NEXT:          (br_if $__inlined_func$fib714
  ;; CHECK-NEXT:           (local.tee $2
  ;; CHECK-NEXT:            (i32.sub
  ;; CHECK-NEXT:             (local.get $1)
  ;; CHECK-NEXT:             (i32.const 1)
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:           (i32.le_s
  ;; CHECK-NEXT:            (local.get $2)
  ;; CHECK-NEXT:            (i32.const 2)
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:          )
  ;; CHECK-NEXT:         )
  ;; CHECK-NEXT:         (i32.add
  ;; CHECK-NEXT:          (block $__inlined_func$fib15 (result i32)
  ;; CHECK-NEXT:           (drop
  ;; CHECK-NEXT:            (br_if $__inlined_func$fib15
  ;; CHECK-NEXT:             (local.tee $3
  ;; CHECK-NEXT:              (i32.sub
  ;; CHECK-NEXT:               (local.get $2)
  ;; CHECK-NEXT:               (i32.const 1)
  ;; CHECK-NEXT:              )
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:             (i32.le_s
  ;; CHECK-NEXT:              (local.get $3)
  ;; CHECK-NEXT:              (i32.const 2)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:           (i32.add
  ;; CHECK-NEXT:            (call $fib
  ;; CHECK-NEXT:             (i32.sub
  ;; CHECK-NEXT:              (local.get $3)
  ;; CHECK-NEXT:              (i32.const 1)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:            (call $fib
  ;; CHECK-NEXT:             (i32.sub
  ;; CHECK-NEXT:              (local.get $3)
  ;; CHECK-NEXT:              (i32.const 2)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:          )
  ;; CHECK-NEXT:          (block $__inlined_func$fib16 (result i32)
  ;; CHECK-NEXT:           (drop
  ;; CHECK-NEXT:            (br_if $__inlined_func$fib16
  ;; CHECK-NEXT:             (local.tee $2
  ;; CHECK-NEXT:              (i32.sub
  ;; CHECK-NEXT:               (local.get $2)
  ;; CHECK-NEXT:               (i32.const 2)
  ;; CHECK-NEXT:              )
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:             (i32.le_s
  ;; CHECK-NEXT:              (local.get $2)
  ;; CHECK-NEXT:              (i32.const 2)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:           (i32.add
  ;; CHECK-NEXT:            (call $fib
  ;; CHECK-NEXT:             (i32.sub
  ;; CHECK-NEXT:              (local.get $2)
  ;; CHECK-NEXT:              (i32.const 1)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:            (call $fib
  ;; CHECK-NEXT:             (i32.sub
  ;; CHECK-NEXT:              (local.get $2)
  ;; CHECK-NEXT:              (i32.const 2)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:          )
  ;; CHECK-NEXT:         )
  ;; CHECK-NEXT:        )
  ;; CHECK-NEXT:        (block $__inlined_func$fib817 (result i32)
  ;; CHECK-NEXT:         (drop
  ;; CHECK-NEXT:          (br_if $__inlined_func$fib817
  ;; CHECK-NEXT:           (local.tee $1
  ;; CHECK-NEXT:            (i32.sub
  ;; CHECK-NEXT:             (local.get $1)
  ;; CHECK-NEXT:             (i32.const 2)
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:           (i32.le_s
  ;; CHECK-NEXT:            (local.get $1)
  ;; CHECK-NEXT:            (i32.const 2)
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:          )
  ;; CHECK-NEXT:         )
  ;; CHECK-NEXT:         (i32.add
  ;; CHECK-NEXT:          (block $__inlined_func$fib18 (result i32)
  ;; CHECK-NEXT:           (drop
  ;; CHECK-NEXT:            (br_if $__inlined_func$fib18
  ;; CHECK-NEXT:             (local.tee $2
  ;; CHECK-NEXT:              (i32.sub
  ;; CHECK-NEXT:               (local.get $1)
  ;; CHECK-NEXT:               (i32.const 1)
  ;; CHECK-NEXT:              )
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:             (i32.le_s
  ;; CHECK-NEXT:              (local.get $2)
  ;; CHECK-NEXT:              (i32.const 2)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:           (i32.add
  ;; CHECK-NEXT:            (call $fib
  ;; CHECK-NEXT:             (i32.sub
  ;; CHECK-NEXT:              (local.get $2)
  ;; CHECK-NEXT:              (i32.const 1)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:            (call $fib
  ;; CHECK-NEXT:             (i32.sub
  ;; CHECK-NEXT:              (local.get $2)
  ;; CHECK-NEXT:              (i32.const 2)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:          )
  ;; CHECK-NEXT:          (block $__inlined_func$fib19 (result i32)
  ;; CHECK-NEXT:           (drop
  ;; CHECK-NEXT:            (br_if $__inlined_func$fib19
  ;; CHECK-NEXT:             (local.tee $1
  ;; CHECK-NEXT:              (i32.sub
  ;; CHECK-NEXT:               (local.get $1)
  ;; CHECK-NEXT:               (i32.const 2)
  ;; CHECK-NEXT:              )
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:             (i32.le_s
  ;; CHECK-NEXT:              (local.get $1)
  ;; CHECK-NEXT:              (i32.const 2)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:           (i32.add
  ;; CHECK-NEXT:            (call $fib
  ;; CHECK-NEXT:             (i32.sub
  ;; CHECK-NEXT:              (local.get $1)
  ;; CHECK-NEXT:              (i32.const 1)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:            (call $fib
  ;; CHECK-NEXT:             (i32.sub
  ;; CHECK-NEXT:              (local.get $1)
  ;; CHECK-NEXT:              (i32.const 2)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:          )
  ;; CHECK-NEXT:         )
  ;; CHECK-NEXT:        )
  ;; CHECK-NEXT:       )
  ;; CHECK-NEXT:      )
  ;; CHECK-NEXT:      (block $__inlined_func$fib59 (result i32)
  ;; CHECK-NEXT:       (drop
  ;; CHECK-NEXT:        (br_if $__inlined_func$fib59
  ;; CHECK-NEXT:         (local.tee $0
  ;; CHECK-NEXT:          (i32.sub
  ;; CHECK-NEXT:           (local.get $0)
  ;; CHECK-NEXT:           (i32.const 2)
  ;; CHECK-NEXT:          )
  ;; CHECK-NEXT:         )
  ;; CHECK-NEXT:         (i32.le_s
  ;; CHECK-NEXT:          (local.get $0)
  ;; CHECK-NEXT:          (i32.const 2)
  ;; CHECK-NEXT:         )
  ;; CHECK-NEXT:        )
  ;; CHECK-NEXT:       )
  ;; CHECK-NEXT:       (i32.add
  ;; CHECK-NEXT:        (block $__inlined_func$fib10 (result i32)
  ;; CHECK-NEXT:         (drop
  ;; CHECK-NEXT:          (br_if $__inlined_func$fib10
  ;; CHECK-NEXT:           (local.tee $1
  ;; CHECK-NEXT:            (i32.sub
  ;; CHECK-NEXT:             (local.get $0)
  ;; CHECK-NEXT:             (i32.const 1)
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:           (i32.le_s
  ;; CHECK-NEXT:            (local.get $1)
  ;; CHECK-NEXT:            (i32.const 2)
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:          )
  ;; CHECK-NEXT:         )
  ;; CHECK-NEXT:         (i32.add
  ;; CHECK-NEXT:          (block $__inlined_func$fib20 (result i32)
  ;; CHECK-NEXT:           (drop
  ;; CHECK-NEXT:            (br_if $__inlined_func$fib20
  ;; CHECK-NEXT:             (local.tee $2
  ;; CHECK-NEXT:              (i32.sub
  ;; CHECK-NEXT:               (local.get $1)
  ;; CHECK-NEXT:               (i32.const 1)
  ;; CHECK-NEXT:              )
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:             (i32.le_s
  ;; CHECK-NEXT:              (local.get $2)
  ;; CHECK-NEXT:              (i32.const 2)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:           (i32.add
  ;; CHECK-NEXT:            (call $fib
  ;; CHECK-NEXT:             (i32.sub
  ;; CHECK-NEXT:              (local.get $2)
  ;; CHECK-NEXT:              (i32.const 1)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:            (call $fib
  ;; CHECK-NEXT:             (i32.sub
  ;; CHECK-NEXT:              (local.get $2)
  ;; CHECK-NEXT:              (i32.const 2)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:          )
  ;; CHECK-NEXT:          (block $__inlined_func$fib21 (result i32)
  ;; CHECK-NEXT:           (drop
  ;; CHECK-NEXT:            (br_if $__inlined_func$fib21
  ;; CHECK-NEXT:             (local.tee $1
  ;; CHECK-NEXT:              (i32.sub
  ;; CHECK-NEXT:               (local.get $1)
  ;; CHECK-NEXT:               (i32.const 2)
  ;; CHECK-NEXT:              )
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:             (i32.le_s
  ;; CHECK-NEXT:              (local.get $1)
  ;; CHECK-NEXT:              (i32.const 2)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:           (i32.add
  ;; CHECK-NEXT:            (call $fib
  ;; CHECK-NEXT:             (i32.sub
  ;; CHECK-NEXT:              (local.get $1)
  ;; CHECK-NEXT:              (i32.const 1)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:            (call $fib
  ;; CHECK-NEXT:             (i32.sub
  ;; CHECK-NEXT:              (local.get $1)
  ;; CHECK-NEXT:              (i32.const 2)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:          )
  ;; CHECK-NEXT:         )
  ;; CHECK-NEXT:        )
  ;; CHECK-NEXT:        (block $__inlined_func$fib1122 (result i32)
  ;; CHECK-NEXT:         (drop
  ;; CHECK-NEXT:          (br_if $__inlined_func$fib1122
  ;; CHECK-NEXT:           (local.tee $0
  ;; CHECK-NEXT:            (i32.sub
  ;; CHECK-NEXT:             (local.get $0)
  ;; CHECK-NEXT:             (i32.const 2)
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:           (i32.le_s
  ;; CHECK-NEXT:            (local.get $0)
  ;; CHECK-NEXT:            (i32.const 2)
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:          )
  ;; CHECK-NEXT:         )
  ;; CHECK-NEXT:         (i32.add
  ;; CHECK-NEXT:          (block $__inlined_func$fib23 (result i32)
  ;; CHECK-NEXT:           (drop
  ;; CHECK-NEXT:            (br_if $__inlined_func$fib23
  ;; CHECK-NEXT:             (local.tee $1
  ;; CHECK-NEXT:              (i32.sub
  ;; CHECK-NEXT:               (local.get $0)
  ;; CHECK-NEXT:               (i32.const 1)
  ;; CHECK-NEXT:              )
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:             (i32.le_s
  ;; CHECK-NEXT:              (local.get $1)
  ;; CHECK-NEXT:              (i32.const 2)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:           (i32.add
  ;; CHECK-NEXT:            (call $fib
  ;; CHECK-NEXT:             (i32.sub
  ;; CHECK-NEXT:              (local.get $1)
  ;; CHECK-NEXT:              (i32.const 1)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:            (call $fib
  ;; CHECK-NEXT:             (i32.sub
  ;; CHECK-NEXT:              (local.get $1)
  ;; CHECK-NEXT:              (i32.const 2)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:          )
  ;; CHECK-NEXT:          (block $__inlined_func$fib25 (result i32)
  ;; CHECK-NEXT:           (drop
  ;; CHECK-NEXT:            (br_if $__inlined_func$fib25
  ;; CHECK-NEXT:             (local.tee $0
  ;; CHECK-NEXT:              (i32.sub
  ;; CHECK-NEXT:               (local.get $0)
  ;; CHECK-NEXT:               (i32.const 2)
  ;; CHECK-NEXT:              )
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:             (i32.le_s
  ;; CHECK-NEXT:              (local.get $0)
  ;; CHECK-NEXT:              (i32.const 2)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:           (i32.add
  ;; CHECK-NEXT:            (call $fib
  ;; CHECK-NEXT:             (i32.sub
  ;; CHECK-NEXT:              (local.get $0)
  ;; CHECK-NEXT:              (i32.const 1)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:            (call $fib
  ;; CHECK-NEXT:             (i32.sub
  ;; CHECK-NEXT:              (local.get $0)
  ;; CHECK-NEXT:              (i32.const 2)
  ;; CHECK-NEXT:             )
  ;; CHECK-NEXT:            )
  ;; CHECK-NEXT:           )
  ;; CHECK-NEXT:          )
  ;; CHECK-NEXT:         )
  ;; CHECK-NEXT:        )
  ;; CHECK-NEXT:       )
  ;; CHECK-NEXT:      )
  ;; CHECK-NEXT:     )
  ;; CHECK-NEXT:    )
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT: )
  (func $t3 (export "t3") (type $t0) (param $p0 i32) (result i32)
    (call $fib
      (i32.add
        (local.get $p0)
        (i32.const 1)
      )
    )
  )
  (memory $memory (export "memory") 0)
)
