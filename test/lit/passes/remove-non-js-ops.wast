;; NOTE: Assertions have been generated by update_lit_checks.py --all-items and should not be edited.
;; NOTE: This test was ported using port_test.py and could be cleaned up.

;; RUN: foreach %s %t wasm-opt --remove-non-js-ops -S -o - | filecheck %s

(module
 (memory 1)
 ;; CHECK:      (type $i64_i64_=>_i64 (func (param i64 i64) (result i64)))

 ;; CHECK:      (type $i32_=>_i32 (func (param i32) (result i32)))

 ;; CHECK:      (type $i32_i32_=>_i32 (func (param i32 i32) (result i32)))

 ;; CHECK:      (type $f64_=>_f64 (func (param f64) (result f64)))

 ;; CHECK:      (type $f32_=>_f32 (func (param f32) (result f32)))

 ;; CHECK:      (type $i32_i32_i32_=>_none (func (param i32 i32 i32)))

 ;; CHECK:      (type $f64_f64_=>_f64 (func (param f64 f64) (result f64)))

 ;; CHECK:      (type $f32_f32_=>_f32 (func (param f32 f32) (result f32)))

 ;; CHECK:      (type $i32_i32_=>_none (func (param i32 i32)))

 ;; CHECK:      (type $none_=>_f32 (func (result f32)))

 ;; CHECK:      (type $f32_=>_none (func (param f32)))

 ;; CHECK:      (type $none_=>_f64 (func (result f64)))

 ;; CHECK:      (type $f64_=>_none (func (param f64)))

 ;; CHECK:      (type $i32_i32_i32_i32_=>_none (func (param i32 i32 i32 i32)))

 ;; CHECK:      (type $i32_=>_none (func (param i32)))

 ;; CHECK:      (type $i32_i32_i32_i32_=>_i32 (func (param i32 i32 i32 i32) (result i32)))

 ;; CHECK:      (type $i32_i32_i32_i32_i32_i32_=>_i32 (func (param i32 i32 i32 i32 i32 i32) (result i32)))

 ;; CHECK:      (type $none_=>_i32 (func (result i32)))

 ;; CHECK:      (import "env" "wasm2js_scratch_load_i32" (func $wasm2js_scratch_load_i32 (param i32) (result i32)))

 ;; CHECK:      (import "env" "wasm2js_scratch_store_i32" (func $wasm2js_scratch_store_i32 (param i32 i32)))

 ;; CHECK:      (import "env" "wasm2js_scratch_load_f32" (func $wasm2js_scratch_load_f32 (result f32)))

 ;; CHECK:      (import "env" "wasm2js_scratch_store_f32" (func $wasm2js_scratch_store_f32 (param f32)))

 ;; CHECK:      (import "env" "wasm2js_scratch_load_f64" (func $wasm2js_scratch_load_f64 (result f64)))

 ;; CHECK:      (import "env" "wasm2js_scratch_store_f64" (func $wasm2js_scratch_store_f64 (param f64)))

 ;; CHECK:      (import "env" "wasm2js_memory_init" (func $wasm2js_memory_init (param i32 i32 i32 i32)))

 ;; CHECK:      (import "env" "wasm2js_memory_fill" (func $wasm2js_memory_fill (param i32 i32 i32)))

 ;; CHECK:      (import "env" "wasm2js_memory_copy" (func $wasm2js_memory_copy (param i32 i32 i32)))

 ;; CHECK:      (import "env" "wasm2js_data_drop" (func $wasm2js_data_drop (param i32)))

 ;; CHECK:      (import "env" "wasm2js_atomic_wait_i32" (func $wasm2js_atomic_wait_i32 (param i32 i32 i32 i32) (result i32)))

 ;; CHECK:      (import "env" "wasm2js_atomic_rmw_i64" (func $wasm2js_atomic_rmw_i64 (param i32 i32 i32 i32 i32 i32) (result i32)))

 ;; CHECK:      (import "env" "wasm2js_get_stashed_bits" (func $wasm2js_get_stashed_bits (result i32)))

 ;; CHECK:      (global $__wasm-intrinsics-temp-i64 (mut i64) (i64.const 0))

 ;; CHECK:      (memory $0 1)

 ;; CHECK:      (func $copysign64 (param $0 f64) (param $1 f64) (result f64)
 ;; CHECK-NEXT:  (f64.reinterpret_i64
 ;; CHECK-NEXT:   (i64.or
 ;; CHECK-NEXT:    (i64.and
 ;; CHECK-NEXT:     (i64.reinterpret_f64
 ;; CHECK-NEXT:      (local.get $0)
 ;; CHECK-NEXT:     )
 ;; CHECK-NEXT:     (i64.const 9223372036854775807)
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:    (i64.and
 ;; CHECK-NEXT:     (i64.reinterpret_f64
 ;; CHECK-NEXT:      (local.get $1)
 ;; CHECK-NEXT:     )
 ;; CHECK-NEXT:     (i64.const -9223372036854775808)
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT: )
 (func $copysign64 (param $0 f64) (param $1 f64) (result f64)
   (f64.copysign (local.get $0) (local.get $1)))
 ;; CHECK:      (func $copysign32 (param $0 f32) (param $1 f32) (result f32)
 ;; CHECK-NEXT:  (f32.reinterpret_i32
 ;; CHECK-NEXT:   (i32.or
 ;; CHECK-NEXT:    (i32.and
 ;; CHECK-NEXT:     (i32.reinterpret_f32
 ;; CHECK-NEXT:      (local.get $0)
 ;; CHECK-NEXT:     )
 ;; CHECK-NEXT:     (i32.const 2147483647)
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:    (i32.and
 ;; CHECK-NEXT:     (i32.reinterpret_f32
 ;; CHECK-NEXT:      (local.get $1)
 ;; CHECK-NEXT:     )
 ;; CHECK-NEXT:     (i32.const -2147483648)
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT: )
 (func $copysign32 (param $0 f32) (param $1 f32) (result f32)
   (f32.copysign (local.get $0) (local.get $1)))

 ;; CHECK:      (func $rotl32 (param $0 i32) (param $1 i32) (result i32)
 ;; CHECK-NEXT:  (call $__wasm_rotl_i32
 ;; CHECK-NEXT:   (local.get $0)
 ;; CHECK-NEXT:   (local.get $1)
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT: )
 (func $rotl32 (param $0 i32) (param $1 i32) (result i32)
   (i32.rotl (local.get $0) (local.get $1)))
 ;; CHECK:      (func $rotr32 (param $0 i32) (param $1 i32) (result i32)
 ;; CHECK-NEXT:  (call $__wasm_rotr_i32
 ;; CHECK-NEXT:   (local.get $0)
 ;; CHECK-NEXT:   (local.get $1)
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT: )
 (func $rotr32 (param $0 i32) (param $1 i32) (result i32)
   (i32.rotr (local.get $0) (local.get $1)))
 ;; CHECK:      (func $rotl64 (param $0 i64) (param $1 i64) (result i64)
 ;; CHECK-NEXT:  (call $__wasm_rotl_i64
 ;; CHECK-NEXT:   (local.get $0)
 ;; CHECK-NEXT:   (local.get $1)
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT: )
 (func $rotl64 (param $0 i64) (param $1 i64) (result i64)
   (i64.rotl (local.get $0) (local.get $1)))
 ;; CHECK:      (func $rotr64 (param $0 i64) (param $1 i64) (result i64)
 ;; CHECK-NEXT:  (call $__wasm_rotr_i64
 ;; CHECK-NEXT:   (local.get $0)
 ;; CHECK-NEXT:   (local.get $1)
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT: )
 (func $rotr64 (param $0 i64) (param $1 i64) (result i64)
   (i64.rotr (local.get $0) (local.get $1)))

 ;; CHECK:      (func $nearest64 (param $0 f64) (result f64)
 ;; CHECK-NEXT:  (call $__wasm_nearest_f64
 ;; CHECK-NEXT:   (local.get $0)
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT: )
 (func $nearest64 (param $0 f64) (result f64)
   (f64.nearest (local.get $0)))
 ;; CHECK:      (func $nearest32 (param $0 f32) (result f32)
 ;; CHECK-NEXT:  (call $__wasm_nearest_f32
 ;; CHECK-NEXT:   (local.get $0)
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT: )
 (func $nearest32 (param $0 f32) (result f32)
   (f32.nearest (local.get $0)))

 ;; CHECK:      (func $trunc64 (param $0 f64) (result f64)
 ;; CHECK-NEXT:  (f64.trunc
 ;; CHECK-NEXT:   (local.get $0)
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT: )
 (func $trunc64 (param $0 f64) (result f64)
   (f64.trunc (local.get $0)))
 ;; CHECK:      (func $trunc32 (param $0 f32) (result f32)
 ;; CHECK-NEXT:  (f32.trunc
 ;; CHECK-NEXT:   (local.get $0)
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT: )
 (func $trunc32 (param $0 f32) (result f32)
   (f32.trunc (local.get $0)))

 ;; CHECK:      (func $popcnt32 (param $0 i32) (result i32)
 ;; CHECK-NEXT:  (call $__wasm_popcnt_i32
 ;; CHECK-NEXT:   (local.get $0)
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT: )
 (func $popcnt32 (param $0 i32) (result i32)
   (i32.popcnt (local.get $0)))
 ;; CHECK:      (func $ctz32 (param $0 i32) (result i32)
 ;; CHECK-NEXT:  (call $__wasm_ctz_i32
 ;; CHECK-NEXT:   (local.get $0)
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT: )
 (func $ctz32 (param $0 i32) (result i32)
   (i32.ctz (local.get $0)))

 ;; CHECK:      (func $i64_sdiv (param $0 i64) (param $1 i64) (result i64)
 ;; CHECK-NEXT:  (call $__wasm_i64_sdiv
 ;; CHECK-NEXT:   (local.get $0)
 ;; CHECK-NEXT:   (local.get $1)
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT: )
 (func $i64_sdiv (param $0 i64) (param $1 i64) (result i64)
   (i64.div_s (local.get $0) (local.get $1)))
 ;; CHECK:      (func $i64_udiv (param $0 i64) (param $1 i64) (result i64)
 ;; CHECK-NEXT:  (call $__wasm_i64_udiv
 ;; CHECK-NEXT:   (local.get $0)
 ;; CHECK-NEXT:   (local.get $1)
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT: )
 (func $i64_udiv (param $0 i64) (param $1 i64) (result i64)
   (i64.div_u (local.get $0) (local.get $1)))
 ;; CHECK:      (func $i64_srem (param $0 i64) (param $1 i64) (result i64)
 ;; CHECK-NEXT:  (call $__wasm_i64_srem
 ;; CHECK-NEXT:   (local.get $0)
 ;; CHECK-NEXT:   (local.get $1)
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT: )
 (func $i64_srem (param $0 i64) (param $1 i64) (result i64)
   (i64.rem_s (local.get $0) (local.get $1)))
 ;; CHECK:      (func $i64_urem (param $0 i64) (param $1 i64) (result i64)
 ;; CHECK-NEXT:  (call $__wasm_i64_urem
 ;; CHECK-NEXT:   (local.get $0)
 ;; CHECK-NEXT:   (local.get $1)
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT: )
 (func $i64_urem (param $0 i64) (param $1 i64) (result i64)
   (i64.rem_u (local.get $0) (local.get $1)))
 ;; CHECK:      (func $i64_mul (param $0 i64) (param $1 i64) (result i64)
 ;; CHECK-NEXT:  (call $__wasm_i64_mul
 ;; CHECK-NEXT:   (local.get $0)
 ;; CHECK-NEXT:   (local.get $1)
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT: )
 (func $i64_mul (param $0 i64) (param $1 i64) (result i64)
   (i64.mul (local.get $0) (local.get $1)))
)

;; CHECK:      (func $_ZN17compiler_builtins3int3mul3Mul3mul17h070e9a1c69faec5bE (param $var$0 i64) (param $var$1 i64) (result i64)
;; CHECK-NEXT:  (local $var$2 i32)
;; CHECK-NEXT:  (local $var$3 i32)
;; CHECK-NEXT:  (local $var$4 i32)
;; CHECK-NEXT:  (local $var$5 i32)
;; CHECK-NEXT:  (local $var$6 i32)
;; CHECK-NEXT:  (i64.or
;; CHECK-NEXT:   (i64.shl
;; CHECK-NEXT:    (i64.extend_i32_u
;; CHECK-NEXT:     (i32.add
;; CHECK-NEXT:      (i32.add
;; CHECK-NEXT:       (i32.add
;; CHECK-NEXT:        (i32.add
;; CHECK-NEXT:         (i32.mul
;; CHECK-NEXT:          (local.tee $var$4
;; CHECK-NEXT:           (i32.shr_u
;; CHECK-NEXT:            (local.tee $var$2
;; CHECK-NEXT:             (i32.wrap_i64
;; CHECK-NEXT:              (local.get $var$1)
;; CHECK-NEXT:             )
;; CHECK-NEXT:            )
;; CHECK-NEXT:            (i32.const 16)
;; CHECK-NEXT:           )
;; CHECK-NEXT:          )
;; CHECK-NEXT:          (local.tee $var$5
;; CHECK-NEXT:           (i32.shr_u
;; CHECK-NEXT:            (local.tee $var$3
;; CHECK-NEXT:             (i32.wrap_i64
;; CHECK-NEXT:              (local.get $var$0)
;; CHECK-NEXT:             )
;; CHECK-NEXT:            )
;; CHECK-NEXT:            (i32.const 16)
;; CHECK-NEXT:           )
;; CHECK-NEXT:          )
;; CHECK-NEXT:         )
;; CHECK-NEXT:         (i32.mul
;; CHECK-NEXT:          (local.get $var$2)
;; CHECK-NEXT:          (i32.wrap_i64
;; CHECK-NEXT:           (i64.shr_u
;; CHECK-NEXT:            (local.get $var$0)
;; CHECK-NEXT:            (i64.const 32)
;; CHECK-NEXT:           )
;; CHECK-NEXT:          )
;; CHECK-NEXT:         )
;; CHECK-NEXT:        )
;; CHECK-NEXT:        (i32.mul
;; CHECK-NEXT:         (i32.wrap_i64
;; CHECK-NEXT:          (i64.shr_u
;; CHECK-NEXT:           (local.get $var$1)
;; CHECK-NEXT:           (i64.const 32)
;; CHECK-NEXT:          )
;; CHECK-NEXT:         )
;; CHECK-NEXT:         (local.get $var$3)
;; CHECK-NEXT:        )
;; CHECK-NEXT:       )
;; CHECK-NEXT:       (i32.shr_u
;; CHECK-NEXT:        (local.tee $var$2
;; CHECK-NEXT:         (i32.add
;; CHECK-NEXT:          (i32.shr_u
;; CHECK-NEXT:           (local.tee $var$6
;; CHECK-NEXT:            (i32.mul
;; CHECK-NEXT:             (local.tee $var$2
;; CHECK-NEXT:              (i32.and
;; CHECK-NEXT:               (local.get $var$2)
;; CHECK-NEXT:               (i32.const 65535)
;; CHECK-NEXT:              )
;; CHECK-NEXT:             )
;; CHECK-NEXT:             (local.tee $var$3
;; CHECK-NEXT:              (i32.and
;; CHECK-NEXT:               (local.get $var$3)
;; CHECK-NEXT:               (i32.const 65535)
;; CHECK-NEXT:              )
;; CHECK-NEXT:             )
;; CHECK-NEXT:            )
;; CHECK-NEXT:           )
;; CHECK-NEXT:           (i32.const 16)
;; CHECK-NEXT:          )
;; CHECK-NEXT:          (i32.mul
;; CHECK-NEXT:           (local.get $var$2)
;; CHECK-NEXT:           (local.get $var$5)
;; CHECK-NEXT:          )
;; CHECK-NEXT:         )
;; CHECK-NEXT:        )
;; CHECK-NEXT:        (i32.const 16)
;; CHECK-NEXT:       )
;; CHECK-NEXT:      )
;; CHECK-NEXT:      (i32.shr_u
;; CHECK-NEXT:       (local.tee $var$2
;; CHECK-NEXT:        (i32.add
;; CHECK-NEXT:         (i32.and
;; CHECK-NEXT:          (local.get $var$2)
;; CHECK-NEXT:          (i32.const 65535)
;; CHECK-NEXT:         )
;; CHECK-NEXT:         (i32.mul
;; CHECK-NEXT:          (local.get $var$4)
;; CHECK-NEXT:          (local.get $var$3)
;; CHECK-NEXT:         )
;; CHECK-NEXT:        )
;; CHECK-NEXT:       )
;; CHECK-NEXT:       (i32.const 16)
;; CHECK-NEXT:      )
;; CHECK-NEXT:     )
;; CHECK-NEXT:    )
;; CHECK-NEXT:    (i64.const 32)
;; CHECK-NEXT:   )
;; CHECK-NEXT:   (i64.extend_i32_u
;; CHECK-NEXT:    (i32.or
;; CHECK-NEXT:     (i32.shl
;; CHECK-NEXT:      (local.get $var$2)
;; CHECK-NEXT:      (i32.const 16)
;; CHECK-NEXT:     )
;; CHECK-NEXT:     (i32.and
;; CHECK-NEXT:      (local.get $var$6)
;; CHECK-NEXT:      (i32.const 65535)
;; CHECK-NEXT:     )
;; CHECK-NEXT:    )
;; CHECK-NEXT:   )
;; CHECK-NEXT:  )
;; CHECK-NEXT: )

;; CHECK:      (func $_ZN17compiler_builtins3int4sdiv3Div3div17he78fc483e41d7ec7E (param $var$0 i64) (param $var$1 i64) (result i64)
;; CHECK-NEXT:  (local $var$2 i64)
;; CHECK-NEXT:  (i64.sub
;; CHECK-NEXT:   (i64.xor
;; CHECK-NEXT:    (call $__wasm_i64_udiv
;; CHECK-NEXT:     (i64.sub
;; CHECK-NEXT:      (i64.xor
;; CHECK-NEXT:       (local.tee $var$2
;; CHECK-NEXT:        (i64.shr_s
;; CHECK-NEXT:         (local.get $var$0)
;; CHECK-NEXT:         (i64.const 63)
;; CHECK-NEXT:        )
;; CHECK-NEXT:       )
;; CHECK-NEXT:       (local.get $var$0)
;; CHECK-NEXT:      )
;; CHECK-NEXT:      (local.get $var$2)
;; CHECK-NEXT:     )
;; CHECK-NEXT:     (i64.sub
;; CHECK-NEXT:      (i64.xor
;; CHECK-NEXT:       (local.tee $var$2
;; CHECK-NEXT:        (i64.shr_s
;; CHECK-NEXT:         (local.get $var$1)
;; CHECK-NEXT:         (i64.const 63)
;; CHECK-NEXT:        )
;; CHECK-NEXT:       )
;; CHECK-NEXT:       (local.get $var$1)
;; CHECK-NEXT:      )
;; CHECK-NEXT:      (local.get $var$2)
;; CHECK-NEXT:     )
;; CHECK-NEXT:    )
;; CHECK-NEXT:    (local.tee $var$0
;; CHECK-NEXT:     (i64.shr_s
;; CHECK-NEXT:      (i64.xor
;; CHECK-NEXT:       (local.get $var$1)
;; CHECK-NEXT:       (local.get $var$0)
;; CHECK-NEXT:      )
;; CHECK-NEXT:      (i64.const 63)
;; CHECK-NEXT:     )
;; CHECK-NEXT:    )
;; CHECK-NEXT:   )
;; CHECK-NEXT:   (local.get $var$0)
;; CHECK-NEXT:  )
;; CHECK-NEXT: )

;; CHECK:      (func $_ZN17compiler_builtins3int4sdiv3Mod4mod_17h2cbb7bbf36e41d68E (param $var$0 i64) (param $var$1 i64) (result i64)
;; CHECK-NEXT:  (local $var$2 i64)
;; CHECK-NEXT:  (i64.sub
;; CHECK-NEXT:   (i64.xor
;; CHECK-NEXT:    (call $__wasm_i64_urem
;; CHECK-NEXT:     (i64.sub
;; CHECK-NEXT:      (i64.xor
;; CHECK-NEXT:       (local.tee $var$2
;; CHECK-NEXT:        (i64.shr_s
;; CHECK-NEXT:         (local.get $var$0)
;; CHECK-NEXT:         (i64.const 63)
;; CHECK-NEXT:        )
;; CHECK-NEXT:       )
;; CHECK-NEXT:       (local.get $var$0)
;; CHECK-NEXT:      )
;; CHECK-NEXT:      (local.get $var$2)
;; CHECK-NEXT:     )
;; CHECK-NEXT:     (i64.sub
;; CHECK-NEXT:      (i64.xor
;; CHECK-NEXT:       (local.tee $var$0
;; CHECK-NEXT:        (i64.shr_s
;; CHECK-NEXT:         (local.get $var$1)
;; CHECK-NEXT:         (i64.const 63)
;; CHECK-NEXT:        )
;; CHECK-NEXT:       )
;; CHECK-NEXT:       (local.get $var$1)
;; CHECK-NEXT:      )
;; CHECK-NEXT:      (local.get $var$0)
;; CHECK-NEXT:     )
;; CHECK-NEXT:    )
;; CHECK-NEXT:    (local.get $var$2)
;; CHECK-NEXT:   )
;; CHECK-NEXT:   (local.get $var$2)
;; CHECK-NEXT:  )
;; CHECK-NEXT: )

;; CHECK:      (func $_ZN17compiler_builtins3int4udiv10divmod_u6417h6026910b5ed08e40E (param $var$0 i64) (param $var$1 i64) (result i64)
;; CHECK-NEXT:  (local $var$2 i32)
;; CHECK-NEXT:  (local $var$3 i32)
;; CHECK-NEXT:  (local $var$4 i32)
;; CHECK-NEXT:  (local $var$5 i64)
;; CHECK-NEXT:  (local $var$6 i64)
;; CHECK-NEXT:  (local $var$7 i64)
;; CHECK-NEXT:  (local $var$8 i64)
;; CHECK-NEXT:  (block $label$1
;; CHECK-NEXT:   (block $label$2
;; CHECK-NEXT:    (block $label$3
;; CHECK-NEXT:     (block $label$4
;; CHECK-NEXT:      (block $label$5
;; CHECK-NEXT:       (block $label$6
;; CHECK-NEXT:        (block $label$7
;; CHECK-NEXT:         (block $label$8
;; CHECK-NEXT:          (block $label$9
;; CHECK-NEXT:           (block $label$10
;; CHECK-NEXT:            (block $label$11
;; CHECK-NEXT:             (if
;; CHECK-NEXT:              (local.tee $var$2
;; CHECK-NEXT:               (i32.wrap_i64
;; CHECK-NEXT:                (i64.shr_u
;; CHECK-NEXT:                 (local.get $var$0)
;; CHECK-NEXT:                 (i64.const 32)
;; CHECK-NEXT:                )
;; CHECK-NEXT:               )
;; CHECK-NEXT:              )
;; CHECK-NEXT:              (block $block
;; CHECK-NEXT:               (br_if $label$11
;; CHECK-NEXT:                (i32.eqz
;; CHECK-NEXT:                 (local.tee $var$3
;; CHECK-NEXT:                  (i32.wrap_i64
;; CHECK-NEXT:                   (local.get $var$1)
;; CHECK-NEXT:                  )
;; CHECK-NEXT:                 )
;; CHECK-NEXT:                )
;; CHECK-NEXT:               )
;; CHECK-NEXT:               (br_if $label$9
;; CHECK-NEXT:                (i32.eqz
;; CHECK-NEXT:                 (local.tee $var$4
;; CHECK-NEXT:                  (i32.wrap_i64
;; CHECK-NEXT:                   (i64.shr_u
;; CHECK-NEXT:                    (local.get $var$1)
;; CHECK-NEXT:                    (i64.const 32)
;; CHECK-NEXT:                   )
;; CHECK-NEXT:                  )
;; CHECK-NEXT:                 )
;; CHECK-NEXT:                )
;; CHECK-NEXT:               )
;; CHECK-NEXT:               (br_if $label$8
;; CHECK-NEXT:                (i32.le_u
;; CHECK-NEXT:                 (local.tee $var$2
;; CHECK-NEXT:                  (i32.sub
;; CHECK-NEXT:                   (i32.clz
;; CHECK-NEXT:                    (local.get $var$4)
;; CHECK-NEXT:                   )
;; CHECK-NEXT:                   (i32.clz
;; CHECK-NEXT:                    (local.get $var$2)
;; CHECK-NEXT:                   )
;; CHECK-NEXT:                  )
;; CHECK-NEXT:                 )
;; CHECK-NEXT:                 (i32.const 31)
;; CHECK-NEXT:                )
;; CHECK-NEXT:               )
;; CHECK-NEXT:               (br $label$2)
;; CHECK-NEXT:              )
;; CHECK-NEXT:             )
;; CHECK-NEXT:             (br_if $label$2
;; CHECK-NEXT:              (i64.ge_u
;; CHECK-NEXT:               (local.get $var$1)
;; CHECK-NEXT:               (i64.const 4294967296)
;; CHECK-NEXT:              )
;; CHECK-NEXT:             )
;; CHECK-NEXT:             (global.set $__wasm-intrinsics-temp-i64
;; CHECK-NEXT:              (i64.extend_i32_u
;; CHECK-NEXT:               (i32.sub
;; CHECK-NEXT:                (local.tee $var$2
;; CHECK-NEXT:                 (i32.wrap_i64
;; CHECK-NEXT:                  (local.get $var$0)
;; CHECK-NEXT:                 )
;; CHECK-NEXT:                )
;; CHECK-NEXT:                (i32.mul
;; CHECK-NEXT:                 (local.tee $var$2
;; CHECK-NEXT:                  (i32.div_u
;; CHECK-NEXT:                   (local.get $var$2)
;; CHECK-NEXT:                   (local.tee $var$3
;; CHECK-NEXT:                    (i32.wrap_i64
;; CHECK-NEXT:                     (local.get $var$1)
;; CHECK-NEXT:                    )
;; CHECK-NEXT:                   )
;; CHECK-NEXT:                  )
;; CHECK-NEXT:                 )
;; CHECK-NEXT:                 (local.get $var$3)
;; CHECK-NEXT:                )
;; CHECK-NEXT:               )
;; CHECK-NEXT:              )
;; CHECK-NEXT:             )
;; CHECK-NEXT:             (return
;; CHECK-NEXT:              (i64.extend_i32_u
;; CHECK-NEXT:               (local.get $var$2)
;; CHECK-NEXT:              )
;; CHECK-NEXT:             )
;; CHECK-NEXT:            )
;; CHECK-NEXT:            (local.set $var$3
;; CHECK-NEXT:             (i32.wrap_i64
;; CHECK-NEXT:              (i64.shr_u
;; CHECK-NEXT:               (local.get $var$1)
;; CHECK-NEXT:               (i64.const 32)
;; CHECK-NEXT:              )
;; CHECK-NEXT:             )
;; CHECK-NEXT:            )
;; CHECK-NEXT:            (br_if $label$7
;; CHECK-NEXT:             (i32.eqz
;; CHECK-NEXT:              (i32.wrap_i64
;; CHECK-NEXT:               (local.get $var$0)
;; CHECK-NEXT:              )
;; CHECK-NEXT:             )
;; CHECK-NEXT:            )
;; CHECK-NEXT:            (br_if $label$6
;; CHECK-NEXT:             (i32.eqz
;; CHECK-NEXT:              (local.get $var$3)
;; CHECK-NEXT:             )
;; CHECK-NEXT:            )
;; CHECK-NEXT:            (br_if $label$6
;; CHECK-NEXT:             (i32.and
;; CHECK-NEXT:              (local.tee $var$4
;; CHECK-NEXT:               (i32.add
;; CHECK-NEXT:                (local.get $var$3)
;; CHECK-NEXT:                (i32.const -1)
;; CHECK-NEXT:               )
;; CHECK-NEXT:              )
;; CHECK-NEXT:              (local.get $var$3)
;; CHECK-NEXT:             )
;; CHECK-NEXT:            )
;; CHECK-NEXT:            (global.set $__wasm-intrinsics-temp-i64
;; CHECK-NEXT:             (i64.or
;; CHECK-NEXT:              (i64.shl
;; CHECK-NEXT:               (i64.extend_i32_u
;; CHECK-NEXT:                (i32.and
;; CHECK-NEXT:                 (local.get $var$4)
;; CHECK-NEXT:                 (local.get $var$2)
;; CHECK-NEXT:                )
;; CHECK-NEXT:               )
;; CHECK-NEXT:               (i64.const 32)
;; CHECK-NEXT:              )
;; CHECK-NEXT:              (i64.and
;; CHECK-NEXT:               (local.get $var$0)
;; CHECK-NEXT:               (i64.const 4294967295)
;; CHECK-NEXT:              )
;; CHECK-NEXT:             )
;; CHECK-NEXT:            )
;; CHECK-NEXT:            (return
;; CHECK-NEXT:             (i64.extend_i32_u
;; CHECK-NEXT:              (i32.shr_u
;; CHECK-NEXT:               (local.get $var$2)
;; CHECK-NEXT:               (i32.and
;; CHECK-NEXT:                (call $__wasm_ctz_i32
;; CHECK-NEXT:                 (local.get $var$3)
;; CHECK-NEXT:                )
;; CHECK-NEXT:                (i32.const 31)
;; CHECK-NEXT:               )
;; CHECK-NEXT:              )
;; CHECK-NEXT:             )
;; CHECK-NEXT:            )
;; CHECK-NEXT:           )
;; CHECK-NEXT:           (unreachable)
;; CHECK-NEXT:          )
;; CHECK-NEXT:          (br_if $label$5
;; CHECK-NEXT:           (i32.eqz
;; CHECK-NEXT:            (i32.and
;; CHECK-NEXT:             (local.tee $var$4
;; CHECK-NEXT:              (i32.add
;; CHECK-NEXT:               (local.get $var$3)
;; CHECK-NEXT:               (i32.const -1)
;; CHECK-NEXT:              )
;; CHECK-NEXT:             )
;; CHECK-NEXT:             (local.get $var$3)
;; CHECK-NEXT:            )
;; CHECK-NEXT:           )
;; CHECK-NEXT:          )
;; CHECK-NEXT:          (local.set $var$3
;; CHECK-NEXT:           (i32.sub
;; CHECK-NEXT:            (i32.const 0)
;; CHECK-NEXT:            (local.tee $var$2
;; CHECK-NEXT:             (i32.sub
;; CHECK-NEXT:              (i32.add
;; CHECK-NEXT:               (i32.clz
;; CHECK-NEXT:                (local.get $var$3)
;; CHECK-NEXT:               )
;; CHECK-NEXT:               (i32.const 33)
;; CHECK-NEXT:              )
;; CHECK-NEXT:              (i32.clz
;; CHECK-NEXT:               (local.get $var$2)
;; CHECK-NEXT:              )
;; CHECK-NEXT:             )
;; CHECK-NEXT:            )
;; CHECK-NEXT:           )
;; CHECK-NEXT:          )
;; CHECK-NEXT:          (br $label$3)
;; CHECK-NEXT:         )
;; CHECK-NEXT:         (local.set $var$3
;; CHECK-NEXT:          (i32.sub
;; CHECK-NEXT:           (i32.const 63)
;; CHECK-NEXT:           (local.get $var$2)
;; CHECK-NEXT:          )
;; CHECK-NEXT:         )
;; CHECK-NEXT:         (local.set $var$2
;; CHECK-NEXT:          (i32.add
;; CHECK-NEXT:           (local.get $var$2)
;; CHECK-NEXT:           (i32.const 1)
;; CHECK-NEXT:          )
;; CHECK-NEXT:         )
;; CHECK-NEXT:         (br $label$3)
;; CHECK-NEXT:        )
;; CHECK-NEXT:        (global.set $__wasm-intrinsics-temp-i64
;; CHECK-NEXT:         (i64.shl
;; CHECK-NEXT:          (i64.extend_i32_u
;; CHECK-NEXT:           (i32.sub
;; CHECK-NEXT:            (local.get $var$2)
;; CHECK-NEXT:            (i32.mul
;; CHECK-NEXT:             (local.tee $var$4
;; CHECK-NEXT:              (i32.div_u
;; CHECK-NEXT:               (local.get $var$2)
;; CHECK-NEXT:               (local.get $var$3)
;; CHECK-NEXT:              )
;; CHECK-NEXT:             )
;; CHECK-NEXT:             (local.get $var$3)
;; CHECK-NEXT:            )
;; CHECK-NEXT:           )
;; CHECK-NEXT:          )
;; CHECK-NEXT:          (i64.const 32)
;; CHECK-NEXT:         )
;; CHECK-NEXT:        )
;; CHECK-NEXT:        (return
;; CHECK-NEXT:         (i64.extend_i32_u
;; CHECK-NEXT:          (local.get $var$4)
;; CHECK-NEXT:         )
;; CHECK-NEXT:        )
;; CHECK-NEXT:       )
;; CHECK-NEXT:       (br_if $label$4
;; CHECK-NEXT:        (i32.lt_u
;; CHECK-NEXT:         (local.tee $var$2
;; CHECK-NEXT:          (i32.sub
;; CHECK-NEXT:           (i32.clz
;; CHECK-NEXT:            (local.get $var$3)
;; CHECK-NEXT:           )
;; CHECK-NEXT:           (i32.clz
;; CHECK-NEXT:            (local.get $var$2)
;; CHECK-NEXT:           )
;; CHECK-NEXT:          )
;; CHECK-NEXT:         )
;; CHECK-NEXT:         (i32.const 31)
;; CHECK-NEXT:        )
;; CHECK-NEXT:       )
;; CHECK-NEXT:       (br $label$2)
;; CHECK-NEXT:      )
;; CHECK-NEXT:      (global.set $__wasm-intrinsics-temp-i64
;; CHECK-NEXT:       (i64.extend_i32_u
;; CHECK-NEXT:        (i32.and
;; CHECK-NEXT:         (local.get $var$4)
;; CHECK-NEXT:         (i32.wrap_i64
;; CHECK-NEXT:          (local.get $var$0)
;; CHECK-NEXT:         )
;; CHECK-NEXT:        )
;; CHECK-NEXT:       )
;; CHECK-NEXT:      )
;; CHECK-NEXT:      (br_if $label$1
;; CHECK-NEXT:       (i32.eq
;; CHECK-NEXT:        (local.get $var$3)
;; CHECK-NEXT:        (i32.const 1)
;; CHECK-NEXT:       )
;; CHECK-NEXT:      )
;; CHECK-NEXT:      (return
;; CHECK-NEXT:       (i64.shr_u
;; CHECK-NEXT:        (local.get $var$0)
;; CHECK-NEXT:        (i64.extend_i32_u
;; CHECK-NEXT:         (call $__wasm_ctz_i32
;; CHECK-NEXT:          (local.get $var$3)
;; CHECK-NEXT:         )
;; CHECK-NEXT:        )
;; CHECK-NEXT:       )
;; CHECK-NEXT:      )
;; CHECK-NEXT:     )
;; CHECK-NEXT:     (local.set $var$3
;; CHECK-NEXT:      (i32.sub
;; CHECK-NEXT:       (i32.const 63)
;; CHECK-NEXT:       (local.get $var$2)
;; CHECK-NEXT:      )
;; CHECK-NEXT:     )
;; CHECK-NEXT:     (local.set $var$2
;; CHECK-NEXT:      (i32.add
;; CHECK-NEXT:       (local.get $var$2)
;; CHECK-NEXT:       (i32.const 1)
;; CHECK-NEXT:      )
;; CHECK-NEXT:     )
;; CHECK-NEXT:    )
;; CHECK-NEXT:    (local.set $var$5
;; CHECK-NEXT:     (i64.shr_u
;; CHECK-NEXT:      (local.get $var$0)
;; CHECK-NEXT:      (i64.extend_i32_u
;; CHECK-NEXT:       (i32.and
;; CHECK-NEXT:        (local.get $var$2)
;; CHECK-NEXT:        (i32.const 63)
;; CHECK-NEXT:       )
;; CHECK-NEXT:      )
;; CHECK-NEXT:     )
;; CHECK-NEXT:    )
;; CHECK-NEXT:    (local.set $var$0
;; CHECK-NEXT:     (i64.shl
;; CHECK-NEXT:      (local.get $var$0)
;; CHECK-NEXT:      (i64.extend_i32_u
;; CHECK-NEXT:       (i32.and
;; CHECK-NEXT:        (local.get $var$3)
;; CHECK-NEXT:        (i32.const 63)
;; CHECK-NEXT:       )
;; CHECK-NEXT:      )
;; CHECK-NEXT:     )
;; CHECK-NEXT:    )
;; CHECK-NEXT:    (block $label$13
;; CHECK-NEXT:     (if
;; CHECK-NEXT:      (local.get $var$2)
;; CHECK-NEXT:      (block $block3
;; CHECK-NEXT:       (local.set $var$8
;; CHECK-NEXT:        (i64.add
;; CHECK-NEXT:         (local.get $var$1)
;; CHECK-NEXT:         (i64.const -1)
;; CHECK-NEXT:        )
;; CHECK-NEXT:       )
;; CHECK-NEXT:       (loop $label$15
;; CHECK-NEXT:        (local.set $var$5
;; CHECK-NEXT:         (i64.sub
;; CHECK-NEXT:          (local.tee $var$5
;; CHECK-NEXT:           (i64.or
;; CHECK-NEXT:            (i64.shl
;; CHECK-NEXT:             (local.get $var$5)
;; CHECK-NEXT:             (i64.const 1)
;; CHECK-NEXT:            )
;; CHECK-NEXT:            (i64.shr_u
;; CHECK-NEXT:             (local.get $var$0)
;; CHECK-NEXT:             (i64.const 63)
;; CHECK-NEXT:            )
;; CHECK-NEXT:           )
;; CHECK-NEXT:          )
;; CHECK-NEXT:          (i64.and
;; CHECK-NEXT:           (local.tee $var$6
;; CHECK-NEXT:            (i64.shr_s
;; CHECK-NEXT:             (i64.sub
;; CHECK-NEXT:              (local.get $var$8)
;; CHECK-NEXT:              (local.get $var$5)
;; CHECK-NEXT:             )
;; CHECK-NEXT:             (i64.const 63)
;; CHECK-NEXT:            )
;; CHECK-NEXT:           )
;; CHECK-NEXT:           (local.get $var$1)
;; CHECK-NEXT:          )
;; CHECK-NEXT:         )
;; CHECK-NEXT:        )
;; CHECK-NEXT:        (local.set $var$0
;; CHECK-NEXT:         (i64.or
;; CHECK-NEXT:          (i64.shl
;; CHECK-NEXT:           (local.get $var$0)
;; CHECK-NEXT:           (i64.const 1)
;; CHECK-NEXT:          )
;; CHECK-NEXT:          (local.get $var$7)
;; CHECK-NEXT:         )
;; CHECK-NEXT:        )
;; CHECK-NEXT:        (local.set $var$7
;; CHECK-NEXT:         (local.tee $var$6
;; CHECK-NEXT:          (i64.and
;; CHECK-NEXT:           (local.get $var$6)
;; CHECK-NEXT:           (i64.const 1)
;; CHECK-NEXT:          )
;; CHECK-NEXT:         )
;; CHECK-NEXT:        )
;; CHECK-NEXT:        (br_if $label$15
;; CHECK-NEXT:         (local.tee $var$2
;; CHECK-NEXT:          (i32.add
;; CHECK-NEXT:           (local.get $var$2)
;; CHECK-NEXT:           (i32.const -1)
;; CHECK-NEXT:          )
;; CHECK-NEXT:         )
;; CHECK-NEXT:        )
;; CHECK-NEXT:       )
;; CHECK-NEXT:       (br $label$13)
;; CHECK-NEXT:      )
;; CHECK-NEXT:     )
;; CHECK-NEXT:    )
;; CHECK-NEXT:    (global.set $__wasm-intrinsics-temp-i64
;; CHECK-NEXT:     (local.get $var$5)
;; CHECK-NEXT:    )
;; CHECK-NEXT:    (return
;; CHECK-NEXT:     (i64.or
;; CHECK-NEXT:      (i64.shl
;; CHECK-NEXT:       (local.get $var$0)
;; CHECK-NEXT:       (i64.const 1)
;; CHECK-NEXT:      )
;; CHECK-NEXT:      (local.get $var$6)
;; CHECK-NEXT:     )
;; CHECK-NEXT:    )
;; CHECK-NEXT:   )
;; CHECK-NEXT:   (global.set $__wasm-intrinsics-temp-i64
;; CHECK-NEXT:    (local.get $var$0)
;; CHECK-NEXT:   )
;; CHECK-NEXT:   (local.set $var$0
;; CHECK-NEXT:    (i64.const 0)
;; CHECK-NEXT:   )
;; CHECK-NEXT:  )
;; CHECK-NEXT:  (local.get $var$0)
;; CHECK-NEXT: )

;; CHECK:      (func $__wasm_ctz_i32 (param $var$0 i32) (result i32)
;; CHECK-NEXT:  (if
;; CHECK-NEXT:   (local.get $var$0)
;; CHECK-NEXT:   (return
;; CHECK-NEXT:    (i32.sub
;; CHECK-NEXT:     (i32.const 31)
;; CHECK-NEXT:     (i32.clz
;; CHECK-NEXT:      (i32.xor
;; CHECK-NEXT:       (i32.add
;; CHECK-NEXT:        (local.get $var$0)
;; CHECK-NEXT:        (i32.const -1)
;; CHECK-NEXT:       )
;; CHECK-NEXT:       (local.get $var$0)
;; CHECK-NEXT:      )
;; CHECK-NEXT:     )
;; CHECK-NEXT:    )
;; CHECK-NEXT:   )
;; CHECK-NEXT:  )
;; CHECK-NEXT:  (i32.const 32)
;; CHECK-NEXT: )

;; CHECK:      (func $__wasm_i64_mul (param $var$0 i64) (param $var$1 i64) (result i64)
;; CHECK-NEXT:  (call $_ZN17compiler_builtins3int3mul3Mul3mul17h070e9a1c69faec5bE
;; CHECK-NEXT:   (local.get $var$0)
;; CHECK-NEXT:   (local.get $var$1)
;; CHECK-NEXT:  )
;; CHECK-NEXT: )

;; CHECK:      (func $__wasm_i64_sdiv (param $var$0 i64) (param $var$1 i64) (result i64)
;; CHECK-NEXT:  (call $_ZN17compiler_builtins3int4sdiv3Div3div17he78fc483e41d7ec7E
;; CHECK-NEXT:   (local.get $var$0)
;; CHECK-NEXT:   (local.get $var$1)
;; CHECK-NEXT:  )
;; CHECK-NEXT: )

;; CHECK:      (func $__wasm_i64_srem (param $var$0 i64) (param $var$1 i64) (result i64)
;; CHECK-NEXT:  (call $_ZN17compiler_builtins3int4sdiv3Mod4mod_17h2cbb7bbf36e41d68E
;; CHECK-NEXT:   (local.get $var$0)
;; CHECK-NEXT:   (local.get $var$1)
;; CHECK-NEXT:  )
;; CHECK-NEXT: )

;; CHECK:      (func $__wasm_i64_udiv (param $var$0 i64) (param $var$1 i64) (result i64)
;; CHECK-NEXT:  (call $_ZN17compiler_builtins3int4udiv10divmod_u6417h6026910b5ed08e40E
;; CHECK-NEXT:   (local.get $var$0)
;; CHECK-NEXT:   (local.get $var$1)
;; CHECK-NEXT:  )
;; CHECK-NEXT: )

;; CHECK:      (func $__wasm_i64_urem (param $var$0 i64) (param $var$1 i64) (result i64)
;; CHECK-NEXT:  (drop
;; CHECK-NEXT:   (call $_ZN17compiler_builtins3int4udiv10divmod_u6417h6026910b5ed08e40E
;; CHECK-NEXT:    (local.get $var$0)
;; CHECK-NEXT:    (local.get $var$1)
;; CHECK-NEXT:   )
;; CHECK-NEXT:  )
;; CHECK-NEXT:  (global.get $__wasm-intrinsics-temp-i64)
;; CHECK-NEXT: )

;; CHECK:      (func $__wasm_nearest_f32 (param $var$0 f32) (result f32)
;; CHECK-NEXT:  (local $var$1 f32)
;; CHECK-NEXT:  (local $var$2 f32)
;; CHECK-NEXT:  (if
;; CHECK-NEXT:   (i32.eqz
;; CHECK-NEXT:    (f32.lt
;; CHECK-NEXT:     (local.tee $var$2
;; CHECK-NEXT:      (f32.sub
;; CHECK-NEXT:       (local.get $var$0)
;; CHECK-NEXT:       (local.tee $var$1
;; CHECK-NEXT:        (f32.floor
;; CHECK-NEXT:         (local.get $var$0)
;; CHECK-NEXT:        )
;; CHECK-NEXT:       )
;; CHECK-NEXT:      )
;; CHECK-NEXT:     )
;; CHECK-NEXT:     (f32.const 0.5)
;; CHECK-NEXT:    )
;; CHECK-NEXT:   )
;; CHECK-NEXT:   (block $block
;; CHECK-NEXT:    (local.set $var$0
;; CHECK-NEXT:     (f32.ceil
;; CHECK-NEXT:      (local.get $var$0)
;; CHECK-NEXT:     )
;; CHECK-NEXT:    )
;; CHECK-NEXT:    (if
;; CHECK-NEXT:     (f32.gt
;; CHECK-NEXT:      (local.get $var$2)
;; CHECK-NEXT:      (f32.const 0.5)
;; CHECK-NEXT:     )
;; CHECK-NEXT:     (return
;; CHECK-NEXT:      (local.get $var$0)
;; CHECK-NEXT:     )
;; CHECK-NEXT:    )
;; CHECK-NEXT:    (local.set $var$1
;; CHECK-NEXT:     (select
;; CHECK-NEXT:      (local.get $var$1)
;; CHECK-NEXT:      (local.get $var$0)
;; CHECK-NEXT:      (f32.eq
;; CHECK-NEXT:       (f32.sub
;; CHECK-NEXT:        (local.tee $var$2
;; CHECK-NEXT:         (f32.mul
;; CHECK-NEXT:          (local.get $var$1)
;; CHECK-NEXT:          (f32.const 0.5)
;; CHECK-NEXT:         )
;; CHECK-NEXT:        )
;; CHECK-NEXT:        (f32.floor
;; CHECK-NEXT:         (local.get $var$2)
;; CHECK-NEXT:        )
;; CHECK-NEXT:       )
;; CHECK-NEXT:       (f32.const 0)
;; CHECK-NEXT:      )
;; CHECK-NEXT:     )
;; CHECK-NEXT:    )
;; CHECK-NEXT:   )
;; CHECK-NEXT:  )
;; CHECK-NEXT:  (local.get $var$1)
;; CHECK-NEXT: )

;; CHECK:      (func $__wasm_nearest_f64 (param $var$0 f64) (result f64)
;; CHECK-NEXT:  (local $var$1 f64)
;; CHECK-NEXT:  (local $var$2 f64)
;; CHECK-NEXT:  (if
;; CHECK-NEXT:   (i32.eqz
;; CHECK-NEXT:    (f64.lt
;; CHECK-NEXT:     (local.tee $var$2
;; CHECK-NEXT:      (f64.sub
;; CHECK-NEXT:       (local.get $var$0)
;; CHECK-NEXT:       (local.tee $var$1
;; CHECK-NEXT:        (f64.floor
;; CHECK-NEXT:         (local.get $var$0)
;; CHECK-NEXT:        )
;; CHECK-NEXT:       )
;; CHECK-NEXT:      )
;; CHECK-NEXT:     )
;; CHECK-NEXT:     (f64.const 0.5)
;; CHECK-NEXT:    )
;; CHECK-NEXT:   )
;; CHECK-NEXT:   (block $block
;; CHECK-NEXT:    (local.set $var$0
;; CHECK-NEXT:     (f64.ceil
;; CHECK-NEXT:      (local.get $var$0)
;; CHECK-NEXT:     )
;; CHECK-NEXT:    )
;; CHECK-NEXT:    (if
;; CHECK-NEXT:     (f64.gt
;; CHECK-NEXT:      (local.get $var$2)
;; CHECK-NEXT:      (f64.const 0.5)
;; CHECK-NEXT:     )
;; CHECK-NEXT:     (return
;; CHECK-NEXT:      (local.get $var$0)
;; CHECK-NEXT:     )
;; CHECK-NEXT:    )
;; CHECK-NEXT:    (local.set $var$1
;; CHECK-NEXT:     (select
;; CHECK-NEXT:      (local.get $var$1)
;; CHECK-NEXT:      (local.get $var$0)
;; CHECK-NEXT:      (f64.eq
;; CHECK-NEXT:       (f64.sub
;; CHECK-NEXT:        (local.tee $var$2
;; CHECK-NEXT:         (f64.mul
;; CHECK-NEXT:          (local.get $var$1)
;; CHECK-NEXT:          (f64.const 0.5)
;; CHECK-NEXT:         )
;; CHECK-NEXT:        )
;; CHECK-NEXT:        (f64.floor
;; CHECK-NEXT:         (local.get $var$2)
;; CHECK-NEXT:        )
;; CHECK-NEXT:       )
;; CHECK-NEXT:       (f64.const 0)
;; CHECK-NEXT:      )
;; CHECK-NEXT:     )
;; CHECK-NEXT:    )
;; CHECK-NEXT:   )
;; CHECK-NEXT:  )
;; CHECK-NEXT:  (local.get $var$1)
;; CHECK-NEXT: )

;; CHECK:      (func $__wasm_popcnt_i32 (param $var$0 i32) (result i32)
;; CHECK-NEXT:  (local $var$1 i32)
;; CHECK-NEXT:  (block $label$1 (result i32)
;; CHECK-NEXT:   (loop $label$2
;; CHECK-NEXT:    (drop
;; CHECK-NEXT:     (br_if $label$1
;; CHECK-NEXT:      (local.get $var$1)
;; CHECK-NEXT:      (i32.eqz
;; CHECK-NEXT:       (local.get $var$0)
;; CHECK-NEXT:      )
;; CHECK-NEXT:     )
;; CHECK-NEXT:    )
;; CHECK-NEXT:    (local.set $var$0
;; CHECK-NEXT:     (i32.and
;; CHECK-NEXT:      (local.get $var$0)
;; CHECK-NEXT:      (i32.sub
;; CHECK-NEXT:       (local.get $var$0)
;; CHECK-NEXT:       (i32.const 1)
;; CHECK-NEXT:      )
;; CHECK-NEXT:     )
;; CHECK-NEXT:    )
;; CHECK-NEXT:    (local.set $var$1
;; CHECK-NEXT:     (i32.add
;; CHECK-NEXT:      (local.get $var$1)
;; CHECK-NEXT:      (i32.const 1)
;; CHECK-NEXT:     )
;; CHECK-NEXT:    )
;; CHECK-NEXT:    (br $label$2)
;; CHECK-NEXT:   )
;; CHECK-NEXT:  )
;; CHECK-NEXT: )

;; CHECK:      (func $__wasm_rotl_i32 (param $var$0 i32) (param $var$1 i32) (result i32)
;; CHECK-NEXT:  (local $var$2 i32)
;; CHECK-NEXT:  (i32.or
;; CHECK-NEXT:   (i32.shl
;; CHECK-NEXT:    (i32.and
;; CHECK-NEXT:     (i32.shr_u
;; CHECK-NEXT:      (i32.const -1)
;; CHECK-NEXT:      (local.tee $var$2
;; CHECK-NEXT:       (i32.and
;; CHECK-NEXT:        (local.get $var$1)
;; CHECK-NEXT:        (i32.const 31)
;; CHECK-NEXT:       )
;; CHECK-NEXT:      )
;; CHECK-NEXT:     )
;; CHECK-NEXT:     (local.get $var$0)
;; CHECK-NEXT:    )
;; CHECK-NEXT:    (local.get $var$2)
;; CHECK-NEXT:   )
;; CHECK-NEXT:   (i32.shr_u
;; CHECK-NEXT:    (i32.and
;; CHECK-NEXT:     (i32.shl
;; CHECK-NEXT:      (i32.const -1)
;; CHECK-NEXT:      (local.tee $var$1
;; CHECK-NEXT:       (i32.and
;; CHECK-NEXT:        (i32.sub
;; CHECK-NEXT:         (i32.const 0)
;; CHECK-NEXT:         (local.get $var$1)
;; CHECK-NEXT:        )
;; CHECK-NEXT:        (i32.const 31)
;; CHECK-NEXT:       )
;; CHECK-NEXT:      )
;; CHECK-NEXT:     )
;; CHECK-NEXT:     (local.get $var$0)
;; CHECK-NEXT:    )
;; CHECK-NEXT:    (local.get $var$1)
;; CHECK-NEXT:   )
;; CHECK-NEXT:  )
;; CHECK-NEXT: )

;; CHECK:      (func $__wasm_rotl_i64 (param $var$0 i64) (param $var$1 i64) (result i64)
;; CHECK-NEXT:  (local $var$2 i64)
;; CHECK-NEXT:  (i64.or
;; CHECK-NEXT:   (i64.shl
;; CHECK-NEXT:    (i64.and
;; CHECK-NEXT:     (i64.shr_u
;; CHECK-NEXT:      (i64.const -1)
;; CHECK-NEXT:      (local.tee $var$2
;; CHECK-NEXT:       (i64.and
;; CHECK-NEXT:        (local.get $var$1)
;; CHECK-NEXT:        (i64.const 63)
;; CHECK-NEXT:       )
;; CHECK-NEXT:      )
;; CHECK-NEXT:     )
;; CHECK-NEXT:     (local.get $var$0)
;; CHECK-NEXT:    )
;; CHECK-NEXT:    (local.get $var$2)
;; CHECK-NEXT:   )
;; CHECK-NEXT:   (i64.shr_u
;; CHECK-NEXT:    (i64.and
;; CHECK-NEXT:     (i64.shl
;; CHECK-NEXT:      (i64.const -1)
;; CHECK-NEXT:      (local.tee $var$1
;; CHECK-NEXT:       (i64.and
;; CHECK-NEXT:        (i64.sub
;; CHECK-NEXT:         (i64.const 0)
;; CHECK-NEXT:         (local.get $var$1)
;; CHECK-NEXT:        )
;; CHECK-NEXT:        (i64.const 63)
;; CHECK-NEXT:       )
;; CHECK-NEXT:      )
;; CHECK-NEXT:     )
;; CHECK-NEXT:     (local.get $var$0)
;; CHECK-NEXT:    )
;; CHECK-NEXT:    (local.get $var$1)
;; CHECK-NEXT:   )
;; CHECK-NEXT:  )
;; CHECK-NEXT: )

;; CHECK:      (func $__wasm_rotr_i32 (param $var$0 i32) (param $var$1 i32) (result i32)
;; CHECK-NEXT:  (local $var$2 i32)
;; CHECK-NEXT:  (i32.or
;; CHECK-NEXT:   (i32.shr_u
;; CHECK-NEXT:    (i32.and
;; CHECK-NEXT:     (i32.shl
;; CHECK-NEXT:      (i32.const -1)
;; CHECK-NEXT:      (local.tee $var$2
;; CHECK-NEXT:       (i32.and
;; CHECK-NEXT:        (local.get $var$1)
;; CHECK-NEXT:        (i32.const 31)
;; CHECK-NEXT:       )
;; CHECK-NEXT:      )
;; CHECK-NEXT:     )
;; CHECK-NEXT:     (local.get $var$0)
;; CHECK-NEXT:    )
;; CHECK-NEXT:    (local.get $var$2)
;; CHECK-NEXT:   )
;; CHECK-NEXT:   (i32.shl
;; CHECK-NEXT:    (i32.and
;; CHECK-NEXT:     (i32.shr_u
;; CHECK-NEXT:      (i32.const -1)
;; CHECK-NEXT:      (local.tee $var$1
;; CHECK-NEXT:       (i32.and
;; CHECK-NEXT:        (i32.sub
;; CHECK-NEXT:         (i32.const 0)
;; CHECK-NEXT:         (local.get $var$1)
;; CHECK-NEXT:        )
;; CHECK-NEXT:        (i32.const 31)
;; CHECK-NEXT:       )
;; CHECK-NEXT:      )
;; CHECK-NEXT:     )
;; CHECK-NEXT:     (local.get $var$0)
;; CHECK-NEXT:    )
;; CHECK-NEXT:    (local.get $var$1)
;; CHECK-NEXT:   )
;; CHECK-NEXT:  )
;; CHECK-NEXT: )

;; CHECK:      (func $__wasm_rotr_i64 (param $var$0 i64) (param $var$1 i64) (result i64)
;; CHECK-NEXT:  (local $var$2 i64)
;; CHECK-NEXT:  (i64.or
;; CHECK-NEXT:   (i64.shr_u
;; CHECK-NEXT:    (i64.and
;; CHECK-NEXT:     (i64.shl
;; CHECK-NEXT:      (i64.const -1)
;; CHECK-NEXT:      (local.tee $var$2
;; CHECK-NEXT:       (i64.and
;; CHECK-NEXT:        (local.get $var$1)
;; CHECK-NEXT:        (i64.const 63)
;; CHECK-NEXT:       )
;; CHECK-NEXT:      )
;; CHECK-NEXT:     )
;; CHECK-NEXT:     (local.get $var$0)
;; CHECK-NEXT:    )
;; CHECK-NEXT:    (local.get $var$2)
;; CHECK-NEXT:   )
;; CHECK-NEXT:   (i64.shl
;; CHECK-NEXT:    (i64.and
;; CHECK-NEXT:     (i64.shr_u
;; CHECK-NEXT:      (i64.const -1)
;; CHECK-NEXT:      (local.tee $var$1
;; CHECK-NEXT:       (i64.and
;; CHECK-NEXT:        (i64.sub
;; CHECK-NEXT:         (i64.const 0)
;; CHECK-NEXT:         (local.get $var$1)
;; CHECK-NEXT:        )
;; CHECK-NEXT:        (i64.const 63)
;; CHECK-NEXT:       )
;; CHECK-NEXT:      )
;; CHECK-NEXT:     )
;; CHECK-NEXT:     (local.get $var$0)
;; CHECK-NEXT:    )
;; CHECK-NEXT:    (local.get $var$1)
;; CHECK-NEXT:   )
;; CHECK-NEXT:  )
;; CHECK-NEXT: )
