;; NOTE: Assertions have been generated by update_lit_checks.py --all-items and should not be edited.

;; RUN: foreach %s %t wasm-opt --instrument-memory -all -S -o - | filecheck %s
;; RUN: foreach %s %t wasm-opt --instrument-memory --nominal -all -S -o - | filecheck %s --check-prefix=NOMNL

(module
  ;; CHECK:      (type $i32_i32_=>_i32 (func (param i32 i32) (result i32)))

  ;; CHECK:      (type $i32_i64_=>_i64 (func (param i32 i64) (result i64)))

  ;; CHECK:      (type $i32_f32_=>_f32 (func (param i32 f32) (result f32)))

  ;; CHECK:      (type $i32_f64_=>_f64 (func (param i32 f64) (result f64)))

  ;; CHECK:      (type $struct (struct (field (mut i32)) (field f32) (field $named f64)))
  ;; NOMNL:      (type $i32_i32_=>_i32 (func (param i32 i32) (result i32)))

  ;; NOMNL:      (type $i32_i64_=>_i64 (func (param i32 i64) (result i64)))

  ;; NOMNL:      (type $i32_f32_=>_f32 (func (param i32 f32) (result f32)))

  ;; NOMNL:      (type $i32_f64_=>_f64 (func (param i32 f64) (result f64)))

  ;; NOMNL:      (type $struct (struct (field (mut i32)) (field f32) (field $named f64)))
  (type $struct (struct
    (field (mut i32))
    (field f32)
    (field $named f64)
  ))
  ;; CHECK:      (type $array (array (mut f64)))
  ;; NOMNL:      (type $array (array (mut f64)))
  (type $array (array (mut f64)))

  ;; CHECK:      (type $i32_i32_i32_i32_=>_i32 (func (param i32 i32 i32 i32) (result i32)))

  ;; CHECK:      (type $ref|$struct|_=>_none (func (param (ref $struct))))

  ;; CHECK:      (type $ref|$array|_=>_none (func (param (ref $array))))

  ;; CHECK:      (import "env" "load_ptr" (func $load_ptr (param i32 i32 i32 i32) (result i32)))

  ;; CHECK:      (import "env" "load_val_i32" (func $load_val_i32 (param i32 i32) (result i32)))

  ;; CHECK:      (import "env" "load_val_i64" (func $load_val_i64 (param i32 i64) (result i64)))

  ;; CHECK:      (import "env" "load_val_f32" (func $load_val_f32 (param i32 f32) (result f32)))

  ;; CHECK:      (import "env" "load_val_f64" (func $load_val_f64 (param i32 f64) (result f64)))

  ;; CHECK:      (import "env" "store_ptr" (func $store_ptr (param i32 i32 i32 i32) (result i32)))

  ;; CHECK:      (import "env" "store_val_i32" (func $store_val_i32 (param i32 i32) (result i32)))

  ;; CHECK:      (import "env" "store_val_i64" (func $store_val_i64 (param i32 i64) (result i64)))

  ;; CHECK:      (import "env" "store_val_f32" (func $store_val_f32 (param i32 f32) (result f32)))

  ;; CHECK:      (import "env" "store_val_f64" (func $store_val_f64 (param i32 f64) (result f64)))

  ;; CHECK:      (import "env" "struct_get_val_i32" (func $struct_get_val_i32 (param i32 i32) (result i32)))

  ;; CHECK:      (import "env" "struct_get_val_i64" (func $struct_get_val_i64 (param i32 i64) (result i64)))

  ;; CHECK:      (import "env" "struct_get_val_f32" (func $struct_get_val_f32 (param i32 f32) (result f32)))

  ;; CHECK:      (import "env" "struct_get_val_f64" (func $struct_get_val_f64 (param i32 f64) (result f64)))

  ;; CHECK:      (import "env" "struct_set_val_i32" (func $struct_set_val_i32 (param i32 i32) (result i32)))

  ;; CHECK:      (import "env" "struct_set_val_i64" (func $struct_set_val_i64 (param i32 i64) (result i64)))

  ;; CHECK:      (import "env" "struct_set_val_f32" (func $struct_set_val_f32 (param i32 f32) (result f32)))

  ;; CHECK:      (import "env" "struct_set_val_f64" (func $struct_set_val_f64 (param i32 f64) (result f64)))

  ;; CHECK:      (import "env" "array_get_val_i32" (func $array_get_val_i32 (param i32 i32) (result i32)))

  ;; CHECK:      (import "env" "array_get_val_i64" (func $array_get_val_i64 (param i32 i64) (result i64)))

  ;; CHECK:      (import "env" "array_get_val_f32" (func $array_get_val_f32 (param i32 f32) (result f32)))

  ;; CHECK:      (import "env" "array_get_val_f64" (func $array_get_val_f64 (param i32 f64) (result f64)))

  ;; CHECK:      (import "env" "array_set_val_i32" (func $array_set_val_i32 (param i32 i32) (result i32)))

  ;; CHECK:      (import "env" "array_set_val_i64" (func $array_set_val_i64 (param i32 i64) (result i64)))

  ;; CHECK:      (import "env" "array_set_val_f32" (func $array_set_val_f32 (param i32 f32) (result f32)))

  ;; CHECK:      (import "env" "array_set_val_f64" (func $array_set_val_f64 (param i32 f64) (result f64)))

  ;; CHECK:      (import "env" "array_get_index" (func $array_get_index (param i32 i32) (result i32)))

  ;; CHECK:      (import "env" "array_set_index" (func $array_set_index (param i32 i32) (result i32)))

  ;; CHECK:      (func $structs (type $ref|$struct|_=>_none) (param $x (ref $struct))
  ;; CHECK-NEXT:  (drop
  ;; CHECK-NEXT:   (call $struct_get_val_i32
  ;; CHECK-NEXT:    (i32.const 0)
  ;; CHECK-NEXT:    (struct.get $struct 0
  ;; CHECK-NEXT:     (local.get $x)
  ;; CHECK-NEXT:    )
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT:  (drop
  ;; CHECK-NEXT:   (call $struct_get_val_f32
  ;; CHECK-NEXT:    (i32.const 1)
  ;; CHECK-NEXT:    (struct.get $struct 1
  ;; CHECK-NEXT:     (local.get $x)
  ;; CHECK-NEXT:    )
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT:  (drop
  ;; CHECK-NEXT:   (call $struct_get_val_f64
  ;; CHECK-NEXT:    (i32.const 2)
  ;; CHECK-NEXT:    (struct.get $struct $named
  ;; CHECK-NEXT:     (local.get $x)
  ;; CHECK-NEXT:    )
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT:  (struct.set $struct 0
  ;; CHECK-NEXT:   (local.get $x)
  ;; CHECK-NEXT:   (call $struct_set_val_i32
  ;; CHECK-NEXT:    (i32.const 3)
  ;; CHECK-NEXT:    (i32.const 42)
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT: )
  ;; NOMNL:      (type $i32_i32_i32_i32_=>_i32 (func (param i32 i32 i32 i32) (result i32)))

  ;; NOMNL:      (type $ref|$struct|_=>_none (func (param (ref $struct))))

  ;; NOMNL:      (type $ref|$array|_=>_none (func (param (ref $array))))

  ;; NOMNL:      (import "env" "load_ptr" (func $load_ptr (param i32 i32 i32 i32) (result i32)))

  ;; NOMNL:      (import "env" "load_val_i32" (func $load_val_i32 (param i32 i32) (result i32)))

  ;; NOMNL:      (import "env" "load_val_i64" (func $load_val_i64 (param i32 i64) (result i64)))

  ;; NOMNL:      (import "env" "load_val_f32" (func $load_val_f32 (param i32 f32) (result f32)))

  ;; NOMNL:      (import "env" "load_val_f64" (func $load_val_f64 (param i32 f64) (result f64)))

  ;; NOMNL:      (import "env" "store_ptr" (func $store_ptr (param i32 i32 i32 i32) (result i32)))

  ;; NOMNL:      (import "env" "store_val_i32" (func $store_val_i32 (param i32 i32) (result i32)))

  ;; NOMNL:      (import "env" "store_val_i64" (func $store_val_i64 (param i32 i64) (result i64)))

  ;; NOMNL:      (import "env" "store_val_f32" (func $store_val_f32 (param i32 f32) (result f32)))

  ;; NOMNL:      (import "env" "store_val_f64" (func $store_val_f64 (param i32 f64) (result f64)))

  ;; NOMNL:      (import "env" "struct_get_val_i32" (func $struct_get_val_i32 (param i32 i32) (result i32)))

  ;; NOMNL:      (import "env" "struct_get_val_i64" (func $struct_get_val_i64 (param i32 i64) (result i64)))

  ;; NOMNL:      (import "env" "struct_get_val_f32" (func $struct_get_val_f32 (param i32 f32) (result f32)))

  ;; NOMNL:      (import "env" "struct_get_val_f64" (func $struct_get_val_f64 (param i32 f64) (result f64)))

  ;; NOMNL:      (import "env" "struct_set_val_i32" (func $struct_set_val_i32 (param i32 i32) (result i32)))

  ;; NOMNL:      (import "env" "struct_set_val_i64" (func $struct_set_val_i64 (param i32 i64) (result i64)))

  ;; NOMNL:      (import "env" "struct_set_val_f32" (func $struct_set_val_f32 (param i32 f32) (result f32)))

  ;; NOMNL:      (import "env" "struct_set_val_f64" (func $struct_set_val_f64 (param i32 f64) (result f64)))

  ;; NOMNL:      (import "env" "array_get_val_i32" (func $array_get_val_i32 (param i32 i32) (result i32)))

  ;; NOMNL:      (import "env" "array_get_val_i64" (func $array_get_val_i64 (param i32 i64) (result i64)))

  ;; NOMNL:      (import "env" "array_get_val_f32" (func $array_get_val_f32 (param i32 f32) (result f32)))

  ;; NOMNL:      (import "env" "array_get_val_f64" (func $array_get_val_f64 (param i32 f64) (result f64)))

  ;; NOMNL:      (import "env" "array_set_val_i32" (func $array_set_val_i32 (param i32 i32) (result i32)))

  ;; NOMNL:      (import "env" "array_set_val_i64" (func $array_set_val_i64 (param i32 i64) (result i64)))

  ;; NOMNL:      (import "env" "array_set_val_f32" (func $array_set_val_f32 (param i32 f32) (result f32)))

  ;; NOMNL:      (import "env" "array_set_val_f64" (func $array_set_val_f64 (param i32 f64) (result f64)))

  ;; NOMNL:      (import "env" "array_get_index" (func $array_get_index (param i32 i32) (result i32)))

  ;; NOMNL:      (import "env" "array_set_index" (func $array_set_index (param i32 i32) (result i32)))

  ;; NOMNL:      (func $structs (type $ref|$struct|_=>_none) (param $x (ref $struct))
  ;; NOMNL-NEXT:  (drop
  ;; NOMNL-NEXT:   (call $struct_get_val_i32
  ;; NOMNL-NEXT:    (i32.const 0)
  ;; NOMNL-NEXT:    (struct.get $struct 0
  ;; NOMNL-NEXT:     (local.get $x)
  ;; NOMNL-NEXT:    )
  ;; NOMNL-NEXT:   )
  ;; NOMNL-NEXT:  )
  ;; NOMNL-NEXT:  (drop
  ;; NOMNL-NEXT:   (call $struct_get_val_f32
  ;; NOMNL-NEXT:    (i32.const 1)
  ;; NOMNL-NEXT:    (struct.get $struct 1
  ;; NOMNL-NEXT:     (local.get $x)
  ;; NOMNL-NEXT:    )
  ;; NOMNL-NEXT:   )
  ;; NOMNL-NEXT:  )
  ;; NOMNL-NEXT:  (drop
  ;; NOMNL-NEXT:   (call $struct_get_val_f64
  ;; NOMNL-NEXT:    (i32.const 2)
  ;; NOMNL-NEXT:    (struct.get $struct $named
  ;; NOMNL-NEXT:     (local.get $x)
  ;; NOMNL-NEXT:    )
  ;; NOMNL-NEXT:   )
  ;; NOMNL-NEXT:  )
  ;; NOMNL-NEXT:  (struct.set $struct 0
  ;; NOMNL-NEXT:   (local.get $x)
  ;; NOMNL-NEXT:   (call $struct_set_val_i32
  ;; NOMNL-NEXT:    (i32.const 3)
  ;; NOMNL-NEXT:    (i32.const 42)
  ;; NOMNL-NEXT:   )
  ;; NOMNL-NEXT:  )
  ;; NOMNL-NEXT: )
  (func $structs (param $x (ref $struct))
    (drop
      (struct.get $struct 0 (local.get $x))
    )
    (drop
      (struct.get $struct 1 (local.get $x))
    )
    (drop
      (struct.get $struct 2 (local.get $x))
    )
    (struct.set $struct 0 (local.get $x) (i32.const 42))
  )

  ;; CHECK:      (func $arrays (type $ref|$array|_=>_none) (param $x (ref $array))
  ;; CHECK-NEXT:  (drop
  ;; CHECK-NEXT:   (call $array_get_val_f64
  ;; CHECK-NEXT:    (i32.const 5)
  ;; CHECK-NEXT:    (array.get $array
  ;; CHECK-NEXT:     (local.get $x)
  ;; CHECK-NEXT:     (call $array_get_index
  ;; CHECK-NEXT:      (i32.const 4)
  ;; CHECK-NEXT:      (i32.const 10)
  ;; CHECK-NEXT:     )
  ;; CHECK-NEXT:    )
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT:  (array.set $array
  ;; CHECK-NEXT:   (local.get $x)
  ;; CHECK-NEXT:   (call $array_set_index
  ;; CHECK-NEXT:    (i32.const 6)
  ;; CHECK-NEXT:    (i32.const 42)
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:   (call $array_set_val_f64
  ;; CHECK-NEXT:    (i32.const 7)
  ;; CHECK-NEXT:    (f64.const 3.14159)
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT: )
  ;; NOMNL:      (func $arrays (type $ref|$array|_=>_none) (param $x (ref $array))
  ;; NOMNL-NEXT:  (drop
  ;; NOMNL-NEXT:   (call $array_get_val_f64
  ;; NOMNL-NEXT:    (i32.const 5)
  ;; NOMNL-NEXT:    (array.get $array
  ;; NOMNL-NEXT:     (local.get $x)
  ;; NOMNL-NEXT:     (call $array_get_index
  ;; NOMNL-NEXT:      (i32.const 4)
  ;; NOMNL-NEXT:      (i32.const 10)
  ;; NOMNL-NEXT:     )
  ;; NOMNL-NEXT:    )
  ;; NOMNL-NEXT:   )
  ;; NOMNL-NEXT:  )
  ;; NOMNL-NEXT:  (array.set $array
  ;; NOMNL-NEXT:   (local.get $x)
  ;; NOMNL-NEXT:   (call $array_set_index
  ;; NOMNL-NEXT:    (i32.const 6)
  ;; NOMNL-NEXT:    (i32.const 42)
  ;; NOMNL-NEXT:   )
  ;; NOMNL-NEXT:   (call $array_set_val_f64
  ;; NOMNL-NEXT:    (i32.const 7)
  ;; NOMNL-NEXT:    (f64.const 3.14159)
  ;; NOMNL-NEXT:   )
  ;; NOMNL-NEXT:  )
  ;; NOMNL-NEXT: )
  (func $arrays (param $x (ref $array))
    (drop
      (array.get $array (local.get $x) (i32.const 10))
    )
    (array.set $array (local.get $x) (i32.const 42) (f64.const 3.14159))
  )
)
