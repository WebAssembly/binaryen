;; NOTE: Assertions have been generated by update_lit_checks.py --all-items and should not be edited.

;; As in monomorphize-types.wast, test in both "always" mode, which always
;; monomorphizes, and in "careful" mode which does it only when it appears to
;; actually help.

;; RUN: foreach %s %t wasm-opt --monomorphize-always -S -o - | filecheck %s --check-prefix ALWAYS
;; RUN: foreach %s %t wasm-opt --monomorphize        -S -o - | filecheck %s --check-prefix CAREFUL

(module
  (func $caller-consts
    ;; This function has a large number of params, in fact too many for us to
    ;; allow in monomorphized functions. However, all the params are constant,
    ;; so they go into the call context and are no longer params, and we can
    ;; optimize.
    (call $many-params
      (i32.const 0) (i32.const 0) (i32.const 0) (i32.const 0) (i32.const 0)
      (i32.const 5) (i32.const 5) (i32.const 5) (i32.const 5) (i32.const 5)
      (i32.const 15) (i32.const 15) (i32.const 15) (i32.const 15) (i32.const 15)
      (i32.const 20) (i32.const 20) (i32.const 20) (i32.const 20) (i32.const 20)
      (i32.const 25) (i32.const 25) (i32.const 25) (i32.const 25) (i32.const 25)
    )
  )

  (func $caller-locals
    (param $x i32)
    ;; As above, but now we send unknown local values. These would remain as
    ;; parameters, so we do not optimize.
    (call $many-params
      (local.get $x) (local.get $x) (local.get $x) (local.get $x) (local.get $x)
      (local.get $x) (local.get $x) (local.get $x) (local.get $x) (local.get $x)
      (local.get $x) (local.get $x) (local.get $x) (local.get $x) (local.get $x)
      (local.get $x) (local.get $x) (local.get $x) (local.get $x) (local.get $x)
      (local.get $x) (local.get $x) (local.get $x) (local.get $x) (local.get $x)
    )
  )

  (func $many-params
    (param i32) (param i32) (param i32) (param i32) (param i32)
    (param i32) (param i32) (param i32) (param i32) (param i32)
    (param i32) (param i32) (param i32) (param i32) (param i32)
    (param i32) (param i32) (param i32) (param i32) (param i32)
    (param i32) (param i32) (param i32) (param i32) (param i32)
  )
)
