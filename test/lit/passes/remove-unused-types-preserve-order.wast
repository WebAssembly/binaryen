;; NOTE: Assertions have been generated by update_lit_checks.py --all-items and should not be edited.

;; RUN: wasm-opt %s -all --closed-world --preserve-type-order \
;; RUN:     --remove-unused-types -S -o - | filecheck %s
;; RUN: wasm-opt %s -all --closed-world --preserve-type-order \
;; RUN:     --remove-unused-types --roundtrip -S -o - | filecheck %s

(module
  (rec
    (type $unused-1 (struct))
    ;; CHECK:      (rec
    ;; CHECK-NEXT:  (type $A (struct))
    (type $A (struct))
    (type $unused-2 (struct))
  )
  ;; CHECK:       (type $B (struct))
  (type $B (struct))
  (type $unused-3 (struct (field i32)))
  (rec
    ;; CHECK:       (type $C (struct (field (ref null $D))))
    (type $C (struct (field (ref null $D))))
    (type $unused-4 (struct))
    ;; CHECK:       (type $D (struct (field (ref null $C))))
    (type $D (struct (field (ref null $C))))
  )
  ;; CHECK:       (type $E (struct (field (ref null $E))))
  (type $E (struct (field (ref null $E))))

  ;; Use the types in a shuffled order, using later types the most. If we
  ;; weren't deliberately and correctly preserving type order, we would end up
  ;; with some other order.

  ;; CHECK:      (global $E1 (ref null $E) (ref.null none))
  (global $E1 (ref null $E) (ref.null none))
  ;; CHECK:      (global $E2 (ref null $E) (ref.null none))
  (global $E2 (ref null $E) (ref.null none))
  ;; CHECK:      (global $E3 (ref null $E) (ref.null none))
  (global $E3 (ref null $E) (ref.null none))
  ;; CHECK:      (global $E4 (ref null $E) (ref.null none))
  (global $E4 (ref null $E) (ref.null none))
  ;; CHECK:      (global $E5 (ref null $E) (ref.null none))
  (global $E5 (ref null $E) (ref.null none))
  ;; CHECK:      (global $E6 (ref null $E) (ref.null none))
  (global $E6 (ref null $E) (ref.null none))
  ;; CHECK:      (global $E7 (ref null $E) (ref.null none))
  (global $E7 (ref null $E) (ref.null none))
  ;; CHECK:      (global $E8 (ref null $E) (ref.null none))
  (global $E8 (ref null $E) (ref.null none))
  ;; CHECK:      (global $E9 (ref null $E) (ref.null none))
  (global $E9 (ref null $E) (ref.null none))

  ;; CHECK:      (global $C1 (ref null $C) (ref.null none))
  (global $C1 (ref null $C) (ref.null none))
  ;; CHECK:      (global $C2 (ref null $C) (ref.null none))
  (global $C2 (ref null $C) (ref.null none))
  ;; CHECK:      (global $C3 (ref null $C) (ref.null none))
  (global $C3 (ref null $C) (ref.null none))
  ;; CHECK:      (global $C4 (ref null $C) (ref.null none))
  (global $C4 (ref null $C) (ref.null none))
  ;; CHECK:      (global $C5 (ref null $C) (ref.null none))
  (global $C5 (ref null $C) (ref.null none))
  ;; CHECK:      (global $C6 (ref null $C) (ref.null none))
  (global $C6 (ref null $C) (ref.null none))

  ;; CHECK:      (global $A1 (ref null $A) (ref.null none))
  (global $A1 (ref null $A) (ref.null none))
  ;; CHECK:      (global $A2 (ref null $A) (ref.null none))
  (global $A2 (ref null $A) (ref.null none))
  ;; CHECK:      (global $A3 (ref null $A) (ref.null none))
  (global $A3 (ref null $A) (ref.null none))
  ;; CHECK:      (global $A4 (ref null $A) (ref.null none))
  (global $A4 (ref null $A) (ref.null none))

  ;; CHECK:      (global $D1 (ref null $D) (ref.null none))
  (global $D1 (ref null $D) (ref.null none))
  ;; CHECK:      (global $D2 (ref null $D) (ref.null none))
  (global $D2 (ref null $D) (ref.null none))

  ;; CHECK:      (global $B1 (ref null $B) (ref.null none))
  (global $B1 (ref null $B) (ref.null none))
)
