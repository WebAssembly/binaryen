;; NOTE: Assertions have been generated by update_lit_checks.py --all-items and should not be edited.
;; NOTE: This test was ported using port_test.py and could be cleaned up.

;; RUN: foreach %s %t wasm-opt --alignment-lowering -S -o - | filecheck %s

(module
 ;; CHECK:      (type $none_=>_none (func))

 ;; CHECK:      (memory $0 1 1)
 (memory $0 1 1)
 ;; CHECK:      (func $func_4
 ;; CHECK-NEXT:  (local $0 i32)
 ;; CHECK-NEXT:  (local $1 i32)
 ;; CHECK-NEXT:  (local $2 i32)
 ;; CHECK-NEXT:  (local $3 i32)
 ;; CHECK-NEXT:  (local $4 i32)
 ;; CHECK-NEXT:  (local $5 i32)
 ;; CHECK-NEXT:  (local $6 i32)
 ;; CHECK-NEXT:  (local $7 i32)
 ;; CHECK-NEXT:  (local $8 i32)
 ;; CHECK-NEXT:  (local $9 i32)
 ;; CHECK-NEXT:  (local $10 i32)
 ;; CHECK-NEXT:  (local $11 i32)
 ;; CHECK-NEXT:  (drop
 ;; CHECK-NEXT:   (i32.load
 ;; CHECK-NEXT:    (i32.const 4)
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (drop
 ;; CHECK-NEXT:   (block (result i32)
 ;; CHECK-NEXT:    (local.set $0
 ;; CHECK-NEXT:     (i32.const 4)
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:    (i32.or
 ;; CHECK-NEXT:     (i32.or
 ;; CHECK-NEXT:      (i32.load8_u
 ;; CHECK-NEXT:       (local.get $0)
 ;; CHECK-NEXT:      )
 ;; CHECK-NEXT:      (i32.shl
 ;; CHECK-NEXT:       (i32.load8_u offset=1
 ;; CHECK-NEXT:        (local.get $0)
 ;; CHECK-NEXT:       )
 ;; CHECK-NEXT:       (i32.const 8)
 ;; CHECK-NEXT:      )
 ;; CHECK-NEXT:     )
 ;; CHECK-NEXT:     (i32.or
 ;; CHECK-NEXT:      (i32.shl
 ;; CHECK-NEXT:       (i32.load8_u offset=2
 ;; CHECK-NEXT:        (local.get $0)
 ;; CHECK-NEXT:       )
 ;; CHECK-NEXT:       (i32.const 16)
 ;; CHECK-NEXT:      )
 ;; CHECK-NEXT:      (i32.shl
 ;; CHECK-NEXT:       (i32.load8_u offset=3
 ;; CHECK-NEXT:        (local.get $0)
 ;; CHECK-NEXT:       )
 ;; CHECK-NEXT:       (i32.const 24)
 ;; CHECK-NEXT:      )
 ;; CHECK-NEXT:     )
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (drop
 ;; CHECK-NEXT:   (block (result i32)
 ;; CHECK-NEXT:    (local.set $1
 ;; CHECK-NEXT:     (i32.const 4)
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:    (i32.or
 ;; CHECK-NEXT:     (i32.load16_u
 ;; CHECK-NEXT:      (local.get $1)
 ;; CHECK-NEXT:     )
 ;; CHECK-NEXT:     (i32.shl
 ;; CHECK-NEXT:      (i32.load16_u offset=2
 ;; CHECK-NEXT:       (local.get $1)
 ;; CHECK-NEXT:      )
 ;; CHECK-NEXT:      (i32.const 16)
 ;; CHECK-NEXT:     )
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (drop
 ;; CHECK-NEXT:   (i32.load
 ;; CHECK-NEXT:    (i32.const 4)
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (drop
 ;; CHECK-NEXT:   (i32.load offset=100
 ;; CHECK-NEXT:    (i32.const 4)
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (drop
 ;; CHECK-NEXT:   (block (result i32)
 ;; CHECK-NEXT:    (local.set $2
 ;; CHECK-NEXT:     (i32.const 4)
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:    (i32.or
 ;; CHECK-NEXT:     (i32.or
 ;; CHECK-NEXT:      (i32.load8_u offset=100
 ;; CHECK-NEXT:       (local.get $2)
 ;; CHECK-NEXT:      )
 ;; CHECK-NEXT:      (i32.shl
 ;; CHECK-NEXT:       (i32.load8_u offset=101
 ;; CHECK-NEXT:        (local.get $2)
 ;; CHECK-NEXT:       )
 ;; CHECK-NEXT:       (i32.const 8)
 ;; CHECK-NEXT:      )
 ;; CHECK-NEXT:     )
 ;; CHECK-NEXT:     (i32.or
 ;; CHECK-NEXT:      (i32.shl
 ;; CHECK-NEXT:       (i32.load8_u offset=102
 ;; CHECK-NEXT:        (local.get $2)
 ;; CHECK-NEXT:       )
 ;; CHECK-NEXT:       (i32.const 16)
 ;; CHECK-NEXT:      )
 ;; CHECK-NEXT:      (i32.shl
 ;; CHECK-NEXT:       (i32.load8_u offset=103
 ;; CHECK-NEXT:        (local.get $2)
 ;; CHECK-NEXT:       )
 ;; CHECK-NEXT:       (i32.const 24)
 ;; CHECK-NEXT:      )
 ;; CHECK-NEXT:     )
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (drop
 ;; CHECK-NEXT:   (block (result i32)
 ;; CHECK-NEXT:    (local.set $3
 ;; CHECK-NEXT:     (i32.const 4)
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:    (i32.or
 ;; CHECK-NEXT:     (i32.load16_u offset=100
 ;; CHECK-NEXT:      (local.get $3)
 ;; CHECK-NEXT:     )
 ;; CHECK-NEXT:     (i32.shl
 ;; CHECK-NEXT:      (i32.load16_u offset=102
 ;; CHECK-NEXT:       (local.get $3)
 ;; CHECK-NEXT:      )
 ;; CHECK-NEXT:      (i32.const 16)
 ;; CHECK-NEXT:     )
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (drop
 ;; CHECK-NEXT:   (i32.load offset=100
 ;; CHECK-NEXT:    (i32.const 4)
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (drop
 ;; CHECK-NEXT:   (unreachable)
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (i32.store
 ;; CHECK-NEXT:   (i32.const 4)
 ;; CHECK-NEXT:   (i32.const 8)
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (block
 ;; CHECK-NEXT:   (local.set $4
 ;; CHECK-NEXT:    (i32.const 4)
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:   (local.set $5
 ;; CHECK-NEXT:    (i32.const 8)
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:   (i32.store8
 ;; CHECK-NEXT:    (local.get $4)
 ;; CHECK-NEXT:    (local.get $5)
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:   (i32.store8 offset=1
 ;; CHECK-NEXT:    (local.get $4)
 ;; CHECK-NEXT:    (i32.shr_u
 ;; CHECK-NEXT:     (local.get $5)
 ;; CHECK-NEXT:     (i32.const 8)
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:   (i32.store8 offset=2
 ;; CHECK-NEXT:    (local.get $4)
 ;; CHECK-NEXT:    (i32.shr_u
 ;; CHECK-NEXT:     (local.get $5)
 ;; CHECK-NEXT:     (i32.const 16)
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:   (i32.store8 offset=3
 ;; CHECK-NEXT:    (local.get $4)
 ;; CHECK-NEXT:    (i32.shr_u
 ;; CHECK-NEXT:     (local.get $5)
 ;; CHECK-NEXT:     (i32.const 24)
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (block
 ;; CHECK-NEXT:   (local.set $6
 ;; CHECK-NEXT:    (i32.const 4)
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:   (local.set $7
 ;; CHECK-NEXT:    (i32.const 8)
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:   (i32.store16
 ;; CHECK-NEXT:    (local.get $6)
 ;; CHECK-NEXT:    (local.get $7)
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:   (i32.store16 offset=2
 ;; CHECK-NEXT:    (local.get $6)
 ;; CHECK-NEXT:    (i32.shr_u
 ;; CHECK-NEXT:     (local.get $7)
 ;; CHECK-NEXT:     (i32.const 16)
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (i32.store
 ;; CHECK-NEXT:   (i32.const 4)
 ;; CHECK-NEXT:   (i32.const 8)
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (i32.store offset=100
 ;; CHECK-NEXT:   (i32.const 4)
 ;; CHECK-NEXT:   (i32.const 8)
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (block
 ;; CHECK-NEXT:   (local.set $8
 ;; CHECK-NEXT:    (i32.const 4)
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:   (local.set $9
 ;; CHECK-NEXT:    (i32.const 8)
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:   (i32.store8 offset=100
 ;; CHECK-NEXT:    (local.get $8)
 ;; CHECK-NEXT:    (local.get $9)
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:   (i32.store8 offset=101
 ;; CHECK-NEXT:    (local.get $8)
 ;; CHECK-NEXT:    (i32.shr_u
 ;; CHECK-NEXT:     (local.get $9)
 ;; CHECK-NEXT:     (i32.const 8)
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:   (i32.store8 offset=102
 ;; CHECK-NEXT:    (local.get $8)
 ;; CHECK-NEXT:    (i32.shr_u
 ;; CHECK-NEXT:     (local.get $9)
 ;; CHECK-NEXT:     (i32.const 16)
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:   (i32.store8 offset=103
 ;; CHECK-NEXT:    (local.get $8)
 ;; CHECK-NEXT:    (i32.shr_u
 ;; CHECK-NEXT:     (local.get $9)
 ;; CHECK-NEXT:     (i32.const 24)
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (block
 ;; CHECK-NEXT:   (local.set $10
 ;; CHECK-NEXT:    (i32.const 4)
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:   (local.set $11
 ;; CHECK-NEXT:    (i32.const 8)
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:   (i32.store16 offset=100
 ;; CHECK-NEXT:    (local.get $10)
 ;; CHECK-NEXT:    (local.get $11)
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:   (i32.store16 offset=102
 ;; CHECK-NEXT:    (local.get $10)
 ;; CHECK-NEXT:    (i32.shr_u
 ;; CHECK-NEXT:     (local.get $11)
 ;; CHECK-NEXT:     (i32.const 16)
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (i32.store offset=100
 ;; CHECK-NEXT:   (i32.const 4)
 ;; CHECK-NEXT:   (i32.const 8)
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (block
 ;; CHECK-NEXT:   (drop
 ;; CHECK-NEXT:    (unreachable)
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:   (drop
 ;; CHECK-NEXT:    (i32.const 8)
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (block
 ;; CHECK-NEXT:   (drop
 ;; CHECK-NEXT:    (i32.const 4)
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:   (drop
 ;; CHECK-NEXT:    (unreachable)
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT: )
 (func $func_4
  (drop (i32.load (i32.const 4)))
  (drop (i32.load align=1 (i32.const 4)))
  (drop (i32.load align=2 (i32.const 4)))
  (drop (i32.load align=4 (i32.const 4)))
  (drop (i32.load offset=100 (i32.const 4)))
  (drop (i32.load offset=100 align=1 (i32.const 4)))
  (drop (i32.load offset=100 align=2 (i32.const 4)))
  (drop (i32.load offset=100 align=4 (i32.const 4)))
  (drop (i32.load offset=100 align=1 (unreachable)))
  (i32.store (i32.const 4) (i32.const 8))
  (i32.store align=1 (i32.const 4) (i32.const 8))
  (i32.store align=2 (i32.const 4) (i32.const 8))
  (i32.store align=4 (i32.const 4) (i32.const 8))
  (i32.store offset=100 (i32.const 4) (i32.const 8))
  (i32.store offset=100 align=1 (i32.const 4) (i32.const 8))
  (i32.store offset=100 align=2 (i32.const 4) (i32.const 8))
  (i32.store offset=100 align=4 (i32.const 4) (i32.const 8))
  (i32.store offset=100 align=1 (unreachable) (i32.const 8))
  (i32.store offset=100 align=1 (i32.const 4) (unreachable))
 )
 ;; CHECK:      (func $func_2
 ;; CHECK-NEXT:  (local $0 i32)
 ;; CHECK-NEXT:  (local $1 i32)
 ;; CHECK-NEXT:  (local $2 i32)
 ;; CHECK-NEXT:  (local $3 i32)
 ;; CHECK-NEXT:  (local $4 i32)
 ;; CHECK-NEXT:  (local $5 i32)
 ;; CHECK-NEXT:  (drop
 ;; CHECK-NEXT:   (i32.load16_u
 ;; CHECK-NEXT:    (i32.const 4)
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (drop
 ;; CHECK-NEXT:   (block (result i32)
 ;; CHECK-NEXT:    (local.set $0
 ;; CHECK-NEXT:     (i32.const 4)
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:    (i32.or
 ;; CHECK-NEXT:     (i32.load8_u
 ;; CHECK-NEXT:      (local.get $0)
 ;; CHECK-NEXT:     )
 ;; CHECK-NEXT:     (i32.shl
 ;; CHECK-NEXT:      (i32.load8_u offset=1
 ;; CHECK-NEXT:       (local.get $0)
 ;; CHECK-NEXT:      )
 ;; CHECK-NEXT:      (i32.const 8)
 ;; CHECK-NEXT:     )
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (drop
 ;; CHECK-NEXT:   (i32.load16_u
 ;; CHECK-NEXT:    (i32.const 4)
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (drop
 ;; CHECK-NEXT:   (i32.load16_u offset=100
 ;; CHECK-NEXT:    (i32.const 4)
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (drop
 ;; CHECK-NEXT:   (block (result i32)
 ;; CHECK-NEXT:    (local.set $1
 ;; CHECK-NEXT:     (i32.const 4)
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:    (i32.or
 ;; CHECK-NEXT:     (i32.load8_u offset=100
 ;; CHECK-NEXT:      (local.get $1)
 ;; CHECK-NEXT:     )
 ;; CHECK-NEXT:     (i32.shl
 ;; CHECK-NEXT:      (i32.load8_u offset=101
 ;; CHECK-NEXT:       (local.get $1)
 ;; CHECK-NEXT:      )
 ;; CHECK-NEXT:      (i32.const 8)
 ;; CHECK-NEXT:     )
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (drop
 ;; CHECK-NEXT:   (i32.load16_u offset=100
 ;; CHECK-NEXT:    (i32.const 4)
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (drop
 ;; CHECK-NEXT:   (unreachable)
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (i32.store16
 ;; CHECK-NEXT:   (i32.const 4)
 ;; CHECK-NEXT:   (i32.const 8)
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (block
 ;; CHECK-NEXT:   (local.set $2
 ;; CHECK-NEXT:    (i32.const 4)
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:   (local.set $3
 ;; CHECK-NEXT:    (i32.const 8)
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:   (i32.store8
 ;; CHECK-NEXT:    (local.get $2)
 ;; CHECK-NEXT:    (local.get $3)
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:   (i32.store8 offset=1
 ;; CHECK-NEXT:    (local.get $2)
 ;; CHECK-NEXT:    (i32.shr_u
 ;; CHECK-NEXT:     (local.get $3)
 ;; CHECK-NEXT:     (i32.const 8)
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (i32.store16
 ;; CHECK-NEXT:   (i32.const 4)
 ;; CHECK-NEXT:   (i32.const 8)
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (i32.store16 offset=100
 ;; CHECK-NEXT:   (i32.const 4)
 ;; CHECK-NEXT:   (i32.const 8)
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (block
 ;; CHECK-NEXT:   (local.set $4
 ;; CHECK-NEXT:    (i32.const 4)
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:   (local.set $5
 ;; CHECK-NEXT:    (i32.const 8)
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:   (i32.store8 offset=100
 ;; CHECK-NEXT:    (local.get $4)
 ;; CHECK-NEXT:    (local.get $5)
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:   (i32.store8 offset=101
 ;; CHECK-NEXT:    (local.get $4)
 ;; CHECK-NEXT:    (i32.shr_u
 ;; CHECK-NEXT:     (local.get $5)
 ;; CHECK-NEXT:     (i32.const 8)
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (i32.store16 offset=100
 ;; CHECK-NEXT:   (i32.const 4)
 ;; CHECK-NEXT:   (i32.const 8)
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (block
 ;; CHECK-NEXT:   (drop
 ;; CHECK-NEXT:    (unreachable)
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:   (drop
 ;; CHECK-NEXT:    (i32.const 8)
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (block
 ;; CHECK-NEXT:   (drop
 ;; CHECK-NEXT:    (i32.const 4)
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:   (drop
 ;; CHECK-NEXT:    (unreachable)
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT: )
 (func $func_2
  (drop (i32.load16_u (i32.const 4)))
  (drop (i32.load16_u align=1 (i32.const 4)))
  (drop (i32.load16_u align=2 (i32.const 4)))
  (drop (i32.load16_u offset=100 (i32.const 4)))
  (drop (i32.load16_u offset=100 align=1 (i32.const 4)))
  (drop (i32.load16_u offset=100 align=2 (i32.const 4)))
  (drop (i32.load16_u offset=100 align=1 (unreachable)))
  (i32.store16 (i32.const 4) (i32.const 8))
  (i32.store16 align=1 (i32.const 4) (i32.const 8))
  (i32.store16 align=2 (i32.const 4) (i32.const 8))
  (i32.store16 offset=100 (i32.const 4) (i32.const 8))
  (i32.store16 offset=100 align=1 (i32.const 4) (i32.const 8))
  (i32.store16 offset=100 align=2 (i32.const 4) (i32.const 8))
  (i32.store16 offset=100 align=1 (unreachable) (i32.const 8))
  (i32.store16 offset=100 align=1 (i32.const 4) (unreachable))
 )
 ;; CHECK:      (func $func_1
 ;; CHECK-NEXT:  (drop
 ;; CHECK-NEXT:   (i32.load8_u
 ;; CHECK-NEXT:    (i32.const 4)
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (drop
 ;; CHECK-NEXT:   (i32.load8_u
 ;; CHECK-NEXT:    (i32.const 4)
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (drop
 ;; CHECK-NEXT:   (i32.load8_u offset=100
 ;; CHECK-NEXT:    (i32.const 4)
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (drop
 ;; CHECK-NEXT:   (i32.load8_u offset=100
 ;; CHECK-NEXT:    (i32.const 4)
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (drop
 ;; CHECK-NEXT:   (unreachable)
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (i32.store8
 ;; CHECK-NEXT:   (i32.const 4)
 ;; CHECK-NEXT:   (i32.const 8)
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (i32.store8
 ;; CHECK-NEXT:   (i32.const 4)
 ;; CHECK-NEXT:   (i32.const 8)
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (i32.store8 offset=100
 ;; CHECK-NEXT:   (i32.const 4)
 ;; CHECK-NEXT:   (i32.const 8)
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (i32.store8 offset=100
 ;; CHECK-NEXT:   (i32.const 4)
 ;; CHECK-NEXT:   (i32.const 8)
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (block
 ;; CHECK-NEXT:   (drop
 ;; CHECK-NEXT:    (unreachable)
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:   (drop
 ;; CHECK-NEXT:    (i32.const 8)
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (block
 ;; CHECK-NEXT:   (drop
 ;; CHECK-NEXT:    (i32.const 4)
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:   (drop
 ;; CHECK-NEXT:    (unreachable)
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT: )
 (func $func_1
  (drop (i32.load8_u (i32.const 4)))
  (drop (i32.load8_u align=1 (i32.const 4)))
  (drop (i32.load8_u offset=100 (i32.const 4)))
  (drop (i32.load8_u offset=100 align=1 (i32.const 4)))
  (drop (i32.load8_u offset=100 align=1 (unreachable)))
  (i32.store8 (i32.const 4) (i32.const 8))
  (i32.store8 align=1 (i32.const 4) (i32.const 8))
  (i32.store8 offset=100 (i32.const 4) (i32.const 8))
  (i32.store8 offset=100 align=1 (i32.const 4) (i32.const 8))
  (i32.store8 offset=100 align=1 (unreachable) (i32.const 8))
  (i32.store8 offset=100 align=1 (i32.const 4) (unreachable))
 )
 ;; CHECK:      (func $func_signed
 ;; CHECK-NEXT:  (local $0 i32)
 ;; CHECK-NEXT:  (local $1 i32)
 ;; CHECK-NEXT:  (drop
 ;; CHECK-NEXT:   (i32.load16_s
 ;; CHECK-NEXT:    (i32.const 4)
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (drop
 ;; CHECK-NEXT:   (block (result i32)
 ;; CHECK-NEXT:    (local.set $0
 ;; CHECK-NEXT:     (i32.const 4)
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:    (i32.shr_s
 ;; CHECK-NEXT:     (i32.shl
 ;; CHECK-NEXT:      (i32.or
 ;; CHECK-NEXT:       (i32.load8_u
 ;; CHECK-NEXT:        (local.get $0)
 ;; CHECK-NEXT:       )
 ;; CHECK-NEXT:       (i32.shl
 ;; CHECK-NEXT:        (i32.load8_u offset=1
 ;; CHECK-NEXT:         (local.get $0)
 ;; CHECK-NEXT:        )
 ;; CHECK-NEXT:        (i32.const 8)
 ;; CHECK-NEXT:       )
 ;; CHECK-NEXT:      )
 ;; CHECK-NEXT:      (i32.const 16)
 ;; CHECK-NEXT:     )
 ;; CHECK-NEXT:     (i32.const 16)
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (drop
 ;; CHECK-NEXT:   (i32.load16_s
 ;; CHECK-NEXT:    (i32.const 4)
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (drop
 ;; CHECK-NEXT:   (i32.load16_s offset=100
 ;; CHECK-NEXT:    (i32.const 4)
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (drop
 ;; CHECK-NEXT:   (block (result i32)
 ;; CHECK-NEXT:    (local.set $1
 ;; CHECK-NEXT:     (i32.const 4)
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:    (i32.shr_s
 ;; CHECK-NEXT:     (i32.shl
 ;; CHECK-NEXT:      (i32.or
 ;; CHECK-NEXT:       (i32.load8_u offset=100
 ;; CHECK-NEXT:        (local.get $1)
 ;; CHECK-NEXT:       )
 ;; CHECK-NEXT:       (i32.shl
 ;; CHECK-NEXT:        (i32.load8_u offset=101
 ;; CHECK-NEXT:         (local.get $1)
 ;; CHECK-NEXT:        )
 ;; CHECK-NEXT:        (i32.const 8)
 ;; CHECK-NEXT:       )
 ;; CHECK-NEXT:      )
 ;; CHECK-NEXT:      (i32.const 16)
 ;; CHECK-NEXT:     )
 ;; CHECK-NEXT:     (i32.const 16)
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (drop
 ;; CHECK-NEXT:   (i32.load16_s offset=100
 ;; CHECK-NEXT:    (i32.const 4)
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (drop
 ;; CHECK-NEXT:   (unreachable)
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT: )
 (func $func_signed
  (drop (i32.load16_s (i32.const 4)))
  (drop (i32.load16_s align=1 (i32.const 4)))
  (drop (i32.load16_s align=2 (i32.const 4)))
  (drop (i32.load16_s offset=100 (i32.const 4)))
  (drop (i32.load16_s offset=100 align=1 (i32.const 4)))
  (drop (i32.load16_s offset=100 align=2 (i32.const 4)))
  (drop (i32.load16_s offset=100 align=1 (unreachable)))
 )
 ;; CHECK:      (func $i64-load
 ;; CHECK-NEXT:  (local $0 i32)
 ;; CHECK-NEXT:  (local $1 i32)
 ;; CHECK-NEXT:  (local $2 i32)
 ;; CHECK-NEXT:  (local $3 i32)
 ;; CHECK-NEXT:  (local $4 i32)
 ;; CHECK-NEXT:  (local $5 i32)
 ;; CHECK-NEXT:  (local $6 i32)
 ;; CHECK-NEXT:  (local $7 i32)
 ;; CHECK-NEXT:  (local $8 i32)
 ;; CHECK-NEXT:  (local $9 i32)
 ;; CHECK-NEXT:  (local $10 i32)
 ;; CHECK-NEXT:  (local $11 i32)
 ;; CHECK-NEXT:  (local $12 i32)
 ;; CHECK-NEXT:  (local $13 i32)
 ;; CHECK-NEXT:  (drop
 ;; CHECK-NEXT:   (block (result i64)
 ;; CHECK-NEXT:    (local.set $0
 ;; CHECK-NEXT:     (i32.const 12)
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:    (i64.or
 ;; CHECK-NEXT:     (i64.extend_i32_u
 ;; CHECK-NEXT:      (block (result i32)
 ;; CHECK-NEXT:       (local.set $1
 ;; CHECK-NEXT:        (local.get $0)
 ;; CHECK-NEXT:       )
 ;; CHECK-NEXT:       (i32.or
 ;; CHECK-NEXT:        (i32.or
 ;; CHECK-NEXT:         (i32.load8_u
 ;; CHECK-NEXT:          (local.get $1)
 ;; CHECK-NEXT:         )
 ;; CHECK-NEXT:         (i32.shl
 ;; CHECK-NEXT:          (i32.load8_u offset=1
 ;; CHECK-NEXT:           (local.get $1)
 ;; CHECK-NEXT:          )
 ;; CHECK-NEXT:          (i32.const 8)
 ;; CHECK-NEXT:         )
 ;; CHECK-NEXT:        )
 ;; CHECK-NEXT:        (i32.or
 ;; CHECK-NEXT:         (i32.shl
 ;; CHECK-NEXT:          (i32.load8_u offset=2
 ;; CHECK-NEXT:           (local.get $1)
 ;; CHECK-NEXT:          )
 ;; CHECK-NEXT:          (i32.const 16)
 ;; CHECK-NEXT:         )
 ;; CHECK-NEXT:         (i32.shl
 ;; CHECK-NEXT:          (i32.load8_u offset=3
 ;; CHECK-NEXT:           (local.get $1)
 ;; CHECK-NEXT:          )
 ;; CHECK-NEXT:          (i32.const 24)
 ;; CHECK-NEXT:         )
 ;; CHECK-NEXT:        )
 ;; CHECK-NEXT:       )
 ;; CHECK-NEXT:      )
 ;; CHECK-NEXT:     )
 ;; CHECK-NEXT:     (i64.shl
 ;; CHECK-NEXT:      (i64.extend_i32_u
 ;; CHECK-NEXT:       (block (result i32)
 ;; CHECK-NEXT:        (local.set $2
 ;; CHECK-NEXT:         (local.get $0)
 ;; CHECK-NEXT:        )
 ;; CHECK-NEXT:        (i32.or
 ;; CHECK-NEXT:         (i32.or
 ;; CHECK-NEXT:          (i32.load8_u offset=4
 ;; CHECK-NEXT:           (local.get $2)
 ;; CHECK-NEXT:          )
 ;; CHECK-NEXT:          (i32.shl
 ;; CHECK-NEXT:           (i32.load8_u offset=5
 ;; CHECK-NEXT:            (local.get $2)
 ;; CHECK-NEXT:           )
 ;; CHECK-NEXT:           (i32.const 8)
 ;; CHECK-NEXT:          )
 ;; CHECK-NEXT:         )
 ;; CHECK-NEXT:         (i32.or
 ;; CHECK-NEXT:          (i32.shl
 ;; CHECK-NEXT:           (i32.load8_u offset=6
 ;; CHECK-NEXT:            (local.get $2)
 ;; CHECK-NEXT:           )
 ;; CHECK-NEXT:           (i32.const 16)
 ;; CHECK-NEXT:          )
 ;; CHECK-NEXT:          (i32.shl
 ;; CHECK-NEXT:           (i32.load8_u offset=7
 ;; CHECK-NEXT:            (local.get $2)
 ;; CHECK-NEXT:           )
 ;; CHECK-NEXT:           (i32.const 24)
 ;; CHECK-NEXT:          )
 ;; CHECK-NEXT:         )
 ;; CHECK-NEXT:        )
 ;; CHECK-NEXT:       )
 ;; CHECK-NEXT:      )
 ;; CHECK-NEXT:      (i64.const 32)
 ;; CHECK-NEXT:     )
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (drop
 ;; CHECK-NEXT:   (block (result i64)
 ;; CHECK-NEXT:    (local.set $3
 ;; CHECK-NEXT:     (i32.const 16)
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:    (i64.or
 ;; CHECK-NEXT:     (i64.extend_i32_u
 ;; CHECK-NEXT:      (block (result i32)
 ;; CHECK-NEXT:       (local.set $4
 ;; CHECK-NEXT:        (local.get $3)
 ;; CHECK-NEXT:       )
 ;; CHECK-NEXT:       (i32.or
 ;; CHECK-NEXT:        (i32.load16_u
 ;; CHECK-NEXT:         (local.get $4)
 ;; CHECK-NEXT:        )
 ;; CHECK-NEXT:        (i32.shl
 ;; CHECK-NEXT:         (i32.load16_u offset=2
 ;; CHECK-NEXT:          (local.get $4)
 ;; CHECK-NEXT:         )
 ;; CHECK-NEXT:         (i32.const 16)
 ;; CHECK-NEXT:        )
 ;; CHECK-NEXT:       )
 ;; CHECK-NEXT:      )
 ;; CHECK-NEXT:     )
 ;; CHECK-NEXT:     (i64.shl
 ;; CHECK-NEXT:      (i64.extend_i32_u
 ;; CHECK-NEXT:       (block (result i32)
 ;; CHECK-NEXT:        (local.set $5
 ;; CHECK-NEXT:         (local.get $3)
 ;; CHECK-NEXT:        )
 ;; CHECK-NEXT:        (i32.or
 ;; CHECK-NEXT:         (i32.load16_u offset=4
 ;; CHECK-NEXT:          (local.get $5)
 ;; CHECK-NEXT:         )
 ;; CHECK-NEXT:         (i32.shl
 ;; CHECK-NEXT:          (i32.load16_u offset=6
 ;; CHECK-NEXT:           (local.get $5)
 ;; CHECK-NEXT:          )
 ;; CHECK-NEXT:          (i32.const 16)
 ;; CHECK-NEXT:         )
 ;; CHECK-NEXT:        )
 ;; CHECK-NEXT:       )
 ;; CHECK-NEXT:      )
 ;; CHECK-NEXT:      (i64.const 32)
 ;; CHECK-NEXT:     )
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (drop
 ;; CHECK-NEXT:   (block (result i64)
 ;; CHECK-NEXT:    (local.set $6
 ;; CHECK-NEXT:     (i32.const 20)
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:    (i64.or
 ;; CHECK-NEXT:     (i64.extend_i32_u
 ;; CHECK-NEXT:      (i32.load
 ;; CHECK-NEXT:       (local.get $6)
 ;; CHECK-NEXT:      )
 ;; CHECK-NEXT:     )
 ;; CHECK-NEXT:     (i64.shl
 ;; CHECK-NEXT:      (i64.extend_i32_u
 ;; CHECK-NEXT:       (i32.load offset=4
 ;; CHECK-NEXT:        (local.get $6)
 ;; CHECK-NEXT:       )
 ;; CHECK-NEXT:      )
 ;; CHECK-NEXT:      (i64.const 32)
 ;; CHECK-NEXT:     )
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (drop
 ;; CHECK-NEXT:   (block (result i64)
 ;; CHECK-NEXT:    (local.set $7
 ;; CHECK-NEXT:     (i32.const 20)
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:    (i64.or
 ;; CHECK-NEXT:     (i64.extend_i32_u
 ;; CHECK-NEXT:      (block (result i32)
 ;; CHECK-NEXT:       (local.set $8
 ;; CHECK-NEXT:        (local.get $7)
 ;; CHECK-NEXT:       )
 ;; CHECK-NEXT:       (i32.or
 ;; CHECK-NEXT:        (i32.or
 ;; CHECK-NEXT:         (i32.load8_u offset=3
 ;; CHECK-NEXT:          (local.get $8)
 ;; CHECK-NEXT:         )
 ;; CHECK-NEXT:         (i32.shl
 ;; CHECK-NEXT:          (i32.load8_u offset=4
 ;; CHECK-NEXT:           (local.get $8)
 ;; CHECK-NEXT:          )
 ;; CHECK-NEXT:          (i32.const 8)
 ;; CHECK-NEXT:         )
 ;; CHECK-NEXT:        )
 ;; CHECK-NEXT:        (i32.or
 ;; CHECK-NEXT:         (i32.shl
 ;; CHECK-NEXT:          (i32.load8_u offset=5
 ;; CHECK-NEXT:           (local.get $8)
 ;; CHECK-NEXT:          )
 ;; CHECK-NEXT:          (i32.const 16)
 ;; CHECK-NEXT:         )
 ;; CHECK-NEXT:         (i32.shl
 ;; CHECK-NEXT:          (i32.load8_u offset=6
 ;; CHECK-NEXT:           (local.get $8)
 ;; CHECK-NEXT:          )
 ;; CHECK-NEXT:          (i32.const 24)
 ;; CHECK-NEXT:         )
 ;; CHECK-NEXT:        )
 ;; CHECK-NEXT:       )
 ;; CHECK-NEXT:      )
 ;; CHECK-NEXT:     )
 ;; CHECK-NEXT:     (i64.shl
 ;; CHECK-NEXT:      (i64.extend_i32_u
 ;; CHECK-NEXT:       (block (result i32)
 ;; CHECK-NEXT:        (local.set $9
 ;; CHECK-NEXT:         (local.get $7)
 ;; CHECK-NEXT:        )
 ;; CHECK-NEXT:        (i32.or
 ;; CHECK-NEXT:         (i32.or
 ;; CHECK-NEXT:          (i32.load8_u offset=7
 ;; CHECK-NEXT:           (local.get $9)
 ;; CHECK-NEXT:          )
 ;; CHECK-NEXT:          (i32.shl
 ;; CHECK-NEXT:           (i32.load8_u offset=8
 ;; CHECK-NEXT:            (local.get $9)
 ;; CHECK-NEXT:           )
 ;; CHECK-NEXT:           (i32.const 8)
 ;; CHECK-NEXT:          )
 ;; CHECK-NEXT:         )
 ;; CHECK-NEXT:         (i32.or
 ;; CHECK-NEXT:          (i32.shl
 ;; CHECK-NEXT:           (i32.load8_u offset=9
 ;; CHECK-NEXT:            (local.get $9)
 ;; CHECK-NEXT:           )
 ;; CHECK-NEXT:           (i32.const 16)
 ;; CHECK-NEXT:          )
 ;; CHECK-NEXT:          (i32.shl
 ;; CHECK-NEXT:           (i32.load8_u offset=10
 ;; CHECK-NEXT:            (local.get $9)
 ;; CHECK-NEXT:           )
 ;; CHECK-NEXT:           (i32.const 24)
 ;; CHECK-NEXT:          )
 ;; CHECK-NEXT:         )
 ;; CHECK-NEXT:        )
 ;; CHECK-NEXT:       )
 ;; CHECK-NEXT:      )
 ;; CHECK-NEXT:      (i64.const 32)
 ;; CHECK-NEXT:     )
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (drop
 ;; CHECK-NEXT:   (i64.extend_i32_s
 ;; CHECK-NEXT:    (block (result i32)
 ;; CHECK-NEXT:     (local.set $10
 ;; CHECK-NEXT:      (i32.const 28)
 ;; CHECK-NEXT:     )
 ;; CHECK-NEXT:     (i32.shr_s
 ;; CHECK-NEXT:      (i32.shl
 ;; CHECK-NEXT:       (i32.or
 ;; CHECK-NEXT:        (i32.load8_u
 ;; CHECK-NEXT:         (local.get $10)
 ;; CHECK-NEXT:        )
 ;; CHECK-NEXT:        (i32.shl
 ;; CHECK-NEXT:         (i32.load8_u offset=1
 ;; CHECK-NEXT:          (local.get $10)
 ;; CHECK-NEXT:         )
 ;; CHECK-NEXT:         (i32.const 8)
 ;; CHECK-NEXT:        )
 ;; CHECK-NEXT:       )
 ;; CHECK-NEXT:       (i32.const 16)
 ;; CHECK-NEXT:      )
 ;; CHECK-NEXT:      (i32.const 16)
 ;; CHECK-NEXT:     )
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (drop
 ;; CHECK-NEXT:   (i64.extend_i32_s
 ;; CHECK-NEXT:    (block (result i32)
 ;; CHECK-NEXT:     (local.set $11
 ;; CHECK-NEXT:      (i32.const 32)
 ;; CHECK-NEXT:     )
 ;; CHECK-NEXT:     (i32.or
 ;; CHECK-NEXT:      (i32.or
 ;; CHECK-NEXT:       (i32.load8_u
 ;; CHECK-NEXT:        (local.get $11)
 ;; CHECK-NEXT:       )
 ;; CHECK-NEXT:       (i32.shl
 ;; CHECK-NEXT:        (i32.load8_u offset=1
 ;; CHECK-NEXT:         (local.get $11)
 ;; CHECK-NEXT:        )
 ;; CHECK-NEXT:        (i32.const 8)
 ;; CHECK-NEXT:       )
 ;; CHECK-NEXT:      )
 ;; CHECK-NEXT:      (i32.or
 ;; CHECK-NEXT:       (i32.shl
 ;; CHECK-NEXT:        (i32.load8_u offset=2
 ;; CHECK-NEXT:         (local.get $11)
 ;; CHECK-NEXT:        )
 ;; CHECK-NEXT:        (i32.const 16)
 ;; CHECK-NEXT:       )
 ;; CHECK-NEXT:       (i32.shl
 ;; CHECK-NEXT:        (i32.load8_u offset=3
 ;; CHECK-NEXT:         (local.get $11)
 ;; CHECK-NEXT:        )
 ;; CHECK-NEXT:        (i32.const 24)
 ;; CHECK-NEXT:       )
 ;; CHECK-NEXT:      )
 ;; CHECK-NEXT:     )
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (drop
 ;; CHECK-NEXT:   (i64.extend_i32_u
 ;; CHECK-NEXT:    (block (result i32)
 ;; CHECK-NEXT:     (local.set $12
 ;; CHECK-NEXT:      (i32.const 40)
 ;; CHECK-NEXT:     )
 ;; CHECK-NEXT:     (i32.or
 ;; CHECK-NEXT:      (i32.load8_u
 ;; CHECK-NEXT:       (local.get $12)
 ;; CHECK-NEXT:      )
 ;; CHECK-NEXT:      (i32.shl
 ;; CHECK-NEXT:       (i32.load8_u offset=1
 ;; CHECK-NEXT:        (local.get $12)
 ;; CHECK-NEXT:       )
 ;; CHECK-NEXT:       (i32.const 8)
 ;; CHECK-NEXT:      )
 ;; CHECK-NEXT:     )
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (drop
 ;; CHECK-NEXT:   (i64.extend_i32_u
 ;; CHECK-NEXT:    (block (result i32)
 ;; CHECK-NEXT:     (local.set $13
 ;; CHECK-NEXT:      (i32.const 44)
 ;; CHECK-NEXT:     )
 ;; CHECK-NEXT:     (i32.or
 ;; CHECK-NEXT:      (i32.or
 ;; CHECK-NEXT:       (i32.load8_u
 ;; CHECK-NEXT:        (local.get $13)
 ;; CHECK-NEXT:       )
 ;; CHECK-NEXT:       (i32.shl
 ;; CHECK-NEXT:        (i32.load8_u offset=1
 ;; CHECK-NEXT:         (local.get $13)
 ;; CHECK-NEXT:        )
 ;; CHECK-NEXT:        (i32.const 8)
 ;; CHECK-NEXT:       )
 ;; CHECK-NEXT:      )
 ;; CHECK-NEXT:      (i32.or
 ;; CHECK-NEXT:       (i32.shl
 ;; CHECK-NEXT:        (i32.load8_u offset=2
 ;; CHECK-NEXT:         (local.get $13)
 ;; CHECK-NEXT:        )
 ;; CHECK-NEXT:        (i32.const 16)
 ;; CHECK-NEXT:       )
 ;; CHECK-NEXT:       (i32.shl
 ;; CHECK-NEXT:        (i32.load8_u offset=3
 ;; CHECK-NEXT:         (local.get $13)
 ;; CHECK-NEXT:        )
 ;; CHECK-NEXT:        (i32.const 24)
 ;; CHECK-NEXT:       )
 ;; CHECK-NEXT:      )
 ;; CHECK-NEXT:     )
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT: )
 (func $i64-load
  (drop (i64.load align=1 (i32.const 12)))
  (drop (i64.load align=2 (i32.const 16)))
  (drop (i64.load align=4 (i32.const 20)))
  (drop (i64.load align=1 offset=3 (i32.const 20)))
  (drop (i64.load16_s align=1 (i32.const 28)))
  (drop (i64.load32_s align=1 (i32.const 32)))
  (drop (i64.load16_u align=1 (i32.const 40)))
  (drop (i64.load32_u align=1 (i32.const 44)))
 )
 ;; CHECK:      (func $f32-load
 ;; CHECK-NEXT:  (local $0 i32)
 ;; CHECK-NEXT:  (local $1 i32)
 ;; CHECK-NEXT:  (local $2 i32)
 ;; CHECK-NEXT:  (drop
 ;; CHECK-NEXT:   (f32.reinterpret_i32
 ;; CHECK-NEXT:    (block (result i32)
 ;; CHECK-NEXT:     (local.set $0
 ;; CHECK-NEXT:      (i32.const 12)
 ;; CHECK-NEXT:     )
 ;; CHECK-NEXT:     (i32.or
 ;; CHECK-NEXT:      (i32.or
 ;; CHECK-NEXT:       (i32.load8_u
 ;; CHECK-NEXT:        (local.get $0)
 ;; CHECK-NEXT:       )
 ;; CHECK-NEXT:       (i32.shl
 ;; CHECK-NEXT:        (i32.load8_u offset=1
 ;; CHECK-NEXT:         (local.get $0)
 ;; CHECK-NEXT:        )
 ;; CHECK-NEXT:        (i32.const 8)
 ;; CHECK-NEXT:       )
 ;; CHECK-NEXT:      )
 ;; CHECK-NEXT:      (i32.or
 ;; CHECK-NEXT:       (i32.shl
 ;; CHECK-NEXT:        (i32.load8_u offset=2
 ;; CHECK-NEXT:         (local.get $0)
 ;; CHECK-NEXT:        )
 ;; CHECK-NEXT:        (i32.const 16)
 ;; CHECK-NEXT:       )
 ;; CHECK-NEXT:       (i32.shl
 ;; CHECK-NEXT:        (i32.load8_u offset=3
 ;; CHECK-NEXT:         (local.get $0)
 ;; CHECK-NEXT:        )
 ;; CHECK-NEXT:        (i32.const 24)
 ;; CHECK-NEXT:       )
 ;; CHECK-NEXT:      )
 ;; CHECK-NEXT:     )
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (drop
 ;; CHECK-NEXT:   (f32.reinterpret_i32
 ;; CHECK-NEXT:    (block (result i32)
 ;; CHECK-NEXT:     (local.set $1
 ;; CHECK-NEXT:      (i32.const 16)
 ;; CHECK-NEXT:     )
 ;; CHECK-NEXT:     (i32.or
 ;; CHECK-NEXT:      (i32.load16_u
 ;; CHECK-NEXT:       (local.get $1)
 ;; CHECK-NEXT:      )
 ;; CHECK-NEXT:      (i32.shl
 ;; CHECK-NEXT:       (i32.load16_u offset=2
 ;; CHECK-NEXT:        (local.get $1)
 ;; CHECK-NEXT:       )
 ;; CHECK-NEXT:       (i32.const 16)
 ;; CHECK-NEXT:      )
 ;; CHECK-NEXT:     )
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (drop
 ;; CHECK-NEXT:   (f32.reinterpret_i32
 ;; CHECK-NEXT:    (block (result i32)
 ;; CHECK-NEXT:     (local.set $2
 ;; CHECK-NEXT:      (i32.const 20)
 ;; CHECK-NEXT:     )
 ;; CHECK-NEXT:     (i32.or
 ;; CHECK-NEXT:      (i32.or
 ;; CHECK-NEXT:       (i32.load8_u offset=3
 ;; CHECK-NEXT:        (local.get $2)
 ;; CHECK-NEXT:       )
 ;; CHECK-NEXT:       (i32.shl
 ;; CHECK-NEXT:        (i32.load8_u offset=4
 ;; CHECK-NEXT:         (local.get $2)
 ;; CHECK-NEXT:        )
 ;; CHECK-NEXT:        (i32.const 8)
 ;; CHECK-NEXT:       )
 ;; CHECK-NEXT:      )
 ;; CHECK-NEXT:      (i32.or
 ;; CHECK-NEXT:       (i32.shl
 ;; CHECK-NEXT:        (i32.load8_u offset=5
 ;; CHECK-NEXT:         (local.get $2)
 ;; CHECK-NEXT:        )
 ;; CHECK-NEXT:        (i32.const 16)
 ;; CHECK-NEXT:       )
 ;; CHECK-NEXT:       (i32.shl
 ;; CHECK-NEXT:        (i32.load8_u offset=6
 ;; CHECK-NEXT:         (local.get $2)
 ;; CHECK-NEXT:        )
 ;; CHECK-NEXT:        (i32.const 24)
 ;; CHECK-NEXT:       )
 ;; CHECK-NEXT:      )
 ;; CHECK-NEXT:     )
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT: )
 (func $f32-load
  (drop (f32.load align=1 (i32.const 12)))
  (drop (f32.load align=2 (i32.const 16)))
  (drop (f32.load align=1 offset=3 (i32.const 20)))
 )
 ;; CHECK:      (func $f64-load
 ;; CHECK-NEXT:  (local $0 i32)
 ;; CHECK-NEXT:  (local $1 i32)
 ;; CHECK-NEXT:  (local $2 i32)
 ;; CHECK-NEXT:  (local $3 i32)
 ;; CHECK-NEXT:  (local $4 i32)
 ;; CHECK-NEXT:  (local $5 i32)
 ;; CHECK-NEXT:  (local $6 i32)
 ;; CHECK-NEXT:  (local $7 i32)
 ;; CHECK-NEXT:  (local $8 i32)
 ;; CHECK-NEXT:  (local $9 i32)
 ;; CHECK-NEXT:  (drop
 ;; CHECK-NEXT:   (f64.reinterpret_i64
 ;; CHECK-NEXT:    (block (result i64)
 ;; CHECK-NEXT:     (local.set $0
 ;; CHECK-NEXT:      (i32.const 12)
 ;; CHECK-NEXT:     )
 ;; CHECK-NEXT:     (i64.or
 ;; CHECK-NEXT:      (i64.extend_i32_u
 ;; CHECK-NEXT:       (block (result i32)
 ;; CHECK-NEXT:        (local.set $1
 ;; CHECK-NEXT:         (local.get $0)
 ;; CHECK-NEXT:        )
 ;; CHECK-NEXT:        (i32.or
 ;; CHECK-NEXT:         (i32.or
 ;; CHECK-NEXT:          (i32.load8_u
 ;; CHECK-NEXT:           (local.get $1)
 ;; CHECK-NEXT:          )
 ;; CHECK-NEXT:          (i32.shl
 ;; CHECK-NEXT:           (i32.load8_u offset=1
 ;; CHECK-NEXT:            (local.get $1)
 ;; CHECK-NEXT:           )
 ;; CHECK-NEXT:           (i32.const 8)
 ;; CHECK-NEXT:          )
 ;; CHECK-NEXT:         )
 ;; CHECK-NEXT:         (i32.or
 ;; CHECK-NEXT:          (i32.shl
 ;; CHECK-NEXT:           (i32.load8_u offset=2
 ;; CHECK-NEXT:            (local.get $1)
 ;; CHECK-NEXT:           )
 ;; CHECK-NEXT:           (i32.const 16)
 ;; CHECK-NEXT:          )
 ;; CHECK-NEXT:          (i32.shl
 ;; CHECK-NEXT:           (i32.load8_u offset=3
 ;; CHECK-NEXT:            (local.get $1)
 ;; CHECK-NEXT:           )
 ;; CHECK-NEXT:           (i32.const 24)
 ;; CHECK-NEXT:          )
 ;; CHECK-NEXT:         )
 ;; CHECK-NEXT:        )
 ;; CHECK-NEXT:       )
 ;; CHECK-NEXT:      )
 ;; CHECK-NEXT:      (i64.shl
 ;; CHECK-NEXT:       (i64.extend_i32_u
 ;; CHECK-NEXT:        (block (result i32)
 ;; CHECK-NEXT:         (local.set $2
 ;; CHECK-NEXT:          (local.get $0)
 ;; CHECK-NEXT:         )
 ;; CHECK-NEXT:         (i32.or
 ;; CHECK-NEXT:          (i32.or
 ;; CHECK-NEXT:           (i32.load8_u offset=4
 ;; CHECK-NEXT:            (local.get $2)
 ;; CHECK-NEXT:           )
 ;; CHECK-NEXT:           (i32.shl
 ;; CHECK-NEXT:            (i32.load8_u offset=5
 ;; CHECK-NEXT:             (local.get $2)
 ;; CHECK-NEXT:            )
 ;; CHECK-NEXT:            (i32.const 8)
 ;; CHECK-NEXT:           )
 ;; CHECK-NEXT:          )
 ;; CHECK-NEXT:          (i32.or
 ;; CHECK-NEXT:           (i32.shl
 ;; CHECK-NEXT:            (i32.load8_u offset=6
 ;; CHECK-NEXT:             (local.get $2)
 ;; CHECK-NEXT:            )
 ;; CHECK-NEXT:            (i32.const 16)
 ;; CHECK-NEXT:           )
 ;; CHECK-NEXT:           (i32.shl
 ;; CHECK-NEXT:            (i32.load8_u offset=7
 ;; CHECK-NEXT:             (local.get $2)
 ;; CHECK-NEXT:            )
 ;; CHECK-NEXT:            (i32.const 24)
 ;; CHECK-NEXT:           )
 ;; CHECK-NEXT:          )
 ;; CHECK-NEXT:         )
 ;; CHECK-NEXT:        )
 ;; CHECK-NEXT:       )
 ;; CHECK-NEXT:       (i64.const 32)
 ;; CHECK-NEXT:      )
 ;; CHECK-NEXT:     )
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (drop
 ;; CHECK-NEXT:   (f64.reinterpret_i64
 ;; CHECK-NEXT:    (block (result i64)
 ;; CHECK-NEXT:     (local.set $3
 ;; CHECK-NEXT:      (i32.const 16)
 ;; CHECK-NEXT:     )
 ;; CHECK-NEXT:     (i64.or
 ;; CHECK-NEXT:      (i64.extend_i32_u
 ;; CHECK-NEXT:       (block (result i32)
 ;; CHECK-NEXT:        (local.set $4
 ;; CHECK-NEXT:         (local.get $3)
 ;; CHECK-NEXT:        )
 ;; CHECK-NEXT:        (i32.or
 ;; CHECK-NEXT:         (i32.load16_u
 ;; CHECK-NEXT:          (local.get $4)
 ;; CHECK-NEXT:         )
 ;; CHECK-NEXT:         (i32.shl
 ;; CHECK-NEXT:          (i32.load16_u offset=2
 ;; CHECK-NEXT:           (local.get $4)
 ;; CHECK-NEXT:          )
 ;; CHECK-NEXT:          (i32.const 16)
 ;; CHECK-NEXT:         )
 ;; CHECK-NEXT:        )
 ;; CHECK-NEXT:       )
 ;; CHECK-NEXT:      )
 ;; CHECK-NEXT:      (i64.shl
 ;; CHECK-NEXT:       (i64.extend_i32_u
 ;; CHECK-NEXT:        (block (result i32)
 ;; CHECK-NEXT:         (local.set $5
 ;; CHECK-NEXT:          (local.get $3)
 ;; CHECK-NEXT:         )
 ;; CHECK-NEXT:         (i32.or
 ;; CHECK-NEXT:          (i32.load16_u offset=4
 ;; CHECK-NEXT:           (local.get $5)
 ;; CHECK-NEXT:          )
 ;; CHECK-NEXT:          (i32.shl
 ;; CHECK-NEXT:           (i32.load16_u offset=6
 ;; CHECK-NEXT:            (local.get $5)
 ;; CHECK-NEXT:           )
 ;; CHECK-NEXT:           (i32.const 16)
 ;; CHECK-NEXT:          )
 ;; CHECK-NEXT:         )
 ;; CHECK-NEXT:        )
 ;; CHECK-NEXT:       )
 ;; CHECK-NEXT:       (i64.const 32)
 ;; CHECK-NEXT:      )
 ;; CHECK-NEXT:     )
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (drop
 ;; CHECK-NEXT:   (f64.reinterpret_i64
 ;; CHECK-NEXT:    (block (result i64)
 ;; CHECK-NEXT:     (local.set $6
 ;; CHECK-NEXT:      (i32.const 20)
 ;; CHECK-NEXT:     )
 ;; CHECK-NEXT:     (i64.or
 ;; CHECK-NEXT:      (i64.extend_i32_u
 ;; CHECK-NEXT:       (i32.load
 ;; CHECK-NEXT:        (local.get $6)
 ;; CHECK-NEXT:       )
 ;; CHECK-NEXT:      )
 ;; CHECK-NEXT:      (i64.shl
 ;; CHECK-NEXT:       (i64.extend_i32_u
 ;; CHECK-NEXT:        (i32.load offset=4
 ;; CHECK-NEXT:         (local.get $6)
 ;; CHECK-NEXT:        )
 ;; CHECK-NEXT:       )
 ;; CHECK-NEXT:       (i64.const 32)
 ;; CHECK-NEXT:      )
 ;; CHECK-NEXT:     )
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (drop
 ;; CHECK-NEXT:   (f64.reinterpret_i64
 ;; CHECK-NEXT:    (block (result i64)
 ;; CHECK-NEXT:     (local.set $7
 ;; CHECK-NEXT:      (i32.const 20)
 ;; CHECK-NEXT:     )
 ;; CHECK-NEXT:     (i64.or
 ;; CHECK-NEXT:      (i64.extend_i32_u
 ;; CHECK-NEXT:       (block (result i32)
 ;; CHECK-NEXT:        (local.set $8
 ;; CHECK-NEXT:         (local.get $7)
 ;; CHECK-NEXT:        )
 ;; CHECK-NEXT:        (i32.or
 ;; CHECK-NEXT:         (i32.or
 ;; CHECK-NEXT:          (i32.load8_u offset=3
 ;; CHECK-NEXT:           (local.get $8)
 ;; CHECK-NEXT:          )
 ;; CHECK-NEXT:          (i32.shl
 ;; CHECK-NEXT:           (i32.load8_u offset=4
 ;; CHECK-NEXT:            (local.get $8)
 ;; CHECK-NEXT:           )
 ;; CHECK-NEXT:           (i32.const 8)
 ;; CHECK-NEXT:          )
 ;; CHECK-NEXT:         )
 ;; CHECK-NEXT:         (i32.or
 ;; CHECK-NEXT:          (i32.shl
 ;; CHECK-NEXT:           (i32.load8_u offset=5
 ;; CHECK-NEXT:            (local.get $8)
 ;; CHECK-NEXT:           )
 ;; CHECK-NEXT:           (i32.const 16)
 ;; CHECK-NEXT:          )
 ;; CHECK-NEXT:          (i32.shl
 ;; CHECK-NEXT:           (i32.load8_u offset=6
 ;; CHECK-NEXT:            (local.get $8)
 ;; CHECK-NEXT:           )
 ;; CHECK-NEXT:           (i32.const 24)
 ;; CHECK-NEXT:          )
 ;; CHECK-NEXT:         )
 ;; CHECK-NEXT:        )
 ;; CHECK-NEXT:       )
 ;; CHECK-NEXT:      )
 ;; CHECK-NEXT:      (i64.shl
 ;; CHECK-NEXT:       (i64.extend_i32_u
 ;; CHECK-NEXT:        (block (result i32)
 ;; CHECK-NEXT:         (local.set $9
 ;; CHECK-NEXT:          (local.get $7)
 ;; CHECK-NEXT:         )
 ;; CHECK-NEXT:         (i32.or
 ;; CHECK-NEXT:          (i32.or
 ;; CHECK-NEXT:           (i32.load8_u offset=7
 ;; CHECK-NEXT:            (local.get $9)
 ;; CHECK-NEXT:           )
 ;; CHECK-NEXT:           (i32.shl
 ;; CHECK-NEXT:            (i32.load8_u offset=8
 ;; CHECK-NEXT:             (local.get $9)
 ;; CHECK-NEXT:            )
 ;; CHECK-NEXT:            (i32.const 8)
 ;; CHECK-NEXT:           )
 ;; CHECK-NEXT:          )
 ;; CHECK-NEXT:          (i32.or
 ;; CHECK-NEXT:           (i32.shl
 ;; CHECK-NEXT:            (i32.load8_u offset=9
 ;; CHECK-NEXT:             (local.get $9)
 ;; CHECK-NEXT:            )
 ;; CHECK-NEXT:            (i32.const 16)
 ;; CHECK-NEXT:           )
 ;; CHECK-NEXT:           (i32.shl
 ;; CHECK-NEXT:            (i32.load8_u offset=10
 ;; CHECK-NEXT:             (local.get $9)
 ;; CHECK-NEXT:            )
 ;; CHECK-NEXT:            (i32.const 24)
 ;; CHECK-NEXT:           )
 ;; CHECK-NEXT:          )
 ;; CHECK-NEXT:         )
 ;; CHECK-NEXT:        )
 ;; CHECK-NEXT:       )
 ;; CHECK-NEXT:       (i64.const 32)
 ;; CHECK-NEXT:      )
 ;; CHECK-NEXT:     )
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT: )
 (func $f64-load
  (drop (f64.load align=1 (i32.const 12)))
  (drop (f64.load align=2 (i32.const 16)))
  (drop (f64.load align=4 (i32.const 20)))
  (drop (f64.load align=1 offset=3 (i32.const 20)))
 )
 ;; CHECK:      (func $i64-store
 ;; CHECK-NEXT:  (local $0 i32)
 ;; CHECK-NEXT:  (local $1 i64)
 ;; CHECK-NEXT:  (local $2 i32)
 ;; CHECK-NEXT:  (local $3 i32)
 ;; CHECK-NEXT:  (local $4 i32)
 ;; CHECK-NEXT:  (local $5 i32)
 ;; CHECK-NEXT:  (local $6 i32)
 ;; CHECK-NEXT:  (local $7 i64)
 ;; CHECK-NEXT:  (local $8 i32)
 ;; CHECK-NEXT:  (local $9 i32)
 ;; CHECK-NEXT:  (local $10 i32)
 ;; CHECK-NEXT:  (local $11 i32)
 ;; CHECK-NEXT:  (local $12 i32)
 ;; CHECK-NEXT:  (local $13 i64)
 ;; CHECK-NEXT:  (local $14 i32)
 ;; CHECK-NEXT:  (local $15 i64)
 ;; CHECK-NEXT:  (local $16 i32)
 ;; CHECK-NEXT:  (local $17 i32)
 ;; CHECK-NEXT:  (local $18 i32)
 ;; CHECK-NEXT:  (local $19 i32)
 ;; CHECK-NEXT:  (local $20 i32)
 ;; CHECK-NEXT:  (local $21 i32)
 ;; CHECK-NEXT:  (local $22 i32)
 ;; CHECK-NEXT:  (local $23 i32)
 ;; CHECK-NEXT:  (block
 ;; CHECK-NEXT:   (local.set $0
 ;; CHECK-NEXT:    (i32.const 12)
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:   (local.set $1
 ;; CHECK-NEXT:    (i64.const 100)
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:   (block
 ;; CHECK-NEXT:    (local.set $2
 ;; CHECK-NEXT:     (local.get $0)
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:    (local.set $3
 ;; CHECK-NEXT:     (i32.wrap_i64
 ;; CHECK-NEXT:      (local.get $1)
 ;; CHECK-NEXT:     )
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:    (i32.store8
 ;; CHECK-NEXT:     (local.get $2)
 ;; CHECK-NEXT:     (local.get $3)
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:    (i32.store8 offset=1
 ;; CHECK-NEXT:     (local.get $2)
 ;; CHECK-NEXT:     (i32.shr_u
 ;; CHECK-NEXT:      (local.get $3)
 ;; CHECK-NEXT:      (i32.const 8)
 ;; CHECK-NEXT:     )
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:    (i32.store8 offset=2
 ;; CHECK-NEXT:     (local.get $2)
 ;; CHECK-NEXT:     (i32.shr_u
 ;; CHECK-NEXT:      (local.get $3)
 ;; CHECK-NEXT:      (i32.const 16)
 ;; CHECK-NEXT:     )
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:    (i32.store8 offset=3
 ;; CHECK-NEXT:     (local.get $2)
 ;; CHECK-NEXT:     (i32.shr_u
 ;; CHECK-NEXT:      (local.get $3)
 ;; CHECK-NEXT:      (i32.const 24)
 ;; CHECK-NEXT:     )
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:   (block
 ;; CHECK-NEXT:    (local.set $4
 ;; CHECK-NEXT:     (local.get $0)
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:    (local.set $5
 ;; CHECK-NEXT:     (i32.wrap_i64
 ;; CHECK-NEXT:      (i64.shr_u
 ;; CHECK-NEXT:       (local.get $1)
 ;; CHECK-NEXT:       (i64.const 32)
 ;; CHECK-NEXT:      )
 ;; CHECK-NEXT:     )
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:    (i32.store8 offset=4
 ;; CHECK-NEXT:     (local.get $4)
 ;; CHECK-NEXT:     (local.get $5)
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:    (i32.store8 offset=5
 ;; CHECK-NEXT:     (local.get $4)
 ;; CHECK-NEXT:     (i32.shr_u
 ;; CHECK-NEXT:      (local.get $5)
 ;; CHECK-NEXT:      (i32.const 8)
 ;; CHECK-NEXT:     )
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:    (i32.store8 offset=6
 ;; CHECK-NEXT:     (local.get $4)
 ;; CHECK-NEXT:     (i32.shr_u
 ;; CHECK-NEXT:      (local.get $5)
 ;; CHECK-NEXT:      (i32.const 16)
 ;; CHECK-NEXT:     )
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:    (i32.store8 offset=7
 ;; CHECK-NEXT:     (local.get $4)
 ;; CHECK-NEXT:     (i32.shr_u
 ;; CHECK-NEXT:      (local.get $5)
 ;; CHECK-NEXT:      (i32.const 24)
 ;; CHECK-NEXT:     )
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (block
 ;; CHECK-NEXT:   (local.set $6
 ;; CHECK-NEXT:    (i32.const 16)
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:   (local.set $7
 ;; CHECK-NEXT:    (i64.const 200)
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:   (block
 ;; CHECK-NEXT:    (local.set $8
 ;; CHECK-NEXT:     (local.get $6)
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:    (local.set $9
 ;; CHECK-NEXT:     (i32.wrap_i64
 ;; CHECK-NEXT:      (local.get $7)
 ;; CHECK-NEXT:     )
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:    (i32.store16
 ;; CHECK-NEXT:     (local.get $8)
 ;; CHECK-NEXT:     (local.get $9)
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:    (i32.store16 offset=2
 ;; CHECK-NEXT:     (local.get $8)
 ;; CHECK-NEXT:     (i32.shr_u
 ;; CHECK-NEXT:      (local.get $9)
 ;; CHECK-NEXT:      (i32.const 16)
 ;; CHECK-NEXT:     )
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:   (block
 ;; CHECK-NEXT:    (local.set $10
 ;; CHECK-NEXT:     (local.get $6)
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:    (local.set $11
 ;; CHECK-NEXT:     (i32.wrap_i64
 ;; CHECK-NEXT:      (i64.shr_u
 ;; CHECK-NEXT:       (local.get $7)
 ;; CHECK-NEXT:       (i64.const 32)
 ;; CHECK-NEXT:      )
 ;; CHECK-NEXT:     )
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:    (i32.store16 offset=4
 ;; CHECK-NEXT:     (local.get $10)
 ;; CHECK-NEXT:     (local.get $11)
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:    (i32.store16 offset=6
 ;; CHECK-NEXT:     (local.get $10)
 ;; CHECK-NEXT:     (i32.shr_u
 ;; CHECK-NEXT:      (local.get $11)
 ;; CHECK-NEXT:      (i32.const 16)
 ;; CHECK-NEXT:     )
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (block
 ;; CHECK-NEXT:   (local.set $12
 ;; CHECK-NEXT:    (i32.const 20)
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:   (local.set $13
 ;; CHECK-NEXT:    (i64.const 300)
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:   (i32.store
 ;; CHECK-NEXT:    (local.get $12)
 ;; CHECK-NEXT:    (i32.wrap_i64
 ;; CHECK-NEXT:     (local.get $13)
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:   (i32.store offset=4
 ;; CHECK-NEXT:    (local.get $12)
 ;; CHECK-NEXT:    (i32.wrap_i64
 ;; CHECK-NEXT:     (i64.shr_u
 ;; CHECK-NEXT:      (local.get $13)
 ;; CHECK-NEXT:      (i64.const 32)
 ;; CHECK-NEXT:     )
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (block
 ;; CHECK-NEXT:   (local.set $14
 ;; CHECK-NEXT:    (i32.const 24)
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:   (local.set $15
 ;; CHECK-NEXT:    (i64.const 400)
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:   (block
 ;; CHECK-NEXT:    (local.set $16
 ;; CHECK-NEXT:     (local.get $14)
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:    (local.set $17
 ;; CHECK-NEXT:     (i32.wrap_i64
 ;; CHECK-NEXT:      (local.get $15)
 ;; CHECK-NEXT:     )
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:    (i32.store8 offset=3
 ;; CHECK-NEXT:     (local.get $16)
 ;; CHECK-NEXT:     (local.get $17)
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:    (i32.store8 offset=4
 ;; CHECK-NEXT:     (local.get $16)
 ;; CHECK-NEXT:     (i32.shr_u
 ;; CHECK-NEXT:      (local.get $17)
 ;; CHECK-NEXT:      (i32.const 8)
 ;; CHECK-NEXT:     )
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:    (i32.store8 offset=5
 ;; CHECK-NEXT:     (local.get $16)
 ;; CHECK-NEXT:     (i32.shr_u
 ;; CHECK-NEXT:      (local.get $17)
 ;; CHECK-NEXT:      (i32.const 16)
 ;; CHECK-NEXT:     )
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:    (i32.store8 offset=6
 ;; CHECK-NEXT:     (local.get $16)
 ;; CHECK-NEXT:     (i32.shr_u
 ;; CHECK-NEXT:      (local.get $17)
 ;; CHECK-NEXT:      (i32.const 24)
 ;; CHECK-NEXT:     )
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:   (block
 ;; CHECK-NEXT:    (local.set $18
 ;; CHECK-NEXT:     (local.get $14)
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:    (local.set $19
 ;; CHECK-NEXT:     (i32.wrap_i64
 ;; CHECK-NEXT:      (i64.shr_u
 ;; CHECK-NEXT:       (local.get $15)
 ;; CHECK-NEXT:       (i64.const 32)
 ;; CHECK-NEXT:      )
 ;; CHECK-NEXT:     )
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:    (i32.store8 offset=7
 ;; CHECK-NEXT:     (local.get $18)
 ;; CHECK-NEXT:     (local.get $19)
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:    (i32.store8 offset=8
 ;; CHECK-NEXT:     (local.get $18)
 ;; CHECK-NEXT:     (i32.shr_u
 ;; CHECK-NEXT:      (local.get $19)
 ;; CHECK-NEXT:      (i32.const 8)
 ;; CHECK-NEXT:     )
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:    (i32.store8 offset=9
 ;; CHECK-NEXT:     (local.get $18)
 ;; CHECK-NEXT:     (i32.shr_u
 ;; CHECK-NEXT:      (local.get $19)
 ;; CHECK-NEXT:      (i32.const 16)
 ;; CHECK-NEXT:     )
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:    (i32.store8 offset=10
 ;; CHECK-NEXT:     (local.get $18)
 ;; CHECK-NEXT:     (i32.shr_u
 ;; CHECK-NEXT:      (local.get $19)
 ;; CHECK-NEXT:      (i32.const 24)
 ;; CHECK-NEXT:     )
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (block
 ;; CHECK-NEXT:   (local.set $20
 ;; CHECK-NEXT:    (i32.const 20)
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:   (local.set $21
 ;; CHECK-NEXT:    (i32.wrap_i64
 ;; CHECK-NEXT:     (i64.const 600)
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:   (i32.store8
 ;; CHECK-NEXT:    (local.get $20)
 ;; CHECK-NEXT:    (local.get $21)
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:   (i32.store8 offset=1
 ;; CHECK-NEXT:    (local.get $20)
 ;; CHECK-NEXT:    (i32.shr_u
 ;; CHECK-NEXT:     (local.get $21)
 ;; CHECK-NEXT:     (i32.const 8)
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (block
 ;; CHECK-NEXT:   (local.set $22
 ;; CHECK-NEXT:    (i32.const 20)
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:   (local.set $23
 ;; CHECK-NEXT:    (i32.wrap_i64
 ;; CHECK-NEXT:     (i64.const 700)
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:   (i32.store8
 ;; CHECK-NEXT:    (local.get $22)
 ;; CHECK-NEXT:    (local.get $23)
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:   (i32.store8 offset=1
 ;; CHECK-NEXT:    (local.get $22)
 ;; CHECK-NEXT:    (i32.shr_u
 ;; CHECK-NEXT:     (local.get $23)
 ;; CHECK-NEXT:     (i32.const 8)
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:   (i32.store8 offset=2
 ;; CHECK-NEXT:    (local.get $22)
 ;; CHECK-NEXT:    (i32.shr_u
 ;; CHECK-NEXT:     (local.get $23)
 ;; CHECK-NEXT:     (i32.const 16)
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:   (i32.store8 offset=3
 ;; CHECK-NEXT:    (local.get $22)
 ;; CHECK-NEXT:    (i32.shr_u
 ;; CHECK-NEXT:     (local.get $23)
 ;; CHECK-NEXT:     (i32.const 24)
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT: )
 (func $i64-store
  (i64.store align=1 (i32.const 12) (i64.const 100))
  (i64.store align=2 (i32.const 16) (i64.const 200))
  (i64.store align=4 (i32.const 20) (i64.const 300))
  (i64.store align=1 offset=3 (i32.const 24) (i64.const 400))
  (i64.store16 align=1 (i32.const 20) (i64.const 600))
  (i64.store32 align=1 (i32.const 20) (i64.const 700))
 )
 ;; CHECK:      (func $f32-store
 ;; CHECK-NEXT:  (local $0 i32)
 ;; CHECK-NEXT:  (local $1 i32)
 ;; CHECK-NEXT:  (local $2 i32)
 ;; CHECK-NEXT:  (local $3 i32)
 ;; CHECK-NEXT:  (local $4 i32)
 ;; CHECK-NEXT:  (local $5 i32)
 ;; CHECK-NEXT:  (block
 ;; CHECK-NEXT:   (local.set $0
 ;; CHECK-NEXT:    (i32.const 12)
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:   (local.set $1
 ;; CHECK-NEXT:    (i32.reinterpret_f32
 ;; CHECK-NEXT:     (f32.const 100)
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:   (i32.store8
 ;; CHECK-NEXT:    (local.get $0)
 ;; CHECK-NEXT:    (local.get $1)
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:   (i32.store8 offset=1
 ;; CHECK-NEXT:    (local.get $0)
 ;; CHECK-NEXT:    (i32.shr_u
 ;; CHECK-NEXT:     (local.get $1)
 ;; CHECK-NEXT:     (i32.const 8)
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:   (i32.store8 offset=2
 ;; CHECK-NEXT:    (local.get $0)
 ;; CHECK-NEXT:    (i32.shr_u
 ;; CHECK-NEXT:     (local.get $1)
 ;; CHECK-NEXT:     (i32.const 16)
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:   (i32.store8 offset=3
 ;; CHECK-NEXT:    (local.get $0)
 ;; CHECK-NEXT:    (i32.shr_u
 ;; CHECK-NEXT:     (local.get $1)
 ;; CHECK-NEXT:     (i32.const 24)
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (block
 ;; CHECK-NEXT:   (local.set $2
 ;; CHECK-NEXT:    (i32.const 16)
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:   (local.set $3
 ;; CHECK-NEXT:    (i32.reinterpret_f32
 ;; CHECK-NEXT:     (f32.const 200)
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:   (i32.store16
 ;; CHECK-NEXT:    (local.get $2)
 ;; CHECK-NEXT:    (local.get $3)
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:   (i32.store16 offset=2
 ;; CHECK-NEXT:    (local.get $2)
 ;; CHECK-NEXT:    (i32.shr_u
 ;; CHECK-NEXT:     (local.get $3)
 ;; CHECK-NEXT:     (i32.const 16)
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (block
 ;; CHECK-NEXT:   (local.set $4
 ;; CHECK-NEXT:    (i32.const 24)
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:   (local.set $5
 ;; CHECK-NEXT:    (i32.reinterpret_f32
 ;; CHECK-NEXT:     (f32.const 400)
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:   (i32.store8 offset=3
 ;; CHECK-NEXT:    (local.get $4)
 ;; CHECK-NEXT:    (local.get $5)
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:   (i32.store8 offset=4
 ;; CHECK-NEXT:    (local.get $4)
 ;; CHECK-NEXT:    (i32.shr_u
 ;; CHECK-NEXT:     (local.get $5)
 ;; CHECK-NEXT:     (i32.const 8)
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:   (i32.store8 offset=5
 ;; CHECK-NEXT:    (local.get $4)
 ;; CHECK-NEXT:    (i32.shr_u
 ;; CHECK-NEXT:     (local.get $5)
 ;; CHECK-NEXT:     (i32.const 16)
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:   (i32.store8 offset=6
 ;; CHECK-NEXT:    (local.get $4)
 ;; CHECK-NEXT:    (i32.shr_u
 ;; CHECK-NEXT:     (local.get $5)
 ;; CHECK-NEXT:     (i32.const 24)
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT: )
 (func $f32-store
  (f32.store align=1 (i32.const 12) (f32.const 100))
  (f32.store align=2 (i32.const 16) (f32.const 200))
  (f32.store align=1 offset=3 (i32.const 24) (f32.const 400))
 )
 ;; CHECK:      (func $f64-store
 ;; CHECK-NEXT:  (local $0 i32)
 ;; CHECK-NEXT:  (local $1 i64)
 ;; CHECK-NEXT:  (local $2 i32)
 ;; CHECK-NEXT:  (local $3 i32)
 ;; CHECK-NEXT:  (local $4 i32)
 ;; CHECK-NEXT:  (local $5 i32)
 ;; CHECK-NEXT:  (local $6 i32)
 ;; CHECK-NEXT:  (local $7 i64)
 ;; CHECK-NEXT:  (local $8 i32)
 ;; CHECK-NEXT:  (local $9 i32)
 ;; CHECK-NEXT:  (local $10 i32)
 ;; CHECK-NEXT:  (local $11 i32)
 ;; CHECK-NEXT:  (local $12 i32)
 ;; CHECK-NEXT:  (local $13 i64)
 ;; CHECK-NEXT:  (local $14 i32)
 ;; CHECK-NEXT:  (local $15 i64)
 ;; CHECK-NEXT:  (local $16 i32)
 ;; CHECK-NEXT:  (local $17 i32)
 ;; CHECK-NEXT:  (local $18 i32)
 ;; CHECK-NEXT:  (local $19 i32)
 ;; CHECK-NEXT:  (block
 ;; CHECK-NEXT:   (local.set $0
 ;; CHECK-NEXT:    (i32.const 12)
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:   (local.set $1
 ;; CHECK-NEXT:    (i64.reinterpret_f64
 ;; CHECK-NEXT:     (f64.const 100)
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:   (block
 ;; CHECK-NEXT:    (local.set $2
 ;; CHECK-NEXT:     (local.get $0)
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:    (local.set $3
 ;; CHECK-NEXT:     (i32.wrap_i64
 ;; CHECK-NEXT:      (local.get $1)
 ;; CHECK-NEXT:     )
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:    (i32.store8
 ;; CHECK-NEXT:     (local.get $2)
 ;; CHECK-NEXT:     (local.get $3)
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:    (i32.store8 offset=1
 ;; CHECK-NEXT:     (local.get $2)
 ;; CHECK-NEXT:     (i32.shr_u
 ;; CHECK-NEXT:      (local.get $3)
 ;; CHECK-NEXT:      (i32.const 8)
 ;; CHECK-NEXT:     )
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:    (i32.store8 offset=2
 ;; CHECK-NEXT:     (local.get $2)
 ;; CHECK-NEXT:     (i32.shr_u
 ;; CHECK-NEXT:      (local.get $3)
 ;; CHECK-NEXT:      (i32.const 16)
 ;; CHECK-NEXT:     )
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:    (i32.store8 offset=3
 ;; CHECK-NEXT:     (local.get $2)
 ;; CHECK-NEXT:     (i32.shr_u
 ;; CHECK-NEXT:      (local.get $3)
 ;; CHECK-NEXT:      (i32.const 24)
 ;; CHECK-NEXT:     )
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:   (block
 ;; CHECK-NEXT:    (local.set $4
 ;; CHECK-NEXT:     (local.get $0)
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:    (local.set $5
 ;; CHECK-NEXT:     (i32.wrap_i64
 ;; CHECK-NEXT:      (i64.shr_u
 ;; CHECK-NEXT:       (local.get $1)
 ;; CHECK-NEXT:       (i64.const 32)
 ;; CHECK-NEXT:      )
 ;; CHECK-NEXT:     )
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:    (i32.store8 offset=4
 ;; CHECK-NEXT:     (local.get $4)
 ;; CHECK-NEXT:     (local.get $5)
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:    (i32.store8 offset=5
 ;; CHECK-NEXT:     (local.get $4)
 ;; CHECK-NEXT:     (i32.shr_u
 ;; CHECK-NEXT:      (local.get $5)
 ;; CHECK-NEXT:      (i32.const 8)
 ;; CHECK-NEXT:     )
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:    (i32.store8 offset=6
 ;; CHECK-NEXT:     (local.get $4)
 ;; CHECK-NEXT:     (i32.shr_u
 ;; CHECK-NEXT:      (local.get $5)
 ;; CHECK-NEXT:      (i32.const 16)
 ;; CHECK-NEXT:     )
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:    (i32.store8 offset=7
 ;; CHECK-NEXT:     (local.get $4)
 ;; CHECK-NEXT:     (i32.shr_u
 ;; CHECK-NEXT:      (local.get $5)
 ;; CHECK-NEXT:      (i32.const 24)
 ;; CHECK-NEXT:     )
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (block
 ;; CHECK-NEXT:   (local.set $6
 ;; CHECK-NEXT:    (i32.const 16)
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:   (local.set $7
 ;; CHECK-NEXT:    (i64.reinterpret_f64
 ;; CHECK-NEXT:     (f64.const 200)
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:   (block
 ;; CHECK-NEXT:    (local.set $8
 ;; CHECK-NEXT:     (local.get $6)
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:    (local.set $9
 ;; CHECK-NEXT:     (i32.wrap_i64
 ;; CHECK-NEXT:      (local.get $7)
 ;; CHECK-NEXT:     )
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:    (i32.store16
 ;; CHECK-NEXT:     (local.get $8)
 ;; CHECK-NEXT:     (local.get $9)
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:    (i32.store16 offset=2
 ;; CHECK-NEXT:     (local.get $8)
 ;; CHECK-NEXT:     (i32.shr_u
 ;; CHECK-NEXT:      (local.get $9)
 ;; CHECK-NEXT:      (i32.const 16)
 ;; CHECK-NEXT:     )
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:   (block
 ;; CHECK-NEXT:    (local.set $10
 ;; CHECK-NEXT:     (local.get $6)
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:    (local.set $11
 ;; CHECK-NEXT:     (i32.wrap_i64
 ;; CHECK-NEXT:      (i64.shr_u
 ;; CHECK-NEXT:       (local.get $7)
 ;; CHECK-NEXT:       (i64.const 32)
 ;; CHECK-NEXT:      )
 ;; CHECK-NEXT:     )
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:    (i32.store16 offset=4
 ;; CHECK-NEXT:     (local.get $10)
 ;; CHECK-NEXT:     (local.get $11)
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:    (i32.store16 offset=6
 ;; CHECK-NEXT:     (local.get $10)
 ;; CHECK-NEXT:     (i32.shr_u
 ;; CHECK-NEXT:      (local.get $11)
 ;; CHECK-NEXT:      (i32.const 16)
 ;; CHECK-NEXT:     )
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (block
 ;; CHECK-NEXT:   (local.set $12
 ;; CHECK-NEXT:    (i32.const 20)
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:   (local.set $13
 ;; CHECK-NEXT:    (i64.reinterpret_f64
 ;; CHECK-NEXT:     (f64.const 300)
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:   (i32.store
 ;; CHECK-NEXT:    (local.get $12)
 ;; CHECK-NEXT:    (i32.wrap_i64
 ;; CHECK-NEXT:     (local.get $13)
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:   (i32.store offset=4
 ;; CHECK-NEXT:    (local.get $12)
 ;; CHECK-NEXT:    (i32.wrap_i64
 ;; CHECK-NEXT:     (i64.shr_u
 ;; CHECK-NEXT:      (local.get $13)
 ;; CHECK-NEXT:      (i64.const 32)
 ;; CHECK-NEXT:     )
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (block
 ;; CHECK-NEXT:   (local.set $14
 ;; CHECK-NEXT:    (i32.const 24)
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:   (local.set $15
 ;; CHECK-NEXT:    (i64.reinterpret_f64
 ;; CHECK-NEXT:     (f64.const 400)
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:   (block
 ;; CHECK-NEXT:    (local.set $16
 ;; CHECK-NEXT:     (local.get $14)
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:    (local.set $17
 ;; CHECK-NEXT:     (i32.wrap_i64
 ;; CHECK-NEXT:      (local.get $15)
 ;; CHECK-NEXT:     )
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:    (i32.store8 offset=3
 ;; CHECK-NEXT:     (local.get $16)
 ;; CHECK-NEXT:     (local.get $17)
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:    (i32.store8 offset=4
 ;; CHECK-NEXT:     (local.get $16)
 ;; CHECK-NEXT:     (i32.shr_u
 ;; CHECK-NEXT:      (local.get $17)
 ;; CHECK-NEXT:      (i32.const 8)
 ;; CHECK-NEXT:     )
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:    (i32.store8 offset=5
 ;; CHECK-NEXT:     (local.get $16)
 ;; CHECK-NEXT:     (i32.shr_u
 ;; CHECK-NEXT:      (local.get $17)
 ;; CHECK-NEXT:      (i32.const 16)
 ;; CHECK-NEXT:     )
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:    (i32.store8 offset=6
 ;; CHECK-NEXT:     (local.get $16)
 ;; CHECK-NEXT:     (i32.shr_u
 ;; CHECK-NEXT:      (local.get $17)
 ;; CHECK-NEXT:      (i32.const 24)
 ;; CHECK-NEXT:     )
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:   (block
 ;; CHECK-NEXT:    (local.set $18
 ;; CHECK-NEXT:     (local.get $14)
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:    (local.set $19
 ;; CHECK-NEXT:     (i32.wrap_i64
 ;; CHECK-NEXT:      (i64.shr_u
 ;; CHECK-NEXT:       (local.get $15)
 ;; CHECK-NEXT:       (i64.const 32)
 ;; CHECK-NEXT:      )
 ;; CHECK-NEXT:     )
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:    (i32.store8 offset=7
 ;; CHECK-NEXT:     (local.get $18)
 ;; CHECK-NEXT:     (local.get $19)
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:    (i32.store8 offset=8
 ;; CHECK-NEXT:     (local.get $18)
 ;; CHECK-NEXT:     (i32.shr_u
 ;; CHECK-NEXT:      (local.get $19)
 ;; CHECK-NEXT:      (i32.const 8)
 ;; CHECK-NEXT:     )
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:    (i32.store8 offset=9
 ;; CHECK-NEXT:     (local.get $18)
 ;; CHECK-NEXT:     (i32.shr_u
 ;; CHECK-NEXT:      (local.get $19)
 ;; CHECK-NEXT:      (i32.const 16)
 ;; CHECK-NEXT:     )
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:    (i32.store8 offset=10
 ;; CHECK-NEXT:     (local.get $18)
 ;; CHECK-NEXT:     (i32.shr_u
 ;; CHECK-NEXT:      (local.get $19)
 ;; CHECK-NEXT:      (i32.const 24)
 ;; CHECK-NEXT:     )
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT: )
 (func $f64-store
  (f64.store align=1 (i32.const 12) (f64.const 100))
  (f64.store align=2 (i32.const 16) (f64.const 200))
  (f64.store align=4 (i32.const 20) (f64.const 300))
  (f64.store align=1 offset=3 (i32.const 24) (f64.const 400))
 )
)
