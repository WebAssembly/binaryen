;; NOTE: Assertions have been generated by update_lit_checks.py --all-items and should not be edited.

;; RUN: wasm-opt %s --memory-packing -all --zero-filled-memory --enable-memory64 -S -o - | filecheck %s

(module
  (type (;0;) (func (param i64)))
  (type (;1;) (func))
  (type (;2;) (func (result i64)))
  ;; CHECK:      (type $i64_=>_none (func (param i64)))

  ;; CHECK:      (type $none_=>_none (func))

  ;; CHECK:      (type $none_=>_i64 (func (result i64)))

  ;; CHECK:      (import "env" "memory" (memory $0 i64 1 1))
  (import "env" "memory" (memory $0 i64 1 1))
  ;; CHECK:      (global $__tls_size i64 (i64.const 8))

  ;; CHECK:      (global $__tls_base (mut i64) (i64.const 0))

  ;; CHECK:      (global $g_needs_dynamic_alloc (mut i32) (i32.const 0))

  ;; CHECK:      (global $__mem_segment_drop_state (mut i32) (i32.const 0))

  ;; CHECK:      (global $__mem_segment_drop_state_4 (mut i32) (i32.const 0))

  ;; CHECK:      (data $.data "x\04\00\00\00\00\00\00x\04\00\00\00\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\06")

  ;; CHECK:      (data $.data.1 "\07\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00\e8\0f\00\00\00\00\00\00\00\04\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\ff\ff\ff\ff\n")

  ;; CHECK:      (data $.data.2 "0\18\01\00\00\00\00\00\00\00\01\00")

  ;; CHECK:      (table $0 3 3 funcref)

  ;; CHECK:      (export "__indirect_function_table" (table $0))

  ;; CHECK:      (export "_emscripten_tls_init" (func $_emscripten_tls_init))

  ;; CHECK:      (start $__wasm_init_memory)

  ;; CHECK:      (func $__wasm_init_tls (type $i64_=>_none) (param $0 i64)
  ;; CHECK-NEXT:  (local $1 i64)
  ;; CHECK-NEXT:  (global.set $__tls_base
  ;; CHECK-NEXT:   (local.get $0)
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT:  (block
  ;; CHECK-NEXT:   (local.set $1
  ;; CHECK-NEXT:    (local.get $0)
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:   (if
  ;; CHECK-NEXT:    (global.get $__mem_segment_drop_state)
  ;; CHECK-NEXT:    (unreachable)
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:   (memory.fill
  ;; CHECK-NEXT:    (local.get $1)
  ;; CHECK-NEXT:    (i32.const 0)
  ;; CHECK-NEXT:    (i64.const 8)
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT: )
  (func $__wasm_init_tls (type 0) (param i64)
    (global.set $__tls_base
      (local.get 0))
    (memory.init $.tdata
      (local.get 0)
      (i32.const 0)
      (i32.const 8)))
  ;; CHECK:      (func $__wasm_init_memory (type $none_=>_none)
  ;; CHECK-NEXT:  (block $block
  ;; CHECK-NEXT:   (block $block0
  ;; CHECK-NEXT:    (block $block1
  ;; CHECK-NEXT:     (br_table $block1 $block0 $block
  ;; CHECK-NEXT:      (i32.atomic.rmw.cmpxchg
  ;; CHECK-NEXT:       (i64.const 6188)
  ;; CHECK-NEXT:       (i32.const 0)
  ;; CHECK-NEXT:       (i32.const 1)
  ;; CHECK-NEXT:      )
  ;; CHECK-NEXT:     )
  ;; CHECK-NEXT:    )
  ;; CHECK-NEXT:    (global.set $__tls_base
  ;; CHECK-NEXT:     (i64.const 1024)
  ;; CHECK-NEXT:    )
  ;; CHECK-NEXT:    (block
  ;; CHECK-NEXT:     (if
  ;; CHECK-NEXT:      (global.get $__mem_segment_drop_state)
  ;; CHECK-NEXT:      (unreachable)
  ;; CHECK-NEXT:     )
  ;; CHECK-NEXT:     (memory.fill
  ;; CHECK-NEXT:      (i64.const 1024)
  ;; CHECK-NEXT:      (i32.const 0)
  ;; CHECK-NEXT:      (i64.const 8)
  ;; CHECK-NEXT:     )
  ;; CHECK-NEXT:    )
  ;; CHECK-NEXT:    (block
  ;; CHECK-NEXT:     (drop
  ;; CHECK-NEXT:      (i64.const 1032)
  ;; CHECK-NEXT:     )
  ;; CHECK-NEXT:     (drop
  ;; CHECK-NEXT:      (i32.const 0)
  ;; CHECK-NEXT:     )
  ;; CHECK-NEXT:     (drop
  ;; CHECK-NEXT:      (i32.const 109)
  ;; CHECK-NEXT:     )
  ;; CHECK-NEXT:     (unreachable)
  ;; CHECK-NEXT:    )
  ;; CHECK-NEXT:    (block
  ;; CHECK-NEXT:     (if
  ;; CHECK-NEXT:      (global.get $__mem_segment_drop_state_4)
  ;; CHECK-NEXT:      (unreachable)
  ;; CHECK-NEXT:     )
  ;; CHECK-NEXT:     (memory.fill
  ;; CHECK-NEXT:      (i64.const 1144)
  ;; CHECK-NEXT:      (i32.const 0)
  ;; CHECK-NEXT:      (i64.const 96)
  ;; CHECK-NEXT:     )
  ;; CHECK-NEXT:     (memory.init $.data
  ;; CHECK-NEXT:      (i64.const 1240)
  ;; CHECK-NEXT:      (i32.const 0)
  ;; CHECK-NEXT:      (i32.const 41)
  ;; CHECK-NEXT:     )
  ;; CHECK-NEXT:     (memory.fill
  ;; CHECK-NEXT:      (i64.const 1281)
  ;; CHECK-NEXT:      (i32.const 0)
  ;; CHECK-NEXT:      (i64.const 47)
  ;; CHECK-NEXT:     )
  ;; CHECK-NEXT:     (memory.init $.data.1
  ;; CHECK-NEXT:      (i64.const 1328)
  ;; CHECK-NEXT:      (i32.const 0)
  ;; CHECK-NEXT:      (i32.const 73)
  ;; CHECK-NEXT:     )
  ;; CHECK-NEXT:     (memory.fill
  ;; CHECK-NEXT:      (i64.const 1401)
  ;; CHECK-NEXT:      (i32.const 0)
  ;; CHECK-NEXT:      (i64.const 87)
  ;; CHECK-NEXT:     )
  ;; CHECK-NEXT:     (memory.init $.data.2
  ;; CHECK-NEXT:      (i64.const 1488)
  ;; CHECK-NEXT:      (i32.const 0)
  ;; CHECK-NEXT:      (i32.const 12)
  ;; CHECK-NEXT:     )
  ;; CHECK-NEXT:    )
  ;; CHECK-NEXT:    (memory.fill
  ;; CHECK-NEXT:     (i64.const 1504)
  ;; CHECK-NEXT:     (i32.const 0)
  ;; CHECK-NEXT:     (i64.const 4684)
  ;; CHECK-NEXT:    )
  ;; CHECK-NEXT:    (i32.atomic.store
  ;; CHECK-NEXT:     (i64.const 6188)
  ;; CHECK-NEXT:     (i32.const 2)
  ;; CHECK-NEXT:    )
  ;; CHECK-NEXT:    (drop
  ;; CHECK-NEXT:     (memory.atomic.notify
  ;; CHECK-NEXT:      (i64.const 6188)
  ;; CHECK-NEXT:      (i32.const -1)
  ;; CHECK-NEXT:     )
  ;; CHECK-NEXT:    )
  ;; CHECK-NEXT:    (br $block)
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:   (drop
  ;; CHECK-NEXT:    (memory.atomic.wait32
  ;; CHECK-NEXT:     (i64.const 6188)
  ;; CHECK-NEXT:     (i32.const 1)
  ;; CHECK-NEXT:     (i64.const -1)
  ;; CHECK-NEXT:    )
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT:  (nop)
  ;; CHECK-NEXT:  (block
  ;; CHECK-NEXT:   (global.set $__mem_segment_drop_state_4
  ;; CHECK-NEXT:    (i32.const 1)
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:   (data.drop $.data)
  ;; CHECK-NEXT:   (data.drop $.data.1)
  ;; CHECK-NEXT:   (data.drop $.data.2)
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT: )
  (func $__wasm_init_memory (type 1)
    (block  ;; label = @1
      (block  ;; label = @2
        (block  ;; label = @3
          (br_table 0 (;@3;) 1 (;@2;) 2 (;@1;)
            (i32.atomic.rmw.cmpxchg
              (i64.const 6188)
              (i32.const 0)
              (i32.const 1))))

        (global.set $__tls_base
          (i64.const 1024))
        (memory.init $.tdata
            (i64.const 1024)
            (i32.const 0)
            (i32.const 8)
        )
        (memory.init $.rodata
          (i64.const 1032)
          (i32.const 0)
          (i32.const 109))
        (memory.init $.data
          (i64.const 1144)
          (i32.const 0)
          (i32.const 356))
        (memory.fill
          (i64.const 1504)
          (i32.const 0)
          (i64.const 4684))
        (i32.atomic.store
          (i64.const 6188)
          (i32.const 2))
        (drop
          (memory.atomic.notify
            (i64.const 6188)
            (i32.const -1)))
        (br 1 (;@1;)))
      (drop
        (memory.atomic.wait32
          (i64.const 6188)
          (i32.const 1)
          (i64.const -1))))
    (data.drop $.rodata)
    (data.drop $.data))
  ;; CHECK:      (func $_emscripten_tls_init (type $none_=>_i64) (result i64)
  ;; CHECK-NEXT:  (local $0 i64)
  ;; CHECK-NEXT:  (local $1 i64)
  ;; CHECK-NEXT:  (local $2 i64)
  ;; CHECK-NEXT:  (local $3 i64)
  ;; CHECK-NEXT:  (local $4 i32)
  ;; CHECK-NEXT:  (local.set $0
  ;; CHECK-NEXT:   (i64.const 0)
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT:  (local.set $2
  ;; CHECK-NEXT:   (i64.load offset=208
  ;; CHECK-NEXT:    (local.tee $1
  ;; CHECK-NEXT:     (i64.const 1000)
  ;; CHECK-NEXT:    )
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT:  (local.set $3
  ;; CHECK-NEXT:   (i64.const 8)
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT:  (block $block
  ;; CHECK-NEXT:   (br_if $block
  ;; CHECK-NEXT:    (i64.eqz
  ;; CHECK-NEXT:     (local.get $2)
  ;; CHECK-NEXT:    )
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:   (i64.store offset=208
  ;; CHECK-NEXT:    (local.get $1)
  ;; CHECK-NEXT:    (i64.const 0)
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:   (call $__wasm_init_tls
  ;; CHECK-NEXT:    (local.tee $2
  ;; CHECK-NEXT:     (local.get $2)
  ;; CHECK-NEXT:    )
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:   (return
  ;; CHECK-NEXT:    (local.get $2)
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT:  (local.set $4
  ;; CHECK-NEXT:   (i32.const 0)
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT:  (block $block2
  ;; CHECK-NEXT:   (block $block3
  ;; CHECK-NEXT:    (br_if $block3
  ;; CHECK-NEXT:     (local.get $4)
  ;; CHECK-NEXT:    )
  ;; CHECK-NEXT:    (br_if $block2
  ;; CHECK-NEXT:     (i64.ne
  ;; CHECK-NEXT:      (local.get $0)
  ;; CHECK-NEXT:      (i64.const 0)
  ;; CHECK-NEXT:     )
  ;; CHECK-NEXT:    )
  ;; CHECK-NEXT:    (br_if $block2
  ;; CHECK-NEXT:     (i64.eqz
  ;; CHECK-NEXT:      (local.get $3)
  ;; CHECK-NEXT:     )
  ;; CHECK-NEXT:    )
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:   (global.set $g_needs_dynamic_alloc
  ;; CHECK-NEXT:    (i32.const 1)
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:   (local.set $0
  ;; CHECK-NEXT:    (i64.const 0)
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT:  (call $__wasm_init_tls
  ;; CHECK-NEXT:   (local.get $0)
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT:  (local.get $0)
  ;; CHECK-NEXT: )
  (func $_emscripten_tls_init (type 2) (result i64)
    (local i64 i64 i64 i64 i32)
    (local.set 0
      (i64.const 0))
    (local.set 2
      (i64.load offset=208
        (local.tee 1
          (i64.const 1000))))
    (local.set 3
      (i64.const 8))
    (block  ;; label = @1
      (br_if 0 (;@1;)
        (i64.eqz
          (local.get 2)))
      (i64.store offset=208
        (local.get 1)
        (i64.const 0))
      (call $__wasm_init_tls
        (local.tee 2
          (local.get 2)))
      (return
        (local.get 2)))
    (local.set 4
      (i32.const 0))
    (block  ;; label = @1
      (block  ;; label = @2
        (br_if 0 (;@2;)
          (local.get 4))
        (br_if 1 (;@1;)
          (i64.ne
            (local.get 0)
            (i64.const 0)))
        (br_if 1 (;@1;)
          (i64.eqz
            (local.get 3))))
      (global.set $g_needs_dynamic_alloc
        (i32.const 1))
      (local.set 0
        (i64.const 0)))
    (call $__wasm_init_tls
      (local.get 0))
    (local.get 0))
  (table (;0;) 3 3 funcref)
  (global $__tls_size i64 (i64.const 8))
  (global $__tls_base (mut i64) (i64.const 0))
  (global $g_needs_dynamic_alloc (mut i32) (i32.const 0))
  (export "__indirect_function_table" (table 0))
  (export "_emscripten_tls_init" (func $_emscripten_tls_init))
  (start $__wasm_init_memory)
  (data $.tdata "\00\00\00\00\00\00\00\00")
  (data $.rodata "worker\00main\00/emscripten/test/wasm_worker/hello_wasm_worker.c\00Hello from wasm worker!\00")
  (data $.data "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00x\04\00\00\00\00\00\00x\04\00\00\00\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\06\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\07\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00\e8\0f\00\00\00\00\00\00\00\04\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\ff\ff\ff\ff\0a\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\000\18\01\00\00\00\00\00\00\00\01\00"))
