;; NOTE: Assertions have been generated by update_lit_checks.py --all-items and should not be edited.

;; RUN: foreach %s %t wasm-opt --abstract-type-refining --remove-unused-types --traps-never-happen \
;; RUN:     -all --closed-world --preserve-type-order -S -o - | filecheck %s --check-prefix=YESTNH
;; RUN: foreach %s %t wasm-opt --abstract-type-refining --remove-unused-types \
;; RUN:     -all --closed-world --preserve-type-order -S -o - | filecheck %s --check-prefix=NO_TNH

;; Run in both TNH and non-TNH mode.

(module
  ;; We should not try to generate invalid types by removing the subtype
  ;; relation between $B.desc and $A.desc.
  (rec
    ;; YESTNH:      (rec
    ;; YESTNH-NEXT:  (type $A (sub (descriptor $A.desc (struct))))
    ;; NO_TNH:      (rec
    ;; NO_TNH-NEXT:  (type $A (sub (descriptor $A.desc (struct))))
    (type $A (sub (descriptor $A.desc (struct))))
    ;; YESTNH:       (type $A.desc (sub (describes $A (struct))))
    ;; NO_TNH:       (type $A.desc (sub (describes $A (struct))))
    (type $A.desc (sub (describes $A (struct))))
    ;; YESTNH:       (type $B (sub $A (descriptor $B.desc (struct))))
    ;; NO_TNH:       (type $B (sub $A (descriptor $B.desc (struct))))
    (type $B (sub $A (descriptor $B.desc (struct))))
    ;; YESTNH:       (type $B.desc (sub $A.desc (describes $B (struct))))
    ;; NO_TNH:       (type $B.desc (sub $A.desc (describes $B (struct))))
    (type $B.desc (sub $A.desc (describes $B (struct))))
  )
  ;; YESTNH:      (global $g (ref (exact $B)) (struct.new_default $B
  ;; YESTNH-NEXT:  (ref.null none)
  ;; YESTNH-NEXT: ))
  ;; NO_TNH:      (global $g (ref (exact $B)) (struct.new_default $B
  ;; NO_TNH-NEXT:  (ref.null none)
  ;; NO_TNH-NEXT: ))
  (global $g (ref (exact $B))
    (struct.new_default $B
      (ref.null none)
    )
  )
)

(module
  ;; Same as above, but now we should see references to $A.desc and $B.desc
  ;; optimized to nullref because they are not instantiated. Similarly, $A is
  ;; optimized to $B with TNH.
  (rec
    ;; YESTNH:      (rec
    ;; YESTNH-NEXT:  (type $A (sub (descriptor $A.desc (struct (field (ref null $B)) (field (ref null $B))))))
    ;; NO_TNH:      (rec
    ;; NO_TNH-NEXT:  (type $A (sub (descriptor $A.desc (struct (field (ref null $A)) (field (ref null $B))))))
    (type $A (sub (descriptor $A.desc (struct (field (ref null $A) (ref null $B))))))
    ;; YESTNH:       (type $A.desc (sub (describes $A (struct (field nullref) (field nullref)))))
    ;; NO_TNH:       (type $A.desc (sub (describes $A (struct (field nullref) (field nullref)))))
    (type $A.desc (sub (describes $A (struct (field (ref null $A.desc) (ref null $B.desc))))))
    ;; YESTNH:       (type $B (sub $A (descriptor $B.desc (struct (field (ref null $B)) (field (ref null $B))))))
    ;; NO_TNH:       (type $B (sub $A (descriptor $B.desc (struct (field (ref null $A)) (field (ref null $B))))))
    (type $B (sub $A (descriptor $B.desc (struct (field (ref null $A) (ref null $B))))))
    ;; YESTNH:       (type $B.desc (sub $A.desc (describes $B (struct (field nullref) (field nullref)))))
    ;; NO_TNH:       (type $B.desc (sub $A.desc (describes $B (struct (field nullref) (field nullref)))))
    (type $B.desc (sub $A.desc (describes $B (struct (field (ref null $A.desc) (ref null $B.desc))))))
  )

  ;; YESTNH:      (global $g (ref (exact $B)) (struct.new_default $B
  ;; YESTNH-NEXT:  (ref.null none)
  ;; YESTNH-NEXT: ))
  ;; NO_TNH:      (global $g (ref (exact $B)) (struct.new_default $B
  ;; NO_TNH-NEXT:  (ref.null none)
  ;; NO_TNH-NEXT: ))
  (global $g (ref (exact $B))
    (struct.new_default $B
      (ref.null none)
    )
  )
)

(module
  (rec
    ;; YESTNH:      (rec
    ;; YESTNH-NEXT:  (type $struct (descriptor $desc (struct)))
    ;; NO_TNH:      (rec
    ;; NO_TNH-NEXT:  (type $struct (descriptor $desc (struct)))
    (type $struct (descriptor $desc (struct)))
    ;; YESTNH:       (type $desc (describes $struct (struct)))
    ;; NO_TNH:       (type $desc (describes $struct (struct)))
    (type $desc (describes $struct (struct)))
  )

  ;; YESTNH:       (type $2 (func (param anyref (ref null $desc)) (result nullref)))

  ;; YESTNH:       (type $3 (func (param anyref (ref $desc)) (result nullref)))

  ;; YESTNH:      (type $4 (func))

  ;; YESTNH:      (import "" "" (func $effect (type $4)))
  ;; NO_TNH:       (type $2 (func (param anyref (ref null $desc)) (result nullref)))

  ;; NO_TNH:       (type $3 (func (param anyref (ref $desc)) (result nullref)))

  ;; NO_TNH:      (type $4 (func))

  ;; NO_TNH:      (import "" "" (func $effect (type $4)))
  (import "" "" (func $effect))

  ;; YESTNH:      (global $desc (ref $desc) (struct.new_default $desc))
  ;; NO_TNH:      (global $desc (ref $desc) (struct.new_default $desc))
  (global $desc (ref $desc) (struct.new $desc))

  ;; YESTNH:      (func $cast-nullable (type $2) (param $ref anyref) (param $desc (ref null $desc)) (result nullref)
  ;; YESTNH-NEXT:  (ref.cast nullref
  ;; YESTNH-NEXT:   (local.get $ref)
  ;; YESTNH-NEXT:  )
  ;; YESTNH-NEXT: )
  ;; NO_TNH:      (func $cast-nullable (type $2) (param $ref anyref) (param $desc (ref null $desc)) (result nullref)
  ;; NO_TNH-NEXT:  (local $2 (ref $desc))
  ;; NO_TNH-NEXT:  (local.set $2
  ;; NO_TNH-NEXT:   (ref.as_non_null
  ;; NO_TNH-NEXT:    (local.get $desc)
  ;; NO_TNH-NEXT:   )
  ;; NO_TNH-NEXT:  )
  ;; NO_TNH-NEXT:  (ref.cast nullref
  ;; NO_TNH-NEXT:   (local.get $ref)
  ;; NO_TNH-NEXT:  )
  ;; NO_TNH-NEXT: )
  (func $cast-nullable (param $ref anyref) (param $desc (ref null $desc)) (result (ref null $struct))
    ;; $struct will be optimized to nullref, but $desc will not. We must
    ;; optimize out this cast because otherwise ReFinalization would make its
    ;; result (ref $struct) again and it would not be valid for the optimized
    ;; function result type.
    (ref.cast_desc (ref null $struct)
      (local.get $ref)
      (local.get $desc)
    )
  )

  ;; YESTNH:      (func $cast-nullable-effect (type $2) (param $ref anyref) (param $desc (ref null $desc)) (result nullref)
  ;; YESTNH-NEXT:  (local $2 anyref)
  ;; YESTNH-NEXT:  (local $3 (ref $desc))
  ;; YESTNH-NEXT:  (local.set $2
  ;; YESTNH-NEXT:   (block (result anyref)
  ;; YESTNH-NEXT:    (call $effect)
  ;; YESTNH-NEXT:    (local.get $ref)
  ;; YESTNH-NEXT:   )
  ;; YESTNH-NEXT:  )
  ;; YESTNH-NEXT:  (local.set $3
  ;; YESTNH-NEXT:   (ref.as_non_null
  ;; YESTNH-NEXT:    (block (result (ref null $desc))
  ;; YESTNH-NEXT:     (call $effect)
  ;; YESTNH-NEXT:     (local.get $desc)
  ;; YESTNH-NEXT:    )
  ;; YESTNH-NEXT:   )
  ;; YESTNH-NEXT:  )
  ;; YESTNH-NEXT:  (ref.cast nullref
  ;; YESTNH-NEXT:   (local.get $2)
  ;; YESTNH-NEXT:  )
  ;; YESTNH-NEXT: )
  ;; NO_TNH:      (func $cast-nullable-effect (type $2) (param $ref anyref) (param $desc (ref null $desc)) (result nullref)
  ;; NO_TNH-NEXT:  (local $2 anyref)
  ;; NO_TNH-NEXT:  (local $3 (ref $desc))
  ;; NO_TNH-NEXT:  (local.set $2
  ;; NO_TNH-NEXT:   (block (result anyref)
  ;; NO_TNH-NEXT:    (call $effect)
  ;; NO_TNH-NEXT:    (local.get $ref)
  ;; NO_TNH-NEXT:   )
  ;; NO_TNH-NEXT:  )
  ;; NO_TNH-NEXT:  (local.set $3
  ;; NO_TNH-NEXT:   (ref.as_non_null
  ;; NO_TNH-NEXT:    (block (result (ref null $desc))
  ;; NO_TNH-NEXT:     (call $effect)
  ;; NO_TNH-NEXT:     (local.get $desc)
  ;; NO_TNH-NEXT:    )
  ;; NO_TNH-NEXT:   )
  ;; NO_TNH-NEXT:  )
  ;; NO_TNH-NEXT:  (ref.cast nullref
  ;; NO_TNH-NEXT:   (local.get $2)
  ;; NO_TNH-NEXT:  )
  ;; NO_TNH-NEXT: )
  (func $cast-nullable-effect (param $ref anyref) (param $desc (ref null $desc)) (result (ref null $struct))
    ;; Same, but with side effects we cannot drop.
    (ref.cast_desc (ref null $struct)
      (block (result anyref)
        (call $effect)
        (local.get $ref)
      )
      (block (result (ref null $desc))
        (call $effect)
        (local.get $desc)
      )
    )
  )

  ;; YESTNH:      (func $cast-non-nullable (type $2) (param $ref anyref) (param $desc (ref null $desc)) (result nullref)
  ;; YESTNH-NEXT:  (ref.cast (ref none)
  ;; YESTNH-NEXT:   (local.get $ref)
  ;; YESTNH-NEXT:  )
  ;; YESTNH-NEXT: )
  ;; NO_TNH:      (func $cast-non-nullable (type $2) (param $ref anyref) (param $desc (ref null $desc)) (result nullref)
  ;; NO_TNH-NEXT:  (local $2 (ref $desc))
  ;; NO_TNH-NEXT:  (local.set $2
  ;; NO_TNH-NEXT:   (ref.as_non_null
  ;; NO_TNH-NEXT:    (local.get $desc)
  ;; NO_TNH-NEXT:   )
  ;; NO_TNH-NEXT:  )
  ;; NO_TNH-NEXT:  (ref.cast (ref none)
  ;; NO_TNH-NEXT:   (local.get $ref)
  ;; NO_TNH-NEXT:  )
  ;; NO_TNH-NEXT: )
  (func $cast-non-nullable (param $ref anyref) (param $desc (ref null $desc)) (result (ref null $struct))
    ;; Same, but now the cast does not admit null.
    (ref.cast_desc (ref $struct)
      (local.get $ref)
      (local.get $desc)
    )
  )

  ;; YESTNH:      (func $cast-non-nullable-desc (type $3) (param $ref anyref) (param $desc (ref $desc)) (result nullref)
  ;; YESTNH-NEXT:  (ref.cast (ref none)
  ;; YESTNH-NEXT:   (local.get $ref)
  ;; YESTNH-NEXT:  )
  ;; YESTNH-NEXT: )
  ;; NO_TNH:      (func $cast-non-nullable-desc (type $3) (param $ref anyref) (param $desc (ref $desc)) (result nullref)
  ;; NO_TNH-NEXT:  (ref.cast (ref none)
  ;; NO_TNH-NEXT:   (local.get $ref)
  ;; NO_TNH-NEXT:  )
  ;; NO_TNH-NEXT: )
  (func $cast-non-nullable-desc (param $ref anyref) (param $desc (ref $desc)) (result (ref null $struct))
    ;; Same, but now the descriptor is additionally non-null.
    (ref.cast_desc (ref $struct)
      (local.get $ref)
      (local.get $desc)
    )
  )

  ;; YESTNH:      (func $cast-non-nullable-effect (type $3) (param $ref anyref) (param $desc (ref $desc)) (result nullref)
  ;; YESTNH-NEXT:  (local $2 anyref)
  ;; YESTNH-NEXT:  (local $3 (ref $desc))
  ;; YESTNH-NEXT:  (local.set $2
  ;; YESTNH-NEXT:   (block (result anyref)
  ;; YESTNH-NEXT:    (call $effect)
  ;; YESTNH-NEXT:    (local.get $ref)
  ;; YESTNH-NEXT:   )
  ;; YESTNH-NEXT:  )
  ;; YESTNH-NEXT:  (local.set $3
  ;; YESTNH-NEXT:   (block (result (ref $desc))
  ;; YESTNH-NEXT:    (call $effect)
  ;; YESTNH-NEXT:    (local.get $desc)
  ;; YESTNH-NEXT:   )
  ;; YESTNH-NEXT:  )
  ;; YESTNH-NEXT:  (ref.cast (ref none)
  ;; YESTNH-NEXT:   (local.get $2)
  ;; YESTNH-NEXT:  )
  ;; YESTNH-NEXT: )
  ;; NO_TNH:      (func $cast-non-nullable-effect (type $3) (param $ref anyref) (param $desc (ref $desc)) (result nullref)
  ;; NO_TNH-NEXT:  (local $2 anyref)
  ;; NO_TNH-NEXT:  (local $3 (ref $desc))
  ;; NO_TNH-NEXT:  (local.set $2
  ;; NO_TNH-NEXT:   (block (result anyref)
  ;; NO_TNH-NEXT:    (call $effect)
  ;; NO_TNH-NEXT:    (local.get $ref)
  ;; NO_TNH-NEXT:   )
  ;; NO_TNH-NEXT:  )
  ;; NO_TNH-NEXT:  (local.set $3
  ;; NO_TNH-NEXT:   (block (result (ref $desc))
  ;; NO_TNH-NEXT:    (call $effect)
  ;; NO_TNH-NEXT:    (local.get $desc)
  ;; NO_TNH-NEXT:   )
  ;; NO_TNH-NEXT:  )
  ;; NO_TNH-NEXT:  (ref.cast (ref none)
  ;; NO_TNH-NEXT:   (local.get $2)
  ;; NO_TNH-NEXT:  )
  ;; NO_TNH-NEXT: )
  (func $cast-non-nullable-effect (param $ref anyref) (param $desc (ref $desc)) (result (ref null $struct))
    ;; Same, but with side effects we cannot drop.
    (ref.cast_desc (ref $struct)
      (block (result anyref)
        (call $effect)
        (local.get $ref)
      )
      (block (result (ref $desc))
        (call $effect)
        (local.get $desc)
      )
    )
  )

  ;; YESTNH:      (func $branch-nullable (type $2) (param $ref anyref) (param $desc (ref null $desc)) (result nullref)
  ;; YESTNH-NEXT:  (block $block (result nullref)
  ;; YESTNH-NEXT:   (drop
  ;; YESTNH-NEXT:    (block (result (ref any))
  ;; YESTNH-NEXT:     (br_on_cast $block anyref nullref
  ;; YESTNH-NEXT:      (local.get $ref)
  ;; YESTNH-NEXT:     )
  ;; YESTNH-NEXT:    )
  ;; YESTNH-NEXT:   )
  ;; YESTNH-NEXT:   (unreachable)
  ;; YESTNH-NEXT:  )
  ;; YESTNH-NEXT: )
  ;; NO_TNH:      (func $branch-nullable (type $2) (param $ref anyref) (param $desc (ref null $desc)) (result nullref)
  ;; NO_TNH-NEXT:  (local $2 (ref $desc))
  ;; NO_TNH-NEXT:  (block $block (result nullref)
  ;; NO_TNH-NEXT:   (drop
  ;; NO_TNH-NEXT:    (block (result (ref any))
  ;; NO_TNH-NEXT:     (local.set $2
  ;; NO_TNH-NEXT:      (ref.as_non_null
  ;; NO_TNH-NEXT:       (local.get $desc)
  ;; NO_TNH-NEXT:      )
  ;; NO_TNH-NEXT:     )
  ;; NO_TNH-NEXT:     (br_on_cast $block anyref nullref
  ;; NO_TNH-NEXT:      (local.get $ref)
  ;; NO_TNH-NEXT:     )
  ;; NO_TNH-NEXT:    )
  ;; NO_TNH-NEXT:   )
  ;; NO_TNH-NEXT:   (unreachable)
  ;; NO_TNH-NEXT:  )
  ;; NO_TNH-NEXT: )
  (func $branch-nullable (param $ref anyref) (param $desc (ref null $desc)) (result (ref null $struct))
    (block $block (result (ref null $struct))
      (drop
        ;; Same, but with br_on_cast_desc.
        (br_on_cast_desc $block anyref (ref null $struct)
          (local.get $ref)
          (local.get $desc)
        )
      )
      (unreachable)
    )
  )

  ;; YESTNH:      (func $branch-nullable-effect (type $2) (param $ref anyref) (param $desc (ref null $desc)) (result nullref)
  ;; YESTNH-NEXT:  (local $2 anyref)
  ;; YESTNH-NEXT:  (local $3 (ref $desc))
  ;; YESTNH-NEXT:  (block $block (result nullref)
  ;; YESTNH-NEXT:   (drop
  ;; YESTNH-NEXT:    (block (result (ref any))
  ;; YESTNH-NEXT:     (local.set $2
  ;; YESTNH-NEXT:      (block (result anyref)
  ;; YESTNH-NEXT:       (call $effect)
  ;; YESTNH-NEXT:       (local.get $ref)
  ;; YESTNH-NEXT:      )
  ;; YESTNH-NEXT:     )
  ;; YESTNH-NEXT:     (local.set $3
  ;; YESTNH-NEXT:      (ref.as_non_null
  ;; YESTNH-NEXT:       (block (result (ref null $desc))
  ;; YESTNH-NEXT:        (call $effect)
  ;; YESTNH-NEXT:        (local.get $desc)
  ;; YESTNH-NEXT:       )
  ;; YESTNH-NEXT:      )
  ;; YESTNH-NEXT:     )
  ;; YESTNH-NEXT:     (br_on_cast $block anyref nullref
  ;; YESTNH-NEXT:      (local.get $2)
  ;; YESTNH-NEXT:     )
  ;; YESTNH-NEXT:    )
  ;; YESTNH-NEXT:   )
  ;; YESTNH-NEXT:   (unreachable)
  ;; YESTNH-NEXT:  )
  ;; YESTNH-NEXT: )
  ;; NO_TNH:      (func $branch-nullable-effect (type $2) (param $ref anyref) (param $desc (ref null $desc)) (result nullref)
  ;; NO_TNH-NEXT:  (local $2 anyref)
  ;; NO_TNH-NEXT:  (local $3 (ref $desc))
  ;; NO_TNH-NEXT:  (block $block (result nullref)
  ;; NO_TNH-NEXT:   (drop
  ;; NO_TNH-NEXT:    (block (result (ref any))
  ;; NO_TNH-NEXT:     (local.set $2
  ;; NO_TNH-NEXT:      (block (result anyref)
  ;; NO_TNH-NEXT:       (call $effect)
  ;; NO_TNH-NEXT:       (local.get $ref)
  ;; NO_TNH-NEXT:      )
  ;; NO_TNH-NEXT:     )
  ;; NO_TNH-NEXT:     (local.set $3
  ;; NO_TNH-NEXT:      (ref.as_non_null
  ;; NO_TNH-NEXT:       (block (result (ref null $desc))
  ;; NO_TNH-NEXT:        (call $effect)
  ;; NO_TNH-NEXT:        (local.get $desc)
  ;; NO_TNH-NEXT:       )
  ;; NO_TNH-NEXT:      )
  ;; NO_TNH-NEXT:     )
  ;; NO_TNH-NEXT:     (br_on_cast $block anyref nullref
  ;; NO_TNH-NEXT:      (local.get $2)
  ;; NO_TNH-NEXT:     )
  ;; NO_TNH-NEXT:    )
  ;; NO_TNH-NEXT:   )
  ;; NO_TNH-NEXT:   (unreachable)
  ;; NO_TNH-NEXT:  )
  ;; NO_TNH-NEXT: )
  (func $branch-nullable-effect (param $ref anyref) (param $desc (ref null $desc)) (result (ref null $struct))
    (block $block (result (ref null $struct))
      (drop
        ;; Same, but with effects we cannot drop.
        (br_on_cast_desc $block anyref (ref null $struct)
          (block (result anyref)
            (call $effect)
            (local.get $ref)
          )
          (block (result (ref null $desc))
            (call $effect)
            (local.get $desc)
          )
        )
      )
      (unreachable)
    )
  )

  ;; YESTNH:      (func $branch-non-nullable (type $2) (param $ref anyref) (param $desc (ref null $desc)) (result nullref)
  ;; YESTNH-NEXT:  (block $block (result (ref none))
  ;; YESTNH-NEXT:   (drop
  ;; YESTNH-NEXT:    (block (result anyref)
  ;; YESTNH-NEXT:     (br_on_cast $block anyref (ref none)
  ;; YESTNH-NEXT:      (local.get $ref)
  ;; YESTNH-NEXT:     )
  ;; YESTNH-NEXT:    )
  ;; YESTNH-NEXT:   )
  ;; YESTNH-NEXT:   (unreachable)
  ;; YESTNH-NEXT:  )
  ;; YESTNH-NEXT: )
  ;; NO_TNH:      (func $branch-non-nullable (type $2) (param $ref anyref) (param $desc (ref null $desc)) (result nullref)
  ;; NO_TNH-NEXT:  (local $2 (ref $desc))
  ;; NO_TNH-NEXT:  (block $block (result (ref none))
  ;; NO_TNH-NEXT:   (drop
  ;; NO_TNH-NEXT:    (block (result anyref)
  ;; NO_TNH-NEXT:     (local.set $2
  ;; NO_TNH-NEXT:      (ref.as_non_null
  ;; NO_TNH-NEXT:       (local.get $desc)
  ;; NO_TNH-NEXT:      )
  ;; NO_TNH-NEXT:     )
  ;; NO_TNH-NEXT:     (br_on_cast $block anyref (ref none)
  ;; NO_TNH-NEXT:      (local.get $ref)
  ;; NO_TNH-NEXT:     )
  ;; NO_TNH-NEXT:    )
  ;; NO_TNH-NEXT:   )
  ;; NO_TNH-NEXT:   (unreachable)
  ;; NO_TNH-NEXT:  )
  ;; NO_TNH-NEXT: )
  (func $branch-non-nullable (param $ref anyref) (param $desc (ref null $desc)) (result (ref null $struct))
    (block $block (result (ref null $struct))
      (drop
        ;; Same, but now the cast does not admit nulls.
        (br_on_cast_desc $block anyref (ref $struct)
          (local.get $ref)
          (local.get $desc)
        )
      )
      (unreachable)
    )
  )

    ;; YESTNH:      (func $branch-non-nullable-desc (type $3) (param $ref anyref) (param $desc (ref $desc)) (result nullref)
    ;; YESTNH-NEXT:  (block $block (result (ref none))
    ;; YESTNH-NEXT:   (drop
    ;; YESTNH-NEXT:    (block (result anyref)
    ;; YESTNH-NEXT:     (br_on_cast $block anyref (ref none)
    ;; YESTNH-NEXT:      (local.get $ref)
    ;; YESTNH-NEXT:     )
    ;; YESTNH-NEXT:    )
    ;; YESTNH-NEXT:   )
    ;; YESTNH-NEXT:   (unreachable)
    ;; YESTNH-NEXT:  )
    ;; YESTNH-NEXT: )
    ;; NO_TNH:      (func $branch-non-nullable-desc (type $3) (param $ref anyref) (param $desc (ref $desc)) (result nullref)
    ;; NO_TNH-NEXT:  (block $block (result (ref none))
    ;; NO_TNH-NEXT:   (drop
    ;; NO_TNH-NEXT:    (block (result anyref)
    ;; NO_TNH-NEXT:     (br_on_cast $block anyref (ref none)
    ;; NO_TNH-NEXT:      (local.get $ref)
    ;; NO_TNH-NEXT:     )
    ;; NO_TNH-NEXT:    )
    ;; NO_TNH-NEXT:   )
    ;; NO_TNH-NEXT:   (unreachable)
    ;; NO_TNH-NEXT:  )
    ;; NO_TNH-NEXT: )
    (func $branch-non-nullable-desc (param $ref anyref) (param $desc (ref $desc)) (result (ref null $struct))
    (block $block (result (ref null $struct))
      (drop
        ;; Same, but now the descriptor is additionally non-null.
        (br_on_cast_desc $block anyref (ref $struct)
          (local.get $ref)
          (local.get $desc)
        )
      )
      (unreachable)
    )
  )

  ;; YESTNH:      (func $branch-non-nullable-effect (type $3) (param $ref anyref) (param $desc (ref $desc)) (result nullref)
  ;; YESTNH-NEXT:  (local $2 anyref)
  ;; YESTNH-NEXT:  (local $3 (ref $desc))
  ;; YESTNH-NEXT:  (block $block (result (ref none))
  ;; YESTNH-NEXT:   (drop
  ;; YESTNH-NEXT:    (block (result anyref)
  ;; YESTNH-NEXT:     (local.set $2
  ;; YESTNH-NEXT:      (block (result anyref)
  ;; YESTNH-NEXT:       (call $effect)
  ;; YESTNH-NEXT:       (local.get $ref)
  ;; YESTNH-NEXT:      )
  ;; YESTNH-NEXT:     )
  ;; YESTNH-NEXT:     (local.set $3
  ;; YESTNH-NEXT:      (block (result (ref $desc))
  ;; YESTNH-NEXT:       (call $effect)
  ;; YESTNH-NEXT:       (local.get $desc)
  ;; YESTNH-NEXT:      )
  ;; YESTNH-NEXT:     )
  ;; YESTNH-NEXT:     (br_on_cast $block anyref (ref none)
  ;; YESTNH-NEXT:      (local.get $2)
  ;; YESTNH-NEXT:     )
  ;; YESTNH-NEXT:    )
  ;; YESTNH-NEXT:   )
  ;; YESTNH-NEXT:   (unreachable)
  ;; YESTNH-NEXT:  )
  ;; YESTNH-NEXT: )
  ;; NO_TNH:      (func $branch-non-nullable-effect (type $3) (param $ref anyref) (param $desc (ref $desc)) (result nullref)
  ;; NO_TNH-NEXT:  (local $2 anyref)
  ;; NO_TNH-NEXT:  (local $3 (ref $desc))
  ;; NO_TNH-NEXT:  (block $block (result (ref none))
  ;; NO_TNH-NEXT:   (drop
  ;; NO_TNH-NEXT:    (block (result anyref)
  ;; NO_TNH-NEXT:     (local.set $2
  ;; NO_TNH-NEXT:      (block (result anyref)
  ;; NO_TNH-NEXT:       (call $effect)
  ;; NO_TNH-NEXT:       (local.get $ref)
  ;; NO_TNH-NEXT:      )
  ;; NO_TNH-NEXT:     )
  ;; NO_TNH-NEXT:     (local.set $3
  ;; NO_TNH-NEXT:      (block (result (ref $desc))
  ;; NO_TNH-NEXT:       (call $effect)
  ;; NO_TNH-NEXT:       (local.get $desc)
  ;; NO_TNH-NEXT:      )
  ;; NO_TNH-NEXT:     )
  ;; NO_TNH-NEXT:     (br_on_cast $block anyref (ref none)
  ;; NO_TNH-NEXT:      (local.get $2)
  ;; NO_TNH-NEXT:     )
  ;; NO_TNH-NEXT:    )
  ;; NO_TNH-NEXT:   )
  ;; NO_TNH-NEXT:   (unreachable)
  ;; NO_TNH-NEXT:  )
  ;; NO_TNH-NEXT: )
  (func $branch-non-nullable-effect (param $ref anyref) (param $desc (ref $desc)) (result (ref null $struct))
    (block $block (result (ref null $struct))
      (drop
        ;; Same, but with effects we cannot drop.
        (br_on_cast_desc $block anyref (ref $struct)
          (block (result anyref)
            (call $effect)
            (local.get $ref)
          )
          (block (result (ref $desc))
            (call $effect)
            (local.get $desc)
          )
        )
      )
      (unreachable)
    )
  )

  ;; YESTNH:      (func $branch-fail-nullable (type $2) (param $ref anyref) (param $desc (ref null $desc)) (result nullref)
  ;; YESTNH-NEXT:  (drop
  ;; YESTNH-NEXT:   (block $block (result (ref any))
  ;; YESTNH-NEXT:    (return
  ;; YESTNH-NEXT:     (block (result nullref)
  ;; YESTNH-NEXT:      (br_on_cast_fail $block anyref nullref
  ;; YESTNH-NEXT:       (local.get $ref)
  ;; YESTNH-NEXT:      )
  ;; YESTNH-NEXT:     )
  ;; YESTNH-NEXT:    )
  ;; YESTNH-NEXT:   )
  ;; YESTNH-NEXT:  )
  ;; YESTNH-NEXT:  (unreachable)
  ;; YESTNH-NEXT: )
  ;; NO_TNH:      (func $branch-fail-nullable (type $2) (param $ref anyref) (param $desc (ref null $desc)) (result nullref)
  ;; NO_TNH-NEXT:  (local $2 (ref $desc))
  ;; NO_TNH-NEXT:  (drop
  ;; NO_TNH-NEXT:   (block $block (result (ref any))
  ;; NO_TNH-NEXT:    (return
  ;; NO_TNH-NEXT:     (block (result nullref)
  ;; NO_TNH-NEXT:      (local.set $2
  ;; NO_TNH-NEXT:       (ref.as_non_null
  ;; NO_TNH-NEXT:        (local.get $desc)
  ;; NO_TNH-NEXT:       )
  ;; NO_TNH-NEXT:      )
  ;; NO_TNH-NEXT:      (br_on_cast_fail $block anyref nullref
  ;; NO_TNH-NEXT:       (local.get $ref)
  ;; NO_TNH-NEXT:      )
  ;; NO_TNH-NEXT:     )
  ;; NO_TNH-NEXT:    )
  ;; NO_TNH-NEXT:   )
  ;; NO_TNH-NEXT:  )
  ;; NO_TNH-NEXT:  (unreachable)
  ;; NO_TNH-NEXT: )
  (func $branch-fail-nullable (param $ref anyref) (param $desc (ref null $desc)) (result (ref null $struct))
    (drop
      (block $block (result anyref)
        (return
          ;; Same, but with br_on_cast_desc_fail.
          (br_on_cast_desc_fail $block anyref (ref null $struct)
            (local.get $ref)
            (local.get $desc)
          )
        )
      )
    )
    (unreachable)
  )

  ;; YESTNH:      (func $branch-fail-nullable-effect (type $2) (param $ref anyref) (param $desc (ref null $desc)) (result nullref)
  ;; YESTNH-NEXT:  (local $2 anyref)
  ;; YESTNH-NEXT:  (local $3 (ref $desc))
  ;; YESTNH-NEXT:  (drop
  ;; YESTNH-NEXT:   (block $block (result (ref any))
  ;; YESTNH-NEXT:    (return
  ;; YESTNH-NEXT:     (block (result nullref)
  ;; YESTNH-NEXT:      (local.set $2
  ;; YESTNH-NEXT:       (block (result anyref)
  ;; YESTNH-NEXT:        (call $effect)
  ;; YESTNH-NEXT:        (local.get $ref)
  ;; YESTNH-NEXT:       )
  ;; YESTNH-NEXT:      )
  ;; YESTNH-NEXT:      (local.set $3
  ;; YESTNH-NEXT:       (ref.as_non_null
  ;; YESTNH-NEXT:        (block (result (ref null $desc))
  ;; YESTNH-NEXT:         (call $effect)
  ;; YESTNH-NEXT:         (local.get $desc)
  ;; YESTNH-NEXT:        )
  ;; YESTNH-NEXT:       )
  ;; YESTNH-NEXT:      )
  ;; YESTNH-NEXT:      (br_on_cast_fail $block anyref nullref
  ;; YESTNH-NEXT:       (local.get $2)
  ;; YESTNH-NEXT:      )
  ;; YESTNH-NEXT:     )
  ;; YESTNH-NEXT:    )
  ;; YESTNH-NEXT:   )
  ;; YESTNH-NEXT:  )
  ;; YESTNH-NEXT:  (unreachable)
  ;; YESTNH-NEXT: )
  ;; NO_TNH:      (func $branch-fail-nullable-effect (type $2) (param $ref anyref) (param $desc (ref null $desc)) (result nullref)
  ;; NO_TNH-NEXT:  (local $2 anyref)
  ;; NO_TNH-NEXT:  (local $3 (ref $desc))
  ;; NO_TNH-NEXT:  (drop
  ;; NO_TNH-NEXT:   (block $block (result (ref any))
  ;; NO_TNH-NEXT:    (return
  ;; NO_TNH-NEXT:     (block (result nullref)
  ;; NO_TNH-NEXT:      (local.set $2
  ;; NO_TNH-NEXT:       (block (result anyref)
  ;; NO_TNH-NEXT:        (call $effect)
  ;; NO_TNH-NEXT:        (local.get $ref)
  ;; NO_TNH-NEXT:       )
  ;; NO_TNH-NEXT:      )
  ;; NO_TNH-NEXT:      (local.set $3
  ;; NO_TNH-NEXT:       (ref.as_non_null
  ;; NO_TNH-NEXT:        (block (result (ref null $desc))
  ;; NO_TNH-NEXT:         (call $effect)
  ;; NO_TNH-NEXT:         (local.get $desc)
  ;; NO_TNH-NEXT:        )
  ;; NO_TNH-NEXT:       )
  ;; NO_TNH-NEXT:      )
  ;; NO_TNH-NEXT:      (br_on_cast_fail $block anyref nullref
  ;; NO_TNH-NEXT:       (local.get $2)
  ;; NO_TNH-NEXT:      )
  ;; NO_TNH-NEXT:     )
  ;; NO_TNH-NEXT:    )
  ;; NO_TNH-NEXT:   )
  ;; NO_TNH-NEXT:  )
  ;; NO_TNH-NEXT:  (unreachable)
  ;; NO_TNH-NEXT: )
  (func $branch-fail-nullable-effect (param $ref anyref) (param $desc (ref null $desc)) (result (ref null $struct))
    (drop
      (block $block (result anyref)
        (return
          ;; Same, but with effects.
          (br_on_cast_desc_fail $block anyref (ref null $struct)
            (block (result anyref)
              (call $effect)
              (local.get $ref)
            )
            (block (result (ref null $desc))
              (call $effect)
              (local.get $desc)
            )
          )
        )
      )
    )
    (unreachable)
  )

  ;; YESTNH:      (func $branch-fail-non-nullable (type $2) (param $ref anyref) (param $desc (ref null $desc)) (result nullref)
  ;; YESTNH-NEXT:  (drop
  ;; YESTNH-NEXT:   (block $block (result anyref)
  ;; YESTNH-NEXT:    (return
  ;; YESTNH-NEXT:     (block (result (ref none))
  ;; YESTNH-NEXT:      (br_on_cast_fail $block anyref (ref none)
  ;; YESTNH-NEXT:       (local.get $ref)
  ;; YESTNH-NEXT:      )
  ;; YESTNH-NEXT:     )
  ;; YESTNH-NEXT:    )
  ;; YESTNH-NEXT:   )
  ;; YESTNH-NEXT:  )
  ;; YESTNH-NEXT:  (unreachable)
  ;; YESTNH-NEXT: )
  ;; NO_TNH:      (func $branch-fail-non-nullable (type $2) (param $ref anyref) (param $desc (ref null $desc)) (result nullref)
  ;; NO_TNH-NEXT:  (local $2 (ref $desc))
  ;; NO_TNH-NEXT:  (drop
  ;; NO_TNH-NEXT:   (block $block (result anyref)
  ;; NO_TNH-NEXT:    (return
  ;; NO_TNH-NEXT:     (block (result (ref none))
  ;; NO_TNH-NEXT:      (local.set $2
  ;; NO_TNH-NEXT:       (ref.as_non_null
  ;; NO_TNH-NEXT:        (local.get $desc)
  ;; NO_TNH-NEXT:       )
  ;; NO_TNH-NEXT:      )
  ;; NO_TNH-NEXT:      (br_on_cast_fail $block anyref (ref none)
  ;; NO_TNH-NEXT:       (local.get $ref)
  ;; NO_TNH-NEXT:      )
  ;; NO_TNH-NEXT:     )
  ;; NO_TNH-NEXT:    )
  ;; NO_TNH-NEXT:   )
  ;; NO_TNH-NEXT:  )
  ;; NO_TNH-NEXT:  (unreachable)
  ;; NO_TNH-NEXT: )
  (func $branch-fail-non-nullable (param $ref anyref) (param $desc (ref null $desc)) (result (ref null $struct))
    (drop
      (block $block (result anyref)
        (return
          ;; Same, but now without admitting null.
          (br_on_cast_desc_fail $block anyref (ref $struct)
            (local.get $ref)
            (local.get $desc)
          )
        )
      )
    )
    (unreachable)
  )

  ;; YESTNH:      (func $branch-fail-non-nullable-desc (type $3) (param $ref anyref) (param $desc (ref $desc)) (result nullref)
  ;; YESTNH-NEXT:  (drop
  ;; YESTNH-NEXT:   (block $block (result anyref)
  ;; YESTNH-NEXT:    (return
  ;; YESTNH-NEXT:     (block (result (ref none))
  ;; YESTNH-NEXT:      (br_on_cast_fail $block anyref (ref none)
  ;; YESTNH-NEXT:       (local.get $ref)
  ;; YESTNH-NEXT:      )
  ;; YESTNH-NEXT:     )
  ;; YESTNH-NEXT:    )
  ;; YESTNH-NEXT:   )
  ;; YESTNH-NEXT:  )
  ;; YESTNH-NEXT:  (unreachable)
  ;; YESTNH-NEXT: )
  ;; NO_TNH:      (func $branch-fail-non-nullable-desc (type $3) (param $ref anyref) (param $desc (ref $desc)) (result nullref)
  ;; NO_TNH-NEXT:  (drop
  ;; NO_TNH-NEXT:   (block $block (result anyref)
  ;; NO_TNH-NEXT:    (return
  ;; NO_TNH-NEXT:     (block (result (ref none))
  ;; NO_TNH-NEXT:      (br_on_cast_fail $block anyref (ref none)
  ;; NO_TNH-NEXT:       (local.get $ref)
  ;; NO_TNH-NEXT:      )
  ;; NO_TNH-NEXT:     )
  ;; NO_TNH-NEXT:    )
  ;; NO_TNH-NEXT:   )
  ;; NO_TNH-NEXT:  )
  ;; NO_TNH-NEXT:  (unreachable)
  ;; NO_TNH-NEXT: )
  (func $branch-fail-non-nullable-desc (param $ref anyref) (param $desc (ref $desc)) (result (ref null $struct))
    (drop
      (block $block (result anyref)
        (return
          ;; Same, but now the descriptor is additionally non-null.
          (br_on_cast_desc_fail $block anyref (ref $struct)
            (local.get $ref)
            (local.get $desc)
          )
        )
      )
    )
    (unreachable)
  )

  ;; YESTNH:      (func $branch-fail-non-nullable-effect (type $3) (param $ref anyref) (param $desc (ref $desc)) (result nullref)
  ;; YESTNH-NEXT:  (local $2 anyref)
  ;; YESTNH-NEXT:  (local $3 (ref $desc))
  ;; YESTNH-NEXT:  (drop
  ;; YESTNH-NEXT:   (block $block (result anyref)
  ;; YESTNH-NEXT:    (return
  ;; YESTNH-NEXT:     (block (result (ref none))
  ;; YESTNH-NEXT:      (local.set $2
  ;; YESTNH-NEXT:       (block (result anyref)
  ;; YESTNH-NEXT:        (call $effect)
  ;; YESTNH-NEXT:        (local.get $ref)
  ;; YESTNH-NEXT:       )
  ;; YESTNH-NEXT:      )
  ;; YESTNH-NEXT:      (local.set $3
  ;; YESTNH-NEXT:       (block (result (ref $desc))
  ;; YESTNH-NEXT:        (call $effect)
  ;; YESTNH-NEXT:        (local.get $desc)
  ;; YESTNH-NEXT:       )
  ;; YESTNH-NEXT:      )
  ;; YESTNH-NEXT:      (br_on_cast_fail $block anyref (ref none)
  ;; YESTNH-NEXT:       (local.get $2)
  ;; YESTNH-NEXT:      )
  ;; YESTNH-NEXT:     )
  ;; YESTNH-NEXT:    )
  ;; YESTNH-NEXT:   )
  ;; YESTNH-NEXT:  )
  ;; YESTNH-NEXT:  (unreachable)
  ;; YESTNH-NEXT: )
  ;; NO_TNH:      (func $branch-fail-non-nullable-effect (type $3) (param $ref anyref) (param $desc (ref $desc)) (result nullref)
  ;; NO_TNH-NEXT:  (local $2 anyref)
  ;; NO_TNH-NEXT:  (local $3 (ref $desc))
  ;; NO_TNH-NEXT:  (drop
  ;; NO_TNH-NEXT:   (block $block (result anyref)
  ;; NO_TNH-NEXT:    (return
  ;; NO_TNH-NEXT:     (block (result (ref none))
  ;; NO_TNH-NEXT:      (local.set $2
  ;; NO_TNH-NEXT:       (block (result anyref)
  ;; NO_TNH-NEXT:        (call $effect)
  ;; NO_TNH-NEXT:        (local.get $ref)
  ;; NO_TNH-NEXT:       )
  ;; NO_TNH-NEXT:      )
  ;; NO_TNH-NEXT:      (local.set $3
  ;; NO_TNH-NEXT:       (block (result (ref $desc))
  ;; NO_TNH-NEXT:        (call $effect)
  ;; NO_TNH-NEXT:        (local.get $desc)
  ;; NO_TNH-NEXT:       )
  ;; NO_TNH-NEXT:      )
  ;; NO_TNH-NEXT:      (br_on_cast_fail $block anyref (ref none)
  ;; NO_TNH-NEXT:       (local.get $2)
  ;; NO_TNH-NEXT:      )
  ;; NO_TNH-NEXT:     )
  ;; NO_TNH-NEXT:    )
  ;; NO_TNH-NEXT:   )
  ;; NO_TNH-NEXT:  )
  ;; NO_TNH-NEXT:  (unreachable)
  ;; NO_TNH-NEXT: )
  (func $branch-fail-non-nullable-effect (param $ref anyref) (param $desc (ref $desc)) (result (ref null $struct))
    (drop
      (block $block (result anyref)
        (return
          ;; Same, but with effects.
          (br_on_cast_desc_fail $block anyref (ref $struct)
            (block (result anyref)
              (call $effect)
              (local.get $ref)
            )
            (block (result (ref $desc))
              (call $effect)
              (local.get $desc)
            )
          )
        )
      )
    )
    (unreachable)
  )
)
