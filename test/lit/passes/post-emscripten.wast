;; NOTE: Assertions have been generated by update_lit_checks.py --all-items and should not be edited.
;; NOTE: This test was ported using port_test.py and could be cleaned up.

;; RUN: foreach %s %t wasm-opt --post-emscripten -S -o - | filecheck %s

(module
  (type $0 (func (param i32)))
  ;; CHECK:      (type $i32_f32_=>_none (func (param i32 f32)))

  ;; CHECK:      (type $i32_i32_f32_=>_none (func (param i32 i32 f32)))

  ;; CHECK:      (type $none_=>_none (func))

  ;; CHECK:      (import "env" "invoke_vif" (func $invoke_vif (param i32 i32 f32)))
  (import "env" "invoke_vif" (func $invoke_vif (param i32 i32 f32)))
  (memory 256 256)
  (table 7 7 funcref)
  (elem (i32.const 1) $exc $other_safe $other_unsafe $deep_safe $deep_unsafe)
  ;; CHECK:      (memory $0 256 256)

  ;; CHECK:      (table $0 7 7 funcref)

  ;; CHECK:      (elem (i32.const 1) $exc $other_safe $other_unsafe $deep_safe $deep_unsafe)

  ;; CHECK:      (func $exc
  ;; CHECK-NEXT:  (call $other_safe
  ;; CHECK-NEXT:   (i32.const 42)
  ;; CHECK-NEXT:   (f32.const 3.141590118408203)
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT:  (call $other_unsafe
  ;; CHECK-NEXT:   (i32.const 55)
  ;; CHECK-NEXT:   (f32.const 2.1828181743621826)
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT:  (call $deep_safe
  ;; CHECK-NEXT:   (i32.const 100)
  ;; CHECK-NEXT:   (f32.const 1.1109999418258667)
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT:  (call $deep_unsafe
  ;; CHECK-NEXT:   (i32.const 999)
  ;; CHECK-NEXT:   (f32.const 1.4140000343322754)
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT:  (call $invoke_vif
  ;; CHECK-NEXT:   (i32.add
  ;; CHECK-NEXT:    (i32.const 1)
  ;; CHECK-NEXT:    (i32.const 1)
  ;; CHECK-NEXT:   )
  ;; CHECK-NEXT:   (i32.const 42)
  ;; CHECK-NEXT:   (f32.const 3.141590118408203)
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT:  (call $invoke_vif
  ;; CHECK-NEXT:   (i32.const 0)
  ;; CHECK-NEXT:   (i32.const 42)
  ;; CHECK-NEXT:   (f32.const 3.141590118408203)
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT:  (call $invoke_vif
  ;; CHECK-NEXT:   (i32.const 1337)
  ;; CHECK-NEXT:   (i32.const 42)
  ;; CHECK-NEXT:   (f32.const 3.141590118408203)
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT: )
  (func $exc
    (call $invoke_vif
      (i32.const 2) ;; other_safe()
      (i32.const 42)
      (f32.const 3.14159)
    )
    (call $invoke_vif
      (i32.const 3) ;; other_unsafe()
      (i32.const 55)
      (f32.const 2.18281828)
    )
    (call $invoke_vif
      (i32.const 4) ;; deep_safe()
      (i32.const 100)
      (f32.const 1.111)
    )
    (call $invoke_vif
      (i32.const 5) ;; deep_unsafe()
      (i32.const 999)
      (f32.const 1.414)
    )
    (call $invoke_vif
      (i32.add (i32.const 1) (i32.const 1)) ;; nonconstant
      (i32.const 42)
      (f32.const 3.14159)
    )
    ;; there is no function at index 0, so this cannot be optimized
    (call $invoke_vif
      (i32.const 0)
      (i32.const 42)
      (f32.const 3.14159)
    )
    ;; there is no function at index 1337, so this cannot be optimized
    (call $invoke_vif
      (i32.const 1337)
      (i32.const 42)
      (f32.const 3.14159)
    )
  )
  ;; CHECK:      (func $other_safe (param $0 i32) (param $1 f32)
  ;; CHECK-NEXT:  (nop)
  ;; CHECK-NEXT: )
  (func $other_safe (param i32) (param f32)
  )
  ;; CHECK:      (func $other_unsafe (param $0 i32) (param $1 f32)
  ;; CHECK-NEXT:  (nop)
  ;; CHECK-NEXT: )
  (func $other_unsafe (param i32) (param f32)
  )
  ;; CHECK:      (func $deep_safe (param $0 i32) (param $1 f32)
  ;; CHECK-NEXT:  (call $other_safe
  ;; CHECK-NEXT:   (unreachable)
  ;; CHECK-NEXT:   (unreachable)
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT: )
  (func $deep_safe (param i32) (param f32)
    (call $other_safe (unreachable) (unreachable))
  )
  ;; CHECK:      (func $deep_unsafe (param $0 i32) (param $1 f32)
  ;; CHECK-NEXT:  (call $other_unsafe
  ;; CHECK-NEXT:   (unreachable)
  ;; CHECK-NEXT:   (unreachable)
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT: )
  (func $deep_unsafe (param i32) (param f32)
    (call $other_unsafe (unreachable) (unreachable))
  )
)
(module ;; no invokes
  ;; CHECK:      (type $none_=>_none (func))

  ;; CHECK:      (func $call
  ;; CHECK-NEXT:  (call $call)
  ;; CHECK-NEXT: )
  (func $call
    (call $call)
  )
)
(module ;; non-constant base for elem
  (type $0 (func (param i32)))
  ;; CHECK:      (type $i32_i32_f32_=>_none (func (param i32 i32 f32)))

  ;; CHECK:      (type $none_=>_none (func))

  ;; CHECK:      (type $i32_f32_=>_none (func (param i32 f32)))

  ;; CHECK:      (import "env" "glob" (global $glob i32))
  (import "env" "invoke_vif" (func $invoke_vif (param i32 i32 f32)))
  ;; CHECK:      (import "env" "invoke_vif" (func $invoke_vif (param i32 i32 f32)))
  (import "env" "glob" (global $glob i32)) ;; non-constant table offset
  (memory 256 256)
  (table 7 7 funcref)
  (elem (global.get $glob) $other_safe)
  ;; CHECK:      (memory $0 256 256)

  ;; CHECK:      (table $0 7 7 funcref)

  ;; CHECK:      (elem (global.get $glob) $other_safe)

  ;; CHECK:      (func $exc
  ;; CHECK-NEXT:  (call $invoke_vif
  ;; CHECK-NEXT:   (i32.const 3)
  ;; CHECK-NEXT:   (i32.const 42)
  ;; CHECK-NEXT:   (f32.const 3.141590118408203)
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT: )
  (func $exc
    (call $invoke_vif
      (i32.const 3) ;; other_safe()
      (i32.const 42)
      (f32.const 3.14159)
    )
  )
  ;; CHECK:      (func $other_safe (param $0 i32) (param $1 f32)
  ;; CHECK-NEXT:  (nop)
  ;; CHECK-NEXT: )
  (func $other_safe (param i32) (param f32)
  )
)
(module ;; indirect call in the invoke target, which we assume might throw
  ;; CHECK:      (type $none_=>_none (func))
  (type $none_=>_none (func))
  ;; CHECK:      (type $i32_i32_f32_=>_none (func (param i32 i32 f32)))

  ;; CHECK:      (type $i32_f32_=>_none (func (param i32 f32)))

  ;; CHECK:      (import "env" "glob" (global $glob i32))
  (import "env" "invoke_vif" (func $invoke_vif (param i32 i32 f32)))
  ;; CHECK:      (import "env" "invoke_vif" (func $invoke_vif (param i32 i32 f32)))
  (import "env" "glob" (global $glob i32)) ;; non-constant table offset
  (memory 256 256)
  (table 7 7 funcref)
  (elem (i32.const 0) $other_safe)
  ;; CHECK:      (memory $0 256 256)

  ;; CHECK:      (table $0 7 7 funcref)

  ;; CHECK:      (elem (i32.const 0) $other_safe)

  ;; CHECK:      (func $exc
  ;; CHECK-NEXT:  (call $invoke_vif
  ;; CHECK-NEXT:   (i32.const 0)
  ;; CHECK-NEXT:   (i32.const 42)
  ;; CHECK-NEXT:   (f32.const 3.141590118408203)
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT: )
  (func $exc
    (call $invoke_vif
      (i32.const 0) ;; other_safe()
      (i32.const 42)
      (f32.const 3.14159)
    )
  )
  ;; CHECK:      (func $other_safe (param $0 i32) (param $1 f32)
  ;; CHECK-NEXT:  (call_indirect (type $none_=>_none)
  ;; CHECK-NEXT:   (i32.const 0)
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT: )
  (func $other_safe (param i32) (param f32)
   (call_indirect (type $none_=>_none)
    (i32.const 0)
   )
  )
)
