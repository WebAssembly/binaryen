;; NOTE: Assertions have been generated by update_lit_checks.py --all-items and should not be edited.

;; Test code that can be partially inlined, with and without that option.
;;
;; This is similar to inlining_splitting.wast but focuses on testing that we
;; only partially inline when the commandline flag is provided.

;; RUN: foreach %s %t wasm-opt --inlining --optimize-level=3                          --all-features -S -o - | filecheck %s --check-prefix NORMAL_
;; RUN: foreach %s %t wasm-opt --inlining --optimize-level=3 --partial-inlining-ifs=1 --all-features -S -o - | filecheck %s --check-prefix PARTIAL

(module
  (import "a" "b" (func $import))

  ;; Pattern A: functions beginning with
  ;;
  ;;   if (simple) return;

  (func $pattern-A (param $x i32)
    ;; A function that does a quick check before any heavy work. We can outline
    ;; the heavy work, so that the condition can be inlined.
    ;;
    ;; This function (and others lower down that we also optimize) will vanish
    ;; in the output. Part of it will be inlined into its caller, below, and
    ;; the rest will be outlined into a new function with suffix "outlined".
    (if
      (local.get $x)
      (return)
    )
    (loop $l
      (call $import)
      (br $l)
    )
  )

  (func $call-pattern-A
    ;; Call the above function to verify that we can in fact inline it after
    ;; splitting. We should see each of these three calls replaced by inlined
    ;; code performing the if from $pattern-A, and depending on that
    ;; result they each call the outlined code that must *not* be inlined.
    ;;
    ;; Note that we must call more than once, otherwise given a single use we
    ;; will always inline the entire thing.
    (call $pattern-A (i32.const 1))
    (call $pattern-A (i32.const 2))
  )

  ;; Pattern B: functions containing
  ;;
  ;;   if (simple1) heavy-work-that-is-unreachable;
  ;;   if (simple..) heavy-work-that-is-unreachable;
  ;;   simplek

  (func $pattern-B (param $x i32) (result i32)
    (if
      (i32.eqz
        (local.get $x)
      )
      (block
        (call $import)
        (unreachable)
      )
    )
    (local.get $x)
  )

  (func $call-pattern-B
    (drop (call $error-if-null (ref.null any)))
    (drop (call $error-if-null (ref.null any)))
  )
)
