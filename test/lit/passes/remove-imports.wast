;; NOTE: Assertions have been generated by update_lit_checks.py --all-items and should not be edited.
;; NOTE: This test was ported using port_test.py and could be cleaned up.

;; RUN: foreach %s %t wasm-opt --remove-imports -S -o - | filecheck %s

(module
  (memory 1024 1024)
  ;; CHECK:      (type $FUNCSIG$v (func))
  (type $FUNCSIG$v (func))
  (type $FUNCSIG$i (func (result i32)))
  (type $FUNCSIG$d (func (result f64)))
  (import $waka "somewhere" "waka")
  (import $waka-ret "somewhere" "waka-ret" (result i32))
  (import $waka-ret-d "somewhere" "waka-ret-d" (result f64))
  (import $waka-sneaky "somewhere" "waka-sneaky")
  ;; CHECK:      (import "env" "table" (table $table 1 1 funcref))
  (import "env" "memBase" (global i32))
  ;; CHECK:      (import "env" "memBase" (global $gimport$0 i32))
  (import "env" "table" (table $table 1 1 funcref))
  (elem (i32.const 0) $waka-sneaky)
  ;; CHECK:      (import "somewhere" "waka-sneaky" (func $waka-sneaky))

  ;; CHECK:      (memory $0 1024 1024)

  ;; CHECK:      (elem (i32.const 0) $waka-sneaky)

  ;; CHECK:      (func $nada
  ;; CHECK-NEXT:  (nop)
  ;; CHECK-NEXT:  (drop
  ;; CHECK-NEXT:   (i32.const 0)
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT:  (drop
  ;; CHECK-NEXT:   (f64.const 0)
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT:  (call_indirect (type $FUNCSIG$v)
  ;; CHECK-NEXT:   (i32.const 0)
  ;; CHECK-NEXT:  )
  ;; CHECK-NEXT: )
  (func $nada (type $FUNCSIG$v)
    (call $waka)
    (drop
      (call $waka-ret)
    )
    (drop
      (call $waka-ret-d)
    )
    (call_indirect (i32.const 0))
  )
)
