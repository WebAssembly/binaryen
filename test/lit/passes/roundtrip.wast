;; NOTE: Assertions have been generated by update_lit_checks.py and should not be edited.
;; RUN: wasm-opt %s -all --roundtrip -S -o - | filecheck %s

(module
 ;; CHECK:      (type $none (func))
 (type $none (func))
 ;; CHECK:      (func $foo (type $none)
 ;; CHECK-NEXT:  (local $0 (tuple funcref (ref $none)))
 ;; CHECK-NEXT:  (local $1 funcref)
 ;; CHECK-NEXT:  (local.set $0
 ;; CHECK-NEXT:   (block $label$1 (type $1) (result funcref (ref $none))
 ;; CHECK-NEXT:    (tuple.make 2
 ;; CHECK-NEXT:     (ref.null nofunc)
 ;; CHECK-NEXT:     (ref.func $foo)
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (drop
 ;; CHECK-NEXT:   (block (result funcref)
 ;; CHECK-NEXT:    (local.set $1
 ;; CHECK-NEXT:     (tuple.extract 2 0
 ;; CHECK-NEXT:      (local.get $0)
 ;; CHECK-NEXT:     )
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:    (drop
 ;; CHECK-NEXT:     (tuple.extract 2 1
 ;; CHECK-NEXT:      (local.get $0)
 ;; CHECK-NEXT:     )
 ;; CHECK-NEXT:    )
 ;; CHECK-NEXT:    (local.get $1)
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT: )
 (func $foo
  (tuple.drop 2
   ;; a tuple type with a non-nullable element, that must be carefully handled
   (block $block (result funcref (ref $none))
    (tuple.make 2
     (ref.null func)
     (ref.func $foo)
    )
   )
  )
 )

 ;; CHECK:      (func $string_view_casts (type $2) (param $x stringview_wtf8) (param $y stringview_wtf16) (param $z stringview_iter)
 ;; CHECK-NEXT:  (drop
 ;; CHECK-NEXT:   (ref.as_non_null
 ;; CHECK-NEXT:    (local.get $x)
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (drop
 ;; CHECK-NEXT:   (ref.as_non_null
 ;; CHECK-NEXT:    (local.get $y)
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (drop
 ;; CHECK-NEXT:   (ref.as_non_null
 ;; CHECK-NEXT:    (local.get $z)
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (drop
 ;; CHECK-NEXT:   (local.get $x)
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (drop
 ;; CHECK-NEXT:   (local.get $y)
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (drop
 ;; CHECK-NEXT:   (local.get $z)
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT: )
 (func $string_view_casts
  ;; ref.cast of string views is not allowed in binaries: replace with
  ;; ref.as_non_null, or remove if it is a no-op.
  (param $x (ref null stringview_wtf8))
  (param $y (ref null stringview_wtf16))
  (param $z (ref null stringview_iter))
  ;; Here we still need a cast to non-null.
  (drop
   (ref.cast (ref stringview_wtf8)
    (local.get $x)
   )
  )
  (drop
   (ref.cast (ref stringview_wtf16)
    (local.get $y)
   )
  )
  (drop
   (ref.cast (ref stringview_iter)
    (local.get $z)
   )
  )
  ;; Here we do not need the cast.
  (drop
   (ref.cast (ref null stringview_wtf8)
    (local.get $x)
   )
  )
  (drop
   (ref.cast (ref null stringview_wtf16)
    (local.get $y)
   )
  )
  (drop
   (ref.cast (ref null stringview_iter)
    (local.get $z)
   )
  )
 )
)
