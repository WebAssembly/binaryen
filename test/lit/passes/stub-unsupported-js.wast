;; NOTE: Assertions have been generated by update_lit_checks.py --all-items and should not be edited.
;; NOTE: This test was ported using port_test.py and could be cleaned up.

;; RUN: foreach %s %t wasm-opt --stub-unsupported-js -S -o - | filecheck %s

(module
 ;; CHECK:      (type $none_=>_f32 (func (result f32)))

 ;; CHECK:      (type $i64_=>_f32 (func (param i64) (result f32)))

 ;; CHECK:      (type $i32_=>_f32 (func (param i32) (result f32)))

 ;; CHECK:      (func $yes (param $x i64) (result f32)
 ;; CHECK-NEXT:  (drop
 ;; CHECK-NEXT:   (local.get $x)
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (f32.const 0)
 ;; CHECK-NEXT: )
 (func $yes (param $x i64) (result f32)
  (f32.convert_i64_u (local.get $x))
 )
 ;; CHECK:      (func $no (param $x i32) (result f32)
 ;; CHECK-NEXT:  (f32.convert_i32_u
 ;; CHECK-NEXT:   (local.get $x)
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT: )
 (func $no (param $x i32) (result f32)
  (f32.convert_i32_u (local.get $x))
 )
 ;; CHECK:      (func $yes-unreach (result f32)
 ;; CHECK-NEXT:  (unreachable)
 ;; CHECK-NEXT: )
 (func $yes-unreach (result f32)
  (f32.convert_i64_u (unreachable))
 )
 ;; CHECK:      (func $no-unreach (result f32)
 ;; CHECK-NEXT:  (f32.convert_i32_u
 ;; CHECK-NEXT:   (unreachable)
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT: )
 (func $no-unreach (result f32)
  (f32.convert_i32_u (unreachable))
 )
)
(module
 ;; CHECK:      (type $none_=>_f32 (func (result f32)))

 ;; CHECK:      (type $none_=>_none (func))
 (type $none_=>_none (func))
 (type $i64_=>_i32 (func (param $foo i64) (result i32)))
 ;; CHECK:      (type $none_=>_i32 (func (result i32)))

 ;; CHECK:      (table $0 2 2 funcref)
 (table $0 2 2 funcref)
 (elem (i32.const 1) $return-f32)
 ;; CHECK:      (elem (i32.const 1) $return-f32)

 ;; CHECK:      (func $return-f32 (result f32)
 ;; CHECK-NEXT:  (f32.const 3.141590118408203)
 ;; CHECK-NEXT: )
 (func $return-f32 (result f32)
  (f32.const 3.14159)
 )
 ;; CHECK:      (func $bad-indirect-call
 ;; CHECK-NEXT:  (drop
 ;; CHECK-NEXT:   (i32.const 1)
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT: )
 (func $bad-indirect-call
  (call_indirect (type $none_=>_none) ;; note how it's the wrong type
   (i32.const 1)
  )
 )
 ;; CHECK:      (func $bad-indirect-call-2 (result i32)
 ;; CHECK-NEXT:  (block
 ;; CHECK-NEXT:   (drop
 ;; CHECK-NEXT:    (i64.const 1234)
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:   (drop
 ;; CHECK-NEXT:    (i32.const 1)
 ;; CHECK-NEXT:   )
 ;; CHECK-NEXT:  )
 ;; CHECK-NEXT:  (i32.const 0)
 ;; CHECK-NEXT: )
 (func $bad-indirect-call-2 (result i32)
  (call_indirect (type $i64_=>_i32) ;; note how it's the wrong type
   (i64.const 1234)
   (i32.const 1)
  )
 )
)

