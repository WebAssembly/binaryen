;; NOTE: Assertions have been generated by update_lit_checks.py --all-items and should not be edited.

;; RUN: wasm-opt %s -all -o %t.text.wast -g -S
;; RUN: wasm-as %s -all -g -o %t.wasm
;; RUN: wasm-dis %t.wasm -all -o %t.bin.wast
;; RUN: wasm-as %s -all -o %t.nodebug.wasm
;; RUN: wasm-dis %t.nodebug.wasm -all -o %t.bin.nodebug.wast
;; RUN: cat %t.text.wast | filecheck %s --check-prefix=CHECK-TEXT
;; RUN: cat %t.bin.wast | filecheck %s --check-prefix=CHECK-BIN
;; RUN: cat %t.bin.nodebug.wast | filecheck %s --check-prefix=CHECK-BIN-NODEBUG

(module
  ;; CHECK-TEXT:      (type $0 (func))
  ;; CHECK-BIN:      (type $0 (func))
  ;; CHECK-BIN-NODEBUG:      (type $0 (func))
  (type $0 (func))
  (import "env" "table" (table 1 1 funcref))
  (elem (i32.const 0) $foo)
  ;; CHECK-TEXT:      (import "env" "table" (table $timport$0 1 1 funcref))

  ;; CHECK-TEXT:      (memory $0 0)
  ;; CHECK-BIN:      (import "env" "table" (table $timport$0 1 1 funcref))

  ;; CHECK-BIN:      (memory $0 0)
  ;; CHECK-BIN-NODEBUG:      (import "env" "table" (table $timport$0 1 1 funcref))

  ;; CHECK-BIN-NODEBUG:      (memory $0 0)
  (memory $0 0)

  ;; CHECK-TEXT:      (elem $0 (i32.const 0) $foo)

  ;; CHECK-TEXT:      (func $foo (type $0)
  ;; CHECK-TEXT-NEXT:  (nop)
  ;; CHECK-TEXT-NEXT: )
  ;; CHECK-BIN:      (elem $0 (i32.const 0) $foo)

  ;; CHECK-BIN:      (func $foo (type $0)
  ;; CHECK-BIN-NEXT:  (nop)
  ;; CHECK-BIN-NEXT: )
  (func $foo (type $0)
    (nop)
  )
)
;; CHECK-BIN-NODEBUG:      (elem $0 (i32.const 0) $0)

;; CHECK-BIN-NODEBUG:      (func $0 (type $0)
;; CHECK-BIN-NODEBUG-NEXT:  (nop)
;; CHECK-BIN-NODEBUG-NEXT: )
