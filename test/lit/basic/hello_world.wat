;; NOTE: Assertions have been generated by update_lit_checks.py --all-items and should not be edited.

;; RUN: wasm-opt %s -all -o %t.text.wat -g -S
;; RUN: wasm-as %s -all -g -o %t.wasm
;; RUN: wasm-dis %t.wasm -all -o %t.bin.wat
;; RUN: wasm-as %s -all -o %t.nodebug.wasm
;; RUN: wasm-dis %t.nodebug.wasm -all -o %t.bin.nodebug.wat
;; RUN: cat %t.text.wat | filecheck %s --check-prefix=CHECK-TEXT
;; RUN: cat %t.bin.wat | filecheck %s --check-prefix=CHECK-BIN
;; RUN: cat %t.bin.nodebug.wat | filecheck %s --check-prefix=CHECK-BIN-NODEBUG

(module
 ;; CHECK-TEXT:      (type $i32_i32_=>_i32 (func (param i32 i32) (result i32)))
 ;; CHECK-BIN:      (type $i32_i32_=>_i32 (func (param i32 i32) (result i32)))
 (type $i32_i32_=>_i32 (func (param i32 i32) (result i32)))
 ;; CHECK-TEXT:      (memory $0 256 256)
 ;; CHECK-BIN:      (memory $0 256 256)
 ;; CHECK-BIN-NODEBUG:      (type $0 (func (param i32 i32) (result i32)))

 ;; CHECK-BIN-NODEBUG:      (memory $0 256 256)
 (memory $0 256 256)
 ;; CHECK-TEXT:      (export "add" (func $add))
 ;; CHECK-BIN:      (export "add" (func $add))
 (export "add" (func $add))
 ;; CHECK-TEXT:      (func $add (type $i32_i32_=>_i32) (param $x i32) (param $y i32) (result i32)
 ;; CHECK-TEXT-NEXT:  (i32.add
 ;; CHECK-TEXT-NEXT:   (local.get $x)
 ;; CHECK-TEXT-NEXT:   (local.get $y)
 ;; CHECK-TEXT-NEXT:  )
 ;; CHECK-TEXT-NEXT: )
 ;; CHECK-BIN:      (func $add (type $i32_i32_=>_i32) (param $x i32) (param $y i32) (result i32)
 ;; CHECK-BIN-NEXT:  (i32.add
 ;; CHECK-BIN-NEXT:   (local.get $x)
 ;; CHECK-BIN-NEXT:   (local.get $y)
 ;; CHECK-BIN-NEXT:  )
 ;; CHECK-BIN-NEXT: )
 (func $add (param $x i32) (param $y i32) (result i32)
  (i32.add
   (local.get $x)
   (local.get $y)
  )
 )
)
;; CHECK-BIN-NODEBUG:      (export "add" (func $0))

;; CHECK-BIN-NODEBUG:      (func $0 (type $0) (param $0 i32) (param $1 i32) (result i32)
;; CHECK-BIN-NODEBUG-NEXT:  (i32.add
;; CHECK-BIN-NODEBUG-NEXT:   (local.get $0)
;; CHECK-BIN-NODEBUG-NEXT:   (local.get $1)
;; CHECK-BIN-NODEBUG-NEXT:  )
;; CHECK-BIN-NODEBUG-NEXT: )
