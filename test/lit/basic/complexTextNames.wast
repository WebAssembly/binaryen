;; NOTE: Assertions have been generated by update_lit_checks.py --all-items and should not be edited.

;; RUN: wasm-opt %s -all -o %t.text.wast -g -S
;; RUN: wasm-as %s -all -g -o %t.wasm
;; RUN: wasm-dis %t.wasm -all -o %t.bin.wast
;; RUN: wasm-as %s -all -o %t.nodebug.wasm
;; RUN: wasm-dis %t.nodebug.wasm -all -o %t.bin.nodebug.wast
;; RUN: cat %t.text.wast | filecheck %s --check-prefix=CHECK-TEXT
;; RUN: cat %t.bin.wast | filecheck %s --check-prefix=CHECK-BIN
;; RUN: cat %t.bin.nodebug.wast | filecheck %s --check-prefix=CHECK-BIN-NODEBUG

(module
  ;; CHECK-TEXT:      (type $0 (func))

  ;; CHECK-TEXT:      (func $foo\20\28.bar\29 (type $0)
  ;; CHECK-TEXT-NEXT:  (nop)
  ;; CHECK-TEXT-NEXT: )
  ;; CHECK-BIN:      (type $0 (func))

  ;; CHECK-BIN:      (func $foo\20\28.bar\29 (type $0)
  ;; CHECK-BIN-NEXT:  (nop)
  ;; CHECK-BIN-NEXT: )
  (func $foo\20\28.bar\29)

  ;; CHECK-TEXT:      (func $"zoo (.bar)" (type $0)
  ;; CHECK-TEXT-NEXT:  (call $foo\20\28.bar\29)
  ;; CHECK-TEXT-NEXT: )
  (func $"zoo (.bar)" (call $foo\20\28.bar\29))
)
;; CHECK-BIN:      (func $zoo\20\28.bar\29 (type $0)
;; CHECK-BIN-NEXT:  (call $foo\20\28.bar\29)
;; CHECK-BIN-NEXT: )

;; CHECK-BIN-NODEBUG:      (type $0 (func))

;; CHECK-BIN-NODEBUG:      (func $0 (type $0)
;; CHECK-BIN-NODEBUG-NEXT:  (nop)
;; CHECK-BIN-NODEBUG-NEXT: )

;; CHECK-BIN-NODEBUG:      (func $1 (type $0)
;; CHECK-BIN-NODEBUG-NEXT:  (call $0)
;; CHECK-BIN-NODEBUG-NEXT: )
