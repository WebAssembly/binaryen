;; NOTE: Assertions have been generated by update_lit_checks.py --all-items and should not be edited.

;; RUN: wasm-opt %s -all -o %t.text.wast -g -S
;; RUN: wasm-as %s -all -g -o %t.wasm
;; RUN: wasm-dis %t.wasm -all -o %t.bin.wast
;; RUN: wasm-as %s -all -o %t.nodebug.wasm
;; RUN: wasm-dis %t.nodebug.wasm -all -o %t.bin.nodebug.wast
;; RUN: cat %t.text.wast | filecheck %s --check-prefix=CHECK-TEXT
;; RUN: cat %t.bin.wast | filecheck %s --check-prefix=CHECK-BIN
;; RUN: cat %t.bin.nodebug.wast | filecheck %s --check-prefix=CHECK-BIN-NODEBUG

(module
 (memory 1024 1024
  (segment 0 "hello, world")
 )

 ;; CHECK-TEXT:      (type $0 (func))

 ;; CHECK-TEXT:      (memory $0 1024 1024)

 ;; CHECK-TEXT:      (data $0 (i32.const 0) "hello, world")

 ;; CHECK-TEXT:      (func $memory.init (type $0)
 ;; CHECK-TEXT-NEXT:  (memory.init $0
 ;; CHECK-TEXT-NEXT:   (i32.const 512)
 ;; CHECK-TEXT-NEXT:   (i32.const 0)
 ;; CHECK-TEXT-NEXT:   (i32.const 12)
 ;; CHECK-TEXT-NEXT:  )
 ;; CHECK-TEXT-NEXT: )
 ;; CHECK-BIN:      (type $0 (func))

 ;; CHECK-BIN:      (memory $0 1024 1024)

 ;; CHECK-BIN:      (data $0 (i32.const 0) "hello, world")

 ;; CHECK-BIN:      (func $memory.init (type $0)
 ;; CHECK-BIN-NEXT:  (memory.init $0
 ;; CHECK-BIN-NEXT:   (i32.const 512)
 ;; CHECK-BIN-NEXT:   (i32.const 0)
 ;; CHECK-BIN-NEXT:   (i32.const 12)
 ;; CHECK-BIN-NEXT:  )
 ;; CHECK-BIN-NEXT: )
 (func $memory.init
  (memory.init 0
   (i32.const 512)
   (i32.const 0)
   (i32.const 12)
  )
 )

 ;; CHECK-TEXT:      (func $data.drop (type $0)
 ;; CHECK-TEXT-NEXT:  (data.drop $0)
 ;; CHECK-TEXT-NEXT: )
 ;; CHECK-BIN:      (func $data.drop (type $0)
 ;; CHECK-BIN-NEXT:  (data.drop $0)
 ;; CHECK-BIN-NEXT: )
 (func $data.drop
  (data.drop 0)
 )

 ;; CHECK-TEXT:      (func $memory.copy (type $0)
 ;; CHECK-TEXT-NEXT:  (memory.copy
 ;; CHECK-TEXT-NEXT:   (i32.const 512)
 ;; CHECK-TEXT-NEXT:   (i32.const 0)
 ;; CHECK-TEXT-NEXT:   (i32.const 12)
 ;; CHECK-TEXT-NEXT:  )
 ;; CHECK-TEXT-NEXT: )
 ;; CHECK-BIN:      (func $memory.copy (type $0)
 ;; CHECK-BIN-NEXT:  (memory.copy
 ;; CHECK-BIN-NEXT:   (i32.const 512)
 ;; CHECK-BIN-NEXT:   (i32.const 0)
 ;; CHECK-BIN-NEXT:   (i32.const 12)
 ;; CHECK-BIN-NEXT:  )
 ;; CHECK-BIN-NEXT: )
 (func $memory.copy
  (memory.copy
   (i32.const 512)
   (i32.const 0)
   (i32.const 12)
  )
 )

 ;; CHECK-TEXT:      (func $memory.fill (type $0)
 ;; CHECK-TEXT-NEXT:  (memory.fill
 ;; CHECK-TEXT-NEXT:   (i32.const 0)
 ;; CHECK-TEXT-NEXT:   (i32.const 42)
 ;; CHECK-TEXT-NEXT:   (i32.const 1024)
 ;; CHECK-TEXT-NEXT:  )
 ;; CHECK-TEXT-NEXT: )
 ;; CHECK-BIN:      (func $memory.fill (type $0)
 ;; CHECK-BIN-NEXT:  (memory.fill
 ;; CHECK-BIN-NEXT:   (i32.const 0)
 ;; CHECK-BIN-NEXT:   (i32.const 42)
 ;; CHECK-BIN-NEXT:   (i32.const 1024)
 ;; CHECK-BIN-NEXT:  )
 ;; CHECK-BIN-NEXT: )
 (func $memory.fill
  (memory.fill
   (i32.const 0)
   (i32.const 42)
   (i32.const 1024)
  )
 )
)
;; CHECK-BIN-NODEBUG:      (type $0 (func))

;; CHECK-BIN-NODEBUG:      (memory $0 1024 1024)

;; CHECK-BIN-NODEBUG:      (data $0 (i32.const 0) "hello, world")

;; CHECK-BIN-NODEBUG:      (func $0 (type $0)
;; CHECK-BIN-NODEBUG-NEXT:  (memory.init $0
;; CHECK-BIN-NODEBUG-NEXT:   (i32.const 512)
;; CHECK-BIN-NODEBUG-NEXT:   (i32.const 0)
;; CHECK-BIN-NODEBUG-NEXT:   (i32.const 12)
;; CHECK-BIN-NODEBUG-NEXT:  )
;; CHECK-BIN-NODEBUG-NEXT: )

;; CHECK-BIN-NODEBUG:      (func $1 (type $0)
;; CHECK-BIN-NODEBUG-NEXT:  (data.drop $0)
;; CHECK-BIN-NODEBUG-NEXT: )

;; CHECK-BIN-NODEBUG:      (func $2 (type $0)
;; CHECK-BIN-NODEBUG-NEXT:  (memory.copy
;; CHECK-BIN-NODEBUG-NEXT:   (i32.const 512)
;; CHECK-BIN-NODEBUG-NEXT:   (i32.const 0)
;; CHECK-BIN-NODEBUG-NEXT:   (i32.const 12)
;; CHECK-BIN-NODEBUG-NEXT:  )
;; CHECK-BIN-NODEBUG-NEXT: )

;; CHECK-BIN-NODEBUG:      (func $3 (type $0)
;; CHECK-BIN-NODEBUG-NEXT:  (memory.fill
;; CHECK-BIN-NODEBUG-NEXT:   (i32.const 0)
;; CHECK-BIN-NODEBUG-NEXT:   (i32.const 42)
;; CHECK-BIN-NODEBUG-NEXT:   (i32.const 1024)
;; CHECK-BIN-NODEBUG-NEXT:  )
;; CHECK-BIN-NODEBUG-NEXT: )
