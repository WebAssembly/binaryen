;; NOTE: Assertions have been generated by update_lit_checks.py --all-items and should not be edited.

;; RUN: wasm-opt %s -all -o %t.text.wast -g -S
;; RUN: wasm-as %s -all -g -o %t.wasm
;; RUN: wasm-dis %t.wasm -all -o %t.bin.wast
;; RUN: wasm-as %s -all -o %t.nodebug.wasm
;; RUN: wasm-dis %t.nodebug.wasm -all -o %t.bin.nodebug.wast
;; RUN: cat %t.text.wast | filecheck %s --check-prefix=CHECK-TEXT
;; RUN: cat %t.bin.wast | filecheck %s --check-prefix=CHECK-BIN
;; RUN: cat %t.bin.nodebug.wast | filecheck %s --check-prefix=CHECK-BIN-NODEBUG

;; Also check that if we emit a binary without custom descriptors enabled, the
;; types are generalized to be inexact.

;; RUN: wasm-opt %s -all --disable-custom-descriptors -g -o - | wasm-opt -all -S -o - \
;; RUN:     | filecheck %s --check-prefix=NO-EXACT

(module
  ;; CHECK-TEXT:      (type $foo (struct (field (exact anyref)) (field (ref exact any)) (field (ref null exact $foo)) (field (ref exact $foo))))
  ;; CHECK-BIN:      (type $foo (struct (field (exact anyref)) (field (ref exact any)) (field (ref null exact $foo)) (field (ref exact $foo))))
  ;; NO-EXACT:      (type $foo (struct (field anyref) (field (ref any)) (field (ref null $foo)) (field (ref $foo))))
  (type $foo (struct (field (exact anyref) (ref exact any) (ref null exact $foo) (ref exact $foo))))


  ;; CHECK-TEXT:      (import "" "g1" (global $g1 (exact anyref)))
  ;; CHECK-BIN:      (import "" "g1" (global $g1 (exact anyref)))
  ;; NO-EXACT:      (import "" "g1" (global $g1 anyref))
  (import "" "g1" (global $g1 (exact anyref)))

  ;; CHECK-TEXT:      (import "" "g2" (global $g2 (ref exact any)))
  ;; CHECK-BIN:      (import "" "g2" (global $g2 (ref exact any)))
  ;; NO-EXACT:      (import "" "g2" (global $g2 (ref any)))
  (import "" "g2" (global $g2 (ref exact any)))

  ;; CHECK-TEXT:      (import "" "g3" (global $g3 (ref null exact $foo)))
  ;; CHECK-BIN:      (import "" "g3" (global $g3 (ref null exact $foo)))
  ;; NO-EXACT:      (import "" "g3" (global $g3 (ref null $foo)))
  (import "" "g3" (global $g3 (ref null exact $foo)))

  ;; CHECK-TEXT:      (import "" "g4" (global $g4 (ref exact $foo)))
  ;; CHECK-BIN:      (import "" "g4" (global $g4 (ref exact $foo)))
  ;; NO-EXACT:      (import "" "g4" (global $g4 (ref $foo)))
  (import "" "g4" (global $g4 (ref exact $foo)))
)
;; CHECK-BIN-NODEBUG:      (type $0 (struct (field (exact anyref)) (field (ref exact any)) (field (ref null exact $0)) (field (ref exact $0))))

;; CHECK-BIN-NODEBUG:      (import "" "g1" (global $gimport$0 (exact anyref)))

;; CHECK-BIN-NODEBUG:      (import "" "g2" (global $gimport$1 (ref exact any)))

;; CHECK-BIN-NODEBUG:      (import "" "g3" (global $gimport$2 (ref null exact $0)))

;; CHECK-BIN-NODEBUG:      (import "" "g4" (global $gimport$3 (ref exact $0)))
