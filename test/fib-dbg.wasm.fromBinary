(module
 (type $0 (func (param i32 i32)))
 (type $1 (func (param i32) (result i32)))
 (type $2 (func (result i32)))
 (type $3 (func (param i32)))
 (type $4 (func))
 (import "env" "DYNAMICTOP_PTR" (global $import$0 i32))
 (import "env" "tempDoublePtr" (global $import$1 i32))
 (import "env" "ABORT" (global $import$2 i32))
 (import "env" "STACKTOP" (global $import$3 i32))
 (import "env" "STACK_MAX" (global $import$4 i32))
 (import "env" "gb" (global $import$5 i32))
 (import "env" "fb" (global $import$6 i32))
 (import "global" "NaN" (global $import$7 f64))
 (import "global" "Infinity" (global $import$8 f64))
 (import "env" "memory" (memory $0 256 256))
 (import "env" "table" (table 0 0 anyfunc))
 (import "env" "memoryBase" (global $import$11 i32))
 (import "env" "tableBase" (global $import$12 i32))
 (global $global$0 (mut i32) (get_global $import$0))
 (global $global$1 (mut i32) (get_global $import$1))
 (global $global$2 (mut i32) (get_global $import$2))
 (global $global$3 (mut i32) (get_global $import$3))
 (global $global$4 (mut i32) (get_global $import$4))
 (global $global$5 (mut i32) (get_global $import$5))
 (global $global$6 (mut i32) (get_global $import$6))
 (global $global$7 (mut i32) (i32.const 0))
 (global $global$8 (mut i32) (i32.const 0))
 (global $global$9 (mut i32) (i32.const 0))
 (global $global$10 (mut i32) (i32.const 0))
 (global $global$11 (mut f64) (get_global $import$7))
 (global $global$12 (mut f64) (get_global $import$8))
 (global $global$13 (mut i32) (i32.const 0))
 (global $global$14 (mut i32) (i32.const 0))
 (global $global$15 (mut i32) (i32.const 0))
 (global $global$16 (mut i32) (i32.const 0))
 (global $global$17 (mut f64) (f64.const 0))
 (global $global$18 (mut i32) (i32.const 0))
 (global $global$19 (mut i32) (i32.const 0))
 (global $global$20 (mut i32) (i32.const 0))
 (global $global$21 (mut f64) (f64.const 0))
 (global $global$22 (mut i32) (i32.const 0))
 (global $global$23 (mut f64) (f64.const 0))
 (export "setThrew" (func $setThrew))
 (export "runPostSets" (func $runPostSets))
 (export "establishStackSpace" (func $establishStackSpace))
 (export "stackSave" (func $stackSave))
 (export "stackRestore" (func $stackRestore))
 (export "_fib" (func $_fib))
 (export "stackAlloc" (func $stackAlloc))
 (func $stackAlloc (type $1) (param $var$0 i32) (result i32)
  (local $var$1 i32)
  (block $label$0
   (set_local $var$1
    (get_global $global$3)
   )
   (set_global $global$3
    (i32.add
     (get_global $global$3)
     (get_local $var$0)
    )
   )
   (set_global $global$3
    (i32.and
     (i32.add
      (get_global $global$3)
      (i32.const 15)
     )
     (i32.const -16)
    )
   )
   (return
    (get_local $var$1)
   )
   (unreachable)
  )
  (unreachable)
 )
 (func $stackSave (type $2) (result i32)
  (return
   (get_global $global$3)
  )
 )
 (func $stackRestore (type $3) (param $var$0 i32)
  (set_global $global$3
   (get_local $var$0)
  )
 )
 (func $establishStackSpace (type $0) (param $var$0 i32) (param $var$1 i32)
  (block $label$0
   (set_global $global$3
    (get_local $var$0)
   )
   (set_global $global$4
    (get_local $var$1)
   )
  )
 )
 (func $setThrew (type $0) (param $var$0 i32) (param $var$1 i32)
  (if
   (i32.eq
    (get_global $global$7)
    (i32.const 0)
   )
   (block $label$0
    (set_global $global$7
     (get_local $var$0)
    )
    (set_global $global$8
     (get_local $var$1)
    )
   )
  )
 )
 (func $_fib (type $1) (param $var$0 i32) (result i32)
  (local $var$1 i32)
  (local $var$2 i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $var$11 i32)
  ;;@ fib.c:8:0
  (block $label$0
   (set_local $var$11
    (get_global $global$3)
   )
   ;;@ fib.c:3:0
   (set_local $var$6
    (i32.gt_s
     (get_local $var$0)
     (i32.const 0)
    )
   )
   ;;@ fib.c:8:0
   (if
    ;;@ fib.c:3:0
    (get_local $var$6)
    (block $label$1
     (set_local $var$1
      (i32.const 0)
     )
     (set_local $var$5
      (i32.const 1)
     )
     (set_local $var$8
      (i32.const 0)
     )
    )
    (block $label$2
     (set_local $var$4
      (i32.const 1)
     )
     ;;@ fib.c:8:0
     (return
      (get_local $var$4)
     )
    )
   )
   ;;@ fib.c:3:0
   (loop $label$3
    (block $label$4
     ;;@ fib.c:4:0
     (set_local $var$3
      (i32.add
       (get_local $var$5)
       (get_local $var$1)
      )
     )
     ;;@ fib.c:3:0
     (set_local $var$9
      (i32.add
       (get_local $var$8)
       (i32.const 1)
      )
     )
     (set_local $var$7
      (i32.eq
       (get_local $var$9)
       (get_local $var$0)
      )
     )
     (if
      (get_local $var$7)
      (block $label$5
       (set_local $var$4
        (get_local $var$3)
       )
       (br $label$4)
      )
      (block $label$6
       (set_local $var$2
        (get_local $var$5)
       )
       (set_local $var$5
        (get_local $var$3)
       )
       (set_local $var$8
        (get_local $var$9)
       )
       (set_local $var$1
        (get_local $var$2)
       )
      )
     )
     (br $label$3)
    )
   )
   ;;@ fib.c:8:0
   (return
    (get_local $var$4)
   )
   (unreachable)
   (unreachable)
  )
  (unreachable)
 )
 (func $runPostSets (type $4)
  (local $var$0 i32)
  (nop)
 )
 ;; custom section "sourceMappingURL", size 35
)

