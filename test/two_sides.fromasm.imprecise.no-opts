(module
 (import "env" "memory" (memory $0 256 256))
 (import "env" "table" (table 0 0 anyfunc))
 (import "env" "memoryBase" (global $memoryBase i32))
 (import "env" "tableBase" (global $tableBase i32))
 (export "_test" (func $_test))
 (func $_test (param $i1 i32) (param $i2 i32) (param $i3 i32) (param $i4 i32) (param $i5 i32) (result i32)
  (local $d6 f64)
  (if
   (i32.eqz
    (get_local $i5)
   )
   (block
    (set_local $d6
     (f64.convert_s/i32
      (i32.mul
       (get_local $i4)
       (get_local $i3)
      )
     )
    )
    (set_local $d6
     (f64.mul
      (f64.add
       (f64.convert_s/i32
        (get_local $i3)
       )
       (get_local $d6)
      )
      (f64.add
       (f64.convert_s/i32
        (get_local $i4)
       )
       (get_local $d6)
      )
     )
    )
    (set_local $i5
     (i32.trunc_s/f64
      (get_local $d6)
     )
    )
    (return
     (get_local $i5)
    )
   )
   (block
    (set_local $d6
     (f64.convert_s/i32
      (i32.mul
       (get_local $i2)
       (get_local $i1)
      )
     )
    )
    (set_local $d6
     (f64.mul
      (f64.add
       (f64.convert_s/i32
        (get_local $i3)
       )
       (get_local $d6)
      )
      (f64.add
       (get_local $d6)
       (f64.convert_s/i32
        (get_local $i4)
       )
      )
     )
    )
    (set_local $i5
     (i32.trunc_s/f64
      (get_local $d6)
     )
    )
    (return
     (get_local $i5)
    )
   )
  )
  (return
   (i32.const 0)
  )
 )
)
