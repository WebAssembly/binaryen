;; Test TypeBuilder
Before setting heap types:
(ref $sig) => (; temp ;) (ref $func.0)
(ref $struct) => (; temp ;) (ref $func.0)
(ref $array) => (; temp ;) (ref $func.0)
(ref null $array) => (; temp ;) (ref null $func.0)
(rtt 0 $array) => (; temp ;) (rtt 0 $func.0)

After setting heap types:
(ref $sig) => (; temp ;) (ref $func.0)
(ref $struct) => (; temp ;) (ref $struct.0)
(ref $array) => (; temp ;) (ref $array.0)
(ref null $array) => (; temp ;) (ref null $array.0)
(rtt 0 $array) => (; temp ;) (rtt 0 $array.0)

After building types:
(ref $sig) => (ref $func.0)
(ref $struct) => (ref $struct.0)
(ref $array) => (ref $array.0)
(ref null $array) => (ref null $array.0)
(rtt 0 $array) => (rtt 0 $array.0)

;; Test canonicalization
;; Test basic
;; Test canonical signatures
;; Test recursive types
(func_subtype (result (ref null $func.0)) func)

(func_subtype (result (ref null $func.0)) func)
(func_subtype (result (ref null $func.0)) func)

(func_subtype (result (ref null $func.0)) func)
(func_subtype (result (ref null $func.0)) func)
(func_subtype (result (ref null $func.0)) func)
(func_subtype (result (ref null $func.0)) func)
(func_subtype (result (ref null $func.0)) func)

(func_subtype (result (ref null $func.0) (ref null $func.1)) func)
(func_subtype (result (ref null $func.0) (ref null $func.1)) func)
(func_subtype func)
(func_subtype func)
(func_subtype (result (ref null $func.0)) func)
(func_subtype (result (ref null $func.0)) func)

(func_subtype (result (ref null $func.0)) func)
(func_subtype (result (ref null $func.0)) func)

;; Test subtyping
;; Test TypeBuilder
Before setting heap types:
(ref $sig) => (; temp ;) (ref $func.0)
(ref $struct) => (; temp ;) (ref $func.0)
(ref $array) => (; temp ;) (ref $func.0)
(ref null $array) => (; temp ;) (ref null $func.0)
(rtt 0 $array) => (; temp ;) (rtt 0 $func.0)

After setting heap types:
(ref $sig) => (; temp ;) (ref $func.0)
(ref $struct) => (; temp ;) (ref $struct.0)
(ref $array) => (; temp ;) (ref $array.0)
(ref null $array) => (; temp ;) (ref null $array.0)
(rtt 0 $array) => (; temp ;) (rtt 0 $array.0)

After building types:
(ref $sig) => (ref $func.0)
(ref $struct) => (ref $struct.0)
(ref $array) => (ref $array.0)
(ref null $array) => (ref null $array.0)
(rtt 0 $array) => (rtt 0 $array.0)

;; Test canonicalization
;; Test basic
;; Test canonical signatures
;; Test recursive types
(func_subtype (result (ref null $func.0)) func)

(func_subtype (result (ref null $func.0)) func)
(func_subtype (result (ref null $func.0)) func)

(func_subtype (result (ref null $func.0)) func)
(func_subtype (result (ref null $func.0)) func)
(func_subtype (result (ref null $func.0)) func)
(func_subtype (result (ref null $func.0)) func)
(func_subtype (result (ref null $func.0)) func)

(func_subtype (result (ref null $func.0) (ref null $func.1)) func)
(func_subtype (result (ref null $func.0) (ref null $func.1)) func)
(func_subtype func)
(func_subtype func)
(func_subtype (result (ref null $func.0)) func)
(func_subtype (result (ref null $func.0)) func)

(func_subtype (result (ref null $func.0)) func)
(func_subtype (result (ref null $func.0)) func)

;; Test subtyping
