(module
 (type $0 (func (param i32) (result i32)))
 (type $1 (func (result i32)))
 (type $2 (func))
 (type $FUNCSIG$ii (func (param i32) (result i32)))
 (type $FUNCSIG$ij (func (param i64) (result i32)))
 (type $FUNCSIG$fifd (func (param i32 f32 f64) (result f32)))
 (type $FUNCSIG$fidd (func (param i32 f64 f64) (result f32)))
 (type $legaltype$puts2 (func (param i32 i32) (result i32)))
 (type $legaltype$invoke_ffd (func (param i32 f64 f64) (result f64)))
 (type $legaltype$invoke_ffd2 (func (param i32 f64 f64) (result f64)))
 (import "env" "puts" (func $puts1 (param i32) (result i32)))
 (import "env" "puts" (func $legalimport$puts2 (param i32 i32) (result i32)))
 (import "env" "invoke_ffd" (func $legalimport$invoke_ffd (param i32 f64 f64) (result f64)))
 (import "env" "invoke_ffd" (func $legalimport$invoke_ffd2 (param i32 f64 f64) (result f64)))
 (memory $0 2)
 (data (i32.const 568) "Hello, world\00")
 (table $0 1 1 funcref)
 (global $global$0 (mut i32) (i32.const 16384))
 (global $global$1 i32 (i32.const 66128))
 (global $global$2 i32 (i32.const 581))
 (export "memory" (memory $0))
 (export "__wasm_call_ctors" (func $__wasm_call_ctors))
 (export "main" (func $main))
 (export "__heap_base" (global $global$1))
 (export "__data_end" (global $global$2))
 (export "stackSave" (func $stackSave))
 (export "stackAlloc" (func $stackAlloc))
 (export "stackRestore" (func $stackRestore))
 (export "__growWasmMemory" (func $__growWasmMemory))
 (func $main (; 4 ;) (type $1) (result i32)
  (drop
   (call $puts1
    (i32.const 568)
   )
  )
  (i32.const 0)
 )
 (func $__wasm_call_ctors (; 5 ;) (type $2)
  (nop)
 )
 (func $stackSave (; 6 ;) (result i32)
  (global.get $global$0)
 )
 (func $stackAlloc (; 7 ;) (param $0 i32) (result i32)
  (local $1 i32)
  (global.set $global$0
   (local.tee $1
    (i32.and
     (i32.sub
      (global.get $global$0)
      (local.get $0)
     )
     (i32.const -16)
    )
   )
  )
  (local.get $1)
 )
 (func $stackRestore (; 8 ;) (param $0 i32)
  (global.set $global$0
   (local.get $0)
  )
 )
 (func $__growWasmMemory (; 9 ;) (param $newSize i32) (result i32)
  (grow_memory
   (local.get $newSize)
  )
 )
 (func $legalfunc$puts2 (; 10 ;) (param $0 i64) (result i32)
  (call $legalimport$puts2
   (i32.wrap_i64
    (local.get $0)
   )
   (i32.wrap_i64
    (i64.shr_u
     (local.get $0)
     (i64.const 32)
    )
   )
  )
 )
 (func $legalfunc$invoke_ffd (; 11 ;) (param $0 i32) (param $1 f32) (param $2 f64) (result f32)
  (f32.demote_f64
   (call $legalimport$invoke_ffd
    (local.get $0)
    (f64.promote_f32
     (local.get $1)
    )
    (local.get $2)
   )
  )
 )
 (func $legalfunc$invoke_ffd2 (; 12 ;) (param $0 i32) (param $1 f64) (param $2 f64) (result f32)
  (f32.demote_f64
   (call $legalimport$invoke_ffd2
    (local.get $0)
    (local.get $1)
    (local.get $2)
   )
  )
 )
)
(;
--BEGIN METADATA --
{
  "staticBump": 13,
  "tableSize": 1,
  "initializers": [
    "__wasm_call_ctors"
  ],
  "declares": [
    "puts"
  ],
  "externs": [
  ],
  "implementedFunctions": [
    "___wasm_call_ctors",
    "_main",
    "_stackSave",
    "_stackAlloc",
    "_stackRestore",
    "___growWasmMemory"
  ],
  "exports": [
    "memory",
    "__wasm_call_ctors",
    "main",
    "__heap_base",
    "__data_end",
    "stackSave",
    "stackAlloc",
    "stackRestore",
    "__growWasmMemory"
  ],
  "invokeFuncs": [
    "invoke_ffd"
  ]
}
-- END METADATA --
;)
