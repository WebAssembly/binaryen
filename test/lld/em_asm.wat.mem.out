(module
<<<<<<< HEAD
 (type $none_=>_i32 (func (result i32)))
 (type $i32_=>_i32 (func (param i32) (result i32)))
 (type $none_=>_none (func))
 (type $i32_=>_none (func (param i32)))
 (type $i32_i32_=>_none (func (param i32 i32)))
 (type $i32_i32_i32_=>_none (func (param i32 i32 i32)))
 (type $i32_i32_=>_i32 (func (param i32 i32) (result i32)))
 (type $i32_i32_i32_=>_i32 (func (param i32 i32 i32) (result i32)))
=======
 (type $0 (func (param i32 i32 i32) (result i32)))
 (type $1 (func))
 (type $2 (func (result i32)))
 (type $3 (func (param i32 i32) (result i32)))
 (type $FUNCSIG$iiii (func (param i32 i32 i32) (result i32)))
>>>>>>> 247884e68b30dedeb01457d6c7e50d4bba5e4abc
 (import "env" "emscripten_asm_const_iii" (func $emscripten_asm_const_iii (param i32 i32 i32) (result i32)))
 (memory $0 2)
 (table $0 1 1 funcref)
 (global $global$0 (mut i32) (i32.const 66208))
 (global $global$1 i32 (i32.const 658))
 (export "memory" (memory $0))
 (export "__wasm_call_ctors" (func $__wasm_call_ctors))
 (export "main" (func $main))
 (export "__data_end" (global $global$1))
 (export "stackSave" (func $stackSave))
 (export "stackAlloc" (func $stackAlloc))
 (export "stackRestore" (func $stackRestore))
 (export "__growWasmMemory" (func $__growWasmMemory))
 (func $__wasm_call_ctors (; 1 ;)
  (nop)
 )
 (func $__original_main (; 2 ;) (result i32)
  (local $0 i32)
  (global.set $global$0
   (local.tee $0
    (i32.sub
     (global.get $global$0)
     (i32.const 32)
    )
   )
  )
  (drop
   (call $emscripten_asm_const_iii
    (i32.const 568)
    (i32.const 601)
    (i32.const 0)
   )
  )
  (i64.store offset=16
   (local.get $0)
   (i64.const 115964117005)
  )
  (i32.store
   (local.get $0)
   (call $emscripten_asm_const_iii
    (i32.const 602)
    (i32.const 622)
    (i32.add
     (local.get $0)
<<<<<<< HEAD
     (i32.const 24)
    )
    (local.get $0)
   )
  )
  (global.set $global$0
   (i32.add
    (local.get $0)
    (i32.const 32)
   )
  )
  (i32.const 0)
 )
 (func $__em_asm_sig_builder::inner<>\20const\20__em_asm_sig_builder::__em_asm_sig<>\28\29 (; 3 ;) (result i32)
  (i32.const 0)
 )
 (func $__em_asm_sig_builder::inner<int\2c\20int>\20const\20__em_asm_sig_builder::__em_asm_sig<int\2c\20int>\28int\2c\20int\29 (; 4 ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (global.set $global$0
   (local.tee $3
    (i32.sub
     (global.get $global$0)
=======
>>>>>>> 247884e68b30dedeb01457d6c7e50d4bba5e4abc
     (i32.const 16)
    )
   )
  )
  (drop
   (call $emscripten_asm_const_iii
    (i32.const 625)
    (i32.const 656)
    (local.get $0)
   )
  )
  (global.set $global$0
   (i32.add
<<<<<<< HEAD
    (local.get $3)
    (i32.const 16)
   )
  )
 )
 (func $__em_asm_sig_builder::inner<int>\20const\20__em_asm_sig_builder::__em_asm_sig<int>\28int\29 (; 5 ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (global.set $global$0
   (local.tee $2
    (i32.sub
     (global.get $global$0)
     (i32.const 16)
    )
   )
  )
  (local.set $1
   (call $__em_asm_sig_builder::sig_char\28int\29
    (local.get $1)
   )
  )
  (i32.store8 offset=15
   (local.get $2)
   (i32.const 0)
  )
  (i32.store8 offset=14
   (local.get $2)
   (local.get $1)
  )
  (i32.store16 align=1
   (local.get $0)
   (i32.load16_u offset=14
    (local.get $2)
   )
  )
  (global.set $global$0
   (i32.add
    (local.get $2)
    (i32.const 16)
=======
    (local.get $0)
    (i32.const 32)
>>>>>>> 247884e68b30dedeb01457d6c7e50d4bba5e4abc
   )
  )
  (i32.const 0)
 )
<<<<<<< HEAD
 (func $__em_asm_sig_builder::sig_char\28int\29 (; 6 ;) (param $0 i32) (result i32)
  (i32.const 105)
 )
 (func $main (; 7 ;) (param $0 i32) (param $1 i32) (result i32)
=======
 (func $main (; 3 ;) (type $3) (param $0 i32) (param $1 i32) (result i32)
>>>>>>> 247884e68b30dedeb01457d6c7e50d4bba5e4abc
  (call $__original_main)
 )
 (func $stackSave (; 4 ;) (result i32)
  (global.get $global$0)
 )
 (func $stackAlloc (; 5 ;) (param $0 i32) (result i32)
  (local $1 i32)
  (global.set $global$0
   (local.tee $1
    (i32.and
     (i32.sub
      (global.get $global$0)
      (local.get $0)
     )
     (i32.const -16)
    )
   )
  )
  (local.get $1)
 )
 (func $stackRestore (; 6 ;) (param $0 i32)
  (global.set $global$0
   (local.get $0)
  )
 )
 (func $__growWasmMemory (; 7 ;) (param $newSize i32) (result i32)
  (memory.grow
   (local.get $newSize)
  )
 )
)
(;
--BEGIN METADATA --
{
  "asmConsts": {
    "568": ["{ Module.print(\"Hello world\"); }", ["iii"], [""]],
    "602": ["{ return $0 + $1; }", ["iii"], [""]],
    "625": ["{ Module.print(\"Got \" + $0); }", ["iii"], [""]]
  },
  "staticBump": 90,
  "tableSize": 1,
  "initializers": [
    "__wasm_call_ctors"
  ],
  "declares": [
  ],
  "externs": [
  ],
  "implementedFunctions": [
    "___wasm_call_ctors",
    "_main",
    "_stackSave",
    "_stackAlloc",
    "_stackRestore",
    "___growWasmMemory"
  ],
  "exports": [
    "__wasm_call_ctors",
    "main",
    "stackSave",
    "stackAlloc",
    "stackRestore",
    "__growWasmMemory"
  ],
  "namedGlobals": {
    "__data_end" : "658"
  },
  "invokeFuncs": [
  ],
  "features": [
  ],
  "mainReadsParams": 0
}
-- END METADATA --
;)
