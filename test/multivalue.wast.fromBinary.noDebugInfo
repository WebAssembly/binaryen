(module
 (type $none_=>_i32 (func (result i32)))
 (type $none_=>_i32_i32_i32 (func (result i32 i32 i32)))
 (func $0 (; 0 ;) (result i32 i32 i32)
  (tuple.make
   (i32.const 42)
   (i32.const 7)
   (i32.const 13)
  )
 )
 (func $1 (; 1 ;) (result i32)
  (local $0 (i32 i32 i32))
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local.set $3
   (tuple.extract 0
    (local.get $0)
   )
  )
  (drop
   (block (result i32)
    (local.set $2
     (tuple.extract 1
      (local.get $0)
     )
    )
    (drop
     (block (result i32)
      (local.set $1
       (tuple.extract 2
        (local.get $0)
       )
      )
      (local.set $0
       (call $0)
      )
      (local.get $1)
     )
    )
    (local.get $2)
   )
  )
  (local.get $3)
 )
 (func $2 (; 2 ;) (result i32)
  (local $0 i32)
  (local $1 (i32 i32 i32))
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (drop
   (block (result i32)
    (local.set $4
     (tuple.extract 0
      (local.get $1)
     )
    )
    (local.set $0
     (block (result i32)
      (local.set $3
       (tuple.extract 1
        (local.get $1)
       )
      )
      (drop
       (block (result i32)
        (local.set $2
         (tuple.extract 2
          (local.get $1)
         )
        )
        (local.set $1
         (call $0)
        )
        (local.get $2)
       )
      )
      (local.get $3)
     )
    )
    (local.get $4)
   )
  )
  (local.get $0)
 )
 (func $3 (; 3 ;) (result i32)
  (local $0 i32)
  (local $1 (i32 i32 i32))
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (drop
   (block (result i32)
    (local.set $4
     (tuple.extract 0
      (local.get $1)
     )
    )
    (drop
     (block (result i32)
      (local.set $3
       (tuple.extract 1
        (local.get $1)
       )
      )
      (local.set $0
       (block (result i32)
        (local.set $2
         (tuple.extract 2
          (local.get $1)
         )
        )
        (local.set $1
         (call $0)
        )
        (local.get $2)
       )
      )
      (local.get $3)
     )
    )
    (local.get $4)
   )
  )
  (local.get $0)
 )
 (func $4 (; 4 ;) (result i32 i32 i32)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 (i32 i32 i32))
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local.set $0
   (block (result i32)
    (local.set $7
     (tuple.extract 0
      (local.get $4)
     )
    )
    (local.set $1
     (block (result i32)
      (local.set $6
       (tuple.extract 1
        (local.get $4)
       )
      )
      (local.set $2
       (block (result i32)
        (local.set $5
         (tuple.extract 2
          (local.get $4)
         )
        )
        (local.set $4
         (call $0)
        )
        (local.get $5)
       )
      )
      (local.get $6)
     )
    )
    (local.get $7)
   )
  )
  (drop
   (block (result i32)
    (local.set $9
     (local.get $0)
    )
    (drop
     (block (result i32)
      (local.set $8
       (local.get $1)
      )
      (local.set $3
       (local.get $2)
      )
      (local.get $8)
     )
    )
    (local.get $9)
   )
  )
  (tuple.make
   (block (result i32)
    (local.set $14
     (local.get $3)
    )
    (drop
     (block (result i32)
      (local.set $11
       (local.get $0)
      )
      (local.set $3
       (block (result i32)
        (local.set $10
         (local.get $1)
        )
        (drop
         (local.get $2)
        )
        (local.get $10)
       )
      )
      (local.get $11)
     )
    )
    (local.get $14)
   )
   (local.get $3)
   (block (result i32)
    (local.set $13
     (local.get $0)
    )
    (drop
     (block (result i32)
      (local.set $12
       (local.get $1)
      )
      (drop
       (local.get $2)
      )
      (local.get $12)
     )
    )
    (local.get $13)
   )
  )
 )
)

