(module
 (type $FUNCSIG$id (func (param f64) (result i32)))
 (import "env" "memory" (memory $memory 256 256))
 (data (get_global $memoryBase) "two_sides.asm.js")
 (import "env" "memoryBase" (global $memoryBase i32))
 (import "asm2wasm" "f64-to-int" (func $f64-to-int (param f64) (result i32)))
 (global $tempRet0 (mut i32) (i32.const 0))
 (export "_test" (func $_test))
 (export "getTempRet0" (func $getTempRet0))
 (export "setTempRet0" (func $setTempRet0))
 (func $_test (; 1 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  (local $5 f64)
  (if (result i32)
   (get_local $4)
   (call $f64-to-int
    (f64.mul
     (f64.add
      (f64.convert_s/i32
       (get_local $2)
      )
      (tee_local $5
       (f64.convert_s/i32
        (i32.mul
         (get_local $1)
         (get_local $0)
        )
       )
      )
     )
     (f64.add
      (get_local $5)
      (f64.convert_s/i32
       (get_local $3)
      )
     )
    )
   )
   (call $f64-to-int
    (f64.mul
     (f64.add
      (f64.convert_s/i32
       (get_local $2)
      )
      (tee_local $5
       (f64.convert_s/i32
        (i32.mul
         (get_local $3)
         (get_local $2)
        )
       )
      )
     )
     (f64.add
      (f64.convert_s/i32
       (get_local $3)
      )
      (get_local $5)
     )
    )
   )
  )
 )
 (func $getTempRet0 (; 2 ;) (; has Stack IR ;) (result i32)
  (get_global $tempRet0)
 )
 (func $setTempRet0 (; 3 ;) (; has Stack IR ;) (param $0 i32)
  (set_global $tempRet0
   (get_local $0)
  )
 )
)
