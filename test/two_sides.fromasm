(module
  (memory 256 256)
  (export "memory" memory)
  (type $FUNCSIG$id (func (param f64) (result i32)))
  (import $f64-to-int "asm2wasm" "f64-to-int" (param f64) (result i32))
  (export "_test" $_test)
  (func $_test (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
    (local $5 f64)
    (if
      (get_local $4)
      (call_import $f64-to-int
        (f64.mul
          (f64.add
            (f64.convert_s/i32
              (get_local $2)
            )
            (set_local $5
              (f64.convert_s/i32
                (i32.mul
                  (get_local $1)
                  (get_local $0)
                )
              )
            )
          )
          (f64.add
            (get_local $5)
            (f64.convert_s/i32
              (get_local $3)
            )
          )
        )
      )
      (call_import $f64-to-int
        (f64.mul
          (f64.add
            (f64.convert_s/i32
              (get_local $2)
            )
            (set_local $5
              (f64.convert_s/i32
                (i32.mul
                  (get_local $3)
                  (get_local $2)
                )
              )
            )
          )
          (f64.add
            (f64.convert_s/i32
              (get_local $3)
            )
            (get_local $5)
          )
        )
      )
    )
  )
)
