(module
 (type $i32_i32_i32_i32_i32_=>_i32 (func (param i32 i32 i32 i32 i32) (result i32)))
 (type $f64_=>_i32 (func (param f64) (result i32)))
 (import "env" "memory" (memory $memory 256 256))
 (import "env" "table" (table $table 0 0 funcref))
 (import "env" "__memory_base" (global $__memory_base i32))
 (import "env" "__table_base" (global $__table_base i32))
 (export "_test" (func $_test))
 (func $f64-to-int (; 0 ;) (param $0 f64) (result i32)
  (if (result i32)
   (f64.ne
    (local.get $0)
    (local.get $0)
   )
   (i32.const -2147483648)
   (if (result i32)
    (f64.ge
     (local.get $0)
     (f64.const 2147483648)
    )
    (i32.const -2147483648)
    (if (result i32)
     (f64.le
      (local.get $0)
      (f64.const -2147483649)
     )
     (i32.const -2147483648)
     (i32.trunc_f64_s
      (local.get $0)
     )
    )
   )
  )
 )
 (func $_test (; 1 ;) (param $i1 i32) (param $i2 i32) (param $i3 i32) (param $i4 i32) (param $i5 i32) (result i32)
  (local $d6 f64)
  (if
   (i32.eqz
    (local.get $i5)
   )
   (block
    (local.set $d6
     (f64.convert_i32_s
      (i32.mul
       (local.get $i4)
       (local.get $i3)
      )
     )
    )
    (local.set $d6
     (f64.mul
      (f64.add
       (f64.convert_i32_s
        (local.get $i3)
       )
       (local.get $d6)
      )
      (f64.add
       (f64.convert_i32_s
        (local.get $i4)
       )
       (local.get $d6)
      )
     )
    )
    (local.set $i5
     (call $f64-to-int
      (local.get $d6)
     )
    )
    (return
     (local.get $i5)
    )
   )
   (block
    (local.set $d6
     (f64.convert_i32_s
      (i32.mul
       (local.get $i2)
       (local.get $i1)
      )
     )
    )
    (local.set $d6
     (f64.mul
      (f64.add
       (f64.convert_i32_s
        (local.get $i3)
       )
       (local.get $d6)
      )
      (f64.add
       (local.get $d6)
       (f64.convert_i32_s
        (local.get $i4)
       )
      )
     )
    )
    (local.set $i5
     (call $f64-to-int
      (local.get $d6)
     )
    )
    (return
     (local.get $i5)
    )
   )
  )
  (return
   (i32.const 0)
  )
 )
)
