(module
  (type $ii (func (param i32 i32)))
  (import "env" "memory" (memory $0 256))
  (import "env" "table" (table 1000 funcref))
  (import "env" "some-func" (func $some-func))
  (import "env" "some-collide" (func $some-collide))
  (data (i32.const 100) "hello, A!\n")
  (global $global-collide i32 (i32.const 0))
  (global $global-collide-mut (mut i32) (i32.const 0))
  (global $global-a i32 (i32.const 1))
  (elem (i32.const 10) $only-a $willCollide $some-func $some-collide $only-a)
  (export "exp-a" (func $only-a))
  (export "exp-collide" (func $only-a))
  (export "exp-collide2" (func $willCollide))
  (func $only-a
    (drop (i32.const 100))
    (call $only-a)
    (call $some-func)
    (call $some-collide)
    (call_indirect (type $ii)
      (i32.const 123)
      (i32.const 456)
      (i32.const 789)
    )
    (drop (global.get $global-collide))
    (drop (global.get $global-a))
    (global.set $global-collide-mut (i32.const 1234))
  )
  (func $willCollide
    (drop (i32.const 200))
    (call $willCollide)
  )
)

