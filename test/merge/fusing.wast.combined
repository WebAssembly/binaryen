(module
 (type $FUNCSIG$v (func))
 (type $FUNCSIG$v$0 (func))
 (import "env" "memory" (memory $0 256))
 (data (global.get $__memory_base) "")
 (import "env" "table" (table $0 0 funcref))
 (import "env" "memoryBase" (global $memoryBase i32))
 (import "env" "tableBase" (global $tableBase i32))
 (import "env" "__memory_base" (global $__memory_base i32))
 (import "env" "__table_base" (global $__table_base i32))
 (import "env" "memoryBase" (global $memoryBase$0 i32))
 (import "env" "tableBase" (global $tableBase$0 i32))
 (import "env" "__memory_base" (global $__memory_base$0 i32))
 (import "env" "__table_base" (global $__table_base$0 i32))
 (global $a-global i32 (i32.const 0))
 (global $b-global$0 f64 (f64.const 2.14281428))
 (export "foo" (func $foo-func))
 (export "aglobal" (global $a-global))
 (export "bar" (func $bar-func$0))
 (export "bglobal" (global $b-global$0))
 (func $foo-func (; 0 ;) (type $FUNCSIG$v)
  (drop
   (i32.const 1337)
  )
  (call $bar-func$0)
  (drop
   (global.get $a-global)
  )
  (drop
   (global.get $b-global$0)
  )
 )
 (func $b (; 1 ;) (type $FUNCSIG$v$0)
  (call $foo-func)
 )
 (func $bar-func$0 (; 2 ;) (type $FUNCSIG$v$0)
  (drop
   (f64.const 3.14159)
  )
  (drop
   (global.get $a-global)
  )
  (drop
   (global.get $b-global$0)
  )
 )
)
