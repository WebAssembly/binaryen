(module
 (type $func.0 (func))
 (type $func.1 (func (param i32) (result i32)))
 (type $func.2 (func (result anyref f32 anyref f32)))
 (type $func.3 (func (result eqref)))
 (type $func.4 (func (param (ref $func.1)) (result i32)))
 (type $func.5 (func (param (ref null $func.1)) (result i32)))
 (type $func.6 (func (result i32)))
 (type $func.7 (func (param f64) (result (ref null $func.3))))
 (type $func.8 (func (result anyref)))
 (type $func.9 (func (result i32 (ref null $func.2) f64)))
 (elem declare func $0 $2)
 (func $0
  (call_ref
   (ref.func $0)
  )
 )
 (func $1
  (return_call_ref
   (ref.func $0)
  )
 )
 (func $2 (param $0 i32) (result i32)
  (call_ref
   (i32.const 42)
   (ref.func $2)
  )
 )
 (func $3 (param $0 (ref $func.1)) (result i32)
  (call_ref
   (i32.const 42)
   (local.get $0)
  )
 )
 (func $4 (param $0 (ref null $func.1)) (result i32)
  (call_ref
   (i32.const 42)
   (local.get $0)
  )
 )
 (func $5 (result i32)
  (local $0 (ref null $func.1))
  (local.set $0
   (ref.func $2)
  )
  (call_ref
   (i32.const 42)
   (local.get $0)
  )
 )
 (func $6 (param $0 f64) (result (ref null $func.3))
  (ref.null $func.3)
 )
 (func $7
  (local $0 i32)
  (local $1 (ref null $func.8))
  (local $2 f64)
  (nop)
 )
 (func $8
  (local $0 (i32 (ref null $func.2) f64))
  (local $1 (ref null $func.2))
  (local $2 i32)
  (local.set $0
   (block $label$1 (result i32 (ref null $func.2) f64)
    (unreachable)
   )
  )
  (drop
   (block (result i32)
    (local.set $2
     (tuple.extract 0
      (local.get $0)
     )
    )
    (drop
     (block (result (ref null $func.2))
      (local.set $1
       (tuple.extract 1
        (local.get $0)
       )
      )
      (drop
       (tuple.extract 2
        (local.get $0)
       )
      )
      (local.get $1)
     )
    )
    (local.get $2)
   )
  )
 )
)

