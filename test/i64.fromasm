(module
  (data (get_global $memoryBase) "i64.asm.js")
  (import "env" "memory" (memory 256 256))
  (import "env" "table" (table 0 anyfunc))
  (import "env" "memoryBase" (global $memoryBase i32))
  (import "env" "tableBase" (global $tableBase i32))
  (export "test" (func $test))
  (func $test
    (local $0 i64)
    (local $1 i32)
    (local $2 f64)
    (set_local $0
      (i64.const 128849018897)
    )
    (i64.store
      (i32.const 120)
      (tee_local $0
        (i64.load
          (i32.const 120)
        )
      )
    )
    (i64.store align=2
      (i32.const 120)
      (get_local $0)
    )
    (i64.store align=4
      (i32.const 120)
      (get_local $0)
    )
    (i64.store
      (i32.const 120)
      (get_local $0)
    )
    (set_local $1
      (i32.wrap/i64
        (get_local $0)
      )
    )
    (set_local $0
      (i64.extend_u/i32
        (get_local $1)
      )
    )
    (set_local $2
      (f64.convert_u/i64
        (get_local $0)
      )
    )
  )
  (func $arg (param $0 i64)
    (i64.store
      (i32.const 100)
      (get_local $0)
    )
    (call $arg
      (get_local $0)
    )
  )
)
