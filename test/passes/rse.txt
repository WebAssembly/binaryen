(module
 (type $0 (func (param i32 f64)))
 (type $1 (func (param i32)))
 (type $2 (func))
 (memory $0 0)
 (func $basic (; 0 ;) (type $0) (param $x i32) (param $y f64)
  (local $a f32)
  (local $b i64)
  (set_local $x
   (i32.const 0)
  )
  (set_local $y
   (f64.const 0)
  )
  (drop
   (f32.const 0)
  )
  (drop
   (i64.const 0)
  )
 )
 (func $later-param-use (; 1 ;) (type $1) (param $x i32)
  (set_local $x
   (i32.const 0)
  )
  (drop
   (i32.const 0)
  )
 )
 (func $diff-value (; 2 ;) (type $1) (param $x i32)
  (local $a i32)
  (set_local $x
   (i32.const 0)
  )
  (set_local $x
   (i32.const 1)
  )
  (drop
   (i32.const 1)
  )
  (set_local $a
   (i32.const 1)
  )
  (drop
   (i32.const 1)
  )
  (set_local $a
   (i32.const 0)
  )
 )
 (func $unreach (; 3 ;) (type $2)
  (local $a i32)
  (block $x
   (drop
    (i32.const 0)
   )
   (set_local $a
    (i32.const 1)
   )
   (drop
    (i32.const 1)
   )
   (br $x)
   (set_local $a
    (i32.const 1)
   )
   (set_local $a
    (i32.const 2)
   )
   (set_local $a
    (i32.const 2)
   )
  )
 )
 (func $loop (; 4 ;) (type $2)
  (local $a i32)
  (local $b i32)
  (loop $x
   (set_local $a
    (i32.const 0)
   )
   (set_local $a
    (i32.const 1)
   )
   (br_if $x
    (i32.const 1)
   )
  )
  (block $y
   (drop
    (i32.const 0)
   )
   (set_local $b
    (i32.const 1)
   )
   (br $y)
  )
  (drop
   (i32.const 1)
  )
 )
 (func $if (; 5 ;) (type $2)
  (local $x i32)
  (if
   (i32.const 0)
   (set_local $x
    (i32.const 1)
   )
   (set_local $x
    (i32.const 1)
   )
  )
  (drop
   (i32.const 1)
  )
 )
 (func $if2 (; 6 ;) (type $2)
  (local $x i32)
  (if
   (tee_local $x
    (i32.const 1)
   )
   (drop
    (i32.const 1)
   )
   (drop
    (i32.const 1)
   )
  )
  (drop
   (i32.const 1)
  )
 )
 (func $if3 (; 7 ;) (type $2)
  (local $x i32)
  (if
   (tee_local $x
    (i32.const 1)
   )
   (drop
    (i32.const 1)
   )
   (set_local $x
    (i32.const 2)
   )
  )
  (set_local $x
   (i32.const 1)
  )
 )
 (func $copy (; 8 ;) (type $2)
  (local $x i32)
  (local $y i32)
  (set_local $x
   (i32.const 1)
  )
  (set_local $y
   (get_local $x)
  )
  (drop
   (i32.const 1)
  )
  (set_local $x
   (i32.const 2)
  )
  (if
   (i32.const 1)
   (nop)
   (nop)
  )
  (set_local $y
   (get_local $x)
  )
  (drop
   (i32.const 2)
  )
  (if
   (i32.const 1)
   (nop)
   (nop)
  )
  (drop
   (i32.const 2)
  )
  (set_local $x
   (i32.const 3)
  )
  (set_local $y
   (i32.const 3)
  )
  (drop
   (get_local $x)
  )
 )
 (func $param-unique (; 9 ;) (type $1) (param $x i32)
  (local $a i32)
  (set_local $a
   (get_local $x)
  )
  (drop
   (get_local $x)
  )
  (set_local $x
   (i32.eqz
    (i32.const 9999)
   )
  )
  (set_local $a
   (get_local $x)
  )
  (drop
   (get_local $x)
  )
 )
 (func $set-unique (; 10 ;) (type $2)
  (local $x i32)
  (local $y i32)
  (set_local $x
   (i32.eqz
    (i32.const 123)
   )
  )
  (set_local $y
   (get_local $x)
  )
  (drop
   (get_local $x)
  )
  (set_local $x
   (i32.eqz
    (i32.const 456)
   )
  )
  (set_local $y
   (get_local $x)
  )
  (drop
   (get_local $x)
  )
  (set_local $x
   (i32.eqz
    (i32.const 789)
   )
  )
  (if
   (i32.const 1)
   (nop)
   (nop)
  )
  (set_local $y
   (get_local $x)
  )
  (drop
   (get_local $x)
  )
  (set_local $x
   (i32.eqz
    (i32.const 1000)
   )
  )
  (set_local $y
   (get_local $x)
  )
  (if
   (i32.const 1)
   (nop)
   (nop)
  )
  (drop
   (get_local $x)
  )
 )
 (func $identical_complex (; 11 ;) (type $1) (param $x i32)
  (local $y i32)
  (set_local $y
   (get_local $x)
  )
  (drop
   (get_local $x)
  )
  (drop
   (get_local $x)
  )
  (drop
   (get_local $x)
  )
  (drop
   (get_local $y)
  )
  (drop
   (get_local $y)
  )
 )
)
