DWARF debug info
================

Contains section .debug_info (851 bytes)
Contains section .debug_loc (1073 bytes)
Contains section .debug_ranges (88 bytes)
Contains section .debug_abbrev (333 bytes)
Contains section .debug_line (1477 bytes)
Contains section .debug_str (434 bytes)

.debug_abbrev contents:
Abbrev table for offset: 0x00000000
[1] DW_TAG_compile_unit	DW_CHILDREN_yes
	DW_AT_producer	DW_FORM_strp
	DW_AT_language	DW_FORM_data2
	DW_AT_name	DW_FORM_strp
	DW_AT_stmt_list	DW_FORM_sec_offset
	DW_AT_comp_dir	DW_FORM_strp
	DW_AT_low_pc	DW_FORM_addr
	DW_AT_ranges	DW_FORM_sec_offset

[2] DW_TAG_pointer_type	DW_CHILDREN_no
	DW_AT_type	DW_FORM_ref4

[3] DW_TAG_structure_type	DW_CHILDREN_yes
	DW_AT_calling_convention	DW_FORM_data1
	DW_AT_name	DW_FORM_strp
	DW_AT_byte_size	DW_FORM_data1
	DW_AT_decl_file	DW_FORM_data1
	DW_AT_decl_line	DW_FORM_data1

[4] DW_TAG_member	DW_CHILDREN_no
	DW_AT_name	DW_FORM_strp
	DW_AT_type	DW_FORM_ref4
	DW_AT_decl_file	DW_FORM_data1
	DW_AT_decl_line	DW_FORM_data1
	DW_AT_data_member_location	DW_FORM_data1

[5] DW_TAG_base_type	DW_CHILDREN_no
	DW_AT_name	DW_FORM_strp
	DW_AT_encoding	DW_FORM_data1
	DW_AT_byte_size	DW_FORM_data1

[6] DW_TAG_namespace	DW_CHILDREN_yes
	DW_AT_name	DW_FORM_strp

[7] DW_TAG_typedef	DW_CHILDREN_no
	DW_AT_type	DW_FORM_ref4
	DW_AT_name	DW_FORM_strp
	DW_AT_decl_file	DW_FORM_data1
	DW_AT_decl_line	DW_FORM_data1

[8] DW_TAG_unspecified_type	DW_CHILDREN_no
	DW_AT_name	DW_FORM_strp

[9] DW_TAG_imported_declaration	DW_CHILDREN_no
	DW_AT_decl_file	DW_FORM_data1
	DW_AT_decl_line	DW_FORM_data1
	DW_AT_import	DW_FORM_ref4

[10] DW_TAG_subprogram	DW_CHILDREN_yes
	DW_AT_low_pc	DW_FORM_addr
	DW_AT_high_pc	DW_FORM_data4
	DW_AT_frame_base	DW_FORM_exprloc
	DW_AT_GNU_all_call_sites	DW_FORM_flag_present
	DW_AT_linkage_name	DW_FORM_strp
	DW_AT_name	DW_FORM_strp
	DW_AT_decl_file	DW_FORM_data1
	DW_AT_decl_line	DW_FORM_data1
	DW_AT_type	DW_FORM_ref4
	DW_AT_external	DW_FORM_flag_present

[11] DW_TAG_formal_parameter	DW_CHILDREN_no
	DW_AT_name	DW_FORM_strp
	DW_AT_decl_file	DW_FORM_data1
	DW_AT_decl_line	DW_FORM_data1
	DW_AT_type	DW_FORM_ref4

[12] DW_TAG_variable	DW_CHILDREN_no
	DW_AT_name	DW_FORM_strp
	DW_AT_decl_file	DW_FORM_data1
	DW_AT_decl_line	DW_FORM_data1
	DW_AT_type	DW_FORM_ref4

[13] DW_TAG_variable	DW_CHILDREN_no
	DW_AT_location	DW_FORM_sec_offset
	DW_AT_name	DW_FORM_strp
	DW_AT_decl_file	DW_FORM_data1
	DW_AT_decl_line	DW_FORM_data1
	DW_AT_type	DW_FORM_ref4

[14] DW_TAG_lexical_block	DW_CHILDREN_yes
	DW_AT_ranges	DW_FORM_sec_offset

[15] DW_TAG_GNU_call_site	DW_CHILDREN_no
	DW_AT_low_pc	DW_FORM_addr

[16] DW_TAG_GNU_call_site	DW_CHILDREN_no
	DW_AT_abstract_origin	DW_FORM_ref4
	DW_AT_low_pc	DW_FORM_addr

[17] DW_TAG_subprogram	DW_CHILDREN_yes
	DW_AT_name	DW_FORM_strp
	DW_AT_decl_file	DW_FORM_data1
	DW_AT_decl_line	DW_FORM_data1
	DW_AT_declaration	DW_FORM_flag_present
	DW_AT_external	DW_FORM_flag_present

[18] DW_TAG_formal_parameter	DW_CHILDREN_no
	DW_AT_type	DW_FORM_ref4

[19] DW_TAG_pointer_type	DW_CHILDREN_no

[20] DW_TAG_subprogram	DW_CHILDREN_yes
	DW_AT_linkage_name	DW_FORM_strp
	DW_AT_name	DW_FORM_strp
	DW_AT_decl_file	DW_FORM_data1
	DW_AT_decl_line	DW_FORM_data1
	DW_AT_type	DW_FORM_ref4
	DW_AT_inline	DW_FORM_data1

[21] DW_TAG_label	DW_CHILDREN_no
	DW_AT_name	DW_FORM_strp
	DW_AT_decl_file	DW_FORM_data1
	DW_AT_decl_line	DW_FORM_data1

[22] DW_TAG_lexical_block	DW_CHILDREN_yes

[23] DW_TAG_subprogram	DW_CHILDREN_yes
	DW_AT_low_pc	DW_FORM_addr
	DW_AT_high_pc	DW_FORM_data4
	DW_AT_frame_base	DW_FORM_exprloc
	DW_AT_GNU_all_call_sites	DW_FORM_flag_present
	DW_AT_name	DW_FORM_strp
	DW_AT_decl_file	DW_FORM_data1
	DW_AT_decl_line	DW_FORM_data1
	DW_AT_type	DW_FORM_ref4
	DW_AT_external	DW_FORM_flag_present

[24] DW_TAG_inlined_subroutine	DW_CHILDREN_yes
	DW_AT_abstract_origin	DW_FORM_ref4
	DW_AT_low_pc	DW_FORM_addr
	DW_AT_high_pc	DW_FORM_data4
	DW_AT_call_file	DW_FORM_data1
	DW_AT_call_line	DW_FORM_data1
	DW_AT_call_column	DW_FORM_data1

[25] DW_TAG_formal_parameter	DW_CHILDREN_no
	DW_AT_abstract_origin	DW_FORM_ref4

[26] DW_TAG_variable	DW_CHILDREN_no
	DW_AT_location	DW_FORM_sec_offset
	DW_AT_abstract_origin	DW_FORM_ref4

[27] DW_TAG_variable	DW_CHILDREN_no
	DW_AT_abstract_origin	DW_FORM_ref4

[28] DW_TAG_label	DW_CHILDREN_no
	DW_AT_abstract_origin	DW_FORM_ref4
	DW_AT_low_pc	DW_FORM_addr


.debug_info contents:
0x00000000: Compile Unit: length = 0x0000034f version = 0x0004 abbr_offset = 0x0000 addr_size = 0x04 (next unit at 0x00000353)

0x0000000b: DW_TAG_compile_unit [1] *
              DW_AT_producer [DW_FORM_strp]	( .debug_str[0x00000000] = "clang version 11.0.0 (https://github.com/llvm/llvm-project.git 313d89724ce3ccf66c1c51849903e1e6d184dd85)")
              DW_AT_language [DW_FORM_data2]	(DW_LANG_C_plus_plus)
              DW_AT_name [DW_FORM_strp]	( .debug_str[0x00000069] = "/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
              DW_AT_stmt_list [DW_FORM_sec_offset]	(0x00000000)
              DW_AT_comp_dir [DW_FORM_strp]	( .debug_str[0x000000a9] = "/usr/local/google/home/azakai/Dev/2-binaryen")
              DW_AT_low_pc [DW_FORM_addr]	(0x0000000000000000)
              DW_AT_ranges [DW_FORM_sec_offset]	(0x00000040
                 [0x00000006, 0x0000039d)
                 [0x0000039f, 0x000006e1))

0x00000026:   DW_TAG_pointer_type [2]  
                DW_AT_type [DW_FORM_ref4]	(cu + 0x002b => {0x0000002b} "worker_args")

0x0000002b:   DW_TAG_structure_type [3] *
                DW_AT_calling_convention [DW_FORM_data1]	(DW_CC_pass_by_value)
                DW_AT_name [DW_FORM_strp]	( .debug_str[0x000000e3] = "worker_args")
                DW_AT_byte_size [DW_FORM_data1]	(0x0c)
                DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                DW_AT_decl_line [DW_FORM_data1]	(20)

0x00000034:     DW_TAG_member [4]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x000000d6] = "i")
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(21)
                  DW_AT_data_member_location [DW_FORM_data1]	(0x00)

0x00000040:     DW_TAG_member [4]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x000000dc] = "n")
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(21)
                  DW_AT_data_member_location [DW_FORM_data1]	(0x04)

0x0000004c:     DW_TAG_member [4]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x000000de] = "next")
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0026 => {0x00000026} "worker_args*")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(22)
                  DW_AT_data_member_location [DW_FORM_data1]	(0x08)

0x00000058:     NULL

0x00000059:   DW_TAG_base_type [5]  
                DW_AT_name [DW_FORM_strp]	( .debug_str[0x000000d8] = "int")
                DW_AT_encoding [DW_FORM_data1]	(DW_ATE_signed)
                DW_AT_byte_size [DW_FORM_data1]	(0x04)

0x00000060:   DW_TAG_pointer_type [2]  
                DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x00000065:   DW_TAG_namespace [6] *
                DW_AT_name [DW_FORM_strp]	( .debug_str[0x000000ef] = "std")

0x0000006a:     DW_TAG_typedef [7]  
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0076 => {0x00000076} "decltype(nullptr)")
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x00000105] = "nullptr_t")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/system/include/libcxx/__nullptr")
                  DW_AT_decl_line [DW_FORM_data1]	(57)

0x00000075:     NULL

0x00000076:   DW_TAG_unspecified_type [8]  
                DW_AT_name [DW_FORM_strp]	( .debug_str[0x000000f3] = "decltype(nullptr)")

0x0000007b:   DW_TAG_imported_declaration [9]  
                DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/system/include/libcxx/stddef.h")
                DW_AT_decl_line [DW_FORM_data1]	(52)
                DW_AT_import [DW_FORM_ref4]	(cu + 0x006a => {0x0000006a})

0x00000082:   DW_TAG_subprogram [10] *
                DW_AT_low_pc [DW_FORM_addr]	(0x0000000000000006)
                DW_AT_high_pc [DW_FORM_data4]	(0x00000397)
                DW_AT_frame_base [DW_FORM_exprloc]	(DW_OP_WASM_location 0x1 +0, DW_OP_stack_value)
                DW_AT_GNU_all_call_sites [DW_FORM_flag_present]	(true)
                DW_AT_linkage_name [DW_FORM_strp]	( .debug_str[0x00000166] = "_Z15fannkuch_workerPv")
                DW_AT_name [DW_FORM_strp]	( .debug_str[0x0000017c] = "fannkuch_worker")
                DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                DW_AT_decl_line [DW_FORM_data1]	(26)
                DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")
                DW_AT_external [DW_FORM_flag_present]	(true)

0x0000009e:     DW_TAG_formal_parameter [11]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x00000191] = "_arg")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(26)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x01a7 => {0x000001a7} "*")

0x000000a9:     DW_TAG_variable [12]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x00000133] = "args")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(28)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0026 => {0x00000026} "worker_args*")

0x000000b4:     DW_TAG_variable [13]  
                  DW_AT_location [DW_FORM_sec_offset]	(0x00000000: 
                     [0xffffffff,  0x00000006): 
                     [0x00000000,  0x0000003c): DW_OP_consts +0, DW_OP_stack_value)
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x0000014c] = "maxflips")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(30)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x000000c3:     DW_TAG_variable [13]  
                  DW_AT_location [DW_FORM_sec_offset]	(0x0000001d: 
                     [0xffffffff,  0x00000006): 
                     [0x00000007,  0x0000003c): DW_OP_consts +0, DW_OP_stack_value
                     [0x00000052,  0x00000057): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value
                     [0x000000ec,  0x000000f5): DW_OP_consts +1, DW_OP_stack_value
                     [0x00000131,  0x0000013b): DW_OP_WASM_location 0x0 +0, DW_OP_stack_value
                     [0x00000179,  0x00000186): DW_OP_consts +0, DW_OP_stack_value
                     [0x00000264,  0x0000026f): DW_OP_consts +0, DW_OP_stack_value
                     [0x00000275,  0x0000027e): DW_OP_consts +1, DW_OP_stack_value
                     [0x000002ba,  0x000002c4): DW_OP_WASM_location 0x0 +0, DW_OP_stack_value
                     [0x00000302,  0x0000030f): DW_OP_consts +0, DW_OP_stack_value)
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x000000d6] = "i")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(30)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x000000d2:     DW_TAG_variable [13]  
                  DW_AT_location [DW_FORM_sec_offset]	(0x000000a5: 
                     [0xffffffff,  0x00000006): 
                     [0x0000000e,  0x0000003c): DW_OP_WASM_location 0x0 +2, DW_OP_stack_value)
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x000000dc] = "n")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(30)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x000000e1:     DW_TAG_variable [13]  
                  DW_AT_location [DW_FORM_sec_offset]	(0x000000c3: 
                     [0xffffffff,  0x00000006): 
                     [0x0000001b,  0x0000003c): DW_OP_WASM_location 0x0 +4, DW_OP_stack_value)
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x0000013e] = "perm1")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(29)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0060 => {0x00000060} "int*")

0x000000f0:     DW_TAG_variable [13]  
                  DW_AT_location [DW_FORM_sec_offset]	(0x000000e1: 
                     [0xffffffff,  0x00000006): 
                     [0x00000025,  0x0000003c): DW_OP_WASM_location 0x0 +5, DW_OP_stack_value)
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x00000196] = "perm")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(29)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0060 => {0x00000060} "int*")

0x000000ff:     DW_TAG_variable [13]  
                  DW_AT_location [DW_FORM_sec_offset]	(0x000000ff: 
                     [0xffffffff,  0x00000006): 
                     [0x0000002f,  0x0000003c): DW_OP_WASM_location 0x0 +6, DW_OP_stack_value)
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x00000144] = "count")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(29)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0060 => {0x00000060} "int*")

0x0000010e:     DW_TAG_variable [13]  
                  DW_AT_location [DW_FORM_sec_offset]	(0x0000011d: 
                     [0xffffffff,  0x00000006): 
                     [0x000001e2,  0x000001e7): DW_OP_WASM_location 0x0 +2, DW_OP_stack_value
                     [0x0000036b,  0x00000370): DW_OP_WASM_location 0x0 +2, DW_OP_stack_value)
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x0000014a] = "r")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(30)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x0000011d:     DW_TAG_variable [13]  
                  DW_AT_location [DW_FORM_sec_offset]	(0x00000149: 
                     [0xffffffff,  0x00000006): 
                     [0x000000cf,  0x000000e6): DW_OP_consts +0, DW_OP_stack_value
                     [0x000000ec,  0x000000f5): DW_OP_WASM_location 0x0 +13, DW_OP_stack_value
                     [0x0000015a,  0x00000162): DW_OP_WASM_location 0x0 +0, DW_OP_stack_value
                     [0x00000264,  0x0000026f): DW_OP_consts +0, DW_OP_stack_value
                     [0x00000275,  0x0000027e): DW_OP_WASM_location 0x0 +10, DW_OP_stack_value
                     [0x000002e3,  0x000002eb): DW_OP_WASM_location 0x0 +0, DW_OP_stack_value)
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x00000155] = "flips")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(30)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x0000012c:     DW_TAG_variable [13]  
                  DW_AT_location [DW_FORM_sec_offset]	(0x000001ab: 
                     [0xffffffff,  0x00000006): 
                     [0x000000e2,  0x000000e6): DW_OP_WASM_location 0x0 +12, DW_OP_stack_value
                     [0x0000026b,  0x0000026f): DW_OP_WASM_location 0x0 +16, DW_OP_stack_value)
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x0000019b] = "k")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(30)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x0000013b:     DW_TAG_variable [13]  
                  DW_AT_location [DW_FORM_sec_offset]	(0x000001d7: 
                     [0xffffffff,  0x00000006): 
                     [0x000000fc,  0x00000100): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value
                     [0x00000138,  0x0000013b): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value
                     [0x00000285,  0x00000289): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value
                     [0x000002c1,  0x000002c4): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value)
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x0000019d] = "j")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(30)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x0000014a:     DW_TAG_variable [13]  
                  DW_AT_location [DW_FORM_sec_offset]	(0x0000021f: 
                     [0xffffffff,  0x00000006): 
                     [0x00000111,  0x0000013b): DW_OP_WASM_location 0x0 +15, DW_OP_stack_value
                     [0x0000014c,  0x00000162): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value
                     [0x0000029a,  0x000002c4): DW_OP_WASM_location 0x0 +14, DW_OP_stack_value
                     [0x000002d5,  0x000002eb): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value)
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x0000019f] = "tmp")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(30)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x00000159:     DW_TAG_lexical_block [14] *
                  DW_AT_ranges [DW_FORM_sec_offset]	(0x00000000
                     [0x00000185, 0x000001c3)
                     [0x000001ed, 0x000001f6)
                     [0x0000030e, 0x0000034c)
                     [0x00000376, 0x0000037f))

0x0000015e:       DW_TAG_variable [12]  
                    DW_AT_name [DW_FORM_strp]	( .debug_str[0x00000163] = "p0")
                    DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                    DW_AT_decl_line [DW_FORM_data1]	(74)
                    DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x00000169:       NULL

0x0000016a:     DW_TAG_GNU_call_site [15]  
                  DW_AT_low_pc [DW_FORM_addr]	(0x000000000000001f)

0x0000016f:     DW_TAG_GNU_call_site [15]  
                  DW_AT_low_pc [DW_FORM_addr]	(0x0000000000000029)

0x00000174:     DW_TAG_GNU_call_site [15]  
                  DW_AT_low_pc [DW_FORM_addr]	(0x0000000000000033)

0x00000179:     DW_TAG_GNU_call_site [15]  
                  DW_AT_low_pc [DW_FORM_addr]	(0x00000000000000e1)

0x0000017e:     DW_TAG_GNU_call_site [16]  
                  DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x019a => {0x0000019a} "free")
                  DW_AT_low_pc [DW_FORM_addr]	(0x000000000000038a)

0x00000187:     DW_TAG_GNU_call_site [16]  
                  DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x019a => {0x0000019a} "free")
                  DW_AT_low_pc [DW_FORM_addr]	(0x0000000000000392)

0x00000190:     DW_TAG_GNU_call_site [16]  
                  DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x019a => {0x0000019a} "free")
                  DW_AT_low_pc [DW_FORM_addr]	(0x000000000000039a)

0x00000199:     NULL

0x0000019a:   DW_TAG_subprogram [17] *
                DW_AT_name [DW_FORM_strp]	( .debug_str[0x0000010f] = "free")
                DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/system/include/libc/stdlib.h")
                DW_AT_decl_line [DW_FORM_data1]	(41)
                DW_AT_declaration [DW_FORM_flag_present]	(true)
                DW_AT_external [DW_FORM_flag_present]	(true)

0x000001a1:     DW_TAG_formal_parameter [18]  
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x01a7 => {0x000001a7} "*")

0x000001a6:     NULL

0x000001a7:   DW_TAG_pointer_type [19]  

0x000001a8:   DW_TAG_subprogram [20] *
                DW_AT_linkage_name [DW_FORM_strp]	( .debug_str[0x00000114] = "_ZL8fannkuchi")
                DW_AT_name [DW_FORM_strp]	( .debug_str[0x00000122] = "fannkuch")
                DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                DW_AT_decl_line [DW_FORM_data1]	(87)
                DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")
                DW_AT_inline [DW_FORM_data1]	(DW_INL_inlined)

0x000001b8:     DW_TAG_formal_parameter [11]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x000000dc] = "n")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(87)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x000001c3:     DW_TAG_variable [12]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x0000012b] = "showmax")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(90)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x000001ce:     DW_TAG_variable [12]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x00000133] = "args")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(89)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0026 => {0x00000026} "worker_args*")

0x000001d9:     DW_TAG_variable [12]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x000000d6] = "i")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(91)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x000001e4:     DW_TAG_variable [12]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x00000138] = "targs")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(89)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0026 => {0x00000026} "worker_args*")

0x000001ef:     DW_TAG_variable [12]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x0000013e] = "perm1")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(91)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0060 => {0x00000060} "int*")

0x000001fa:     DW_TAG_variable [12]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x00000144] = "count")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(91)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0060 => {0x00000060} "int*")

0x00000205:     DW_TAG_variable [12]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x0000014a] = "r")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(91)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x00000210:     DW_TAG_variable [12]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x0000014c] = "maxflips")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(91)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x0000021b:     DW_TAG_variable [12]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x00000155] = "flips")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(91)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x00000226:     DW_TAG_label [21]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x0000015b] = "cleanup")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(137)

0x0000022d:     DW_TAG_lexical_block [22] *

0x0000022e:       DW_TAG_variable [12]  
                    DW_AT_name [DW_FORM_strp]	( .debug_str[0x00000163] = "p0")
                    DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                    DW_AT_decl_line [DW_FORM_data1]	(125)
                    DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x00000239:       NULL

0x0000023a:     NULL

0x0000023b:   DW_TAG_subprogram [23] *
                DW_AT_low_pc [DW_FORM_addr]	(0x000000000000039f)
                DW_AT_high_pc [DW_FORM_data4]	(0x00000342)
                DW_AT_frame_base [DW_FORM_exprloc]	(DW_OP_WASM_location 0x0 +2, DW_OP_stack_value)
                DW_AT_GNU_all_call_sites [DW_FORM_flag_present]	(true)
                DW_AT_name [DW_FORM_strp]	( .debug_str[0x0000018c] = "main")
                DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                DW_AT_decl_line [DW_FORM_data1]	(152)
                DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")
                DW_AT_external [DW_FORM_flag_present]	(true)

0x00000253:     DW_TAG_formal_parameter [11]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x000001a3] = "argc")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(152)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x0000025e:     DW_TAG_formal_parameter [11]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x000001a8] = "argv")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(152)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0341 => {0x00000341} "char**")

0x00000269:     DW_TAG_variable [13]  
                  DW_AT_location [DW_FORM_sec_offset]	(0x00000267: 
                     [0xffffffff,  0x0000039f): 
                     [0x00000032,  0x00000037): DW_OP_WASM_location 0x0 +4, DW_OP_stack_value)
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x000000dc] = "n")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(153)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x00000278:     DW_TAG_inlined_subroutine [24] *
                  DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x01a8 => {0x000001a8} "_ZL8fannkuchi")
                  DW_AT_low_pc [DW_FORM_addr]	(0x00000000000003ed)
                  DW_AT_high_pc [DW_FORM_data4]	(0x000002c8)
                  DW_AT_call_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_call_line [DW_FORM_data1]	(159)
                  DW_AT_call_column [DW_FORM_data1]	(0x29)

0x00000288:       DW_TAG_formal_parameter [25]  
                    DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x01b8 => {0x000001b8} "n")

0x0000028d:       DW_TAG_variable [26]  
                    DW_AT_location [DW_FORM_sec_offset]	(0x00000285: 
                       [0xffffffff,  0x0000039f): 
                       [0x0000004c,  0x00000055): DW_OP_consts +30, DW_OP_stack_value)
                    DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x01c3 => {0x000001c3} "showmax")

0x00000296:       DW_TAG_variable [26]  
                    DW_AT_location [DW_FORM_sec_offset]	(0x000002a2: 
                       [0xffffffff,  0x0000039f): 
                       [0x0000004c,  0x00000055): DW_OP_lit0, DW_OP_stack_value
                       [0x000002f8,  0x00000314): DW_OP_WASM_location 0x0 +6, DW_OP_stack_value)
                    DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x01ce => {0x000001ce} "args")

0x0000029f:       DW_TAG_variable [26]  
                    DW_AT_location [DW_FORM_sec_offset]	(0x000002cc: 
                       [0xffffffff,  0x0000039f): 
                       [0x0000004c,  0x00000055): DW_OP_consts +0, DW_OP_stack_value
                       [0x0000008e,  0x00000093): DW_OP_WASM_location 0x0 +0, DW_OP_stack_value
                       [0x00000099,  0x000000c1): DW_OP_consts +0, DW_OP_stack_value
                       [0x000000d7,  0x000000dc): DW_OP_WASM_location 0x0 +0, DW_OP_stack_value
                       [0x000000f5,  0x000000f9): DW_OP_consts +0, DW_OP_stack_value
                       [0x00000127,  0x0000012c): DW_OP_WASM_location 0x0 +0, DW_OP_stack_value
                       [0x00000178,  0x00000188): DW_OP_consts +0, DW_OP_stack_value
                       [0x000001fa,  0x0000020c): DW_OP_consts +0, DW_OP_stack_value
                       [0x00000241,  0x00000255): DW_OP_consts +0, DW_OP_stack_value)
                    DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x01d9 => {0x000001d9} "i")

0x000002a8:       DW_TAG_variable [27]  
                    DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x01e4 => {0x000001e4} "targs")

0x000002ad:       DW_TAG_variable [26]  
                    DW_AT_location [DW_FORM_sec_offset]	(0x00000354: 
                       [0xffffffff,  0x0000039f): 
                       [0x000000a8,  0x000000c1): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value)
                    DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x01ef => {0x000001ef} "perm1")

0x000002b6:       DW_TAG_variable [26]  
                    DW_AT_location [DW_FORM_sec_offset]	(0x00000372: 
                       [0xffffffff,  0x0000039f): 
                       [0x000000b2,  0x000000c1): DW_OP_WASM_location 0x0 +5, DW_OP_stack_value)
                    DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x01fa => {0x000001fa} "count")

0x000002bf:       DW_TAG_variable [26]  
                    DW_AT_location [DW_FORM_sec_offset]	(0x00000390: 
                       [0xffffffff,  0x0000039f): 
                       [0x000001e6,  0x000001ed): DW_OP_WASM_location 0x0 +6, DW_OP_stack_value
                       [0x000002b3,  0x000002ba): DW_OP_WASM_location 0x0 +6, DW_OP_stack_value)
                    DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x0205 => {0x00000205} "r")

0x000002c8:       DW_TAG_variable [26]  
                    DW_AT_location [DW_FORM_sec_offset]	(0x000003e8: 
                       [0xffffffff,  0x0000039f): 
                       [0x000002d6,  0x000002e1): DW_OP_consts +0, DW_OP_stack_value
                       [0x0000030c,  0x00000314): DW_OP_WASM_location 0x0 +0, DW_OP_stack_value)
                    DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x0210 => {0x00000210} "maxflips")

0x000002d1:       DW_TAG_variable [26]  
                    DW_AT_location [DW_FORM_sec_offset]	(0x00000413: 
                       [0xffffffff,  0x0000039f): 
                       [0x000002f1,  0x00000314): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value)
                    DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x021b => {0x0000021b} "flips")

0x000002da:       DW_TAG_label [28]  
                    DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x0226 => {0x00000226} "cleanup")
                    DW_AT_low_pc [DW_FORM_addr]	(0x0000000000000661)

0x000002e3:       DW_TAG_lexical_block [14] *
                    DW_AT_ranges [DW_FORM_sec_offset]	(0x00000028
                       [0x00000517, 0x0000055e)
                       [0x000005de, 0x0000062b))

0x000002e8:         DW_TAG_variable [26]  
                      DW_AT_location [DW_FORM_sec_offset]	(0x000003bc: 
                         [0xffffffff,  0x0000039f): 
                         [0x0000017f,  0x00000188): DW_OP_WASM_location 0x0 +8, DW_OP_stack_value
                         [0x00000248,  0x00000255): DW_OP_WASM_location 0x0 +8, DW_OP_stack_value)
                      DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x022e => {0x0000022e} "p0")

0x000002f1:         NULL

0x000002f2:       NULL

0x000002f3:     DW_TAG_GNU_call_site [15]  
                  DW_AT_low_pc [DW_FORM_addr]	(0x00000000000003cf)

0x000002f8:     DW_TAG_GNU_call_site [15]  
                  DW_AT_low_pc [DW_FORM_addr]	(0x00000000000003e3)

0x000002fd:     DW_TAG_GNU_call_site [15]  
                  DW_AT_low_pc [DW_FORM_addr]	(0x000000000000040d)

0x00000302:     DW_TAG_GNU_call_site [15]  
                  DW_AT_low_pc [DW_FORM_addr]	(0x0000000000000445)

0x00000307:     DW_TAG_GNU_call_site [15]  
                  DW_AT_low_pc [DW_FORM_addr]	(0x000000000000044f)

0x0000030c:     DW_TAG_GNU_call_site [15]  
                  DW_AT_low_pc [DW_FORM_addr]	(0x00000000000004be)

0x00000311:     DW_TAG_GNU_call_site [15]  
                  DW_AT_low_pc [DW_FORM_addr]	(0x00000000000004d4)

0x00000316:     DW_TAG_GNU_call_site [15]  
                  DW_AT_low_pc [DW_FORM_addr]	(0x00000000000005a1)

0x0000031b:     DW_TAG_GNU_call_site [16]  
                  DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x019a => {0x0000019a} "free")
                  DW_AT_low_pc [DW_FORM_addr]	(0x0000000000000669)

0x00000324:     DW_TAG_GNU_call_site [16]  
                  DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x019a => {0x0000019a} "free")
                  DW_AT_low_pc [DW_FORM_addr]	(0x0000000000000671)

0x0000032d:     DW_TAG_GNU_call_site [15]  
                  DW_AT_low_pc [DW_FORM_addr]	(0x000000000000068e)

0x00000332:     DW_TAG_GNU_call_site [16]  
                  DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x019a => {0x0000019a} "free")
                  DW_AT_low_pc [DW_FORM_addr]	(0x000000000000069f)

0x0000033b:     DW_TAG_GNU_call_site [15]  
                  DW_AT_low_pc [DW_FORM_addr]	(0x00000000000006d1)

0x00000340:     NULL

0x00000341:   DW_TAG_pointer_type [2]  
                DW_AT_type [DW_FORM_ref4]	(cu + 0x0346 => {0x00000346} "char*")

0x00000346:   DW_TAG_pointer_type [2]  
                DW_AT_type [DW_FORM_ref4]	(cu + 0x034b => {0x0000034b} "char")

0x0000034b:   DW_TAG_base_type [5]  
                DW_AT_name [DW_FORM_strp]	( .debug_str[0x000001ad] = "char")
                DW_AT_encoding [DW_FORM_data1]	(DW_ATE_signed_char)
                DW_AT_byte_size [DW_FORM_data1]	(0x01)

0x00000352:   NULL

.debug_loc contents:
0x00000000: 
            [0xffffffff,  0x00000006): 
            [0x00000000,  0x0000003c): DW_OP_consts +0, DW_OP_stack_value

0x0000001d: 
            [0xffffffff,  0x00000006): 
            [0x00000007,  0x0000003c): DW_OP_consts +0, DW_OP_stack_value
            [0x00000052,  0x00000057): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value
            [0x000000ec,  0x000000f5): DW_OP_consts +1, DW_OP_stack_value
            [0x00000131,  0x0000013b): DW_OP_WASM_location 0x0 +0, DW_OP_stack_value
            [0x00000179,  0x00000186): DW_OP_consts +0, DW_OP_stack_value
            [0x00000264,  0x0000026f): DW_OP_consts +0, DW_OP_stack_value
            [0x00000275,  0x0000027e): DW_OP_consts +1, DW_OP_stack_value
            [0x000002ba,  0x000002c4): DW_OP_WASM_location 0x0 +0, DW_OP_stack_value
            [0x00000302,  0x0000030f): DW_OP_consts +0, DW_OP_stack_value

0x000000a5: 
            [0xffffffff,  0x00000006): 
            [0x0000000e,  0x0000003c): DW_OP_WASM_location 0x0 +2, DW_OP_stack_value

0x000000c3: 
            [0xffffffff,  0x00000006): 
            [0x0000001b,  0x0000003c): DW_OP_WASM_location 0x0 +4, DW_OP_stack_value

0x000000e1: 
            [0xffffffff,  0x00000006): 
            [0x00000025,  0x0000003c): DW_OP_WASM_location 0x0 +5, DW_OP_stack_value

0x000000ff: 
            [0xffffffff,  0x00000006): 
            [0x0000002f,  0x0000003c): DW_OP_WASM_location 0x0 +6, DW_OP_stack_value

0x0000011d: 
            [0xffffffff,  0x00000006): 
            [0x000001e2,  0x000001e7): DW_OP_WASM_location 0x0 +2, DW_OP_stack_value
            [0x0000036b,  0x00000370): DW_OP_WASM_location 0x0 +2, DW_OP_stack_value

0x00000149: 
            [0xffffffff,  0x00000006): 
            [0x000000cf,  0x000000e6): DW_OP_consts +0, DW_OP_stack_value
            [0x000000ec,  0x000000f5): DW_OP_WASM_location 0x0 +13, DW_OP_stack_value
            [0x0000015a,  0x00000162): DW_OP_WASM_location 0x0 +0, DW_OP_stack_value
            [0x00000264,  0x0000026f): DW_OP_consts +0, DW_OP_stack_value
            [0x00000275,  0x0000027e): DW_OP_WASM_location 0x0 +10, DW_OP_stack_value
            [0x000002e3,  0x000002eb): DW_OP_WASM_location 0x0 +0, DW_OP_stack_value

0x000001ab: 
            [0xffffffff,  0x00000006): 
            [0x000000e2,  0x000000e6): DW_OP_WASM_location 0x0 +12, DW_OP_stack_value
            [0x0000026b,  0x0000026f): DW_OP_WASM_location 0x0 +16, DW_OP_stack_value

0x000001d7: 
            [0xffffffff,  0x00000006): 
            [0x000000fc,  0x00000100): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value
            [0x00000138,  0x0000013b): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value
            [0x00000285,  0x00000289): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value
            [0x000002c1,  0x000002c4): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value

0x0000021f: 
            [0xffffffff,  0x00000006): 
            [0x00000111,  0x0000013b): DW_OP_WASM_location 0x0 +15, DW_OP_stack_value
            [0x0000014c,  0x00000162): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value
            [0x0000029a,  0x000002c4): DW_OP_WASM_location 0x0 +14, DW_OP_stack_value
            [0x000002d5,  0x000002eb): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value

0x00000267: 
            [0xffffffff,  0x0000039f): 
            [0x00000032,  0x00000037): DW_OP_WASM_location 0x0 +4, DW_OP_stack_value

0x00000285: 
            [0xffffffff,  0x0000039f): 
            [0x0000004c,  0x00000055): DW_OP_consts +30, DW_OP_stack_value

0x000002a2: 
            [0xffffffff,  0x0000039f): 
            [0x0000004c,  0x00000055): DW_OP_lit0, DW_OP_stack_value
            [0x000002f8,  0x00000314): DW_OP_WASM_location 0x0 +6, DW_OP_stack_value

0x000002cc: 
            [0xffffffff,  0x0000039f): 
            [0x0000004c,  0x00000055): DW_OP_consts +0, DW_OP_stack_value
            [0x0000008e,  0x00000093): DW_OP_WASM_location 0x0 +0, DW_OP_stack_value
            [0x00000099,  0x000000c1): DW_OP_consts +0, DW_OP_stack_value
            [0x000000d7,  0x000000dc): DW_OP_WASM_location 0x0 +0, DW_OP_stack_value
            [0x000000f5,  0x000000f9): DW_OP_consts +0, DW_OP_stack_value
            [0x00000127,  0x0000012c): DW_OP_WASM_location 0x0 +0, DW_OP_stack_value
            [0x00000178,  0x00000188): DW_OP_consts +0, DW_OP_stack_value
            [0x000001fa,  0x0000020c): DW_OP_consts +0, DW_OP_stack_value
            [0x00000241,  0x00000255): DW_OP_consts +0, DW_OP_stack_value

0x00000354: 
            [0xffffffff,  0x0000039f): 
            [0x000000a8,  0x000000c1): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value

0x00000372: 
            [0xffffffff,  0x0000039f): 
            [0x000000b2,  0x000000c1): DW_OP_WASM_location 0x0 +5, DW_OP_stack_value

0x00000390: 
            [0xffffffff,  0x0000039f): 
            [0x000001e6,  0x000001ed): DW_OP_WASM_location 0x0 +6, DW_OP_stack_value
            [0x000002b3,  0x000002ba): DW_OP_WASM_location 0x0 +6, DW_OP_stack_value

0x000003bc: 
            [0xffffffff,  0x0000039f): 
            [0x0000017f,  0x00000188): DW_OP_WASM_location 0x0 +8, DW_OP_stack_value
            [0x00000248,  0x00000255): DW_OP_WASM_location 0x0 +8, DW_OP_stack_value

0x000003e8: 
            [0xffffffff,  0x0000039f): 
            [0x000002d6,  0x000002e1): DW_OP_consts +0, DW_OP_stack_value
            [0x0000030c,  0x00000314): DW_OP_WASM_location 0x0 +0, DW_OP_stack_value

0x00000413: 
            [0xffffffff,  0x0000039f): 
            [0x000002f1,  0x00000314): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value

.debug_line contents:
debug_line[0x00000000]
Line table prologue:
    total_length: 0x000005c1
         version: 4
 prologue_length: 0x000000dd
 min_inst_length: 1
max_ops_per_inst: 1
 default_is_stmt: 1
       line_base: -5
      line_range: 14
     opcode_base: 13
standard_opcode_lengths[DW_LNS_copy] = 0
standard_opcode_lengths[DW_LNS_advance_pc] = 1
standard_opcode_lengths[DW_LNS_advance_line] = 1
standard_opcode_lengths[DW_LNS_set_file] = 1
standard_opcode_lengths[DW_LNS_set_column] = 1
standard_opcode_lengths[DW_LNS_negate_stmt] = 0
standard_opcode_lengths[DW_LNS_set_basic_block] = 0
standard_opcode_lengths[DW_LNS_const_add_pc] = 0
standard_opcode_lengths[DW_LNS_fixed_advance_pc] = 1
standard_opcode_lengths[DW_LNS_set_prologue_end] = 0
standard_opcode_lengths[DW_LNS_set_epilogue_begin] = 0
standard_opcode_lengths[DW_LNS_set_isa] = 1
include_directories[  1] = "/usr/local/google/home/azakai/Dev"
file_names[  1]:
           name: "emscripten/tests/fannkuch.cpp"
      dir_index: 1
       mod_time: 0x00000000
         length: 0x00000000
file_names[  2]:
           name: "emscripten/system/include/libcxx/__nullptr"
      dir_index: 1
       mod_time: 0x00000000
         length: 0x00000000
file_names[  3]:
           name: "emscripten/system/include/libcxx/stddef.h"
      dir_index: 1
       mod_time: 0x00000000
         length: 0x00000000
file_names[  4]:
           name: "emscripten/system/include/libc/stdlib.h"
      dir_index: 1
       mod_time: 0x00000000
         length: 0x00000000
0x000000e7: 00 DW_LNE_set_address (0x0000000000000006)
0x000000ee: 03 DW_LNS_advance_line (27)
0x000000f0: 01 DW_LNS_copy
            0x0000000000000006     27      0      1   0             0  is_stmt


0x000000f1: 05 DW_LNS_set_column (14)
0x000000f3: 0a DW_LNS_set_prologue_end
0x000000f4: 7a address += 7,  line += 6
            0x000000000000000d     33     14      1   0             0  is_stmt prologue_end

0x000000f5: 06 DW_LNS_negate_stmt
0x000000f6: 03 DW_LNS_advance_line (0)
0x000000f8: 58 address += 5,  line += 0
            0x0000000000000012      0     14      1   0             0 

0x000000f9: 05 DW_LNS_set_column (27)
0x000000fb: 06 DW_LNS_negate_stmt
0x000000fc: 03 DW_LNS_advance_line (34)
0x000000fe: 4a address += 4,  line += 0
            0x0000000000000016     34     27      1   0             0  is_stmt

0x000000ff: 05 DW_LNS_set_column (18)
0x00000101: 06 DW_LNS_negate_stmt
0x00000102: 20 address += 1,  line += 0
            0x0000000000000017     34     18      1   0             0 

0x00000103: 05 DW_LNS_set_column (17)
0x00000105: 06 DW_LNS_negate_stmt
0x00000106: 9f address += 10,  line += 1
            0x0000000000000021     35     17      1   0             0  is_stmt

0x00000107: 05 DW_LNS_set_column (18)
0x00000109: 9f address += 10,  line += 1
            0x000000000000002b     36     18      1   0             0  is_stmt

0x0000010a: 06 DW_LNS_negate_stmt
0x0000010b: 03 DW_LNS_advance_line (0)
0x0000010d: 9e address += 10,  line += 0
            0x0000000000000035      0     18      1   0             0 

0x0000010e: 06 DW_LNS_negate_stmt
0x0000010f: 03 DW_LNS_advance_line (37)
0x00000111: 66 address += 6,  line += 0
            0x000000000000003b     37     18      1   0             0  is_stmt

0x00000112: 05 DW_LNS_set_column (4)
0x00000114: 06 DW_LNS_negate_stmt
0x00000115: 58 address += 5,  line += 0
            0x0000000000000040     37      4      1   0             0 

0x00000116: 03 DW_LNS_advance_line (0)
0x00000118: 2e address += 2,  line += 0
            0x0000000000000042      0      4      1   0             0 

0x00000119: 05 DW_LNS_set_column (7)
0x0000011b: 06 DW_LNS_negate_stmt
0x0000011c: 03 DW_LNS_advance_line (38)
0x0000011e: 2e address += 2,  line += 0
            0x0000000000000044     38      7      1   0             0  is_stmt

0x0000011f: 05 DW_LNS_set_column (16)
0x00000121: 06 DW_LNS_negate_stmt
0x00000122: 82 address += 8,  line += 0
            0x000000000000004c     38     16      1   0             0 

0x00000123: 05 DW_LNS_set_column (24)
0x00000125: 06 DW_LNS_negate_stmt
0x00000126: 57 address += 5,  line += -1
            0x0000000000000051     37     24      1   0             0  is_stmt

0x00000127: 05 DW_LNS_set_column (18)
0x00000129: 06 DW_LNS_negate_stmt
0x0000012a: 58 address += 5,  line += 0
            0x0000000000000056     37     18      1   0             0 

0x0000012b: 05 DW_LNS_set_column (4)
0x0000012d: 58 address += 5,  line += 0
            0x000000000000005b     37      4      1   0             0 

0x0000012e: 06 DW_LNS_negate_stmt
0x0000012f: 3e address += 3,  line += 2
            0x000000000000005e     39      4      1   0             0  is_stmt

0x00000130: 05 DW_LNS_set_column (16)
0x00000132: 06 DW_LNS_negate_stmt
0x00000133: 2e address += 2,  line += 0
            0x0000000000000060     39     16      1   0             0 

0x00000134: 05 DW_LNS_set_column (4)
0x00000136: 90 address += 9,  line += 0
            0x0000000000000069     39      4      1   0             0 

0x00000137: 05 DW_LNS_set_column (23)
0x00000139: 2e address += 2,  line += 0
            0x000000000000006b     39     23      1   0             0 

0x0000013a: 05 DW_LNS_set_column (19)
0x0000013c: 58 address += 5,  line += 0
            0x0000000000000070     39     19      1   0             0 

0x0000013d: 05 DW_LNS_set_column (4)
0x0000013f: 06 DW_LNS_negate_stmt
0x00000140: 59 address += 5,  line += 1
            0x0000000000000075     40      4      1   0             0  is_stmt

0x00000141: 05 DW_LNS_set_column (17)
0x00000143: 06 DW_LNS_negate_stmt
0x00000144: 82 address += 8,  line += 0
            0x000000000000007d     40     17      1   0             0 

0x00000145: 05 DW_LNS_set_column (18)
0x00000147: 06 DW_LNS_negate_stmt
0x00000148: a9 address += 11,  line += -3
            0x0000000000000088     37     18      1   0             0  is_stmt

0x00000149: 05 DW_LNS_set_column (4)
0x0000014b: 5e address += 5,  line += 6
            0x000000000000008d     43      4      1   0             0  is_stmt

0x0000014c: 06 DW_LNS_negate_stmt
0x0000014d: 03 DW_LNS_advance_line (0)
0x0000014f: 2e address += 2,  line += 0
            0x000000000000008f      0      4      1   0             0 

0x00000150: 05 DW_LNS_set_column (16)
0x00000152: 06 DW_LNS_negate_stmt
0x00000153: 03 DW_LNS_advance_line (44)
0x00000155: 4a address += 4,  line += 0
            0x0000000000000093     44     16      1   0             0  is_stmt

0x00000156: 06 DW_LNS_negate_stmt
0x00000157: 03 DW_LNS_advance_line (0)
0x00000159: 74 address += 7,  line += 0
            0x000000000000009a      0     16      1   0             0 

0x0000015a: 05 DW_LNS_set_column (10)
0x0000015c: 06 DW_LNS_negate_stmt
0x0000015d: 03 DW_LNS_advance_line (45)
0x0000015f: 2e address += 2,  line += 0
            0x000000000000009c     45     10      1   0             0  is_stmt

0x00000160: 05 DW_LNS_set_column (18)
0x00000162: 06 DW_LNS_negate_stmt
0x00000163: 2e address += 2,  line += 0
            0x000000000000009e     45     18      1   0             0 

0x00000164: 05 DW_LNS_set_column (10)
0x00000166: 90 address += 9,  line += 0
            0x00000000000000a7     45     10      1   0             0 

0x00000167: 05 DW_LNS_set_column (23)
0x00000169: 2e address += 2,  line += 0
            0x00000000000000a9     45     23      1   0             0 

0x0000016a: 05 DW_LNS_set_column (16)
0x0000016c: 06 DW_LNS_negate_stmt
0x0000016d: 57 address += 5,  line += -1
            0x00000000000000ae     44     16      1   0             0  is_stmt

0x0000016e: 05 DW_LNS_set_column (0)
0x00000170: 06 DW_LNS_negate_stmt
0x00000171: 03 DW_LNS_advance_line (0)
0x00000173: 74 address += 7,  line += 0
            0x00000000000000b5      0      0      1   0             0 

0x00000174: 05 DW_LNS_set_column (7)
0x00000176: 03 DW_LNS_advance_line (44)
0x00000178: 4a address += 4,  line += 0
            0x00000000000000b9     44      7      1   0             0 

0x00000179: 05 DW_LNS_set_column (11)
0x0000017b: 06 DW_LNS_negate_stmt
0x0000017c: 68 address += 6,  line += 2
            0x00000000000000bf     46     11      1   0             0  is_stmt

0x0000017d: 05 DW_LNS_set_column (28)
0x0000017f: 06 DW_LNS_negate_stmt
0x00000180: ba address += 12,  line += 0
            0x00000000000000cb     46     28      1   0             0 

0x00000181: 05 DW_LNS_set_column (41)
0x00000183: 58 address += 5,  line += 0
            0x00000000000000d0     46     41      1   0             0 

0x00000184: 05 DW_LNS_set_column (21)
0x00000186: 06 DW_LNS_negate_stmt
0x00000187: 5a address += 5,  line += 2
            0x00000000000000d5     48     21      1   0             0  is_stmt

0x00000188: 05 DW_LNS_set_column (14)
0x0000018a: bc address += 12,  line += 2
            0x00000000000000e1     50     14      1   0             0  is_stmt

0x0000018b: 06 DW_LNS_negate_stmt
0x0000018c: 03 DW_LNS_advance_line (0)
0x0000018e: 74 address += 7,  line += 0
            0x00000000000000e8      0     14      1   0             0 

0x0000018f: 05 DW_LNS_set_column (38)
0x00000191: 06 DW_LNS_negate_stmt
0x00000192: 03 DW_LNS_advance_line (52)
0x00000194: ba address += 12,  line += 0
            0x00000000000000f4     52     38      1   0             0  is_stmt

0x00000195: 05 DW_LNS_set_column (0)
0x00000197: 06 DW_LNS_negate_stmt
0x00000198: 03 DW_LNS_advance_line (0)
0x0000019a: 74 address += 7,  line += 0
            0x00000000000000fb      0      0      1   0             0 

0x0000019b: 05 DW_LNS_set_column (22)
0x0000019d: 06 DW_LNS_negate_stmt
0x0000019e: 03 DW_LNS_advance_line (53)
0x000001a0: c8 address += 13,  line += 0
            0x0000000000000108     53     22      1   0             0  is_stmt

0x000001a1: 05 DW_LNS_set_column (24)
0x000001a3: e5 address += 15,  line += 1
            0x0000000000000117     54     24      1   0             0  is_stmt

0x000001a4: 05 DW_LNS_set_column (26)
0x000001a6: 06 DW_LNS_negate_stmt
0x000001a7: 2e address += 2,  line += 0
            0x0000000000000119     54     26      1   0             0 

0x000001a8: 05 DW_LNS_set_column (24)
0x000001aa: c8 address += 13,  line += 0
            0x0000000000000126     54     24      1   0             0 

0x000001ab: 06 DW_LNS_negate_stmt
0x000001ac: 3d address += 3,  line += 1
            0x0000000000000129     55     24      1   0             0  is_stmt

0x000001ad: 05 DW_LNS_set_column (44)
0x000001af: 71 address += 7,  line += -3
            0x0000000000000130     52     44      1   0             0  is_stmt

0x000001b0: 06 DW_LNS_negate_stmt
0x000001b1: 03 DW_LNS_advance_line (0)
0x000001b3: 58 address += 5,  line += 0
            0x0000000000000135      0     44      1   0             0 

0x000001b4: 05 DW_LNS_set_column (38)
0x000001b6: 03 DW_LNS_advance_line (52)
0x000001b8: 74 address += 7,  line += 0
            0x000000000000013c     52     38      1   0             0 

0x000001b9: 05 DW_LNS_set_column (13)
0x000001bb: 3c address += 3,  line += 0
            0x000000000000013f     52     13      1   0             0 

0x000001bc: 05 DW_LNS_set_column (19)
0x000001be: 06 DW_LNS_negate_stmt
0x000001bf: 50 address += 4,  line += 6
            0x0000000000000143     58     19      1   0             0  is_stmt

0x000001c0: 05 DW_LNS_set_column (21)
0x000001c2: e5 address += 15,  line += 1
            0x0000000000000152     59     21      1   0             0  is_stmt

0x000001c3: 05 DW_LNS_set_column (18)
0x000001c5: 72 address += 7,  line += -2
            0x0000000000000159     57     18      1   0             0  is_stmt

0x000001c6: 05 DW_LNS_set_column (0)
0x000001c8: 06 DW_LNS_negate_stmt
0x000001c9: 03 DW_LNS_advance_line (0)
0x000001cb: 74 address += 7,  line += 0
            0x0000000000000160      0      0      1   0             0 

0x000001cc: 05 DW_LNS_set_column (14)
0x000001ce: 06 DW_LNS_negate_stmt
0x000001cf: 03 DW_LNS_advance_line (62)
0x000001d1: 90 address += 9,  line += 0
            0x0000000000000169     62     14      1   0             0  is_stmt

0x000001d2: 05 DW_LNS_set_column (23)
0x000001d4: 06 DW_LNS_negate_stmt
0x000001d5: 4a address += 4,  line += 0
            0x000000000000016d     62     23      1   0             0 

0x000001d6: 05 DW_LNS_set_column (14)
0x000001d8: 58 address += 5,  line += 0
            0x0000000000000172     62     14      1   0             0 

0x000001d9: 03 DW_LNS_advance_line (0)
0x000001db: 3c address += 3,  line += 0
            0x0000000000000175      0     14      1   0             0 

0x000001dc: 05 DW_LNS_set_column (16)
0x000001de: 06 DW_LNS_negate_stmt
0x000001df: 03 DW_LNS_advance_line (66)
0x000001e2: 20 address += 1,  line += 0
            0x0000000000000176     66     16      1   0             0  is_stmt

0x000001e3: 06 DW_LNS_negate_stmt
0x000001e4: 03 DW_LNS_advance_line (0)
0x000001e7: 74 address += 7,  line += 0
            0x000000000000017d      0     16      1   0             0 

0x000001e8: 05 DW_LNS_set_column (27)
0x000001ea: 06 DW_LNS_negate_stmt
0x000001eb: 03 DW_LNS_advance_line (75)
0x000001ee: 82 address += 8,  line += 0
            0x0000000000000185     75     27      1   0             0  is_stmt

0x000001ef: 06 DW_LNS_negate_stmt
0x000001f0: 03 DW_LNS_advance_line (0)
0x000001f3: 74 address += 7,  line += 0
            0x000000000000018c      0     27      1   0             0 

0x000001f4: 05 DW_LNS_set_column (16)
0x000001f6: 06 DW_LNS_negate_stmt
0x000001f7: 03 DW_LNS_advance_line (76)
0x000001fa: 2e address += 2,  line += 0
            0x000000000000018e     76     16      1   0             0  is_stmt

0x000001fb: 05 DW_LNS_set_column (27)
0x000001fd: 06 DW_LNS_negate_stmt
0x000001fe: 82 address += 8,  line += 0
            0x0000000000000196     76     27      1   0             0 

0x000001ff: 05 DW_LNS_set_column (35)
0x00000201: 2e address += 2,  line += 0
            0x0000000000000198     76     35      1   0             0 

0x00000202: 05 DW_LNS_set_column (27)
0x00000204: 90 address += 9,  line += 0
            0x00000000000001a1     76     27      1   0             0 

0x00000205: 05 DW_LNS_set_column (25)
0x00000207: 58 address += 5,  line += 0
            0x00000000000001a6     76     25      1   0             0 

0x00000208: 05 DW_LNS_set_column (27)
0x0000020a: 06 DW_LNS_negate_stmt
0x0000020b: 3b address += 3,  line += -1
            0x00000000000001a9     75     27      1   0             0  is_stmt

0x0000020c: 05 DW_LNS_set_column (13)
0x0000020e: 06 DW_LNS_negate_stmt
0x0000020f: 58 address += 5,  line += 0
            0x00000000000001ae     75     13      1   0             0 

0x00000210: 05 DW_LNS_set_column (0)
0x00000212: 03 DW_LNS_advance_line (0)
0x00000215: 3c address += 3,  line += 0
            0x00000000000001b1      0      0      1   0             0 

0x00000216: 05 DW_LNS_set_column (13)
0x00000218: 06 DW_LNS_negate_stmt
0x00000219: 03 DW_LNS_advance_line (77)
0x0000021c: 58 address += 5,  line += 0
            0x00000000000001b6     77     13      1   0             0  is_stmt

0x0000021d: 05 DW_LNS_set_column (22)
0x0000021f: 06 DW_LNS_negate_stmt
0x00000220: 82 address += 8,  line += 0
            0x00000000000001be     77     22      1   0             0 

0x00000221: 05 DW_LNS_set_column (16)
0x00000223: 06 DW_LNS_negate_stmt
0x00000224: 5a address += 5,  line += 2
            0x00000000000001c3     79     16      1   0             0  is_stmt

0x00000225: 05 DW_LNS_set_column (14)
0x00000227: 06 DW_LNS_negate_stmt
0x00000228: 82 address += 8,  line += 0
            0x00000000000001cb     79     14      1   0             0 

0x00000229: 05 DW_LNS_set_column (25)
0x0000022b: e4 address += 15,  line += 0
            0x00000000000001da     79     25      1   0             0 

0x0000022c: 05 DW_LNS_set_column (11)
0x0000022e: 06 DW_LNS_negate_stmt
0x0000022f: 76 address += 7,  line += 2
            0x00000000000001e1     81     11      1   0             0  is_stmt

0x00000230: 05 DW_LNS_set_column (16)
0x00000232: 03 DW_LNS_advance_line (66)
0x00000234: 58 address += 5,  line += 0
            0x00000000000001e6     66     16      1   0             0  is_stmt

0x00000235: 05 DW_LNS_set_column (22)
0x00000237: 7c address += 7,  line += 8
            0x00000000000001ed     74     22      1   0             0  is_stmt

0x00000238: 05 DW_LNS_set_column (4)
0x0000023a: 03 DW_LNS_advance_line (37)
0x0000023c: 90 address += 9,  line += 0
            0x00000000000001f6     37      4      1   0             0  is_stmt

0x0000023d: 3e address += 3,  line += 2
            0x00000000000001f9     39      4      1   0             0  is_stmt

0x0000023e: 05 DW_LNS_set_column (16)
0x00000240: 06 DW_LNS_negate_stmt
0x00000241: 2e address += 2,  line += 0
            0x00000000000001fb     39     16      1   0             0 

0x00000242: 05 DW_LNS_set_column (4)
0x00000244: 90 address += 9,  line += 0
            0x0000000000000204     39      4      1   0             0 

0x00000245: 05 DW_LNS_set_column (23)
0x00000247: 2e address += 2,  line += 0
            0x0000000000000206     39     23      1   0             0 

0x00000248: 05 DW_LNS_set_column (19)
0x0000024a: 58 address += 5,  line += 0
            0x000000000000020b     39     19      1   0             0 

0x0000024b: 05 DW_LNS_set_column (4)
0x0000024d: 06 DW_LNS_negate_stmt
0x0000024e: 59 address += 5,  line += 1
            0x0000000000000210     40      4      1   0             0  is_stmt

0x0000024f: 05 DW_LNS_set_column (17)
0x00000251: 06 DW_LNS_negate_stmt
0x00000252: 82 address += 8,  line += 0
            0x0000000000000218     40     17      1   0             0 

0x00000253: 03 DW_LNS_advance_line (0)
0x00000255: 74 address += 7,  line += 0
            0x000000000000021f      0     17      1   0             0 

0x00000256: 05 DW_LNS_set_column (16)
0x00000258: 06 DW_LNS_negate_stmt
0x00000259: 03 DW_LNS_advance_line (44)
0x0000025b: 90 address += 9,  line += 0
            0x0000000000000228     44     16      1   0             0  is_stmt

0x0000025c: 06 DW_LNS_negate_stmt
0x0000025d: 03 DW_LNS_advance_line (0)
0x0000025f: 74 address += 7,  line += 0
            0x000000000000022f      0     16      1   0             0 

0x00000260: 05 DW_LNS_set_column (10)
0x00000262: 06 DW_LNS_negate_stmt
0x00000263: 03 DW_LNS_advance_line (45)
0x00000265: 2e address += 2,  line += 0
            0x0000000000000231     45     10      1   0             0  is_stmt

0x00000266: 05 DW_LNS_set_column (18)
0x00000268: 06 DW_LNS_negate_stmt
0x00000269: 2e address += 2,  line += 0
            0x0000000000000233     45     18      1   0             0 

0x0000026a: 05 DW_LNS_set_column (10)
0x0000026c: 90 address += 9,  line += 0
            0x000000000000023c     45     10      1   0             0 

0x0000026d: 05 DW_LNS_set_column (23)
0x0000026f: 2e address += 2,  line += 0
            0x000000000000023e     45     23      1   0             0 

0x00000270: 05 DW_LNS_set_column (16)
0x00000272: 06 DW_LNS_negate_stmt
0x00000273: 57 address += 5,  line += -1
            0x0000000000000243     44     16      1   0             0  is_stmt

0x00000274: 06 DW_LNS_negate_stmt
0x00000275: 03 DW_LNS_advance_line (0)
0x00000277: e4 address += 15,  line += 0
            0x0000000000000252      0     16      1   0             0 

0x00000278: 05 DW_LNS_set_column (11)
0x0000027a: 06 DW_LNS_negate_stmt
0x0000027b: 03 DW_LNS_advance_line (46)
0x0000027d: 2e address += 2,  line += 0
            0x0000000000000254     46     11      1   0             0  is_stmt

0x0000027e: 05 DW_LNS_set_column (28)
0x00000280: 06 DW_LNS_negate_stmt
0x00000281: ba address += 12,  line += 0
            0x0000000000000260     46     28      1   0             0 

0x00000282: 05 DW_LNS_set_column (41)
0x00000284: 58 address += 5,  line += 0
            0x0000000000000265     46     41      1   0             0 

0x00000285: 05 DW_LNS_set_column (14)
0x00000287: 06 DW_LNS_negate_stmt
0x00000288: 5c address += 5,  line += 4
            0x000000000000026a     50     14      1   0             0  is_stmt

0x00000289: 06 DW_LNS_negate_stmt
0x0000028a: 03 DW_LNS_advance_line (0)
0x0000028c: 74 address += 7,  line += 0
            0x0000000000000271      0     14      1   0             0 

0x0000028d: 05 DW_LNS_set_column (38)
0x0000028f: 06 DW_LNS_negate_stmt
0x00000290: 03 DW_LNS_advance_line (52)
0x00000292: ba address += 12,  line += 0
            0x000000000000027d     52     38      1   0             0  is_stmt

0x00000293: 05 DW_LNS_set_column (0)
0x00000295: 06 DW_LNS_negate_stmt
0x00000296: 03 DW_LNS_advance_line (0)
0x00000298: 74 address += 7,  line += 0
            0x0000000000000284      0      0      1   0             0 

0x00000299: 05 DW_LNS_set_column (22)
0x0000029b: 06 DW_LNS_negate_stmt
0x0000029c: 03 DW_LNS_advance_line (53)
0x0000029e: c8 address += 13,  line += 0
            0x0000000000000291     53     22      1   0             0  is_stmt

0x0000029f: 05 DW_LNS_set_column (24)
0x000002a1: e5 address += 15,  line += 1
            0x00000000000002a0     54     24      1   0             0  is_stmt

0x000002a2: 05 DW_LNS_set_column (26)
0x000002a4: 06 DW_LNS_negate_stmt
0x000002a5: 2e address += 2,  line += 0
            0x00000000000002a2     54     26      1   0             0 

0x000002a6: 05 DW_LNS_set_column (24)
0x000002a8: c8 address += 13,  line += 0
            0x00000000000002af     54     24      1   0             0 

0x000002a9: 06 DW_LNS_negate_stmt
0x000002aa: 3d address += 3,  line += 1
            0x00000000000002b2     55     24      1   0             0  is_stmt

0x000002ab: 05 DW_LNS_set_column (44)
0x000002ad: 71 address += 7,  line += -3
            0x00000000000002b9     52     44      1   0             0  is_stmt

0x000002ae: 06 DW_LNS_negate_stmt
0x000002af: 03 DW_LNS_advance_line (0)
0x000002b1: 58 address += 5,  line += 0
            0x00000000000002be      0     44      1   0             0 

0x000002b2: 05 DW_LNS_set_column (38)
0x000002b4: 03 DW_LNS_advance_line (52)
0x000002b6: 74 address += 7,  line += 0
            0x00000000000002c5     52     38      1   0             0 

0x000002b7: 03 DW_LNS_advance_line (0)
0x000002b9: 58 address += 5,  line += 0
            0x00000000000002ca      0     38      1   0             0 

0x000002ba: 05 DW_LNS_set_column (19)
0x000002bc: 06 DW_LNS_negate_stmt
0x000002bd: 03 DW_LNS_advance_line (58)
0x000002bf: 2e address += 2,  line += 0
            0x00000000000002cc     58     19      1   0             0  is_stmt

0x000002c0: 05 DW_LNS_set_column (21)
0x000002c2: e5 address += 15,  line += 1
            0x00000000000002db     59     21      1   0             0  is_stmt

0x000002c3: 05 DW_LNS_set_column (18)
0x000002c5: 72 address += 7,  line += -2
            0x00000000000002e2     57     18      1   0             0  is_stmt

0x000002c6: 05 DW_LNS_set_column (0)
0x000002c8: 06 DW_LNS_negate_stmt
0x000002c9: 03 DW_LNS_advance_line (0)
0x000002cb: 74 address += 7,  line += 0
            0x00000000000002e9      0      0      1   0             0 

0x000002cc: 05 DW_LNS_set_column (14)
0x000002ce: 06 DW_LNS_negate_stmt
0x000002cf: 03 DW_LNS_advance_line (62)
0x000002d1: 90 address += 9,  line += 0
            0x00000000000002f2     62     14      1   0             0  is_stmt

0x000002d2: 05 DW_LNS_set_column (23)
0x000002d4: 06 DW_LNS_negate_stmt
0x000002d5: 4a address += 4,  line += 0
            0x00000000000002f6     62     23      1   0             0 

0x000002d6: 05 DW_LNS_set_column (14)
0x000002d8: 58 address += 5,  line += 0
            0x00000000000002fb     62     14      1   0             0 

0x000002d9: 03 DW_LNS_advance_line (0)
0x000002db: 3c address += 3,  line += 0
            0x00000000000002fe      0     14      1   0             0 

0x000002dc: 05 DW_LNS_set_column (16)
0x000002de: 06 DW_LNS_negate_stmt
0x000002df: 03 DW_LNS_advance_line (66)
0x000002e2: 20 address += 1,  line += 0
            0x00000000000002ff     66     16      1   0             0  is_stmt

0x000002e3: 06 DW_LNS_negate_stmt
0x000002e4: 03 DW_LNS_advance_line (0)
0x000002e7: 74 address += 7,  line += 0
            0x0000000000000306      0     16      1   0             0 

0x000002e8: 05 DW_LNS_set_column (27)
0x000002ea: 06 DW_LNS_negate_stmt
0x000002eb: 03 DW_LNS_advance_line (75)
0x000002ee: 82 address += 8,  line += 0
            0x000000000000030e     75     27      1   0             0  is_stmt

0x000002ef: 06 DW_LNS_negate_stmt
0x000002f0: 03 DW_LNS_advance_line (0)
0x000002f3: 74 address += 7,  line += 0
            0x0000000000000315      0     27      1   0             0 

0x000002f4: 05 DW_LNS_set_column (16)
0x000002f6: 06 DW_LNS_negate_stmt
0x000002f7: 03 DW_LNS_advance_line (76)
0x000002fa: 2e address += 2,  line += 0
            0x0000000000000317     76     16      1   0             0  is_stmt

0x000002fb: 05 DW_LNS_set_column (27)
0x000002fd: 06 DW_LNS_negate_stmt
0x000002fe: 82 address += 8,  line += 0
            0x000000000000031f     76     27      1   0             0 

0x000002ff: 05 DW_LNS_set_column (35)
0x00000301: 2e address += 2,  line += 0
            0x0000000000000321     76     35      1   0             0 

0x00000302: 05 DW_LNS_set_column (27)
0x00000304: 90 address += 9,  line += 0
            0x000000000000032a     76     27      1   0             0 

0x00000305: 05 DW_LNS_set_column (25)
0x00000307: 58 address += 5,  line += 0
            0x000000000000032f     76     25      1   0             0 

0x00000308: 05 DW_LNS_set_column (27)
0x0000030a: 06 DW_LNS_negate_stmt
0x0000030b: 3b address += 3,  line += -1
            0x0000000000000332     75     27      1   0             0  is_stmt

0x0000030c: 06 DW_LNS_negate_stmt
0x0000030d: 03 DW_LNS_advance_line (0)
0x00000310: 74 address += 7,  line += 0
            0x0000000000000339      0     27      1   0             0 

0x00000311: 05 DW_LNS_set_column (13)
0x00000313: 06 DW_LNS_negate_stmt
0x00000314: 03 DW_LNS_advance_line (77)
0x00000317: 66 address += 6,  line += 0
            0x000000000000033f     77     13      1   0             0  is_stmt

0x00000318: 05 DW_LNS_set_column (22)
0x0000031a: 06 DW_LNS_negate_stmt
0x0000031b: 82 address += 8,  line += 0
            0x0000000000000347     77     22      1   0             0 

0x0000031c: 05 DW_LNS_set_column (16)
0x0000031e: 06 DW_LNS_negate_stmt
0x0000031f: 5a address += 5,  line += 2
            0x000000000000034c     79     16      1   0             0  is_stmt

0x00000320: 05 DW_LNS_set_column (14)
0x00000322: 06 DW_LNS_negate_stmt
0x00000323: 82 address += 8,  line += 0
            0x0000000000000354     79     14      1   0             0 

0x00000324: 05 DW_LNS_set_column (25)
0x00000326: e4 address += 15,  line += 0
            0x0000000000000363     79     25      1   0             0 

0x00000327: 05 DW_LNS_set_column (11)
0x00000329: 06 DW_LNS_negate_stmt
0x0000032a: 76 address += 7,  line += 2
            0x000000000000036a     81     11      1   0             0  is_stmt

0x0000032b: 05 DW_LNS_set_column (16)
0x0000032d: 03 DW_LNS_advance_line (66)
0x0000032f: 58 address += 5,  line += 0
            0x000000000000036f     66     16      1   0             0  is_stmt

0x00000330: 05 DW_LNS_set_column (22)
0x00000332: 7c address += 7,  line += 8
            0x0000000000000376     74     22      1   0             0  is_stmt

0x00000333: 06 DW_LNS_negate_stmt
0x00000334: 03 DW_LNS_advance_line (0)
0x00000337: 90 address += 9,  line += 0
            0x000000000000037f      0     22      1   0             0 

0x00000338: 05 DW_LNS_set_column (13)
0x0000033a: 06 DW_LNS_negate_stmt
0x0000033b: 03 DW_LNS_advance_line (67)
0x0000033e: 3c address += 3,  line += 0
            0x0000000000000382     67     13      1   0             0  is_stmt

0x0000033f: 83 address += 8,  line += 1
            0x000000000000038a     68     13      1   0             0  is_stmt

0x00000340: 83 address += 8,  line += 1
            0x0000000000000392     69     13      1   0             0  is_stmt

0x00000341: 83 address += 8,  line += 1
            0x000000000000039a     70     13      1   0             0  is_stmt

0x00000342: 02 DW_LNS_advance_pc (3)
0x00000344: 00 DW_LNE_end_sequence
            0x000000000000039d     70     13      1   0             0  is_stmt end_sequence

0x00000347: 00 DW_LNE_set_address (0x000000000000039f)
0x0000034e: 03 DW_LNS_advance_line (152)
0x00000351: 01 DW_LNS_copy
            0x000000000000039f    152      0      1   0             0  is_stmt


0x00000352: 05 DW_LNS_set_column (17)
0x00000354: 0a DW_LNS_set_prologue_end
0x00000355: 08 DW_LNS_const_add_pc (0x0000000000000011)
0x00000356: 91 address += 9,  line += 1
            0x00000000000003b9    153     17      1   0             0  is_stmt prologue_end

0x00000357: 05 DW_LNS_set_column (12)
0x00000359: 06 DW_LNS_negate_stmt
0x0000035a: 58 address += 5,  line += 0
            0x00000000000003be    153     12      1   0             0 

0x0000035b: 03 DW_LNS_advance_line (0)
0x0000035e: 2e address += 2,  line += 0
            0x00000000000003c0      0     12      1   0             0 

0x0000035f: 05 DW_LNS_set_column (28)
0x00000361: 03 DW_LNS_advance_line (153)
0x00000364: 4a address += 4,  line += 0
            0x00000000000003c4    153     28      1   0             0 

0x00000365: 05 DW_LNS_set_column (23)
0x00000367: 58 address += 5,  line += 0
            0x00000000000003c9    153     23      1   0             0 

0x00000368: 03 DW_LNS_advance_line (0)
0x0000036b: 66 address += 6,  line += 0
            0x00000000000003cf      0     23      1   0             0 

0x0000036c: 05 DW_LNS_set_column (10)
0x0000036e: 06 DW_LNS_negate_stmt
0x0000036f: 03 DW_LNS_advance_line (155)
0x00000372: 4a address += 4,  line += 0
            0x00000000000003d3    155     10      1   0             0  is_stmt

0x00000373: 05 DW_LNS_set_column (8)
0x00000375: 06 DW_LNS_negate_stmt
0x00000376: 20 address += 1,  line += 0
            0x00000000000003d4    155      8      1   0             0 

0x00000377: 03 DW_LNS_advance_line (0)
0x0000037a: 2e address += 2,  line += 0
            0x00000000000003d6      0      8      1   0             0 

0x0000037b: 05 DW_LNS_set_column (7)
0x0000037d: 06 DW_LNS_negate_stmt
0x0000037e: 03 DW_LNS_advance_line (156)
0x00000381: 20 address += 1,  line += 0
            0x00000000000003d7    156      7      1   0             0  is_stmt

0x00000382: 06 DW_LNS_negate_stmt
0x00000383: 03 DW_LNS_advance_line (0)
0x00000386: 08 DW_LNS_const_add_pc (0x0000000000000011)
0x00000387: 2e address += 2,  line += 0
            0x00000000000003ea      0      7      1   0             0 

0x00000388: 05 DW_LNS_set_column (18)
0x0000038a: 06 DW_LNS_negate_stmt
0x0000038b: 03 DW_LNS_advance_line (94)
0x0000038e: 3c address += 3,  line += 0
            0x00000000000003ed     94     18      1   0             0  is_stmt

0x0000038f: 05 DW_LNS_set_column (4)
0x00000391: 06 DW_LNS_negate_stmt
0x00000392: 58 address += 5,  line += 0
            0x00000000000003f2     94      4      1   0             0 

0x00000393: 03 DW_LNS_advance_line (0)
0x00000396: 08 DW_LNS_const_add_pc (0x0000000000000011)
0x00000397: 12 address += 0,  line += 0
            0x0000000000000403      0      4      1   0             0 

0x00000398: 05 DW_LNS_set_column (29)
0x0000039a: 06 DW_LNS_negate_stmt
0x0000039b: 03 DW_LNS_advance_line (95)
0x0000039e: 4a address += 4,  line += 0
            0x0000000000000407     95     29      1   0             0  is_stmt

0x0000039f: 05 DW_LNS_set_column (19)
0x000003a1: 69 address += 6,  line += 3
            0x000000000000040d     98     19      1   0             0  is_stmt

0x000003a2: 05 DW_LNS_set_column (16)
0x000003a4: 73 address += 7,  line += -1
            0x0000000000000414     97     16      1   0             0  is_stmt

0x000003a5: 73 address += 7,  line += -1
            0x000000000000041b     96     16      1   0             0  is_stmt

0x000003a6: 06 DW_LNS_negate_stmt
0x000003a7: 03 DW_LNS_advance_line (0)
0x000003aa: 74 address += 7,  line += 0
            0x0000000000000422      0     16      1   0             0 

0x000003ab: 05 DW_LNS_set_column (28)
0x000003ad: 06 DW_LNS_negate_stmt
0x000003ae: 03 DW_LNS_advance_line (94)
0x000003b1: 4a address += 4,  line += 0
            0x0000000000000426     94     28      1   0             0  is_stmt

0x000003b2: 05 DW_LNS_set_column (18)
0x000003b4: 06 DW_LNS_negate_stmt
0x000003b5: 58 address += 5,  line += 0
            0x000000000000042b     94     18      1   0             0 

0x000003b6: 05 DW_LNS_set_column (4)
0x000003b8: 58 address += 5,  line += 0
            0x0000000000000430     94      4      1   0             0 

0x000003b9: 03 DW_LNS_advance_line (0)
0x000003bc: 4a address += 4,  line += 0
            0x0000000000000434      0      4      1   0             0 

0x000003bd: 05 DW_LNS_set_column (27)
0x000003bf: 06 DW_LNS_negate_stmt
0x000003c0: 03 DW_LNS_advance_line (102)
0x000003c3: 4a address += 4,  line += 0
            0x0000000000000438    102     27      1   0             0  is_stmt

0x000003c4: 05 DW_LNS_set_column (18)
0x000003c6: 06 DW_LNS_negate_stmt
0x000003c7: 58 address += 5,  line += 0
            0x000000000000043d    102     18      1   0             0 

0x000003c8: 06 DW_LNS_negate_stmt
0x000003c9: 9f address += 10,  line += 1
            0x0000000000000447    103     18      1   0             0  is_stmt

0x000003ca: 06 DW_LNS_negate_stmt
0x000003cb: 03 DW_LNS_advance_line (0)
0x000003ce: 9e address += 10,  line += 0
            0x0000000000000451      0     18      1   0             0 

0x000003cf: 06 DW_LNS_negate_stmt
0x000003d0: 03 DW_LNS_advance_line (105)
0x000003d3: 82 address += 8,  line += 0
            0x0000000000000459    105     18      1   0             0  is_stmt

0x000003d4: 05 DW_LNS_set_column (4)
0x000003d6: 06 DW_LNS_negate_stmt
0x000003d7: 58 address += 5,  line += 0
            0x000000000000045e    105      4      1   0             0 

0x000003d8: 03 DW_LNS_advance_line (0)
0x000003db: 2e address += 2,  line += 0
            0x0000000000000460      0      4      1   0             0 

0x000003dc: 05 DW_LNS_set_column (7)
0x000003de: 06 DW_LNS_negate_stmt
0x000003df: 03 DW_LNS_advance_line (106)
0x000003e2: 2e address += 2,  line += 0
            0x0000000000000462    106      7      1   0             0  is_stmt

0x000003e3: 05 DW_LNS_set_column (16)
0x000003e5: 06 DW_LNS_negate_stmt
0x000003e6: 82 address += 8,  line += 0
            0x000000000000046a    106     16      1   0             0 

0x000003e7: 05 DW_LNS_set_column (24)
0x000003e9: 06 DW_LNS_negate_stmt
0x000003ea: 57 address += 5,  line += -1
            0x000000000000046f    105     24      1   0             0  is_stmt

0x000003eb: 05 DW_LNS_set_column (18)
0x000003ed: 06 DW_LNS_negate_stmt
0x000003ee: 58 address += 5,  line += 0
            0x0000000000000474    105     18      1   0             0 

0x000003ef: 03 DW_LNS_advance_line (0)
0x000003f2: 74 address += 7,  line += 0
            0x000000000000047b      0     18      1   0             0 

0x000003f3: 05 DW_LNS_set_column (13)
0x000003f5: 06 DW_LNS_negate_stmt
0x000003f6: 03 DW_LNS_advance_line (112)
0x000003f9: 08 DW_LNS_const_add_pc (0x0000000000000011)
0x000003fa: d6 address += 14,  line += 0
            0x000000000000049a    112     13      1   0             0  is_stmt

0x000003fb: 05 DW_LNS_set_column (26)
0x000003fd: 06 DW_LNS_negate_stmt
0x000003fe: 2e address += 2,  line += 0
            0x000000000000049c    112     26      1   0             0 

0x000003ff: 05 DW_LNS_set_column (35)
0x00000401: c8 address += 13,  line += 0
            0x00000000000004a9    112     35      1   0             0 

0x00000402: 05 DW_LNS_set_column (13)
0x00000404: 20 address += 1,  line += 0
            0x00000000000004aa    112     13      1   0             0 

0x00000405: 05 DW_LNS_set_column (30)
0x00000407: 06 DW_LNS_negate_stmt
0x00000408: 08 DW_LNS_const_add_pc (0x0000000000000011)
0x00000409: 49 address += 4,  line += -1
            0x00000000000004bf    111     30      1   0             0  is_stmt

0x0000040a: 05 DW_LNS_set_column (24)
0x0000040c: 06 DW_LNS_negate_stmt
0x0000040d: 58 address += 5,  line += 0
            0x00000000000004c4    111     24      1   0             0 

0x0000040e: 05 DW_LNS_set_column (10)
0x00000410: 58 address += 5,  line += 0
            0x00000000000004c9    111     10      1   0             0 

0x00000411: 06 DW_LNS_negate_stmt
0x00000412: 5a address += 5,  line += 2
            0x00000000000004ce    113     10      1   0             0  is_stmt

0x00000413: 06 DW_LNS_negate_stmt
0x00000414: 03 DW_LNS_advance_line (0)
0x00000417: 74 address += 7,  line += 0
            0x00000000000004d5      0     10      1   0             0 

0x00000418: 05 DW_LNS_set_column (16)
0x0000041a: 06 DW_LNS_negate_stmt
0x0000041b: 03 DW_LNS_advance_line (118)
0x0000041e: 2e address += 2,  line += 0
            0x00000000000004d7    118     16      1   0             0  is_stmt

0x0000041f: 05 DW_LNS_set_column (7)
0x00000421: 06 DW_LNS_negate_stmt
0x00000422: 58 address += 5,  line += 0
            0x00000000000004dc    118      7      1   0             0 

0x00000423: 03 DW_LNS_advance_line (0)
0x00000426: 2e address += 2,  line += 0
            0x00000000000004de      0      7      1   0             0 

0x00000427: 05 DW_LNS_set_column (10)
0x00000429: 06 DW_LNS_negate_stmt
0x0000042a: 03 DW_LNS_advance_line (119)
0x0000042d: 2e address += 2,  line += 0
            0x00000000000004e0    119     10      1   0             0  is_stmt

0x0000042e: 05 DW_LNS_set_column (18)
0x00000430: 06 DW_LNS_negate_stmt
0x00000431: 2e address += 2,  line += 0
            0x00000000000004e2    119     18      1   0             0 

0x00000432: 05 DW_LNS_set_column (10)
0x00000434: 90 address += 9,  line += 0
            0x00000000000004eb    119     10      1   0             0 

0x00000435: 05 DW_LNS_set_column (23)
0x00000437: 2e address += 2,  line += 0
            0x00000000000004ed    119     23      1   0             0 

0x00000438: 05 DW_LNS_set_column (16)
0x0000043a: 06 DW_LNS_negate_stmt
0x0000043b: 57 address += 5,  line += -1
            0x00000000000004f2    118     16      1   0             0  is_stmt

0x0000043c: 05 DW_LNS_set_column (7)
0x0000043e: 06 DW_LNS_negate_stmt
0x0000043f: ac address += 11,  line += 0
            0x00000000000004fd    118      7      1   0             0 

0x00000440: 05 DW_LNS_set_column (16)
0x00000442: 06 DW_LNS_negate_stmt
0x00000443: 6a address += 6,  line += 4
            0x0000000000000503    122     16      1   0             0  is_stmt

0x00000444: 06 DW_LNS_negate_stmt
0x00000445: 03 DW_LNS_advance_line (0)
0x00000448: 74 address += 7,  line += 0
            0x000000000000050a      0     16      1   0             0 

0x00000449: 05 DW_LNS_set_column (22)
0x0000044b: 06 DW_LNS_negate_stmt
0x0000044c: 03 DW_LNS_advance_line (125)
0x0000044f: c8 address += 13,  line += 0
            0x0000000000000517    125     22      1   0             0  is_stmt

0x00000450: 06 DW_LNS_negate_stmt
0x00000451: 03 DW_LNS_advance_line (0)
0x00000454: 74 address += 7,  line += 0
            0x000000000000051e      0     22      1   0             0 

0x00000455: 05 DW_LNS_set_column (27)
0x00000457: 06 DW_LNS_negate_stmt
0x00000458: 03 DW_LNS_advance_line (126)
0x0000045b: 2e address += 2,  line += 0
            0x0000000000000520    126     27      1   0             0  is_stmt

0x0000045c: 05 DW_LNS_set_column (13)
0x0000045e: 06 DW_LNS_negate_stmt
0x0000045f: 58 address += 5,  line += 0
            0x0000000000000525    126     13      1   0             0 

0x00000460: 03 DW_LNS_advance_line (0)
0x00000463: 2e address += 2,  line += 0
            0x0000000000000527      0     13      1   0             0 

0x00000464: 05 DW_LNS_set_column (16)
0x00000466: 06 DW_LNS_negate_stmt
0x00000467: 03 DW_LNS_advance_line (127)
0x0000046a: 2e address += 2,  line += 0
            0x0000000000000529    127     16      1   0             0  is_stmt

0x0000046b: 05 DW_LNS_set_column (27)
0x0000046d: 06 DW_LNS_negate_stmt
0x0000046e: 82 address += 8,  line += 0
            0x0000000000000531    127     27      1   0             0 

0x0000046f: 05 DW_LNS_set_column (35)
0x00000471: 2e address += 2,  line += 0
            0x0000000000000533    127     35      1   0             0 

0x00000472: 05 DW_LNS_set_column (27)
0x00000474: 90 address += 9,  line += 0
            0x000000000000053c    127     27      1   0             0 

0x00000475: 05 DW_LNS_set_column (25)
0x00000477: 58 address += 5,  line += 0
            0x0000000000000541    127     25      1   0             0 

0x00000478: 05 DW_LNS_set_column (27)
0x0000047a: 06 DW_LNS_negate_stmt
0x0000047b: 3b address += 3,  line += -1
            0x0000000000000544    126     27      1   0             0  is_stmt

0x0000047c: 05 DW_LNS_set_column (13)
0x0000047e: 06 DW_LNS_negate_stmt
0x0000047f: 58 address += 5,  line += 0
            0x0000000000000549    126     13      1   0             0 

0x00000480: 05 DW_LNS_set_column (0)
0x00000482: 03 DW_LNS_advance_line (0)
0x00000485: 3c address += 3,  line += 0
            0x000000000000054c      0      0      1   0             0 

0x00000486: 05 DW_LNS_set_column (13)
0x00000488: 06 DW_LNS_negate_stmt
0x00000489: 03 DW_LNS_advance_line (128)
0x0000048c: 58 address += 5,  line += 0
            0x0000000000000551    128     13      1   0             0  is_stmt

0x0000048d: 05 DW_LNS_set_column (22)
0x0000048f: 06 DW_LNS_negate_stmt
0x00000490: 82 address += 8,  line += 0
            0x0000000000000559    128     22      1   0             0 

0x00000491: 05 DW_LNS_set_column (16)
0x00000493: 06 DW_LNS_negate_stmt
0x00000494: 5a address += 5,  line += 2
            0x000000000000055e    130     16      1   0             0  is_stmt

0x00000495: 05 DW_LNS_set_column (14)
0x00000497: 06 DW_LNS_negate_stmt
0x00000498: 82 address += 8,  line += 0
            0x0000000000000566    130     14      1   0             0 

0x00000499: 05 DW_LNS_set_column (25)
0x0000049b: 08 DW_LNS_const_add_pc (0x0000000000000011)
0x0000049c: 12 address += 0,  line += 0
            0x0000000000000577    130     25      1   0             0 

0x0000049d: 05 DW_LNS_set_column (14)
0x0000049f: 58 address += 5,  line += 0
            0x000000000000057c    130     14      1   0             0 

0x000004a0: 05 DW_LNS_set_column (11)
0x000004a2: 06 DW_LNS_negate_stmt
0x000004a3: 31 address += 2,  line += 3
            0x000000000000057e    133     11      1   0             0  is_stmt

0x000004a4: 05 DW_LNS_set_column (16)
0x000004a6: 03 DW_LNS_advance_line (122)
0x000004a8: 58 address += 5,  line += 0
            0x0000000000000583    122     16      1   0             0  is_stmt

0x000004a9: 05 DW_LNS_set_column (14)
0x000004ab: 06 DW_LNS_negate_stmt
0x000004ac: 58 address += 5,  line += 0
            0x0000000000000588    122     14      1   0             0 

0x000004ad: 03 DW_LNS_advance_line (0)
0x000004b0: 4a address += 4,  line += 0
            0x000000000000058c      0     14      1   0             0 

0x000004b1: 06 DW_LNS_negate_stmt
0x000004b2: 03 DW_LNS_advance_line (130)
0x000004b5: 20 address += 1,  line += 0
            0x000000000000058d    130     14      1   0             0  is_stmt

0x000004b6: 05 DW_LNS_set_column (11)
0x000004b8: 03 DW_LNS_advance_line (110)
0x000004ba: 20 address += 1,  line += 0
            0x000000000000058e    110     11      1   0             0  is_stmt

0x000004bb: 06 DW_LNS_negate_stmt
0x000004bc: 03 DW_LNS_advance_line (0)
0x000004bf: 74 address += 7,  line += 0
            0x0000000000000595      0     11      1   0             0 

0x000004c0: 05 DW_LNS_set_column (10)
0x000004c2: 06 DW_LNS_negate_stmt
0x000004c3: 03 DW_LNS_advance_line (113)
0x000004c6: 66 address += 6,  line += 0
            0x000000000000059b    113     10      1   0             0  is_stmt

0x000004c7: 06 DW_LNS_negate_stmt
0x000004c8: 03 DW_LNS_advance_line (0)
0x000004cb: 74 address += 7,  line += 0
            0x00000000000005a2      0     10      1   0             0 

0x000004cc: 05 DW_LNS_set_column (16)
0x000004ce: 06 DW_LNS_negate_stmt
0x000004cf: 03 DW_LNS_advance_line (118)
0x000004d2: 2e address += 2,  line += 0
            0x00000000000005a4    118     16      1   0             0  is_stmt

0x000004d3: 05 DW_LNS_set_column (7)
0x000004d5: 06 DW_LNS_negate_stmt
0x000004d6: 58 address += 5,  line += 0
            0x00000000000005a9    118      7      1   0             0 

0x000004d7: 03 DW_LNS_advance_line (0)
0x000004da: 2e address += 2,  line += 0
            0x00000000000005ab      0      7      1   0             0 

0x000004db: 05 DW_LNS_set_column (10)
0x000004dd: 06 DW_LNS_negate_stmt
0x000004de: 03 DW_LNS_advance_line (119)
0x000004e1: 2e address += 2,  line += 0
            0x00000000000005ad    119     10      1   0             0  is_stmt

0x000004e2: 05 DW_LNS_set_column (18)
0x000004e4: 06 DW_LNS_negate_stmt
0x000004e5: 2e address += 2,  line += 0
            0x00000000000005af    119     18      1   0             0 

0x000004e6: 05 DW_LNS_set_column (10)
0x000004e8: 90 address += 9,  line += 0
            0x00000000000005b8    119     10      1   0             0 

0x000004e9: 05 DW_LNS_set_column (23)
0x000004eb: 2e address += 2,  line += 0
            0x00000000000005ba    119     23      1   0             0 

0x000004ec: 05 DW_LNS_set_column (16)
0x000004ee: 06 DW_LNS_negate_stmt
0x000004ef: 57 address += 5,  line += -1
            0x00000000000005bf    118     16      1   0             0  is_stmt

0x000004f0: 05 DW_LNS_set_column (0)
0x000004f2: 06 DW_LNS_negate_stmt
0x000004f3: 03 DW_LNS_advance_line (0)
0x000004f6: 74 address += 7,  line += 0
            0x00000000000005c6      0      0      1   0             0 

0x000004f7: 05 DW_LNS_set_column (7)
0x000004f9: 03 DW_LNS_advance_line (118)
0x000004fc: 4a address += 4,  line += 0
            0x00000000000005ca    118      7      1   0             0 

0x000004fd: 05 DW_LNS_set_column (16)
0x000004ff: 06 DW_LNS_negate_stmt
0x00000500: 6a address += 6,  line += 4
            0x00000000000005d0    122     16      1   0             0  is_stmt

0x00000501: 05 DW_LNS_set_column (14)
0x00000503: 06 DW_LNS_negate_stmt
0x00000504: 58 address += 5,  line += 0
            0x00000000000005d5    122     14      1   0             0 

0x00000505: 03 DW_LNS_advance_line (0)
0x00000508: 2e address += 2,  line += 0
            0x00000000000005d7      0     14      1   0             0 

0x00000509: 05 DW_LNS_set_column (22)
0x0000050b: 06 DW_LNS_negate_stmt
0x0000050c: 03 DW_LNS_advance_line (125)
0x0000050f: 74 address += 7,  line += 0
            0x00000000000005de    125     22      1   0             0  is_stmt

0x00000510: 06 DW_LNS_negate_stmt
0x00000511: 03 DW_LNS_advance_line (0)
0x00000514: 90 address += 9,  line += 0
            0x00000000000005e7      0     22      1   0             0 

0x00000515: 05 DW_LNS_set_column (27)
0x00000517: 06 DW_LNS_negate_stmt
0x00000518: 03 DW_LNS_advance_line (126)
0x0000051b: 66 address += 6,  line += 0
            0x00000000000005ed    126     27      1   0             0  is_stmt

0x0000051c: 05 DW_LNS_set_column (13)
0x0000051e: 06 DW_LNS_negate_stmt
0x0000051f: 58 address += 5,  line += 0
            0x00000000000005f2    126     13      1   0             0 

0x00000520: 03 DW_LNS_advance_line (0)
0x00000523: 2e address += 2,  line += 0
            0x00000000000005f4      0     13      1   0             0 

0x00000524: 05 DW_LNS_set_column (16)
0x00000526: 06 DW_LNS_negate_stmt
0x00000527: 03 DW_LNS_advance_line (127)
0x0000052a: 2e address += 2,  line += 0
            0x00000000000005f6    127     16      1   0             0  is_stmt

0x0000052b: 05 DW_LNS_set_column (27)
0x0000052d: 06 DW_LNS_negate_stmt
0x0000052e: 82 address += 8,  line += 0
            0x00000000000005fe    127     27      1   0             0 

0x0000052f: 05 DW_LNS_set_column (35)
0x00000531: 2e address += 2,  line += 0
            0x0000000000000600    127     35      1   0             0 

0x00000532: 05 DW_LNS_set_column (27)
0x00000534: 90 address += 9,  line += 0
            0x0000000000000609    127     27      1   0             0 

0x00000535: 05 DW_LNS_set_column (25)
0x00000537: 58 address += 5,  line += 0
            0x000000000000060e    127     25      1   0             0 

0x00000538: 05 DW_LNS_set_column (27)
0x0000053a: 06 DW_LNS_negate_stmt
0x0000053b: 3b address += 3,  line += -1
            0x0000000000000611    126     27      1   0             0  is_stmt

0x0000053c: 05 DW_LNS_set_column (13)
0x0000053e: 06 DW_LNS_negate_stmt
0x0000053f: 58 address += 5,  line += 0
            0x0000000000000616    126     13      1   0             0 

0x00000540: 05 DW_LNS_set_column (0)
0x00000542: 03 DW_LNS_advance_line (0)
0x00000545: 3c address += 3,  line += 0
            0x0000000000000619      0      0      1   0             0 

0x00000546: 05 DW_LNS_set_column (13)
0x00000548: 06 DW_LNS_negate_stmt
0x00000549: 03 DW_LNS_advance_line (128)
0x0000054c: 58 address += 5,  line += 0
            0x000000000000061e    128     13      1   0             0  is_stmt

0x0000054d: 05 DW_LNS_set_column (22)
0x0000054f: 06 DW_LNS_negate_stmt
0x00000550: 82 address += 8,  line += 0
            0x0000000000000626    128     22      1   0             0 

0x00000551: 05 DW_LNS_set_column (16)
0x00000553: 06 DW_LNS_negate_stmt
0x00000554: 5a address += 5,  line += 2
            0x000000000000062b    130     16      1   0             0  is_stmt

0x00000555: 05 DW_LNS_set_column (14)
0x00000557: 06 DW_LNS_negate_stmt
0x00000558: 82 address += 8,  line += 0
            0x0000000000000633    130     14      1   0             0 

0x00000559: 05 DW_LNS_set_column (25)
0x0000055b: 08 DW_LNS_const_add_pc (0x0000000000000011)
0x0000055c: 12 address += 0,  line += 0
            0x0000000000000644    130     25      1   0             0 

0x0000055d: 05 DW_LNS_set_column (14)
0x0000055f: 58 address += 5,  line += 0
            0x0000000000000649    130     14      1   0             0 

0x00000560: 05 DW_LNS_set_column (11)
0x00000562: 06 DW_LNS_negate_stmt
0x00000563: 31 address += 2,  line += 3
            0x000000000000064b    133     11      1   0             0  is_stmt

0x00000564: 05 DW_LNS_set_column (16)
0x00000566: 03 DW_LNS_advance_line (122)
0x00000568: 58 address += 5,  line += 0
            0x0000000000000650    122     16      1   0             0  is_stmt

0x00000569: 05 DW_LNS_set_column (14)
0x0000056b: 06 DW_LNS_negate_stmt
0x0000056c: 58 address += 5,  line += 0
            0x0000000000000655    122     14      1   0             0 

0x0000056d: 03 DW_LNS_advance_line (0)
0x00000570: 4a address += 4,  line += 0
            0x0000000000000659      0     14      1   0             0 

0x00000571: 06 DW_LNS_negate_stmt
0x00000572: 03 DW_LNS_advance_line (130)
0x00000575: 20 address += 1,  line += 0
            0x000000000000065a    130     14      1   0             0  is_stmt

0x00000576: 05 DW_LNS_set_column (11)
0x00000578: 03 DW_LNS_advance_line (110)
0x0000057a: 20 address += 1,  line += 0
            0x000000000000065b    110     11      1   0             0  is_stmt

0x0000057b: 05 DW_LNS_set_column (4)
0x0000057d: 03 DW_LNS_advance_line (138)
0x0000057f: 66 address += 6,  line += 0
            0x0000000000000661    138      4      1   0             0  is_stmt

0x00000580: 83 address += 8,  line += 1
            0x0000000000000669    139      4      1   0             0  is_stmt

0x00000581: 06 DW_LNS_negate_stmt
0x00000582: 03 DW_LNS_advance_line (0)
0x00000585: 82 address += 8,  line += 0
            0x0000000000000671      0      4      1   0             0 

0x00000586: 06 DW_LNS_negate_stmt
0x00000587: 03 DW_LNS_advance_line (141)
0x0000058a: 82 address += 8,  line += 0
            0x0000000000000679    141      4      1   0             0  is_stmt

0x0000058b: 06 DW_LNS_negate_stmt
0x0000058c: 03 DW_LNS_advance_line (0)
0x0000058f: 74 address += 7,  line += 0
            0x0000000000000680      0      4      1   0             0 

0x00000590: 05 DW_LNS_set_column (20)
0x00000592: 06 DW_LNS_negate_stmt
0x00000593: 03 DW_LNS_advance_line (142)
0x00000596: 4a address += 4,  line += 0
            0x0000000000000684    142     20      1   0             0  is_stmt

0x00000597: be address += 12,  line += 4
            0x0000000000000690    146     20      1   0             0  is_stmt

0x00000598: 05 DW_LNS_set_column (7)
0x0000059a: 75 address += 7,  line += 1
            0x0000000000000697    147      7      1   0             0  is_stmt

0x0000059b: 05 DW_LNS_set_column (11)
0x0000059d: 7e address += 8,  line += -4
            0x000000000000069f    143     11      1   0             0  is_stmt

0x0000059e: 05 DW_LNS_set_column (20)
0x000005a0: 06 DW_LNS_negate_stmt
0x000005a1: 4a address += 4,  line += 0
            0x00000000000006a3    143     20      1   0             0 

0x000005a2: 05 DW_LNS_set_column (11)
0x000005a4: 58 address += 5,  line += 0
            0x00000000000006a8    143     11      1   0             0 

0x000005a5: 03 DW_LNS_advance_line (0)
0x000005a8: 3c address += 3,  line += 0
            0x00000000000006ab      0     11      1   0             0 

0x000005a9: 05 DW_LNS_set_column (4)
0x000005ab: 06 DW_LNS_negate_stmt
0x000005ac: 03 DW_LNS_advance_line (141)
0x000005af: 4a address += 4,  line += 0
            0x00000000000006af    141      4      1   0             0  is_stmt

0x000005b0: 03 DW_LNS_advance_line (159)
0x000005b2: 66 address += 6,  line += 0
            0x00000000000006b5    159      4      1   0             0  is_stmt

0x000005b3: 06 DW_LNS_negate_stmt
0x000005b4: 03 DW_LNS_advance_line (0)
0x000005b7: 08 DW_LNS_const_add_pc (0x0000000000000011)
0x000005b8: ba address += 12,  line += 0
            0x00000000000006d2      0      4      1   0             0 

0x000005b9: 05 DW_LNS_set_column (1)
0x000005bb: 06 DW_LNS_negate_stmt
0x000005bc: 03 DW_LNS_advance_line (161)
0x000005bf: 20 address += 1,  line += 0
            0x00000000000006d3    161      1      1   0             0  is_stmt

0x000005c0: 02 DW_LNS_advance_pc (14)
0x000005c2: 00 DW_LNE_end_sequence
            0x00000000000006e1    161      1      1   0             0  is_stmt end_sequence


.debug_str contents:
0x00000000: "clang version 11.0.0 (https://github.com/llvm/llvm-project.git 313d89724ce3ccf66c1c51849903e1e6d184dd85)"
0x00000069: "/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp"
0x000000a9: "/usr/local/google/home/azakai/Dev/2-binaryen"
0x000000d6: "i"
0x000000d8: "int"
0x000000dc: "n"
0x000000de: "next"
0x000000e3: "worker_args"
0x000000ef: "std"
0x000000f3: "decltype(nullptr)"
0x00000105: "nullptr_t"
0x0000010f: "free"
0x00000114: "_ZL8fannkuchi"
0x00000122: "fannkuch"
0x0000012b: "showmax"
0x00000133: "args"
0x00000138: "targs"
0x0000013e: "perm1"
0x00000144: "count"
0x0000014a: "r"
0x0000014c: "maxflips"
0x00000155: "flips"
0x0000015b: "cleanup"
0x00000163: "p0"
0x00000166: "_Z15fannkuch_workerPv"
0x0000017c: "fannkuch_worker"
0x0000018c: "main"
0x00000191: "_arg"
0x00000196: "perm"
0x0000019b: "k"
0x0000019d: "j"
0x0000019f: "tmp"
0x000001a3: "argc"
0x000001a8: "argv"
0x000001ad: "char"

.debug_ranges contents:
00000000 00000185 000001c3
00000000 000001ed 000001f6
00000000 0000030e 0000034c
00000000 00000376 0000037f
00000000 <End of list>
00000028 00000517 0000055e
00000028 000005de 0000062b
00000028 <End of list>
00000040 00000006 0000039d
00000040 0000039f 000006e1
00000040 <End of list>
DWARF debug info
================

Contains section .debug_info (851 bytes)
Contains section .debug_loc (1073 bytes)
Contains section .debug_ranges (88 bytes)
Contains section .debug_abbrev (333 bytes)
Contains section .debug_line (2642 bytes)
Contains section .debug_str (434 bytes)

.debug_abbrev contents:
Abbrev table for offset: 0x00000000
[1] DW_TAG_compile_unit	DW_CHILDREN_yes
	DW_AT_producer	DW_FORM_strp
	DW_AT_language	DW_FORM_data2
	DW_AT_name	DW_FORM_strp
	DW_AT_stmt_list	DW_FORM_sec_offset
	DW_AT_comp_dir	DW_FORM_strp
	DW_AT_low_pc	DW_FORM_addr
	DW_AT_ranges	DW_FORM_sec_offset

[2] DW_TAG_pointer_type	DW_CHILDREN_no
	DW_AT_type	DW_FORM_ref4

[3] DW_TAG_structure_type	DW_CHILDREN_yes
	DW_AT_calling_convention	DW_FORM_data1
	DW_AT_name	DW_FORM_strp
	DW_AT_byte_size	DW_FORM_data1
	DW_AT_decl_file	DW_FORM_data1
	DW_AT_decl_line	DW_FORM_data1

[4] DW_TAG_member	DW_CHILDREN_no
	DW_AT_name	DW_FORM_strp
	DW_AT_type	DW_FORM_ref4
	DW_AT_decl_file	DW_FORM_data1
	DW_AT_decl_line	DW_FORM_data1
	DW_AT_data_member_location	DW_FORM_data1

[5] DW_TAG_base_type	DW_CHILDREN_no
	DW_AT_name	DW_FORM_strp
	DW_AT_encoding	DW_FORM_data1
	DW_AT_byte_size	DW_FORM_data1

[6] DW_TAG_namespace	DW_CHILDREN_yes
	DW_AT_name	DW_FORM_strp

[7] DW_TAG_typedef	DW_CHILDREN_no
	DW_AT_type	DW_FORM_ref4
	DW_AT_name	DW_FORM_strp
	DW_AT_decl_file	DW_FORM_data1
	DW_AT_decl_line	DW_FORM_data1

[8] DW_TAG_unspecified_type	DW_CHILDREN_no
	DW_AT_name	DW_FORM_strp

[9] DW_TAG_imported_declaration	DW_CHILDREN_no
	DW_AT_decl_file	DW_FORM_data1
	DW_AT_decl_line	DW_FORM_data1
	DW_AT_import	DW_FORM_ref4

[10] DW_TAG_subprogram	DW_CHILDREN_yes
	DW_AT_low_pc	DW_FORM_addr
	DW_AT_high_pc	DW_FORM_data4
	DW_AT_frame_base	DW_FORM_exprloc
	DW_AT_GNU_all_call_sites	DW_FORM_flag_present
	DW_AT_linkage_name	DW_FORM_strp
	DW_AT_name	DW_FORM_strp
	DW_AT_decl_file	DW_FORM_data1
	DW_AT_decl_line	DW_FORM_data1
	DW_AT_type	DW_FORM_ref4
	DW_AT_external	DW_FORM_flag_present

[11] DW_TAG_formal_parameter	DW_CHILDREN_no
	DW_AT_name	DW_FORM_strp
	DW_AT_decl_file	DW_FORM_data1
	DW_AT_decl_line	DW_FORM_data1
	DW_AT_type	DW_FORM_ref4

[12] DW_TAG_variable	DW_CHILDREN_no
	DW_AT_name	DW_FORM_strp
	DW_AT_decl_file	DW_FORM_data1
	DW_AT_decl_line	DW_FORM_data1
	DW_AT_type	DW_FORM_ref4

[13] DW_TAG_variable	DW_CHILDREN_no
	DW_AT_location	DW_FORM_sec_offset
	DW_AT_name	DW_FORM_strp
	DW_AT_decl_file	DW_FORM_data1
	DW_AT_decl_line	DW_FORM_data1
	DW_AT_type	DW_FORM_ref4

[14] DW_TAG_lexical_block	DW_CHILDREN_yes
	DW_AT_ranges	DW_FORM_sec_offset

[15] DW_TAG_GNU_call_site	DW_CHILDREN_no
	DW_AT_low_pc	DW_FORM_addr

[16] DW_TAG_GNU_call_site	DW_CHILDREN_no
	DW_AT_abstract_origin	DW_FORM_ref4
	DW_AT_low_pc	DW_FORM_addr

[17] DW_TAG_subprogram	DW_CHILDREN_yes
	DW_AT_name	DW_FORM_strp
	DW_AT_decl_file	DW_FORM_data1
	DW_AT_decl_line	DW_FORM_data1
	DW_AT_declaration	DW_FORM_flag_present
	DW_AT_external	DW_FORM_flag_present

[18] DW_TAG_formal_parameter	DW_CHILDREN_no
	DW_AT_type	DW_FORM_ref4

[19] DW_TAG_pointer_type	DW_CHILDREN_no

[20] DW_TAG_subprogram	DW_CHILDREN_yes
	DW_AT_linkage_name	DW_FORM_strp
	DW_AT_name	DW_FORM_strp
	DW_AT_decl_file	DW_FORM_data1
	DW_AT_decl_line	DW_FORM_data1
	DW_AT_type	DW_FORM_ref4
	DW_AT_inline	DW_FORM_data1

[21] DW_TAG_label	DW_CHILDREN_no
	DW_AT_name	DW_FORM_strp
	DW_AT_decl_file	DW_FORM_data1
	DW_AT_decl_line	DW_FORM_data1

[22] DW_TAG_lexical_block	DW_CHILDREN_yes

[23] DW_TAG_subprogram	DW_CHILDREN_yes
	DW_AT_low_pc	DW_FORM_addr
	DW_AT_high_pc	DW_FORM_data4
	DW_AT_frame_base	DW_FORM_exprloc
	DW_AT_GNU_all_call_sites	DW_FORM_flag_present
	DW_AT_name	DW_FORM_strp
	DW_AT_decl_file	DW_FORM_data1
	DW_AT_decl_line	DW_FORM_data1
	DW_AT_type	DW_FORM_ref4
	DW_AT_external	DW_FORM_flag_present

[24] DW_TAG_inlined_subroutine	DW_CHILDREN_yes
	DW_AT_abstract_origin	DW_FORM_ref4
	DW_AT_low_pc	DW_FORM_addr
	DW_AT_high_pc	DW_FORM_data4
	DW_AT_call_file	DW_FORM_data1
	DW_AT_call_line	DW_FORM_data1
	DW_AT_call_column	DW_FORM_data1

[25] DW_TAG_formal_parameter	DW_CHILDREN_no
	DW_AT_abstract_origin	DW_FORM_ref4

[26] DW_TAG_variable	DW_CHILDREN_no
	DW_AT_location	DW_FORM_sec_offset
	DW_AT_abstract_origin	DW_FORM_ref4

[27] DW_TAG_variable	DW_CHILDREN_no
	DW_AT_abstract_origin	DW_FORM_ref4

[28] DW_TAG_label	DW_CHILDREN_no
	DW_AT_abstract_origin	DW_FORM_ref4
	DW_AT_low_pc	DW_FORM_addr


.debug_info contents:
0x00000000: Compile Unit: length = 0x0000034f version = 0x0004 abbr_offset = 0x0000 addr_size = 0x04 (next unit at 0x00000353)

0x0000000b: DW_TAG_compile_unit [1] *
              DW_AT_producer [DW_FORM_strp]	( .debug_str[0x00000000] = "clang version 11.0.0 (https://github.com/llvm/llvm-project.git 313d89724ce3ccf66c1c51849903e1e6d184dd85)")
              DW_AT_language [DW_FORM_data2]	(DW_LANG_C_plus_plus)
              DW_AT_name [DW_FORM_strp]	( .debug_str[0x00000069] = "/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
              DW_AT_stmt_list [DW_FORM_sec_offset]	(0x00000000)
              DW_AT_comp_dir [DW_FORM_strp]	( .debug_str[0x000000a9] = "/usr/local/google/home/azakai/Dev/2-binaryen")
              DW_AT_low_pc [DW_FORM_addr]	(0x0000000000000000)
              DW_AT_ranges [DW_FORM_sec_offset]	(0x00000040
                 [0x00000006, 0x00000381)
                 [0x00000383, 0x00000662))

0x00000026:   DW_TAG_pointer_type [2]  
                DW_AT_type [DW_FORM_ref4]	(cu + 0x002b => {0x0000002b} "worker_args")

0x0000002b:   DW_TAG_structure_type [3] *
                DW_AT_calling_convention [DW_FORM_data1]	(DW_CC_pass_by_value)
                DW_AT_name [DW_FORM_strp]	( .debug_str[0x000000e3] = "worker_args")
                DW_AT_byte_size [DW_FORM_data1]	(0x0c)
                DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                DW_AT_decl_line [DW_FORM_data1]	(20)

0x00000034:     DW_TAG_member [4]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x000000d6] = "i")
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(21)
                  DW_AT_data_member_location [DW_FORM_data1]	(0x00)

0x00000040:     DW_TAG_member [4]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x000000dc] = "n")
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(21)
                  DW_AT_data_member_location [DW_FORM_data1]	(0x04)

0x0000004c:     DW_TAG_member [4]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x000000de] = "next")
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0026 => {0x00000026} "worker_args*")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(22)
                  DW_AT_data_member_location [DW_FORM_data1]	(0x08)

0x00000058:     NULL

0x00000059:   DW_TAG_base_type [5]  
                DW_AT_name [DW_FORM_strp]	( .debug_str[0x000000d8] = "int")
                DW_AT_encoding [DW_FORM_data1]	(DW_ATE_signed)
                DW_AT_byte_size [DW_FORM_data1]	(0x04)

0x00000060:   DW_TAG_pointer_type [2]  
                DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x00000065:   DW_TAG_namespace [6] *
                DW_AT_name [DW_FORM_strp]	( .debug_str[0x000000ef] = "std")

0x0000006a:     DW_TAG_typedef [7]  
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0076 => {0x00000076} "decltype(nullptr)")
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x00000105] = "nullptr_t")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/system/include/libcxx/__nullptr")
                  DW_AT_decl_line [DW_FORM_data1]	(57)

0x00000075:     NULL

0x00000076:   DW_TAG_unspecified_type [8]  
                DW_AT_name [DW_FORM_strp]	( .debug_str[0x000000f3] = "decltype(nullptr)")

0x0000007b:   DW_TAG_imported_declaration [9]  
                DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/system/include/libcxx/stddef.h")
                DW_AT_decl_line [DW_FORM_data1]	(52)
                DW_AT_import [DW_FORM_ref4]	(cu + 0x006a => {0x0000006a})

0x00000082:   DW_TAG_subprogram [10] *
                DW_AT_low_pc [DW_FORM_addr]	(0x0000000000000006)
                DW_AT_high_pc [DW_FORM_data4]	(0x0000037b)
                DW_AT_frame_base [DW_FORM_exprloc]	(DW_OP_WASM_location 0x1 +0, DW_OP_stack_value)
                DW_AT_GNU_all_call_sites [DW_FORM_flag_present]	(true)
                DW_AT_linkage_name [DW_FORM_strp]	( .debug_str[0x00000166] = "_Z15fannkuch_workerPv")
                DW_AT_name [DW_FORM_strp]	( .debug_str[0x0000017c] = "fannkuch_worker")
                DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                DW_AT_decl_line [DW_FORM_data1]	(26)
                DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")
                DW_AT_external [DW_FORM_flag_present]	(true)

0x0000009e:     DW_TAG_formal_parameter [11]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x00000191] = "_arg")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(26)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x01a7 => {0x000001a7} "*")

0x000000a9:     DW_TAG_variable [12]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x00000133] = "args")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(28)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0026 => {0x00000026} "worker_args*")

0x000000b4:     DW_TAG_variable [13]  
                  DW_AT_location [DW_FORM_sec_offset]	(0x00000000: 
                     [0xffffffff,  0x00000006): 
                     [0x00000001,  0x00000001): DW_OP_consts +0, DW_OP_stack_value)
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x0000014c] = "maxflips")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(30)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x000000c3:     DW_TAG_variable [13]  
                  DW_AT_location [DW_FORM_sec_offset]	(0x0000001d: 
                     [0xffffffff,  0x00000027): 
                     [0x00000001,  0x00000001): DW_OP_consts +0, DW_OP_stack_value
                     [0x0000003d,  0x00000042): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value
                     [0x00000001,  0x00000001): DW_OP_consts +1, DW_OP_stack_value
                     [0x0000010c,  0x00000116): DW_OP_WASM_location 0x0 +0, DW_OP_stack_value
                     [0x00000001,  0x00000001): DW_OP_consts +0, DW_OP_stack_value
                     [0x00000235,  0x00000240): DW_OP_consts +0, DW_OP_stack_value
                     [0x00000001,  0x00000001): DW_OP_consts +1, DW_OP_stack_value
                     [0x00000289,  0x00000293): DW_OP_WASM_location 0x0 +0, DW_OP_stack_value
                     [0x00000001,  0x00000001): DW_OP_consts +0, DW_OP_stack_value)
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x000000d6] = "i")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(30)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x000000d2:     DW_TAG_variable [13]  
                  DW_AT_location [DW_FORM_sec_offset]	(0x000000a5: 
                     [0xffffffff,  0x0000002e): 
                     [0x00000001,  0x00000001): DW_OP_WASM_location 0x0 +2, DW_OP_stack_value)
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x000000dc] = "n")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(30)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x000000e1:     DW_TAG_variable [13]  
                  DW_AT_location [DW_FORM_sec_offset]	(0x000000c3: 
                     [0xffffffff,  0x00000037): 
                     [0x00000001,  0x00000001): DW_OP_WASM_location 0x0 +4, DW_OP_stack_value)
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x0000013e] = "perm1")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(29)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0060 => {0x00000060} "int*")

0x000000f0:     DW_TAG_variable [13]  
                  DW_AT_location [DW_FORM_sec_offset]	(0x000000e1: 
                     [0xffffffff,  0x0000003d): 
                     [0x00000001,  0x00000001): DW_OP_WASM_location 0x0 +5, DW_OP_stack_value)
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x00000196] = "perm")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(29)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0060 => {0x00000060} "int*")

0x000000ff:     DW_TAG_variable [13]  
                  DW_AT_location [DW_FORM_sec_offset]	(0x000000ff: 
                     [0xffffffff,  0x00000043): 
                     [0x00000001,  0x00000001): DW_OP_WASM_location 0x0 +6, DW_OP_stack_value)
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x00000144] = "count")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(29)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0060 => {0x00000060} "int*")

0x0000010e:     DW_TAG_variable [13]  
                  DW_AT_location [DW_FORM_sec_offset]	(0x0000011d: 
                     [0xffffffff,  0x000001e2): 
                     [0x00000000,  0x00000005): DW_OP_WASM_location 0x0 +2, DW_OP_stack_value
                     [0x0000017d,  0x00000182): DW_OP_WASM_location 0x0 +2, DW_OP_stack_value)
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x0000014a] = "r")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(30)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x0000011d:     DW_TAG_variable [13]  
                  DW_AT_location [DW_FORM_sec_offset]	(0x00000149: 
                     [0xffffffff,  0x000000d7): 
                     [0x00000000,  0x00000013): DW_OP_consts +0, DW_OP_stack_value
                     [0x00000001,  0x00000001): DW_OP_WASM_location 0x0 +13, DW_OP_stack_value
                     [0x00000085,  0x0000008d): DW_OP_WASM_location 0x0 +0, DW_OP_stack_value
                     [0x00000185,  0x00000190): DW_OP_consts +0, DW_OP_stack_value
                     [0x00000001,  0x00000001): DW_OP_WASM_location 0x0 +10, DW_OP_stack_value
                     [0x00000202,  0x0000020a): DW_OP_WASM_location 0x0 +0, DW_OP_stack_value)
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x00000155] = "flips")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(30)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x0000012c:     DW_TAG_variable [13]  
                  DW_AT_location [DW_FORM_sec_offset]	(0x000001ab: 
                     [0xffffffff,  0x000000e6): 
                     [0x00000000,  0x00000004): DW_OP_WASM_location 0x0 +12, DW_OP_stack_value
                     [0x0000017d,  0x00000181): DW_OP_WASM_location 0x0 +16, DW_OP_stack_value)
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x0000019b] = "k")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(30)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x0000013b:     DW_TAG_variable [13]  
                  DW_AT_location [DW_FORM_sec_offset]	(0x000001d7: 
                     [0xffffffff,  0x000000fe): 
                     [0x00000000,  0x00000004): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value
                     [0x0000003c,  0x0000003f): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value
                     [0x0000017d,  0x00000181): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value
                     [0x000001b9,  0x000001bc): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value)
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x0000019d] = "j")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(30)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x0000014a:     DW_TAG_variable [13]  
                  DW_AT_location [DW_FORM_sec_offset]	(0x0000021f: 
                     [0xffffffff,  0x00000113): 
                     [0x00000000,  0x0000002a): DW_OP_WASM_location 0x0 +15, DW_OP_stack_value
                     [0x0000003b,  0x00000051): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value
                     [0x0000017d,  0x000001a7): DW_OP_WASM_location 0x0 +14, DW_OP_stack_value
                     [0x000001b8,  0x000001ce): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value)
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x0000019f] = "tmp")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(30)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x00000159:     DW_TAG_lexical_block [14] *
                  DW_AT_ranges [DW_FORM_sec_offset]	(0x00000000
                     [0x0000017f, 0x000001bd)
                     [0x000001e7, 0x000001f0)
                     [0x000002fc, 0x0000033a)
                     [0x00000364, 0x0000036d))

0x0000015e:       DW_TAG_variable [12]  
                    DW_AT_name [DW_FORM_strp]	( .debug_str[0x00000163] = "p0")
                    DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                    DW_AT_decl_line [DW_FORM_data1]	(74)
                    DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x00000169:       NULL

0x0000016a:     DW_TAG_GNU_call_site [15]  
                  DW_AT_low_pc [DW_FORM_addr]	(0x0000000000000035)

0x0000016f:     DW_TAG_GNU_call_site [15]  
                  DW_AT_low_pc [DW_FORM_addr]	(0x000000000000003b)

0x00000174:     DW_TAG_GNU_call_site [15]  
                  DW_AT_low_pc [DW_FORM_addr]	(0x0000000000000041)

0x00000179:     DW_TAG_GNU_call_site [15]  
                  DW_AT_low_pc [DW_FORM_addr]	(0x00000000000000df)

0x0000017e:     DW_TAG_GNU_call_site [16]  
                  DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x019a => {0x0000019a} "free")
                  DW_AT_low_pc [DW_FORM_addr]	(0x0000000000000376)

0x00000187:     DW_TAG_GNU_call_site [16]  
                  DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x019a => {0x0000019a} "free")
                  DW_AT_low_pc [DW_FORM_addr]	(0x000000000000037a)

0x00000190:     DW_TAG_GNU_call_site [16]  
                  DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x019a => {0x0000019a} "free")
                  DW_AT_low_pc [DW_FORM_addr]	(0x000000000000037e)

0x00000199:     NULL

0x0000019a:   DW_TAG_subprogram [17] *
                DW_AT_name [DW_FORM_strp]	( .debug_str[0x0000010f] = "free")
                DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/system/include/libc/stdlib.h")
                DW_AT_decl_line [DW_FORM_data1]	(41)
                DW_AT_declaration [DW_FORM_flag_present]	(true)
                DW_AT_external [DW_FORM_flag_present]	(true)

0x000001a1:     DW_TAG_formal_parameter [18]  
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x01a7 => {0x000001a7} "*")

0x000001a6:     NULL

0x000001a7:   DW_TAG_pointer_type [19]  

0x000001a8:   DW_TAG_subprogram [20] *
                DW_AT_linkage_name [DW_FORM_strp]	( .debug_str[0x00000114] = "_ZL8fannkuchi")
                DW_AT_name [DW_FORM_strp]	( .debug_str[0x00000122] = "fannkuch")
                DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                DW_AT_decl_line [DW_FORM_data1]	(87)
                DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")
                DW_AT_inline [DW_FORM_data1]	(DW_INL_inlined)

0x000001b8:     DW_TAG_formal_parameter [11]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x000000dc] = "n")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(87)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x000001c3:     DW_TAG_variable [12]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x0000012b] = "showmax")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(90)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x000001ce:     DW_TAG_variable [12]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x00000133] = "args")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(89)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0026 => {0x00000026} "worker_args*")

0x000001d9:     DW_TAG_variable [12]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x000000d6] = "i")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(91)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x000001e4:     DW_TAG_variable [12]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x00000138] = "targs")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(89)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0026 => {0x00000026} "worker_args*")

0x000001ef:     DW_TAG_variable [12]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x0000013e] = "perm1")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(91)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0060 => {0x00000060} "int*")

0x000001fa:     DW_TAG_variable [12]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x00000144] = "count")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(91)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0060 => {0x00000060} "int*")

0x00000205:     DW_TAG_variable [12]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x0000014a] = "r")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(91)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x00000210:     DW_TAG_variable [12]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x0000014c] = "maxflips")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(91)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x0000021b:     DW_TAG_variable [12]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x00000155] = "flips")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(91)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x00000226:     DW_TAG_label [21]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x0000015b] = "cleanup")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(137)

0x0000022d:     DW_TAG_lexical_block [22] *

0x0000022e:       DW_TAG_variable [12]  
                    DW_AT_name [DW_FORM_strp]	( .debug_str[0x00000163] = "p0")
                    DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                    DW_AT_decl_line [DW_FORM_data1]	(125)
                    DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x00000239:       NULL

0x0000023a:     NULL

0x0000023b:   DW_TAG_subprogram [23] *
                DW_AT_low_pc [DW_FORM_addr]	(0x0000000000000383)
                DW_AT_high_pc [DW_FORM_data4]	(0x000002df)
                DW_AT_frame_base [DW_FORM_exprloc]	(DW_OP_WASM_location 0x0 +2, DW_OP_stack_value)
                DW_AT_GNU_all_call_sites [DW_FORM_flag_present]	(true)
                DW_AT_name [DW_FORM_strp]	( .debug_str[0x0000018c] = "main")
                DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                DW_AT_decl_line [DW_FORM_data1]	(152)
                DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")
                DW_AT_external [DW_FORM_flag_present]	(true)

0x00000253:     DW_TAG_formal_parameter [11]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x000001a3] = "argc")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(152)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x0000025e:     DW_TAG_formal_parameter [11]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x000001a8] = "argv")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(152)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0341 => {0x00000341} "char**")

0x00000269:     DW_TAG_variable [13]  
                  DW_AT_location [DW_FORM_sec_offset]	(0x00000267: 
                     [0xffffffff,  0x000003af): 
                     [0x00000000,  0x00000005): DW_OP_WASM_location 0x0 +4, DW_OP_stack_value)
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x000000dc] = "n")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(153)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x00000278:     DW_TAG_inlined_subroutine [24] *
                  DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x01a8 => {0x000001a8} "_ZL8fannkuchi")
                  DW_AT_low_pc [DW_FORM_addr]	(0x00000000000003c2)
                  DW_AT_high_pc [DW_FORM_data4]	(0xfffffc3e)
                  DW_AT_call_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_call_line [DW_FORM_data1]	(159)
                  DW_AT_call_column [DW_FORM_data1]	(0x29)

0x00000288:       DW_TAG_formal_parameter [25]  
                    DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x01b8 => {0x000001b8} "n")

0x0000028d:       DW_TAG_variable [26]  
                    DW_AT_location [DW_FORM_sec_offset]	(0x00000285: 
                       [0xffffffff,  0x00000000): 
                       [0x00000001,  0x00000001): DW_OP_consts +30, DW_OP_stack_value)
                    DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x01c3 => {0x000001c3} "showmax")

0x00000296:       DW_TAG_variable [26]  
                    DW_AT_location [DW_FORM_sec_offset]	(0x000002a2: 
                       [0xffffffff,  0x00000627): 
                       [0x00000001,  0x00000001): DW_OP_lit0, DW_OP_stack_value
                       [0x00000000,  0x00000018): DW_OP_WASM_location 0x0 +6, DW_OP_stack_value)
                    DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x01ce => {0x000001ce} "args")

0x0000029f:       DW_TAG_variable [26]  
                    DW_AT_location [DW_FORM_sec_offset]	(0x000002cc: 
                       [0xffffffff,  0x000003fe): 
                       [0x00000001,  0x00000001): DW_OP_consts +0, DW_OP_stack_value
                       [0x00000000,  0x00000005): DW_OP_WASM_location 0x0 +0, DW_OP_stack_value
                       [0x00000001,  0x00000001): DW_OP_consts +0, DW_OP_stack_value
                       [0x0000003f,  0x00000044): DW_OP_WASM_location 0x0 +0, DW_OP_stack_value
                       [0x0000005d,  0x00000061): DW_OP_consts +0, DW_OP_stack_value
                       [0x00000088,  0x0000008d): DW_OP_WASM_location 0x0 +0, DW_OP_stack_value
                       [0x00000001,  0x00000001): DW_OP_consts +0, DW_OP_stack_value
                       [0x00000001,  0x00000001): DW_OP_consts +0, DW_OP_stack_value
                       [0x00000001,  0x00000001): DW_OP_consts +0, DW_OP_stack_value)
                    DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x01d9 => {0x000001d9} "i")

0x000002a8:       DW_TAG_variable [27]  
                    DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x01e4 => {0x000001e4} "targs")

0x000002ad:       DW_TAG_variable [26]  
                    DW_AT_location [DW_FORM_sec_offset]	(0x00000354: 
                       [0xffffffff,  0x00000414): 
                       [0x00000001,  0x00000001): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value)
                    DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x01ef => {0x000001ef} "perm1")

0x000002b6:       DW_TAG_variable [26]  
                    DW_AT_location [DW_FORM_sec_offset]	(0x00000372: 
                       [0xffffffff,  0x0000041a): 
                       [0x00000001,  0x00000001): DW_OP_WASM_location 0x0 +5, DW_OP_stack_value)
                    DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x01fa => {0x000001fa} "count")

0x000002bf:       DW_TAG_variable [26]  
                    DW_AT_location [DW_FORM_sec_offset]	(0x00000390: 
                       [0xffffffff,  0x00000537): 
                       [0x00000000,  0x00000007): DW_OP_WASM_location 0x0 +6, DW_OP_stack_value
                       [0x000000be,  0x000000c5): DW_OP_WASM_location 0x0 +6, DW_OP_stack_value)
                    DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x0205 => {0x00000205} "r")

0x000002c8:       DW_TAG_variable [26]  
                    DW_AT_location [DW_FORM_sec_offset]	(0x000003e8: 
                       [0xffffffff,  0x00000610): 
                       [0x00000001,  0x00000001): DW_OP_consts +0, DW_OP_stack_value
                       [0x00000027,  0x0000002f): DW_OP_WASM_location 0x0 +0, DW_OP_stack_value)
                    DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x0210 => {0x00000210} "maxflips")

0x000002d1:       DW_TAG_variable [26]  
                    DW_AT_location [DW_FORM_sec_offset]	(0x00000413: 
                       [0xffffffff,  0x00000620): 
                       [0x00000000,  0x0000001f): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value)
                    DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x021b => {0x0000021b} "flips")

0x000002da:       DW_TAG_label [28]  
                    DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x0226 => {0x00000226} "cleanup")
                    DW_AT_low_pc [DW_FORM_addr]	(0x0000000000000604)

0x000002e3:       DW_TAG_lexical_block [14] *
                    DW_AT_ranges [DW_FORM_sec_offset]	(0x00000028
                       [0x000004cd, 0x00000512)
                       [0x00000585, 0x000005d0))

0x000002e8:         DW_TAG_variable [26]  
                      DW_AT_location [DW_FORM_sec_offset]	(0x000003bc: 
                         [0xffffffff,  0x0000058e): 
                         [0x00000001,  0x00000001): DW_OP_WASM_location 0x0 +8, DW_OP_stack_value
                         [0x00000001,  0x00000001): DW_OP_WASM_location 0x0 +8, DW_OP_stack_value)
                      DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x022e => {0x0000022e} "p0")

0x000002f1:         NULL

0x000002f2:       NULL

0x000002f3:     DW_TAG_GNU_call_site [15]  
                  DW_AT_low_pc [DW_FORM_addr]	(0x00000000000003ad)

0x000002f8:     DW_TAG_GNU_call_site [15]  
                  DW_AT_low_pc [DW_FORM_addr]	(0x00000000000003ba)

0x000002fd:     DW_TAG_GNU_call_site [15]  
                  DW_AT_low_pc [DW_FORM_addr]	(0x00000000000003de)

0x00000302:     DW_TAG_GNU_call_site [15]  
                  DW_AT_low_pc [DW_FORM_addr]	(0x0000000000000412)

0x00000307:     DW_TAG_GNU_call_site [15]  
                  DW_AT_low_pc [DW_FORM_addr]	(0x0000000000000418)

0x0000030c:     DW_TAG_GNU_call_site [15]  
                  DW_AT_low_pc [DW_FORM_addr]	(0x000000000000047e)

0x00000311:     DW_TAG_GNU_call_site [15]  
                  DW_AT_low_pc [DW_FORM_addr]	(0x0000000000000490)

0x00000316:     DW_TAG_GNU_call_site [15]  
                  DW_AT_low_pc [DW_FORM_addr]	(0x000000000000054e)

0x0000031b:     DW_TAG_GNU_call_site [16]  
                  DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x019a => {0x0000019a} "free")
                  DW_AT_low_pc [DW_FORM_addr]	(0x0000000000000608)

0x00000324:     DW_TAG_GNU_call_site [16]  
                  DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x019a => {0x0000019a} "free")
                  DW_AT_low_pc [DW_FORM_addr]	(0x000000000000060c)

0x0000032d:     DW_TAG_GNU_call_site [15]  
                  DW_AT_low_pc [DW_FORM_addr]	(0x000000000000061e)

0x00000332:     DW_TAG_GNU_call_site [16]  
                  DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x019a => {0x0000019a} "free")
                  DW_AT_low_pc [DW_FORM_addr]	(0x000000000000062b)

0x0000033b:     DW_TAG_GNU_call_site [15]  
                  DW_AT_low_pc [DW_FORM_addr]	(0x0000000000000656)

0x00000340:     NULL

0x00000341:   DW_TAG_pointer_type [2]  
                DW_AT_type [DW_FORM_ref4]	(cu + 0x0346 => {0x00000346} "char*")

0x00000346:   DW_TAG_pointer_type [2]  
                DW_AT_type [DW_FORM_ref4]	(cu + 0x034b => {0x0000034b} "char")

0x0000034b:   DW_TAG_base_type [5]  
                DW_AT_name [DW_FORM_strp]	( .debug_str[0x000001ad] = "char")
                DW_AT_encoding [DW_FORM_data1]	(DW_ATE_signed_char)
                DW_AT_byte_size [DW_FORM_data1]	(0x01)

0x00000352:   NULL

.debug_loc contents:
0x00000000: 
            [0xffffffff,  0x00000006): 
            [0x00000001,  0x00000001): DW_OP_consts +0, DW_OP_stack_value

0x0000001d: 
            [0xffffffff,  0x00000027): 
            [0x00000001,  0x00000001): DW_OP_consts +0, DW_OP_stack_value
            [0x0000003d,  0x00000042): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value
            [0x00000001,  0x00000001): DW_OP_consts +1, DW_OP_stack_value
            [0x0000010c,  0x00000116): DW_OP_WASM_location 0x0 +0, DW_OP_stack_value
            [0x00000001,  0x00000001): DW_OP_consts +0, DW_OP_stack_value
            [0x00000235,  0x00000240): DW_OP_consts +0, DW_OP_stack_value
            [0x00000001,  0x00000001): DW_OP_consts +1, DW_OP_stack_value
            [0x00000289,  0x00000293): DW_OP_WASM_location 0x0 +0, DW_OP_stack_value
            [0x00000001,  0x00000001): DW_OP_consts +0, DW_OP_stack_value

0x000000a5: 
            [0xffffffff,  0x0000002e): 
            [0x00000001,  0x00000001): DW_OP_WASM_location 0x0 +2, DW_OP_stack_value

0x000000c3: 
            [0xffffffff,  0x00000037): 
            [0x00000001,  0x00000001): DW_OP_WASM_location 0x0 +4, DW_OP_stack_value

0x000000e1: 
            [0xffffffff,  0x0000003d): 
            [0x00000001,  0x00000001): DW_OP_WASM_location 0x0 +5, DW_OP_stack_value

0x000000ff: 
            [0xffffffff,  0x00000043): 
            [0x00000001,  0x00000001): DW_OP_WASM_location 0x0 +6, DW_OP_stack_value

0x0000011d: 
            [0xffffffff,  0x000001e2): 
            [0x00000000,  0x00000005): DW_OP_WASM_location 0x0 +2, DW_OP_stack_value
            [0x0000017d,  0x00000182): DW_OP_WASM_location 0x0 +2, DW_OP_stack_value

0x00000149: 
            [0xffffffff,  0x000000d7): 
            [0x00000000,  0x00000013): DW_OP_consts +0, DW_OP_stack_value
            [0x00000001,  0x00000001): DW_OP_WASM_location 0x0 +13, DW_OP_stack_value
            [0x00000085,  0x0000008d): DW_OP_WASM_location 0x0 +0, DW_OP_stack_value
            [0x00000185,  0x00000190): DW_OP_consts +0, DW_OP_stack_value
            [0x00000001,  0x00000001): DW_OP_WASM_location 0x0 +10, DW_OP_stack_value
            [0x00000202,  0x0000020a): DW_OP_WASM_location 0x0 +0, DW_OP_stack_value

0x000001ab: 
            [0xffffffff,  0x000000e6): 
            [0x00000000,  0x00000004): DW_OP_WASM_location 0x0 +12, DW_OP_stack_value
            [0x0000017d,  0x00000181): DW_OP_WASM_location 0x0 +16, DW_OP_stack_value

0x000001d7: 
            [0xffffffff,  0x000000fe): 
            [0x00000000,  0x00000004): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value
            [0x0000003c,  0x0000003f): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value
            [0x0000017d,  0x00000181): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value
            [0x000001b9,  0x000001bc): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value

0x0000021f: 
            [0xffffffff,  0x00000113): 
            [0x00000000,  0x0000002a): DW_OP_WASM_location 0x0 +15, DW_OP_stack_value
            [0x0000003b,  0x00000051): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value
            [0x0000017d,  0x000001a7): DW_OP_WASM_location 0x0 +14, DW_OP_stack_value
            [0x000001b8,  0x000001ce): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value

0x00000267: 
            [0xffffffff,  0x000003af): 
            [0x00000000,  0x00000005): DW_OP_WASM_location 0x0 +4, DW_OP_stack_value

0x00000285: 
            [0xffffffff,  0x00000000): 
            [0x00000001,  0x00000001): DW_OP_consts +30, DW_OP_stack_value

0x000002a2: 
            [0xffffffff,  0x00000627): 
            [0x00000001,  0x00000001): DW_OP_lit0, DW_OP_stack_value
            [0x00000000,  0x00000018): DW_OP_WASM_location 0x0 +6, DW_OP_stack_value

0x000002cc: 
            [0xffffffff,  0x000003fe): 
            [0x00000001,  0x00000001): DW_OP_consts +0, DW_OP_stack_value
            [0x00000000,  0x00000005): DW_OP_WASM_location 0x0 +0, DW_OP_stack_value
            [0x00000001,  0x00000001): DW_OP_consts +0, DW_OP_stack_value
            [0x0000003f,  0x00000044): DW_OP_WASM_location 0x0 +0, DW_OP_stack_value
            [0x0000005d,  0x00000061): DW_OP_consts +0, DW_OP_stack_value
            [0x00000088,  0x0000008d): DW_OP_WASM_location 0x0 +0, DW_OP_stack_value
            [0x00000001,  0x00000001): DW_OP_consts +0, DW_OP_stack_value
            [0x00000001,  0x00000001): DW_OP_consts +0, DW_OP_stack_value
            [0x00000001,  0x00000001): DW_OP_consts +0, DW_OP_stack_value

0x00000354: 
            [0xffffffff,  0x00000414): 
            [0x00000001,  0x00000001): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value

0x00000372: 
            [0xffffffff,  0x0000041a): 
            [0x00000001,  0x00000001): DW_OP_WASM_location 0x0 +5, DW_OP_stack_value

0x00000390: 
            [0xffffffff,  0x00000537): 
            [0x00000000,  0x00000007): DW_OP_WASM_location 0x0 +6, DW_OP_stack_value
            [0x000000be,  0x000000c5): DW_OP_WASM_location 0x0 +6, DW_OP_stack_value

0x000003bc: 
            [0xffffffff,  0x0000058e): 
            [0x00000001,  0x00000001): DW_OP_WASM_location 0x0 +8, DW_OP_stack_value
            [0x00000001,  0x00000001): DW_OP_WASM_location 0x0 +8, DW_OP_stack_value

0x000003e8: 
            [0xffffffff,  0x00000610): 
            [0x00000001,  0x00000001): DW_OP_consts +0, DW_OP_stack_value
            [0x00000027,  0x0000002f): DW_OP_WASM_location 0x0 +0, DW_OP_stack_value

0x00000413: 
            [0xffffffff,  0x00000620): 
            [0x00000000,  0x0000001f): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value

.debug_line contents:
debug_line[0x00000000]
Line table prologue:
    total_length: 0x00000a4e
         version: 4
 prologue_length: 0x000000dd
 min_inst_length: 1
max_ops_per_inst: 1
 default_is_stmt: 1
       line_base: -5
      line_range: 14
     opcode_base: 13
standard_opcode_lengths[DW_LNS_copy] = 0
standard_opcode_lengths[DW_LNS_advance_pc] = 1
standard_opcode_lengths[DW_LNS_advance_line] = 1
standard_opcode_lengths[DW_LNS_set_file] = 1
standard_opcode_lengths[DW_LNS_set_column] = 1
standard_opcode_lengths[DW_LNS_negate_stmt] = 0
standard_opcode_lengths[DW_LNS_set_basic_block] = 0
standard_opcode_lengths[DW_LNS_const_add_pc] = 0
standard_opcode_lengths[DW_LNS_fixed_advance_pc] = 1
standard_opcode_lengths[DW_LNS_set_prologue_end] = 0
standard_opcode_lengths[DW_LNS_set_epilogue_begin] = 0
standard_opcode_lengths[DW_LNS_set_isa] = 1
include_directories[  1] = "/usr/local/google/home/azakai/Dev"
file_names[  1]:
           name: "emscripten/tests/fannkuch.cpp"
      dir_index: 1
       mod_time: 0x00000000
         length: 0x00000000
file_names[  2]:
           name: "emscripten/system/include/libcxx/__nullptr"
      dir_index: 1
       mod_time: 0x00000000
         length: 0x00000000
file_names[  3]:
           name: "emscripten/system/include/libcxx/stddef.h"
      dir_index: 1
       mod_time: 0x00000000
         length: 0x00000000
file_names[  4]:
           name: "emscripten/system/include/libc/stdlib.h"
      dir_index: 1
       mod_time: 0x00000000
         length: 0x00000000
0x000000e7: 00 DW_LNE_set_address (0x0000000000000006)
0x000000ee: 03 DW_LNS_advance_line (27)
0x000000f0: 01 DW_LNS_copy
            0x0000000000000006     27      0      1   0             0  is_stmt


0x000000f1: 00 DW_LNE_set_address (0x0000000000000027)
0x000000f8: 03 DW_LNS_advance_line (33)
0x000000fa: 05 DW_LNS_set_column (14)
0x000000fc: 0a DW_LNS_set_prologue_end
0x000000fd: 01 DW_LNS_copy
            0x0000000000000027     33     14      1   0             0  is_stmt prologue_end


0x000000fe: 00 DW_LNE_set_address (0x0000000000000030)
0x00000105: 03 DW_LNS_advance_line (34)
0x00000107: 05 DW_LNS_set_column (27)
0x00000109: 01 DW_LNS_copy
            0x0000000000000030     34     27      1   0             0  is_stmt


0x0000010a: 00 DW_LNE_set_address (0x0000000000000031)
0x00000111: 05 DW_LNS_set_column (18)
0x00000113: 06 DW_LNS_negate_stmt
0x00000114: 01 DW_LNS_copy
            0x0000000000000031     34     18      1   0             0 


0x00000115: 00 DW_LNE_set_address (0x0000000000000037)
0x0000011c: 03 DW_LNS_advance_line (35)
0x0000011e: 05 DW_LNS_set_column (17)
0x00000120: 06 DW_LNS_negate_stmt
0x00000121: 01 DW_LNS_copy
            0x0000000000000037     35     17      1   0             0  is_stmt


0x00000122: 00 DW_LNE_set_address (0x000000000000003d)
0x00000129: 03 DW_LNS_advance_line (36)
0x0000012b: 05 DW_LNS_set_column (18)
0x0000012d: 01 DW_LNS_copy
            0x000000000000003d     36     18      1   0             0  is_stmt


0x0000012e: 00 DW_LNE_set_address (0x0000000000000047)
0x00000135: 03 DW_LNS_advance_line (37)
0x00000137: 01 DW_LNS_copy
            0x0000000000000047     37     18      1   0             0  is_stmt


0x00000138: 00 DW_LNE_set_address (0x0000000000000050)
0x0000013f: 03 DW_LNS_advance_line (38)
0x00000141: 05 DW_LNS_set_column (7)
0x00000143: 01 DW_LNS_copy
            0x0000000000000050     38      7      1   0             0  is_stmt


0x00000144: 00 DW_LNE_set_address (0x0000000000000058)
0x0000014b: 05 DW_LNS_set_column (16)
0x0000014d: 06 DW_LNS_negate_stmt
0x0000014e: 01 DW_LNS_copy
            0x0000000000000058     38     16      1   0             0 


0x0000014f: 00 DW_LNE_set_address (0x000000000000005d)
0x00000156: 03 DW_LNS_advance_line (37)
0x00000158: 05 DW_LNS_set_column (24)
0x0000015a: 06 DW_LNS_negate_stmt
0x0000015b: 01 DW_LNS_copy
            0x000000000000005d     37     24      1   0             0  is_stmt


0x0000015c: 00 DW_LNE_set_address (0x0000000000000062)
0x00000163: 05 DW_LNS_set_column (18)
0x00000165: 06 DW_LNS_negate_stmt
0x00000166: 01 DW_LNS_copy
            0x0000000000000062     37     18      1   0             0 


0x00000167: 00 DW_LNE_set_address (0x0000000000000067)
0x0000016e: 05 DW_LNS_set_column (4)
0x00000170: 01 DW_LNS_copy
            0x0000000000000067     37      4      1   0             0 


0x00000171: 00 DW_LNE_set_address (0x000000000000006a)
0x00000178: 03 DW_LNS_advance_line (39)
0x0000017a: 06 DW_LNS_negate_stmt
0x0000017b: 01 DW_LNS_copy
            0x000000000000006a     39      4      1   0             0  is_stmt


0x0000017c: 00 DW_LNE_set_address (0x000000000000006c)
0x00000183: 05 DW_LNS_set_column (16)
0x00000185: 06 DW_LNS_negate_stmt
0x00000186: 01 DW_LNS_copy
            0x000000000000006c     39     16      1   0             0 


0x00000187: 00 DW_LNE_set_address (0x0000000000000075)
0x0000018e: 05 DW_LNS_set_column (4)
0x00000190: 01 DW_LNS_copy
            0x0000000000000075     39      4      1   0             0 


0x00000191: 00 DW_LNE_set_address (0x0000000000000077)
0x00000198: 05 DW_LNS_set_column (23)
0x0000019a: 01 DW_LNS_copy
            0x0000000000000077     39     23      1   0             0 


0x0000019b: 00 DW_LNE_set_address (0x000000000000007c)
0x000001a2: 05 DW_LNS_set_column (19)
0x000001a4: 01 DW_LNS_copy
            0x000000000000007c     39     19      1   0             0 


0x000001a5: 00 DW_LNE_set_address (0x0000000000000081)
0x000001ac: 03 DW_LNS_advance_line (40)
0x000001ae: 05 DW_LNS_set_column (4)
0x000001b0: 06 DW_LNS_negate_stmt
0x000001b1: 01 DW_LNS_copy
            0x0000000000000081     40      4      1   0             0  is_stmt


0x000001b2: 00 DW_LNE_set_address (0x0000000000000089)
0x000001b9: 05 DW_LNS_set_column (17)
0x000001bb: 06 DW_LNS_negate_stmt
0x000001bc: 01 DW_LNS_copy
            0x0000000000000089     40     17      1   0             0 


0x000001bd: 00 DW_LNE_set_address (0x0000000000000090)
0x000001c4: 03 DW_LNS_advance_line (37)
0x000001c6: 05 DW_LNS_set_column (18)
0x000001c8: 06 DW_LNS_negate_stmt
0x000001c9: 01 DW_LNS_copy
            0x0000000000000090     37     18      1   0             0  is_stmt


0x000001ca: 00 DW_LNE_set_address (0x0000000000000095)
0x000001d1: 03 DW_LNS_advance_line (43)
0x000001d3: 05 DW_LNS_set_column (4)
0x000001d5: 01 DW_LNS_copy
            0x0000000000000095     43      4      1   0             0  is_stmt


0x000001d6: 00 DW_LNE_set_address (0x0000000000000099)
0x000001dd: 03 DW_LNS_advance_line (44)
0x000001df: 05 DW_LNS_set_column (16)
0x000001e1: 01 DW_LNS_copy
            0x0000000000000099     44     16      1   0             0  is_stmt


0x000001e2: 00 DW_LNE_set_address (0x00000000000000a2)
0x000001e9: 03 DW_LNS_advance_line (45)
0x000001eb: 05 DW_LNS_set_column (10)
0x000001ed: 01 DW_LNS_copy
            0x00000000000000a2     45     10      1   0             0  is_stmt


0x000001ee: 00 DW_LNE_set_address (0x00000000000000a4)
0x000001f5: 05 DW_LNS_set_column (18)
0x000001f7: 06 DW_LNS_negate_stmt
0x000001f8: 01 DW_LNS_copy
            0x00000000000000a4     45     18      1   0             0 


0x000001f9: 00 DW_LNE_set_address (0x00000000000000ad)
0x00000200: 05 DW_LNS_set_column (10)
0x00000202: 01 DW_LNS_copy
            0x00000000000000ad     45     10      1   0             0 


0x00000203: 00 DW_LNE_set_address (0x00000000000000af)
0x0000020a: 05 DW_LNS_set_column (23)
0x0000020c: 01 DW_LNS_copy
            0x00000000000000af     45     23      1   0             0 


0x0000020d: 00 DW_LNE_set_address (0x00000000000000b4)
0x00000214: 03 DW_LNS_advance_line (44)
0x00000216: 05 DW_LNS_set_column (16)
0x00000218: 06 DW_LNS_negate_stmt
0x00000219: 01 DW_LNS_copy
            0x00000000000000b4     44     16      1   0             0  is_stmt


0x0000021a: 00 DW_LNE_set_address (0x00000000000000c1)
0x00000221: 03 DW_LNS_advance_line (46)
0x00000223: 05 DW_LNS_set_column (11)
0x00000225: 01 DW_LNS_copy
            0x00000000000000c1     46     11      1   0             0  is_stmt


0x00000226: 00 DW_LNE_set_address (0x00000000000000cd)
0x0000022d: 05 DW_LNS_set_column (28)
0x0000022f: 06 DW_LNS_negate_stmt
0x00000230: 01 DW_LNS_copy
            0x00000000000000cd     46     28      1   0             0 


0x00000231: 00 DW_LNE_set_address (0x00000000000000d2)
0x00000238: 05 DW_LNS_set_column (41)
0x0000023a: 01 DW_LNS_copy
            0x00000000000000d2     46     41      1   0             0 


0x0000023b: 00 DW_LNE_set_address (0x00000000000000d7)
0x00000242: 03 DW_LNS_advance_line (48)
0x00000244: 05 DW_LNS_set_column (21)
0x00000246: 06 DW_LNS_negate_stmt
0x00000247: 01 DW_LNS_copy
            0x00000000000000d7     48     21      1   0             0  is_stmt


0x00000248: 00 DW_LNE_set_address (0x00000000000000df)
0x0000024f: 03 DW_LNS_advance_line (50)
0x00000251: 05 DW_LNS_set_column (14)
0x00000253: 01 DW_LNS_copy
            0x00000000000000df     50     14      1   0             0  is_stmt


0x00000254: 00 DW_LNE_set_address (0x00000000000000f0)
0x0000025b: 03 DW_LNS_advance_line (52)
0x0000025d: 05 DW_LNS_set_column (38)
0x0000025f: 01 DW_LNS_copy
            0x00000000000000f0     52     38      1   0             0  is_stmt


0x00000260: 00 DW_LNE_set_address (0x0000000000000104)
0x00000267: 03 DW_LNS_advance_line (53)
0x00000269: 05 DW_LNS_set_column (22)
0x0000026b: 01 DW_LNS_copy
            0x0000000000000104     53     22      1   0             0  is_stmt


0x0000026c: 00 DW_LNE_set_address (0x0000000000000113)
0x00000273: 03 DW_LNS_advance_line (54)
0x00000275: 05 DW_LNS_set_column (24)
0x00000277: 01 DW_LNS_copy
            0x0000000000000113     54     24      1   0             0  is_stmt


0x00000278: 00 DW_LNE_set_address (0x0000000000000115)
0x0000027f: 05 DW_LNS_set_column (26)
0x00000281: 06 DW_LNS_negate_stmt
0x00000282: 01 DW_LNS_copy
            0x0000000000000115     54     26      1   0             0 


0x00000283: 00 DW_LNE_set_address (0x0000000000000122)
0x0000028a: 05 DW_LNS_set_column (24)
0x0000028c: 01 DW_LNS_copy
            0x0000000000000122     54     24      1   0             0 


0x0000028d: 00 DW_LNE_set_address (0x0000000000000125)
0x00000294: 03 DW_LNS_advance_line (55)
0x00000296: 06 DW_LNS_negate_stmt
0x00000297: 01 DW_LNS_copy
            0x0000000000000125     55     24      1   0             0  is_stmt


0x00000298: 00 DW_LNE_set_address (0x000000000000012c)
0x0000029f: 03 DW_LNS_advance_line (52)
0x000002a1: 05 DW_LNS_set_column (44)
0x000002a3: 01 DW_LNS_copy
            0x000000000000012c     52     44      1   0             0  is_stmt


0x000002a4: 00 DW_LNE_set_address (0x0000000000000138)
0x000002ab: 05 DW_LNS_set_column (38)
0x000002ad: 06 DW_LNS_negate_stmt
0x000002ae: 01 DW_LNS_copy
            0x0000000000000138     52     38      1   0             0 


0x000002af: 00 DW_LNE_set_address (0x000000000000013b)
0x000002b6: 05 DW_LNS_set_column (13)
0x000002b8: 01 DW_LNS_copy
            0x000000000000013b     52     13      1   0             0 


0x000002b9: 00 DW_LNE_set_address (0x000000000000013f)
0x000002c0: 03 DW_LNS_advance_line (58)
0x000002c2: 05 DW_LNS_set_column (19)
0x000002c4: 06 DW_LNS_negate_stmt
0x000002c5: 01 DW_LNS_copy
            0x000000000000013f     58     19      1   0             0  is_stmt


0x000002c6: 00 DW_LNE_set_address (0x000000000000014e)
0x000002cd: 03 DW_LNS_advance_line (59)
0x000002cf: 05 DW_LNS_set_column (21)
0x000002d1: 01 DW_LNS_copy
            0x000000000000014e     59     21      1   0             0  is_stmt


0x000002d2: 00 DW_LNE_set_address (0x0000000000000155)
0x000002d9: 03 DW_LNS_advance_line (57)
0x000002db: 05 DW_LNS_set_column (18)
0x000002dd: 01 DW_LNS_copy
            0x0000000000000155     57     18      1   0             0  is_stmt


0x000002de: 00 DW_LNE_set_address (0x0000000000000165)
0x000002e5: 03 DW_LNS_advance_line (62)
0x000002e7: 05 DW_LNS_set_column (14)
0x000002e9: 01 DW_LNS_copy
            0x0000000000000165     62     14      1   0             0  is_stmt


0x000002ea: 00 DW_LNE_set_address (0x0000000000000169)
0x000002f1: 05 DW_LNS_set_column (23)
0x000002f3: 06 DW_LNS_negate_stmt
0x000002f4: 01 DW_LNS_copy
            0x0000000000000169     62     23      1   0             0 


0x000002f5: 00 DW_LNE_set_address (0x000000000000016e)
0x000002fc: 05 DW_LNS_set_column (14)
0x000002fe: 01 DW_LNS_copy
            0x000000000000016e     62     14      1   0             0 


0x000002ff: 00 DW_LNE_set_address (0x0000000000000172)
0x00000306: 03 DW_LNS_advance_line (66)
0x00000308: 05 DW_LNS_set_column (16)
0x0000030a: 06 DW_LNS_negate_stmt
0x0000030b: 01 DW_LNS_copy
            0x0000000000000172     66     16      1   0             0  is_stmt


0x0000030c: 00 DW_LNE_set_address (0x000000000000017f)
0x00000313: 03 DW_LNS_advance_line (75)
0x00000315: 05 DW_LNS_set_column (27)
0x00000317: 01 DW_LNS_copy
            0x000000000000017f     75     27      1   0             0  is_stmt


0x00000318: 00 DW_LNE_set_address (0x0000000000000188)
0x0000031f: 03 DW_LNS_advance_line (76)
0x00000321: 05 DW_LNS_set_column (16)
0x00000323: 01 DW_LNS_copy
            0x0000000000000188     76     16      1   0             0  is_stmt


0x00000324: 00 DW_LNE_set_address (0x0000000000000190)
0x0000032b: 05 DW_LNS_set_column (27)
0x0000032d: 06 DW_LNS_negate_stmt
0x0000032e: 01 DW_LNS_copy
            0x0000000000000190     76     27      1   0             0 


0x0000032f: 00 DW_LNE_set_address (0x0000000000000192)
0x00000336: 05 DW_LNS_set_column (35)
0x00000338: 01 DW_LNS_copy
            0x0000000000000192     76     35      1   0             0 


0x00000339: 00 DW_LNE_set_address (0x000000000000019b)
0x00000340: 05 DW_LNS_set_column (27)
0x00000342: 01 DW_LNS_copy
            0x000000000000019b     76     27      1   0             0 


0x00000343: 00 DW_LNE_set_address (0x00000000000001a0)
0x0000034a: 05 DW_LNS_set_column (25)
0x0000034c: 01 DW_LNS_copy
            0x00000000000001a0     76     25      1   0             0 


0x0000034d: 00 DW_LNE_set_address (0x00000000000001a3)
0x00000354: 03 DW_LNS_advance_line (75)
0x00000356: 05 DW_LNS_set_column (27)
0x00000358: 06 DW_LNS_negate_stmt
0x00000359: 01 DW_LNS_copy
            0x00000000000001a3     75     27      1   0             0  is_stmt


0x0000035a: 00 DW_LNE_set_address (0x00000000000001a8)
0x00000361: 05 DW_LNS_set_column (13)
0x00000363: 06 DW_LNS_negate_stmt
0x00000364: 01 DW_LNS_copy
            0x00000000000001a8     75     13      1   0             0 


0x00000365: 00 DW_LNE_set_address (0x00000000000001b0)
0x0000036c: 03 DW_LNS_advance_line (77)
0x0000036e: 06 DW_LNS_negate_stmt
0x0000036f: 01 DW_LNS_copy
            0x00000000000001b0     77     13      1   0             0  is_stmt


0x00000370: 00 DW_LNE_set_address (0x00000000000001b8)
0x00000377: 05 DW_LNS_set_column (22)
0x00000379: 06 DW_LNS_negate_stmt
0x0000037a: 01 DW_LNS_copy
            0x00000000000001b8     77     22      1   0             0 


0x0000037b: 00 DW_LNE_set_address (0x00000000000001bd)
0x00000382: 03 DW_LNS_advance_line (79)
0x00000384: 05 DW_LNS_set_column (16)
0x00000386: 06 DW_LNS_negate_stmt
0x00000387: 01 DW_LNS_copy
            0x00000000000001bd     79     16      1   0             0  is_stmt


0x00000388: 00 DW_LNE_set_address (0x00000000000001c5)
0x0000038f: 05 DW_LNS_set_column (14)
0x00000391: 06 DW_LNS_negate_stmt
0x00000392: 01 DW_LNS_copy
            0x00000000000001c5     79     14      1   0             0 


0x00000393: 00 DW_LNE_set_address (0x00000000000001d4)
0x0000039a: 05 DW_LNS_set_column (25)
0x0000039c: 01 DW_LNS_copy
            0x00000000000001d4     79     25      1   0             0 


0x0000039d: 00 DW_LNE_set_address (0x00000000000001db)
0x000003a4: 03 DW_LNS_advance_line (81)
0x000003a6: 05 DW_LNS_set_column (11)
0x000003a8: 06 DW_LNS_negate_stmt
0x000003a9: 01 DW_LNS_copy
            0x00000000000001db     81     11      1   0             0  is_stmt


0x000003aa: 00 DW_LNE_set_address (0x00000000000001e0)
0x000003b1: 03 DW_LNS_advance_line (66)
0x000003b3: 05 DW_LNS_set_column (16)
0x000003b5: 01 DW_LNS_copy
            0x00000000000001e0     66     16      1   0             0  is_stmt


0x000003b6: 00 DW_LNE_set_address (0x00000000000001e7)
0x000003bd: 03 DW_LNS_advance_line (74)
0x000003bf: 05 DW_LNS_set_column (22)
0x000003c1: 01 DW_LNS_copy
            0x00000000000001e7     74     22      1   0             0  is_stmt


0x000003c2: 00 DW_LNE_set_address (0x00000000000001f0)
0x000003c9: 03 DW_LNS_advance_line (37)
0x000003cb: 05 DW_LNS_set_column (4)
0x000003cd: 01 DW_LNS_copy
            0x00000000000001f0     37      4      1   0             0  is_stmt


0x000003ce: 00 DW_LNE_set_address (0x00000000000001f5)
0x000003d5: 03 DW_LNS_advance_line (39)
0x000003d7: 01 DW_LNS_copy
            0x00000000000001f5     39      4      1   0             0  is_stmt


0x000003d8: 00 DW_LNE_set_address (0x00000000000001f7)
0x000003df: 05 DW_LNS_set_column (16)
0x000003e1: 06 DW_LNS_negate_stmt
0x000003e2: 01 DW_LNS_copy
            0x00000000000001f7     39     16      1   0             0 


0x000003e3: 00 DW_LNE_set_address (0x0000000000000200)
0x000003ea: 05 DW_LNS_set_column (4)
0x000003ec: 01 DW_LNS_copy
            0x0000000000000200     39      4      1   0             0 


0x000003ed: 00 DW_LNE_set_address (0x0000000000000202)
0x000003f4: 05 DW_LNS_set_column (23)
0x000003f6: 01 DW_LNS_copy
            0x0000000000000202     39     23      1   0             0 


0x000003f7: 00 DW_LNE_set_address (0x0000000000000207)
0x000003fe: 05 DW_LNS_set_column (19)
0x00000400: 01 DW_LNS_copy
            0x0000000000000207     39     19      1   0             0 


0x00000401: 00 DW_LNE_set_address (0x000000000000020c)
0x00000408: 03 DW_LNS_advance_line (40)
0x0000040a: 05 DW_LNS_set_column (4)
0x0000040c: 06 DW_LNS_negate_stmt
0x0000040d: 01 DW_LNS_copy
            0x000000000000020c     40      4      1   0             0  is_stmt


0x0000040e: 00 DW_LNE_set_address (0x0000000000000214)
0x00000415: 05 DW_LNS_set_column (17)
0x00000417: 06 DW_LNS_negate_stmt
0x00000418: 01 DW_LNS_copy
            0x0000000000000214     40     17      1   0             0 


0x00000419: 00 DW_LNE_set_address (0x000000000000021e)
0x00000420: 03 DW_LNS_advance_line (44)
0x00000422: 05 DW_LNS_set_column (16)
0x00000424: 06 DW_LNS_negate_stmt
0x00000425: 01 DW_LNS_copy
            0x000000000000021e     44     16      1   0             0  is_stmt


0x00000426: 00 DW_LNE_set_address (0x0000000000000227)
0x0000042d: 03 DW_LNS_advance_line (45)
0x0000042f: 05 DW_LNS_set_column (10)
0x00000431: 01 DW_LNS_copy
            0x0000000000000227     45     10      1   0             0  is_stmt


0x00000432: 00 DW_LNE_set_address (0x0000000000000229)
0x00000439: 05 DW_LNS_set_column (18)
0x0000043b: 06 DW_LNS_negate_stmt
0x0000043c: 01 DW_LNS_copy
            0x0000000000000229     45     18      1   0             0 


0x0000043d: 00 DW_LNE_set_address (0x0000000000000232)
0x00000444: 05 DW_LNS_set_column (10)
0x00000446: 01 DW_LNS_copy
            0x0000000000000232     45     10      1   0             0 


0x00000447: 00 DW_LNE_set_address (0x0000000000000234)
0x0000044e: 05 DW_LNS_set_column (23)
0x00000450: 01 DW_LNS_copy
            0x0000000000000234     45     23      1   0             0 


0x00000451: 00 DW_LNE_set_address (0x0000000000000239)
0x00000458: 03 DW_LNS_advance_line (44)
0x0000045a: 05 DW_LNS_set_column (16)
0x0000045c: 06 DW_LNS_negate_stmt
0x0000045d: 01 DW_LNS_copy
            0x0000000000000239     44     16      1   0             0  is_stmt


0x0000045e: 00 DW_LNE_set_address (0x0000000000000246)
0x00000465: 03 DW_LNS_advance_line (46)
0x00000467: 05 DW_LNS_set_column (11)
0x00000469: 01 DW_LNS_copy
            0x0000000000000246     46     11      1   0             0  is_stmt


0x0000046a: 00 DW_LNE_set_address (0x0000000000000252)
0x00000471: 05 DW_LNS_set_column (28)
0x00000473: 06 DW_LNS_negate_stmt
0x00000474: 01 DW_LNS_copy
            0x0000000000000252     46     28      1   0             0 


0x00000475: 00 DW_LNE_set_address (0x0000000000000257)
0x0000047c: 05 DW_LNS_set_column (41)
0x0000047e: 01 DW_LNS_copy
            0x0000000000000257     46     41      1   0             0 


0x0000047f: 00 DW_LNE_set_address (0x000000000000025c)
0x00000486: 03 DW_LNS_advance_line (50)
0x00000488: 05 DW_LNS_set_column (14)
0x0000048a: 06 DW_LNS_negate_stmt
0x0000048b: 01 DW_LNS_copy
            0x000000000000025c     50     14      1   0             0  is_stmt


0x0000048c: 00 DW_LNE_set_address (0x000000000000026d)
0x00000493: 03 DW_LNS_advance_line (52)
0x00000495: 05 DW_LNS_set_column (38)
0x00000497: 01 DW_LNS_copy
            0x000000000000026d     52     38      1   0             0  is_stmt


0x00000498: 00 DW_LNE_set_address (0x0000000000000281)
0x0000049f: 03 DW_LNS_advance_line (53)
0x000004a1: 05 DW_LNS_set_column (22)
0x000004a3: 01 DW_LNS_copy
            0x0000000000000281     53     22      1   0             0  is_stmt


0x000004a4: 00 DW_LNE_set_address (0x0000000000000290)
0x000004ab: 03 DW_LNS_advance_line (54)
0x000004ad: 05 DW_LNS_set_column (24)
0x000004af: 01 DW_LNS_copy
            0x0000000000000290     54     24      1   0             0  is_stmt


0x000004b0: 00 DW_LNE_set_address (0x0000000000000292)
0x000004b7: 05 DW_LNS_set_column (26)
0x000004b9: 06 DW_LNS_negate_stmt
0x000004ba: 01 DW_LNS_copy
            0x0000000000000292     54     26      1   0             0 


0x000004bb: 00 DW_LNE_set_address (0x000000000000029f)
0x000004c2: 05 DW_LNS_set_column (24)
0x000004c4: 01 DW_LNS_copy
            0x000000000000029f     54     24      1   0             0 


0x000004c5: 00 DW_LNE_set_address (0x00000000000002a2)
0x000004cc: 03 DW_LNS_advance_line (55)
0x000004ce: 06 DW_LNS_negate_stmt
0x000004cf: 01 DW_LNS_copy
            0x00000000000002a2     55     24      1   0             0  is_stmt


0x000004d0: 00 DW_LNE_set_address (0x00000000000002a9)
0x000004d7: 03 DW_LNS_advance_line (52)
0x000004d9: 05 DW_LNS_set_column (44)
0x000004db: 01 DW_LNS_copy
            0x00000000000002a9     52     44      1   0             0  is_stmt


0x000004dc: 00 DW_LNE_set_address (0x00000000000002b5)
0x000004e3: 05 DW_LNS_set_column (38)
0x000004e5: 06 DW_LNS_negate_stmt
0x000004e6: 01 DW_LNS_copy
            0x00000000000002b5     52     38      1   0             0 


0x000004e7: 00 DW_LNE_set_address (0x00000000000002bc)
0x000004ee: 03 DW_LNS_advance_line (58)
0x000004f0: 05 DW_LNS_set_column (19)
0x000004f2: 06 DW_LNS_negate_stmt
0x000004f3: 01 DW_LNS_copy
            0x00000000000002bc     58     19      1   0             0  is_stmt


0x000004f4: 00 DW_LNE_set_address (0x00000000000002cb)
0x000004fb: 03 DW_LNS_advance_line (59)
0x000004fd: 05 DW_LNS_set_column (21)
0x000004ff: 01 DW_LNS_copy
            0x00000000000002cb     59     21      1   0             0  is_stmt


0x00000500: 00 DW_LNE_set_address (0x00000000000002d2)
0x00000507: 03 DW_LNS_advance_line (57)
0x00000509: 05 DW_LNS_set_column (18)
0x0000050b: 01 DW_LNS_copy
            0x00000000000002d2     57     18      1   0             0  is_stmt


0x0000050c: 00 DW_LNE_set_address (0x00000000000002e2)
0x00000513: 03 DW_LNS_advance_line (62)
0x00000515: 05 DW_LNS_set_column (14)
0x00000517: 01 DW_LNS_copy
            0x00000000000002e2     62     14      1   0             0  is_stmt


0x00000518: 00 DW_LNE_set_address (0x00000000000002e6)
0x0000051f: 05 DW_LNS_set_column (23)
0x00000521: 06 DW_LNS_negate_stmt
0x00000522: 01 DW_LNS_copy
            0x00000000000002e6     62     23      1   0             0 


0x00000523: 00 DW_LNE_set_address (0x00000000000002eb)
0x0000052a: 05 DW_LNS_set_column (14)
0x0000052c: 01 DW_LNS_copy
            0x00000000000002eb     62     14      1   0             0 


0x0000052d: 00 DW_LNE_set_address (0x00000000000002ef)
0x00000534: 03 DW_LNS_advance_line (66)
0x00000536: 05 DW_LNS_set_column (16)
0x00000538: 06 DW_LNS_negate_stmt
0x00000539: 01 DW_LNS_copy
            0x00000000000002ef     66     16      1   0             0  is_stmt


0x0000053a: 00 DW_LNE_set_address (0x00000000000002fc)
0x00000541: 03 DW_LNS_advance_line (75)
0x00000543: 05 DW_LNS_set_column (27)
0x00000545: 01 DW_LNS_copy
            0x00000000000002fc     75     27      1   0             0  is_stmt


0x00000546: 00 DW_LNE_set_address (0x0000000000000305)
0x0000054d: 03 DW_LNS_advance_line (76)
0x0000054f: 05 DW_LNS_set_column (16)
0x00000551: 01 DW_LNS_copy
            0x0000000000000305     76     16      1   0             0  is_stmt


0x00000552: 00 DW_LNE_set_address (0x000000000000030d)
0x00000559: 05 DW_LNS_set_column (27)
0x0000055b: 06 DW_LNS_negate_stmt
0x0000055c: 01 DW_LNS_copy
            0x000000000000030d     76     27      1   0             0 


0x0000055d: 00 DW_LNE_set_address (0x000000000000030f)
0x00000564: 05 DW_LNS_set_column (35)
0x00000566: 01 DW_LNS_copy
            0x000000000000030f     76     35      1   0             0 


0x00000567: 00 DW_LNE_set_address (0x0000000000000318)
0x0000056e: 05 DW_LNS_set_column (27)
0x00000570: 01 DW_LNS_copy
            0x0000000000000318     76     27      1   0             0 


0x00000571: 00 DW_LNE_set_address (0x000000000000031d)
0x00000578: 05 DW_LNS_set_column (25)
0x0000057a: 01 DW_LNS_copy
            0x000000000000031d     76     25      1   0             0 


0x0000057b: 00 DW_LNE_set_address (0x0000000000000320)
0x00000582: 03 DW_LNS_advance_line (75)
0x00000584: 05 DW_LNS_set_column (27)
0x00000586: 06 DW_LNS_negate_stmt
0x00000587: 01 DW_LNS_copy
            0x0000000000000320     75     27      1   0             0  is_stmt


0x00000588: 00 DW_LNE_set_address (0x000000000000032d)
0x0000058f: 03 DW_LNS_advance_line (77)
0x00000591: 05 DW_LNS_set_column (13)
0x00000593: 01 DW_LNS_copy
            0x000000000000032d     77     13      1   0             0  is_stmt


0x00000594: 00 DW_LNE_set_address (0x0000000000000335)
0x0000059b: 05 DW_LNS_set_column (22)
0x0000059d: 06 DW_LNS_negate_stmt
0x0000059e: 01 DW_LNS_copy
            0x0000000000000335     77     22      1   0             0 


0x0000059f: 00 DW_LNE_set_address (0x000000000000033a)
0x000005a6: 03 DW_LNS_advance_line (79)
0x000005a8: 05 DW_LNS_set_column (16)
0x000005aa: 06 DW_LNS_negate_stmt
0x000005ab: 01 DW_LNS_copy
            0x000000000000033a     79     16      1   0             0  is_stmt


0x000005ac: 00 DW_LNE_set_address (0x0000000000000342)
0x000005b3: 05 DW_LNS_set_column (14)
0x000005b5: 06 DW_LNS_negate_stmt
0x000005b6: 01 DW_LNS_copy
            0x0000000000000342     79     14      1   0             0 


0x000005b7: 00 DW_LNE_set_address (0x0000000000000351)
0x000005be: 05 DW_LNS_set_column (25)
0x000005c0: 01 DW_LNS_copy
            0x0000000000000351     79     25      1   0             0 


0x000005c1: 00 DW_LNE_set_address (0x0000000000000358)
0x000005c8: 03 DW_LNS_advance_line (81)
0x000005ca: 05 DW_LNS_set_column (11)
0x000005cc: 06 DW_LNS_negate_stmt
0x000005cd: 01 DW_LNS_copy
            0x0000000000000358     81     11      1   0             0  is_stmt


0x000005ce: 00 DW_LNE_set_address (0x000000000000035d)
0x000005d5: 03 DW_LNS_advance_line (66)
0x000005d7: 05 DW_LNS_set_column (16)
0x000005d9: 01 DW_LNS_copy
            0x000000000000035d     66     16      1   0             0  is_stmt


0x000005da: 00 DW_LNE_set_address (0x0000000000000364)
0x000005e1: 03 DW_LNS_advance_line (74)
0x000005e3: 05 DW_LNS_set_column (22)
0x000005e5: 01 DW_LNS_copy
            0x0000000000000364     74     22      1   0             0  is_stmt


0x000005e6: 00 DW_LNE_set_address (0x0000000000000372)
0x000005ed: 03 DW_LNS_advance_line (67)
0x000005ef: 05 DW_LNS_set_column (13)
0x000005f1: 01 DW_LNS_copy
            0x0000000000000372     67     13      1   0             0  is_stmt


0x000005f2: 00 DW_LNE_set_address (0x0000000000000376)
0x000005f9: 03 DW_LNS_advance_line (68)
0x000005fb: 01 DW_LNS_copy
            0x0000000000000376     68     13      1   0             0  is_stmt


0x000005fc: 00 DW_LNE_set_address (0x000000000000037a)
0x00000603: 03 DW_LNS_advance_line (69)
0x00000605: 01 DW_LNS_copy
            0x000000000000037a     69     13      1   0             0  is_stmt


0x00000606: 00 DW_LNE_set_address (0x000000000000037e)
0x0000060d: 03 DW_LNS_advance_line (70)
0x0000060f: 01 DW_LNS_copy
            0x000000000000037e     70     13      1   0             0  is_stmt


0x00000610: 00 DW_LNE_set_address (0x0000000000000381)
0x00000617: 00 DW_LNE_end_sequence
            0x0000000000000381     70     13      1   0             0  is_stmt end_sequence

0x0000061a: 00 DW_LNE_set_address (0x0000000000000383)
0x00000621: 03 DW_LNS_advance_line (152)
0x00000624: 01 DW_LNS_copy
            0x0000000000000383    152      0      1   0             0  is_stmt


0x00000625: 00 DW_LNE_set_address (0x000000000000039f)
0x0000062c: 03 DW_LNS_advance_line (153)
0x0000062e: 05 DW_LNS_set_column (17)
0x00000630: 0a DW_LNS_set_prologue_end
0x00000631: 01 DW_LNS_copy
            0x000000000000039f    153     17      1   0             0  is_stmt prologue_end


0x00000632: 00 DW_LNE_set_address (0x00000000000003a6)
0x00000639: 05 DW_LNS_set_column (28)
0x0000063b: 06 DW_LNS_negate_stmt
0x0000063c: 01 DW_LNS_copy
            0x00000000000003a6    153     28      1   0             0 


0x0000063d: 00 DW_LNE_set_address (0x00000000000003ab)
0x00000644: 05 DW_LNS_set_column (23)
0x00000646: 01 DW_LNS_copy
            0x00000000000003ab    153     23      1   0             0 


0x00000647: 00 DW_LNE_set_address (0x00000000000003b1)
0x0000064e: 03 DW_LNS_advance_line (155)
0x00000650: 05 DW_LNS_set_column (10)
0x00000652: 06 DW_LNS_negate_stmt
0x00000653: 01 DW_LNS_copy
            0x00000000000003b1    155     10      1   0             0  is_stmt


0x00000654: 00 DW_LNE_set_address (0x00000000000003b2)
0x0000065b: 05 DW_LNS_set_column (8)
0x0000065d: 06 DW_LNS_negate_stmt
0x0000065e: 01 DW_LNS_copy
            0x00000000000003b2    155      8      1   0             0 


0x0000065f: 00 DW_LNE_set_address (0x00000000000003b5)
0x00000666: 03 DW_LNS_advance_line (156)
0x00000668: 05 DW_LNS_set_column (7)
0x0000066a: 06 DW_LNS_negate_stmt
0x0000066b: 01 DW_LNS_copy
            0x00000000000003b5    156      7      1   0             0  is_stmt


0x0000066c: 00 DW_LNE_set_address (0x00000000000003c2)
0x00000673: 03 DW_LNS_advance_line (94)
0x00000675: 05 DW_LNS_set_column (18)
0x00000677: 01 DW_LNS_copy
            0x00000000000003c2     94     18      1   0             0  is_stmt


0x00000678: 00 DW_LNE_set_address (0x00000000000003dc)
0x0000067f: 03 DW_LNS_advance_line (95)
0x00000681: 05 DW_LNS_set_column (29)
0x00000683: 01 DW_LNS_copy
            0x00000000000003dc     95     29      1   0             0  is_stmt


0x00000684: 00 DW_LNE_set_address (0x00000000000003de)
0x0000068b: 03 DW_LNS_advance_line (98)
0x0000068d: 05 DW_LNS_set_column (19)
0x0000068f: 01 DW_LNS_copy
            0x00000000000003de     98     19      1   0             0  is_stmt


0x00000690: 00 DW_LNE_set_address (0x00000000000003e5)
0x00000697: 03 DW_LNS_advance_line (97)
0x00000699: 05 DW_LNS_set_column (16)
0x0000069b: 01 DW_LNS_copy
            0x00000000000003e5     97     16      1   0             0  is_stmt


0x0000069c: 00 DW_LNE_set_address (0x00000000000003ec)
0x000006a3: 03 DW_LNS_advance_line (96)
0x000006a5: 01 DW_LNS_copy
            0x00000000000003ec     96     16      1   0             0  is_stmt


0x000006a6: 00 DW_LNE_set_address (0x00000000000003f7)
0x000006ad: 03 DW_LNS_advance_line (94)
0x000006af: 05 DW_LNS_set_column (28)
0x000006b1: 01 DW_LNS_copy
            0x00000000000003f7     94     28      1   0             0  is_stmt


0x000006b2: 00 DW_LNE_set_address (0x00000000000003fc)
0x000006b9: 05 DW_LNS_set_column (18)
0x000006bb: 06 DW_LNS_negate_stmt
0x000006bc: 01 DW_LNS_copy
            0x00000000000003fc     94     18      1   0             0 


0x000006bd: 00 DW_LNE_set_address (0x0000000000000401)
0x000006c4: 05 DW_LNS_set_column (4)
0x000006c6: 01 DW_LNS_copy
            0x0000000000000401     94      4      1   0             0 


0x000006c7: 00 DW_LNE_set_address (0x0000000000000409)
0x000006ce: 03 DW_LNS_advance_line (102)
0x000006d0: 05 DW_LNS_set_column (27)
0x000006d2: 06 DW_LNS_negate_stmt
0x000006d3: 01 DW_LNS_copy
            0x0000000000000409    102     27      1   0             0  is_stmt


0x000006d4: 00 DW_LNE_set_address (0x000000000000040e)
0x000006db: 05 DW_LNS_set_column (18)
0x000006dd: 06 DW_LNS_negate_stmt
0x000006de: 01 DW_LNS_copy
            0x000000000000040e    102     18      1   0             0 


0x000006df: 00 DW_LNE_set_address (0x0000000000000414)
0x000006e6: 03 DW_LNS_advance_line (103)
0x000006e8: 06 DW_LNS_negate_stmt
0x000006e9: 01 DW_LNS_copy
            0x0000000000000414    103     18      1   0             0  is_stmt


0x000006ea: 00 DW_LNE_set_address (0x0000000000000420)
0x000006f1: 03 DW_LNS_advance_line (105)
0x000006f3: 01 DW_LNS_copy
            0x0000000000000420    105     18      1   0             0  is_stmt


0x000006f4: 00 DW_LNE_set_address (0x0000000000000429)
0x000006fb: 03 DW_LNS_advance_line (106)
0x000006fd: 05 DW_LNS_set_column (7)
0x000006ff: 01 DW_LNS_copy
            0x0000000000000429    106      7      1   0             0  is_stmt


0x00000700: 00 DW_LNE_set_address (0x0000000000000431)
0x00000707: 05 DW_LNS_set_column (16)
0x00000709: 06 DW_LNS_negate_stmt
0x0000070a: 01 DW_LNS_copy
            0x0000000000000431    106     16      1   0             0 


0x0000070b: 00 DW_LNE_set_address (0x0000000000000436)
0x00000712: 03 DW_LNS_advance_line (105)
0x00000714: 05 DW_LNS_set_column (24)
0x00000716: 06 DW_LNS_negate_stmt
0x00000717: 01 DW_LNS_copy
            0x0000000000000436    105     24      1   0             0  is_stmt


0x00000718: 00 DW_LNE_set_address (0x000000000000043b)
0x0000071f: 05 DW_LNS_set_column (18)
0x00000721: 06 DW_LNS_negate_stmt
0x00000722: 01 DW_LNS_copy
            0x000000000000043b    105     18      1   0             0 


0x00000723: 00 DW_LNE_set_address (0x0000000000000461)
0x0000072a: 03 DW_LNS_advance_line (112)
0x0000072c: 05 DW_LNS_set_column (13)
0x0000072e: 06 DW_LNS_negate_stmt
0x0000072f: 01 DW_LNS_copy
            0x0000000000000461    112     13      1   0             0  is_stmt


0x00000730: 00 DW_LNE_set_address (0x0000000000000463)
0x00000737: 05 DW_LNS_set_column (26)
0x00000739: 06 DW_LNS_negate_stmt
0x0000073a: 01 DW_LNS_copy
            0x0000000000000463    112     26      1   0             0 


0x0000073b: 00 DW_LNE_set_address (0x0000000000000470)
0x00000742: 05 DW_LNS_set_column (35)
0x00000744: 01 DW_LNS_copy
            0x0000000000000470    112     35      1   0             0 


0x00000745: 00 DW_LNE_set_address (0x0000000000000471)
0x0000074c: 05 DW_LNS_set_column (13)
0x0000074e: 01 DW_LNS_copy
            0x0000000000000471    112     13      1   0             0 


0x0000074f: 00 DW_LNE_set_address (0x000000000000047f)
0x00000756: 03 DW_LNS_advance_line (111)
0x00000758: 05 DW_LNS_set_column (30)
0x0000075a: 06 DW_LNS_negate_stmt
0x0000075b: 01 DW_LNS_copy
            0x000000000000047f    111     30      1   0             0  is_stmt


0x0000075c: 00 DW_LNE_set_address (0x0000000000000484)
0x00000763: 05 DW_LNS_set_column (24)
0x00000765: 06 DW_LNS_negate_stmt
0x00000766: 01 DW_LNS_copy
            0x0000000000000484    111     24      1   0             0 


0x00000767: 00 DW_LNE_set_address (0x0000000000000489)
0x0000076e: 05 DW_LNS_set_column (10)
0x00000770: 01 DW_LNS_copy
            0x0000000000000489    111     10      1   0             0 


0x00000771: 00 DW_LNE_set_address (0x000000000000048e)
0x00000778: 03 DW_LNS_advance_line (113)
0x0000077a: 06 DW_LNS_negate_stmt
0x0000077b: 01 DW_LNS_copy
            0x000000000000048e    113     10      1   0             0  is_stmt


0x0000077c: 00 DW_LNE_set_address (0x0000000000000491)
0x00000783: 03 DW_LNS_advance_line (118)
0x00000785: 05 DW_LNS_set_column (16)
0x00000787: 01 DW_LNS_copy
            0x0000000000000491    118     16      1   0             0  is_stmt


0x00000788: 00 DW_LNE_set_address (0x000000000000049a)
0x0000078f: 03 DW_LNS_advance_line (119)
0x00000791: 05 DW_LNS_set_column (10)
0x00000793: 01 DW_LNS_copy
            0x000000000000049a    119     10      1   0             0  is_stmt


0x00000794: 00 DW_LNE_set_address (0x000000000000049c)
0x0000079b: 05 DW_LNS_set_column (18)
0x0000079d: 06 DW_LNS_negate_stmt
0x0000079e: 01 DW_LNS_copy
            0x000000000000049c    119     18      1   0             0 


0x0000079f: 00 DW_LNE_set_address (0x00000000000004a5)
0x000007a6: 05 DW_LNS_set_column (10)
0x000007a8: 01 DW_LNS_copy
            0x00000000000004a5    119     10      1   0             0 


0x000007a9: 00 DW_LNE_set_address (0x00000000000004a7)
0x000007b0: 05 DW_LNS_set_column (23)
0x000007b2: 01 DW_LNS_copy
            0x00000000000004a7    119     23      1   0             0 


0x000007b3: 00 DW_LNE_set_address (0x00000000000004ac)
0x000007ba: 03 DW_LNS_advance_line (118)
0x000007bc: 05 DW_LNS_set_column (16)
0x000007be: 06 DW_LNS_negate_stmt
0x000007bf: 01 DW_LNS_copy
            0x00000000000004ac    118     16      1   0             0  is_stmt


0x000007c0: 00 DW_LNE_set_address (0x00000000000004b9)
0x000007c7: 03 DW_LNS_advance_line (122)
0x000007c9: 01 DW_LNS_copy
            0x00000000000004b9    122     16      1   0             0  is_stmt


0x000007ca: 00 DW_LNE_set_address (0x00000000000004cd)
0x000007d1: 03 DW_LNS_advance_line (125)
0x000007d3: 05 DW_LNS_set_column (22)
0x000007d5: 01 DW_LNS_copy
            0x00000000000004cd    125     22      1   0             0  is_stmt


0x000007d6: 00 DW_LNE_set_address (0x00000000000004d4)
0x000007dd: 03 DW_LNS_advance_line (126)
0x000007df: 05 DW_LNS_set_column (27)
0x000007e1: 01 DW_LNS_copy
            0x00000000000004d4    126     27      1   0             0  is_stmt


0x000007e2: 00 DW_LNE_set_address (0x00000000000004dd)
0x000007e9: 03 DW_LNS_advance_line (127)
0x000007eb: 05 DW_LNS_set_column (16)
0x000007ed: 01 DW_LNS_copy
            0x00000000000004dd    127     16      1   0             0  is_stmt


0x000007ee: 00 DW_LNE_set_address (0x00000000000004e5)
0x000007f5: 05 DW_LNS_set_column (27)
0x000007f7: 06 DW_LNS_negate_stmt
0x000007f8: 01 DW_LNS_copy
            0x00000000000004e5    127     27      1   0             0 


0x000007f9: 00 DW_LNE_set_address (0x00000000000004e7)
0x00000800: 05 DW_LNS_set_column (35)
0x00000802: 01 DW_LNS_copy
            0x00000000000004e7    127     35      1   0             0 


0x00000803: 00 DW_LNE_set_address (0x00000000000004f0)
0x0000080a: 05 DW_LNS_set_column (27)
0x0000080c: 01 DW_LNS_copy
            0x00000000000004f0    127     27      1   0             0 


0x0000080d: 00 DW_LNE_set_address (0x00000000000004f5)
0x00000814: 05 DW_LNS_set_column (25)
0x00000816: 01 DW_LNS_copy
            0x00000000000004f5    127     25      1   0             0 


0x00000817: 00 DW_LNE_set_address (0x00000000000004f8)
0x0000081e: 03 DW_LNS_advance_line (126)
0x00000820: 05 DW_LNS_set_column (27)
0x00000822: 06 DW_LNS_negate_stmt
0x00000823: 01 DW_LNS_copy
            0x00000000000004f8    126     27      1   0             0  is_stmt


0x00000824: 00 DW_LNE_set_address (0x00000000000004fd)
0x0000082b: 05 DW_LNS_set_column (13)
0x0000082d: 06 DW_LNS_negate_stmt
0x0000082e: 01 DW_LNS_copy
            0x00000000000004fd    126     13      1   0             0 


0x0000082f: 00 DW_LNE_set_address (0x0000000000000505)
0x00000836: 03 DW_LNS_advance_line (128)
0x00000838: 06 DW_LNS_negate_stmt
0x00000839: 01 DW_LNS_copy
            0x0000000000000505    128     13      1   0             0  is_stmt


0x0000083a: 00 DW_LNE_set_address (0x000000000000050d)
0x00000841: 05 DW_LNS_set_column (22)
0x00000843: 06 DW_LNS_negate_stmt
0x00000844: 01 DW_LNS_copy
            0x000000000000050d    128     22      1   0             0 


0x00000845: 00 DW_LNE_set_address (0x0000000000000512)
0x0000084c: 03 DW_LNS_advance_line (130)
0x0000084e: 05 DW_LNS_set_column (16)
0x00000850: 06 DW_LNS_negate_stmt
0x00000851: 01 DW_LNS_copy
            0x0000000000000512    130     16      1   0             0  is_stmt


0x00000852: 00 DW_LNE_set_address (0x000000000000051a)
0x00000859: 05 DW_LNS_set_column (14)
0x0000085b: 06 DW_LNS_negate_stmt
0x0000085c: 01 DW_LNS_copy
            0x000000000000051a    130     14      1   0             0 


0x0000085d: 00 DW_LNE_set_address (0x0000000000000529)
0x00000864: 05 DW_LNS_set_column (25)
0x00000866: 01 DW_LNS_copy
            0x0000000000000529    130     25      1   0             0 


0x00000867: 00 DW_LNE_set_address (0x0000000000000530)
0x0000086e: 03 DW_LNS_advance_line (133)
0x00000870: 05 DW_LNS_set_column (11)
0x00000872: 06 DW_LNS_negate_stmt
0x00000873: 01 DW_LNS_copy
            0x0000000000000530    133     11      1   0             0  is_stmt


0x00000874: 00 DW_LNE_set_address (0x0000000000000535)
0x0000087b: 03 DW_LNS_advance_line (122)
0x0000087d: 05 DW_LNS_set_column (16)
0x0000087f: 01 DW_LNS_copy
            0x0000000000000535    122     16      1   0             0  is_stmt


0x00000880: 00 DW_LNE_set_address (0x000000000000053a)
0x00000887: 05 DW_LNS_set_column (14)
0x00000889: 06 DW_LNS_negate_stmt
0x0000088a: 01 DW_LNS_copy
            0x000000000000053a    122     14      1   0             0 


0x0000088b: 00 DW_LNE_set_address (0x0000000000000540)
0x00000892: 03 DW_LNS_advance_line (110)
0x00000894: 05 DW_LNS_set_column (11)
0x00000896: 06 DW_LNS_negate_stmt
0x00000897: 01 DW_LNS_copy
            0x0000000000000540    110     11      1   0             0  is_stmt


0x00000898: 00 DW_LNE_set_address (0x000000000000054c)
0x0000089f: 03 DW_LNS_advance_line (113)
0x000008a1: 05 DW_LNS_set_column (10)
0x000008a3: 01 DW_LNS_copy
            0x000000000000054c    113     10      1   0             0  is_stmt


0x000008a4: 00 DW_LNE_set_address (0x000000000000054f)
0x000008ab: 03 DW_LNS_advance_line (118)
0x000008ad: 05 DW_LNS_set_column (16)
0x000008af: 01 DW_LNS_copy
            0x000000000000054f    118     16      1   0             0  is_stmt


0x000008b0: 00 DW_LNE_set_address (0x0000000000000558)
0x000008b7: 03 DW_LNS_advance_line (119)
0x000008b9: 05 DW_LNS_set_column (10)
0x000008bb: 01 DW_LNS_copy
            0x0000000000000558    119     10      1   0             0  is_stmt


0x000008bc: 00 DW_LNE_set_address (0x000000000000055a)
0x000008c3: 05 DW_LNS_set_column (18)
0x000008c5: 06 DW_LNS_negate_stmt
0x000008c6: 01 DW_LNS_copy
            0x000000000000055a    119     18      1   0             0 


0x000008c7: 00 DW_LNE_set_address (0x0000000000000563)
0x000008ce: 05 DW_LNS_set_column (10)
0x000008d0: 01 DW_LNS_copy
            0x0000000000000563    119     10      1   0             0 


0x000008d1: 00 DW_LNE_set_address (0x0000000000000565)
0x000008d8: 05 DW_LNS_set_column (23)
0x000008da: 01 DW_LNS_copy
            0x0000000000000565    119     23      1   0             0 


0x000008db: 00 DW_LNE_set_address (0x000000000000056a)
0x000008e2: 03 DW_LNS_advance_line (118)
0x000008e4: 05 DW_LNS_set_column (16)
0x000008e6: 06 DW_LNS_negate_stmt
0x000008e7: 01 DW_LNS_copy
            0x000000000000056a    118     16      1   0             0  is_stmt


0x000008e8: 00 DW_LNE_set_address (0x0000000000000577)
0x000008ef: 03 DW_LNS_advance_line (122)
0x000008f1: 01 DW_LNS_copy
            0x0000000000000577    122     16      1   0             0  is_stmt


0x000008f2: 00 DW_LNE_set_address (0x000000000000057c)
0x000008f9: 05 DW_LNS_set_column (14)
0x000008fb: 06 DW_LNS_negate_stmt
0x000008fc: 01 DW_LNS_copy
            0x000000000000057c    122     14      1   0             0 


0x000008fd: 00 DW_LNE_set_address (0x0000000000000585)
0x00000904: 03 DW_LNS_advance_line (125)
0x00000906: 05 DW_LNS_set_column (22)
0x00000908: 06 DW_LNS_negate_stmt
0x00000909: 01 DW_LNS_copy
            0x0000000000000585    125     22      1   0             0  is_stmt


0x0000090a: 00 DW_LNE_set_address (0x0000000000000592)
0x00000911: 03 DW_LNS_advance_line (126)
0x00000913: 05 DW_LNS_set_column (27)
0x00000915: 01 DW_LNS_copy
            0x0000000000000592    126     27      1   0             0  is_stmt


0x00000916: 00 DW_LNE_set_address (0x000000000000059b)
0x0000091d: 03 DW_LNS_advance_line (127)
0x0000091f: 05 DW_LNS_set_column (16)
0x00000921: 01 DW_LNS_copy
            0x000000000000059b    127     16      1   0             0  is_stmt


0x00000922: 00 DW_LNE_set_address (0x00000000000005a3)
0x00000929: 05 DW_LNS_set_column (27)
0x0000092b: 06 DW_LNS_negate_stmt
0x0000092c: 01 DW_LNS_copy
            0x00000000000005a3    127     27      1   0             0 


0x0000092d: 00 DW_LNE_set_address (0x00000000000005a5)
0x00000934: 05 DW_LNS_set_column (35)
0x00000936: 01 DW_LNS_copy
            0x00000000000005a5    127     35      1   0             0 


0x00000937: 00 DW_LNE_set_address (0x00000000000005ae)
0x0000093e: 05 DW_LNS_set_column (27)
0x00000940: 01 DW_LNS_copy
            0x00000000000005ae    127     27      1   0             0 


0x00000941: 00 DW_LNE_set_address (0x00000000000005b3)
0x00000948: 05 DW_LNS_set_column (25)
0x0000094a: 01 DW_LNS_copy
            0x00000000000005b3    127     25      1   0             0 


0x0000094b: 00 DW_LNE_set_address (0x00000000000005b6)
0x00000952: 03 DW_LNS_advance_line (126)
0x00000954: 05 DW_LNS_set_column (27)
0x00000956: 06 DW_LNS_negate_stmt
0x00000957: 01 DW_LNS_copy
            0x00000000000005b6    126     27      1   0             0  is_stmt


0x00000958: 00 DW_LNE_set_address (0x00000000000005bb)
0x0000095f: 05 DW_LNS_set_column (13)
0x00000961: 06 DW_LNS_negate_stmt
0x00000962: 01 DW_LNS_copy
            0x00000000000005bb    126     13      1   0             0 


0x00000963: 00 DW_LNE_set_address (0x00000000000005c3)
0x0000096a: 03 DW_LNS_advance_line (128)
0x0000096c: 06 DW_LNS_negate_stmt
0x0000096d: 01 DW_LNS_copy
            0x00000000000005c3    128     13      1   0             0  is_stmt


0x0000096e: 00 DW_LNE_set_address (0x00000000000005cb)
0x00000975: 05 DW_LNS_set_column (22)
0x00000977: 06 DW_LNS_negate_stmt
0x00000978: 01 DW_LNS_copy
            0x00000000000005cb    128     22      1   0             0 


0x00000979: 00 DW_LNE_set_address (0x00000000000005d0)
0x00000980: 03 DW_LNS_advance_line (130)
0x00000982: 05 DW_LNS_set_column (16)
0x00000984: 06 DW_LNS_negate_stmt
0x00000985: 01 DW_LNS_copy
            0x00000000000005d0    130     16      1   0             0  is_stmt


0x00000986: 00 DW_LNE_set_address (0x00000000000005d8)
0x0000098d: 05 DW_LNS_set_column (14)
0x0000098f: 06 DW_LNS_negate_stmt
0x00000990: 01 DW_LNS_copy
            0x00000000000005d8    130     14      1   0             0 


0x00000991: 00 DW_LNE_set_address (0x00000000000005e7)
0x00000998: 05 DW_LNS_set_column (25)
0x0000099a: 01 DW_LNS_copy
            0x00000000000005e7    130     25      1   0             0 


0x0000099b: 00 DW_LNE_set_address (0x00000000000005ee)
0x000009a2: 03 DW_LNS_advance_line (133)
0x000009a4: 05 DW_LNS_set_column (11)
0x000009a6: 06 DW_LNS_negate_stmt
0x000009a7: 01 DW_LNS_copy
            0x00000000000005ee    133     11      1   0             0  is_stmt


0x000009a8: 00 DW_LNE_set_address (0x00000000000005f3)
0x000009af: 03 DW_LNS_advance_line (122)
0x000009b1: 05 DW_LNS_set_column (16)
0x000009b3: 01 DW_LNS_copy
            0x00000000000005f3    122     16      1   0             0  is_stmt


0x000009b4: 00 DW_LNE_set_address (0x00000000000005f8)
0x000009bb: 05 DW_LNS_set_column (14)
0x000009bd: 06 DW_LNS_negate_stmt
0x000009be: 01 DW_LNS_copy
            0x00000000000005f8    122     14      1   0             0 


0x000009bf: 00 DW_LNE_set_address (0x00000000000005fe)
0x000009c6: 03 DW_LNS_advance_line (110)
0x000009c8: 05 DW_LNS_set_column (11)
0x000009ca: 06 DW_LNS_negate_stmt
0x000009cb: 01 DW_LNS_copy
            0x00000000000005fe    110     11      1   0             0  is_stmt


0x000009cc: 00 DW_LNE_set_address (0x0000000000000604)
0x000009d3: 03 DW_LNS_advance_line (138)
0x000009d5: 05 DW_LNS_set_column (4)
0x000009d7: 01 DW_LNS_copy
            0x0000000000000604    138      4      1   0             0  is_stmt


0x000009d8: 00 DW_LNE_set_address (0x0000000000000608)
0x000009df: 03 DW_LNS_advance_line (139)
0x000009e1: 01 DW_LNS_copy
            0x0000000000000608    139      4      1   0             0  is_stmt


0x000009e2: 00 DW_LNE_set_address (0x0000000000000618)
0x000009e9: 03 DW_LNS_advance_line (142)
0x000009eb: 05 DW_LNS_set_column (20)
0x000009ed: 01 DW_LNS_copy
            0x0000000000000618    142     20      1   0             0  is_stmt


0x000009ee: 00 DW_LNE_set_address (0x0000000000000620)
0x000009f5: 03 DW_LNS_advance_line (146)
0x000009f7: 01 DW_LNS_copy
            0x0000000000000620    146     20      1   0             0  is_stmt


0x000009f8: 00 DW_LNE_set_address (0x0000000000000627)
0x000009ff: 03 DW_LNS_advance_line (147)
0x00000a01: 05 DW_LNS_set_column (7)
0x00000a03: 01 DW_LNS_copy
            0x0000000000000627    147      7      1   0             0  is_stmt


0x00000a04: 00 DW_LNE_set_address (0x000000000000062b)
0x00000a0b: 03 DW_LNS_advance_line (143)
0x00000a0d: 05 DW_LNS_set_column (11)
0x00000a0f: 01 DW_LNS_copy
            0x000000000000062b    143     11      1   0             0  is_stmt


0x00000a10: 00 DW_LNE_set_address (0x000000000000062f)
0x00000a17: 05 DW_LNS_set_column (20)
0x00000a19: 06 DW_LNS_negate_stmt
0x00000a1a: 01 DW_LNS_copy
            0x000000000000062f    143     20      1   0             0 


0x00000a1b: 00 DW_LNE_set_address (0x0000000000000634)
0x00000a22: 05 DW_LNS_set_column (11)
0x00000a24: 01 DW_LNS_copy
            0x0000000000000634    143     11      1   0             0 


0x00000a25: 00 DW_LNE_set_address (0x000000000000063b)
0x00000a2c: 03 DW_LNS_advance_line (141)
0x00000a2e: 05 DW_LNS_set_column (4)
0x00000a30: 06 DW_LNS_negate_stmt
0x00000a31: 01 DW_LNS_copy
            0x000000000000063b    141      4      1   0             0  is_stmt


0x00000a32: 00 DW_LNE_set_address (0x0000000000000641)
0x00000a39: 03 DW_LNS_advance_line (159)
0x00000a3b: 01 DW_LNS_copy
            0x0000000000000641    159      4      1   0             0  is_stmt


0x00000a3c: 00 DW_LNE_set_address (0x0000000000000658)
0x00000a43: 03 DW_LNS_advance_line (161)
0x00000a45: 05 DW_LNS_set_column (1)
0x00000a47: 01 DW_LNS_copy
            0x0000000000000658    161      1      1   0             0  is_stmt


0x00000a48: 00 DW_LNE_set_address (0x0000000000000662)
0x00000a4f: 00 DW_LNE_end_sequence
            0x0000000000000662    161      1      1   0             0  is_stmt end_sequence


.debug_str contents:
0x00000000: "clang version 11.0.0 (https://github.com/llvm/llvm-project.git 313d89724ce3ccf66c1c51849903e1e6d184dd85)"
0x00000069: "/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp"
0x000000a9: "/usr/local/google/home/azakai/Dev/2-binaryen"
0x000000d6: "i"
0x000000d8: "int"
0x000000dc: "n"
0x000000de: "next"
0x000000e3: "worker_args"
0x000000ef: "std"
0x000000f3: "decltype(nullptr)"
0x00000105: "nullptr_t"
0x0000010f: "free"
0x00000114: "_ZL8fannkuchi"
0x00000122: "fannkuch"
0x0000012b: "showmax"
0x00000133: "args"
0x00000138: "targs"
0x0000013e: "perm1"
0x00000144: "count"
0x0000014a: "r"
0x0000014c: "maxflips"
0x00000155: "flips"
0x0000015b: "cleanup"
0x00000163: "p0"
0x00000166: "_Z15fannkuch_workerPv"
0x0000017c: "fannkuch_worker"
0x0000018c: "main"
0x00000191: "_arg"
0x00000196: "perm"
0x0000019b: "k"
0x0000019d: "j"
0x0000019f: "tmp"
0x000001a3: "argc"
0x000001a8: "argv"
0x000001ad: "char"

.debug_ranges contents:
00000000 0000017f 000001bd
00000000 000001e7 000001f0
00000000 000002fc 0000033a
00000000 00000364 0000036d
00000000 <End of list>
00000028 000004cd 00000512
00000028 00000585 000005d0
00000028 <End of list>
00000040 00000006 00000381
00000040 00000383 00000662
00000040 <End of list>
(module
 (type $0 (func (param i32) (result i32)))
 (type $1 (func (param i32 i32) (result i32)))
 (type $2 (func (param i32 i32 i32) (result i32)))
 (type $3 (func (param i32)))
 (type $4 (func))
 (import "env" "memory" (memory $mimport$0 256 256))
 (import "env" "malloc" (func $malloc (param i32) (result i32)))
 (import "env" "memcpy" (func $memcpy (param i32 i32 i32) (result i32)))
 (import "env" "free" (func $free (param i32)))
 (import "env" "atoi" (func $atoi (param i32) (result i32)))
 (import "env" "puts" (func $puts (param i32) (result i32)))
 (import "env" "iprintf" (func $iprintf (param i32 i32) (result i32)))
 (import "env" "putchar" (func $putchar (param i32) (result i32)))
 (global $global$0 (mut i32) (i32.const 5243952))
 (global $global$1 i32 (i32.const 1066))
 (data $0 (i32.const 1024) "Pfannkuchen(%d) = %d.\n\00%d\00Wrong argument.\00")
 (export "__wasm_call_ctors" (func $__wasm_call_ctors))
 (export "main" (func $main))
 (export "__data_end" (global $global$1))
 (func $__wasm_call_ctors
 )
 (func $fannkuch_worker\28void*\29 (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  ;; code offset: 0x35
  (local.set $3
   ;; code offset: 0x33
   (call $malloc
    ;; code offset: 0x31
    (local.tee $12
     ;; code offset: 0x30
     (i32.shl
      ;; code offset: 0x2c
      (local.tee $2
       ;; code offset: 0x29
       (i32.load offset=4
        ;; code offset: 0x27
        (local.get $0)
       )
      )
      ;; code offset: 0x2e
      (i32.const 2)
     )
    )
   )
  )
  ;; code offset: 0x3b
  (local.set $8
   ;; code offset: 0x39
   (call $malloc
    ;; code offset: 0x37
    (local.get $12)
   )
  )
  ;; code offset: 0x41
  (local.set $9
   ;; code offset: 0x3f
   (call $malloc
    ;; code offset: 0x3d
    (local.get $12)
   )
  )
  ;; code offset: 0x43
  (block $label$1
   (block $label$2
    ;; code offset: 0x4c
    (if
     ;; code offset: 0x4b
     (i32.gt_s
      ;; code offset: 0x47
      (local.get $2)
      ;; code offset: 0x49
      (i32.const 0)
     )
     (then
      ;; code offset: 0x4e
      (loop $label$4
       ;; code offset: 0x5a
       (i32.store
        ;; code offset: 0x57
        (i32.add
         ;; code offset: 0x50
         (local.get $3)
         ;; code offset: 0x56
         (i32.shl
          ;; code offset: 0x52
          (local.get $1)
          ;; code offset: 0x54
          (i32.const 2)
         )
        )
        ;; code offset: 0x58
        (local.get $1)
       )
       ;; code offset: 0x67
       (br_if $label$4
        ;; code offset: 0x66
        (i32.ne
         ;; code offset: 0x62
         (local.tee $1
          ;; code offset: 0x61
          (i32.add
           ;; code offset: 0x5d
           (local.get $1)
           ;; code offset: 0x5f
           (i32.const 1)
          )
         )
         ;; code offset: 0x64
         (local.get $2)
        )
       )
      )
      ;; code offset: 0x7e
      (i32.store
       ;; code offset: 0x76
       (i32.add
        ;; code offset: 0x6a
        (local.get $3)
        ;; code offset: 0x75
        (i32.shl
         ;; code offset: 0x71
         (local.tee $1
          ;; code offset: 0x6e
          (i32.load
           ;; code offset: 0x6c
           (local.get $0)
          )
         )
         ;; code offset: 0x73
         (i32.const 2)
        )
       )
       ;; code offset: 0x7c
       (local.tee $4
        ;; code offset: 0x7b
        (i32.sub
         ;; code offset: 0x77
         (local.get $2)
         ;; code offset: 0x79
         (i32.const 1)
        )
       )
      )
      ;; code offset: 0x8d
      (i32.store
       ;; code offset: 0x89
       (local.tee $13
        ;; code offset: 0x88
        (i32.add
         ;; code offset: 0x81
         (local.get $3)
         ;; code offset: 0x87
         (i32.shl
          ;; code offset: 0x83
          (local.get $4)
          ;; code offset: 0x85
          (i32.const 2)
         )
        )
       )
       ;; code offset: 0x8b
       (local.get $1)
      )
      ;; code offset: 0x95
      (br_if $label$2
       ;; code offset: 0x94
       (i32.le_s
        ;; code offset: 0x90
        (local.get $2)
        ;; code offset: 0x92
        (i32.const 0)
       )
      )
      ;; code offset: 0x97
      (loop $label$5
       ;; code offset: 0x9e
       (if
        ;; code offset: 0x9d
        (i32.gt_s
         ;; code offset: 0x99
         (local.get $2)
         ;; code offset: 0x9b
         (i32.const 1)
        )
        (then
         ;; code offset: 0xa0
         (loop $label$7
          ;; code offset: 0xb1
          (i32.store
           ;; code offset: 0xae
           (i32.add
            ;; code offset: 0xa2
            (local.get $9)
            ;; code offset: 0xad
            (i32.shl
             ;; code offset: 0xa9
             (local.tee $1
              ;; code offset: 0xa8
              (i32.sub
               ;; code offset: 0xa4
               (local.get $2)
               ;; code offset: 0xa6
               (i32.const 1)
              )
             )
             ;; code offset: 0xab
             (i32.const 2)
            )
           )
           ;; code offset: 0xaf
           (local.get $2)
          )
          ;; code offset: 0xbd
          (br_if $label$7
           (block (result i32)
            (local.set $17
             ;; code offset: 0xb8
             (i32.gt_s
              ;; code offset: 0xb4
              (local.get $2)
              ;; code offset: 0xb6
              (i32.const 2)
             )
            )
            ;; code offset: 0xbb
            (local.set $2
             ;; code offset: 0xb9
             (local.get $1)
            )
            (local.get $17)
           )
          )
         )
        )
       )
       ;; code offset: 0xc1
       (block $label$8
        ;; code offset: 0xcb
        (br_if $label$8
         ;; code offset: 0xca
         (i32.eqz
          ;; code offset: 0xc8
          (local.tee $10
           ;; code offset: 0xc5
           (i32.load
            ;; code offset: 0xc3
            (local.get $3)
           )
          )
         )
        )
        ;; code offset: 0xd5
        (br_if $label$8
         ;; code offset: 0xd4
         (i32.eq
          ;; code offset: 0xcf
          (i32.load
           ;; code offset: 0xcd
           (local.get $13)
          )
          ;; code offset: 0xd2
          (local.get $4)
         )
        )
        ;; code offset: 0xe4
        (local.set $6
         ;; code offset: 0xe1
         (i32.load
          ;; code offset: 0xdf
          (local.tee $11
           ;; code offset: 0xdd
           (call $memcpy
            ;; code offset: 0xd7
            (local.get $8)
            ;; code offset: 0xd9
            (local.get $3)
            ;; code offset: 0xdb
            (local.get $12)
           )
          )
         )
        )
        ;; code offset: 0xe8
        (local.set $0
         ;; code offset: 0xe6
         (i32.const 0)
        )
        ;; code offset: 0xea
        (loop $label$9
         ;; code offset: 0xee
         (local.set $16
          ;; code offset: 0xec
          (local.get $0)
         )
         ;; code offset: 0xf5
         (if
          ;; code offset: 0xf4
          (i32.ge_s
           ;; code offset: 0xf0
           (local.get $6)
           ;; code offset: 0xf2
           (i32.const 3)
          )
          (then
           ;; code offset: 0xfc
           (local.set $1
            ;; code offset: 0xfb
            (i32.sub
             ;; code offset: 0xf7
             (local.get $6)
             ;; code offset: 0xf9
             (i32.const 1)
            )
           )
           ;; code offset: 0x100
           (local.set $0
            ;; code offset: 0xfe
            (i32.const 1)
           )
           ;; code offset: 0x102
           (loop $label$11
            ;; code offset: 0x111
            (local.set $15
             ;; code offset: 0x10e
             (i32.load
              ;; code offset: 0x10c
              (local.tee $14
               ;; code offset: 0x10b
               (i32.add
                ;; code offset: 0x104
                (local.get $11)
                ;; code offset: 0x10a
                (i32.shl
                 ;; code offset: 0x106
                 (local.get $0)
                 ;; code offset: 0x108
                 (i32.const 2)
                )
               )
              )
             )
            )
            ;; code offset: 0x122
            (i32.store
             ;; code offset: 0x113
             (local.get $14)
             ;; code offset: 0x11f
             (i32.load
              ;; code offset: 0x11d
              (local.tee $7
               ;; code offset: 0x11c
               (i32.add
                ;; code offset: 0x115
                (local.get $11)
                ;; code offset: 0x11b
                (i32.shl
                 ;; code offset: 0x117
                 (local.get $1)
                 ;; code offset: 0x119
                 (i32.const 2)
                )
               )
              )
             )
            )
            ;; code offset: 0x129
            (i32.store
             ;; code offset: 0x125
             (local.get $7)
             ;; code offset: 0x127
             (local.get $15)
            )
            ;; code offset: 0x13b
            (br_if $label$11
             ;; code offset: 0x13a
             (i32.lt_s
              ;; code offset: 0x131
              (local.tee $0
               ;; code offset: 0x130
               (i32.add
                ;; code offset: 0x12c
                (local.get $0)
                ;; code offset: 0x12e
                (i32.const 1)
               )
              )
              ;; code offset: 0x138
              (local.tee $1
               ;; code offset: 0x137
               (i32.sub
                ;; code offset: 0x133
                (local.get $1)
                ;; code offset: 0x135
                (i32.const 1)
               )
              )
             )
            )
           )
          )
         )
         ;; code offset: 0x14c
         (local.set $1
          ;; code offset: 0x149
          (i32.load
           ;; code offset: 0x147
           (local.tee $0
            ;; code offset: 0x146
            (i32.add
             ;; code offset: 0x13f
             (local.get $11)
             ;; code offset: 0x145
             (i32.shl
              ;; code offset: 0x141
              (local.get $6)
              ;; code offset: 0x143
              (i32.const 2)
             )
            )
           )
          )
         )
         ;; code offset: 0x152
         (i32.store
          ;; code offset: 0x14e
          (local.get $0)
          ;; code offset: 0x150
          (local.get $6)
         )
         ;; code offset: 0x15a
         (local.set $0
          ;; code offset: 0x159
          (i32.add
           ;; code offset: 0x155
           (local.get $16)
           ;; code offset: 0x157
           (i32.const 1)
          )
         )
         ;; code offset: 0x15e
         (local.set $6
          ;; code offset: 0x15c
          (local.get $1)
         )
         ;; code offset: 0x162
         (br_if $label$9
          ;; code offset: 0x160
          (local.get $1)
         )
        )
        ;; code offset: 0x16f
        (local.set $5
         ;; code offset: 0x16e
         (select
          ;; code offset: 0x165
          (local.get $5)
          ;; code offset: 0x167
          (local.get $0)
          ;; code offset: 0x16d
          (i32.gt_s
           ;; code offset: 0x169
           (local.get $5)
           ;; code offset: 0x16b
           (local.get $16)
          )
         )
        )
       )
       ;; code offset: 0x177
       (br_if $label$1
        ;; code offset: 0x176
        (i32.ge_s
         ;; code offset: 0x172
         (local.get $2)
         ;; code offset: 0x174
         (local.get $4)
        )
       )
       ;; code offset: 0x179
       (loop $label$12
        ;; code offset: 0x17d
        (local.set $1
         ;; code offset: 0x17b
         (i32.const 0)
        )
        ;; code offset: 0x184
        (if
         ;; code offset: 0x183
         (i32.gt_s
          ;; code offset: 0x17f
          (local.get $2)
          ;; code offset: 0x181
          (i32.const 0)
         )
         (then
          ;; code offset: 0x186
          (loop $label$14
           ;; code offset: 0x1a0
           (i32.store
            ;; code offset: 0x18f
            (i32.add
             ;; code offset: 0x188
             (local.get $3)
             ;; code offset: 0x18e
             (i32.shl
              ;; code offset: 0x18a
              (local.get $1)
              ;; code offset: 0x18c
              (i32.const 2)
             )
            )
            ;; code offset: 0x19d
            (i32.load
             ;; code offset: 0x19c
             (i32.add
              ;; code offset: 0x190
              (local.get $3)
              ;; code offset: 0x19b
              (i32.shl
               ;; code offset: 0x197
               (local.tee $1
                ;; code offset: 0x196
                (i32.add
                 ;; code offset: 0x192
                 (local.get $1)
                 ;; code offset: 0x194
                 (i32.const 1)
                )
               )
               ;; code offset: 0x199
               (i32.const 2)
              )
             )
            )
           )
           ;; code offset: 0x1a8
           (br_if $label$14
            ;; code offset: 0x1a7
            (i32.ne
             ;; code offset: 0x1a3
             (local.get $1)
             ;; code offset: 0x1a5
             (local.get $2)
            )
           )
          )
          ;; code offset: 0x1ad
          (local.set $1
           ;; code offset: 0x1ab
           (local.get $2)
          )
         )
        )
        ;; code offset: 0x1ba
        (i32.store
         ;; code offset: 0x1b7
         (i32.add
          ;; code offset: 0x1b0
          (local.get $3)
          ;; code offset: 0x1b6
          (i32.shl
           ;; code offset: 0x1b2
           (local.get $1)
           ;; code offset: 0x1b4
           (i32.const 2)
          )
         )
         ;; code offset: 0x1b8
         (local.get $10)
        )
        ;; code offset: 0x1d1
        (i32.store
         ;; code offset: 0x1c5
         (local.tee $1
          ;; code offset: 0x1c4
          (i32.add
           ;; code offset: 0x1bd
           (local.get $9)
           ;; code offset: 0x1c3
           (i32.shl
            ;; code offset: 0x1bf
            (local.get $2)
            ;; code offset: 0x1c1
            (i32.const 2)
           )
          )
         )
         ;; code offset: 0x1d0
         (i32.sub
          ;; code offset: 0x1cc
          (local.tee $1
           ;; code offset: 0x1c9
           (i32.load
            ;; code offset: 0x1c7
            (local.get $1)
           )
          )
          ;; code offset: 0x1ce
          (i32.const 1)
         )
        )
        ;; code offset: 0x1d9
        (br_if $label$5
         ;; code offset: 0x1d8
         (i32.gt_s
          ;; code offset: 0x1d4
          (local.get $1)
          ;; code offset: 0x1d6
          (i32.const 1)
         )
        )
        ;; code offset: 0x1e5
        (br_if $label$1
         ;; code offset: 0x1e4
         (i32.eq
          ;; code offset: 0x1e0
          (local.tee $2
           ;; code offset: 0x1df
           (i32.add
            ;; code offset: 0x1db
            (local.get $2)
            ;; code offset: 0x1dd
            (i32.const 1)
           )
          )
          ;; code offset: 0x1e2
          (local.get $4)
         )
        )
        ;; code offset: 0x1ec
        (local.set $10
         ;; code offset: 0x1e9
         (i32.load
          ;; code offset: 0x1e7
          (local.get $3)
         )
        )
        ;; code offset: 0x1ee
        (br $label$12)
       )
      )
     )
    )
    ;; code offset: 0x209
    (i32.store
     ;; code offset: 0x201
     (i32.add
      ;; code offset: 0x1f5
      (local.get $3)
      ;; code offset: 0x200
      (i32.shl
       ;; code offset: 0x1fc
       (local.tee $1
        ;; code offset: 0x1f9
        (i32.load
         ;; code offset: 0x1f7
         (local.get $0)
        )
       )
       ;; code offset: 0x1fe
       (i32.const 2)
      )
     )
     ;; code offset: 0x207
     (local.tee $4
      ;; code offset: 0x206
      (i32.sub
       ;; code offset: 0x202
       (local.get $2)
       ;; code offset: 0x204
       (i32.const 1)
      )
     )
    )
    ;; code offset: 0x218
    (i32.store
     ;; code offset: 0x214
     (local.tee $13
      ;; code offset: 0x213
      (i32.add
       ;; code offset: 0x20c
       (local.get $3)
       ;; code offset: 0x212
       (i32.shl
        ;; code offset: 0x20e
        (local.get $4)
        ;; code offset: 0x210
        (i32.const 2)
       )
      )
     )
     ;; code offset: 0x216
     (local.get $1)
    )
   )
   ;; code offset: 0x21c
   (loop $label$15
    ;; code offset: 0x223
    (if
     ;; code offset: 0x222
     (i32.ge_s
      ;; code offset: 0x21e
      (local.get $2)
      ;; code offset: 0x220
      (i32.const 2)
     )
     (then
      ;; code offset: 0x225
      (loop $label$17
       ;; code offset: 0x236
       (i32.store
        ;; code offset: 0x233
        (i32.add
         ;; code offset: 0x227
         (local.get $9)
         ;; code offset: 0x232
         (i32.shl
          ;; code offset: 0x22e
          (local.tee $1
           ;; code offset: 0x22d
           (i32.sub
            ;; code offset: 0x229
            (local.get $2)
            ;; code offset: 0x22b
            (i32.const 1)
           )
          )
          ;; code offset: 0x230
          (i32.const 2)
         )
        )
        ;; code offset: 0x234
        (local.get $2)
       )
       ;; code offset: 0x242
       (br_if $label$17
        (block (result i32)
         (local.set $18
          ;; code offset: 0x23d
          (i32.gt_s
           ;; code offset: 0x239
           (local.get $2)
           ;; code offset: 0x23b
           (i32.const 2)
          )
         )
         ;; code offset: 0x240
         (local.set $2
          ;; code offset: 0x23e
          (local.get $1)
         )
         (local.get $18)
        )
       )
      )
     )
    )
    ;; code offset: 0x246
    (block $label$18
     ;; code offset: 0x250
     (br_if $label$18
      ;; code offset: 0x24f
      (i32.eqz
       ;; code offset: 0x24d
       (local.tee $6
        ;; code offset: 0x24a
        (i32.load
         ;; code offset: 0x248
         (local.get $3)
        )
       )
      )
     )
     ;; code offset: 0x25a
     (br_if $label$18
      ;; code offset: 0x259
      (i32.eq
       ;; code offset: 0x254
       (i32.load
        ;; code offset: 0x252
        (local.get $13)
       )
       ;; code offset: 0x257
       (local.get $4)
      )
     )
     ;; code offset: 0x261
     (local.set $7
      ;; code offset: 0x25e
      (i32.load
       ;; code offset: 0x25c
       (local.get $8)
      )
     )
     ;; code offset: 0x265
     (local.set $0
      ;; code offset: 0x263
      (i32.const 0)
     )
     ;; code offset: 0x267
     (loop $label$19
      ;; code offset: 0x26b
      (local.set $10
       ;; code offset: 0x269
       (local.get $0)
      )
      ;; code offset: 0x272
      (if
       ;; code offset: 0x271
       (i32.ge_s
        ;; code offset: 0x26d
        (local.get $7)
        ;; code offset: 0x26f
        (i32.const 3)
       )
       (then
        ;; code offset: 0x279
        (local.set $1
         ;; code offset: 0x278
         (i32.sub
          ;; code offset: 0x274
          (local.get $7)
          ;; code offset: 0x276
          (i32.const 1)
         )
        )
        ;; code offset: 0x27d
        (local.set $0
         ;; code offset: 0x27b
         (i32.const 1)
        )
        ;; code offset: 0x27f
        (loop $label$21
         ;; code offset: 0x28e
         (local.set $14
          ;; code offset: 0x28b
          (i32.load
           ;; code offset: 0x289
           (local.tee $11
            ;; code offset: 0x288
            (i32.add
             ;; code offset: 0x281
             (local.get $8)
             ;; code offset: 0x287
             (i32.shl
              ;; code offset: 0x283
              (local.get $0)
              ;; code offset: 0x285
              (i32.const 2)
             )
            )
           )
          )
         )
         ;; code offset: 0x29f
         (i32.store
          ;; code offset: 0x290
          (local.get $11)
          ;; code offset: 0x29c
          (i32.load
           ;; code offset: 0x29a
           (local.tee $15
            ;; code offset: 0x299
            (i32.add
             ;; code offset: 0x292
             (local.get $8)
             ;; code offset: 0x298
             (i32.shl
              ;; code offset: 0x294
              (local.get $1)
              ;; code offset: 0x296
              (i32.const 2)
             )
            )
           )
          )
         )
         ;; code offset: 0x2a6
         (i32.store
          ;; code offset: 0x2a2
          (local.get $15)
          ;; code offset: 0x2a4
          (local.get $14)
         )
         ;; code offset: 0x2b8
         (br_if $label$21
          ;; code offset: 0x2b7
          (i32.lt_s
           ;; code offset: 0x2ae
           (local.tee $0
            ;; code offset: 0x2ad
            (i32.add
             ;; code offset: 0x2a9
             (local.get $0)
             ;; code offset: 0x2ab
             (i32.const 1)
            )
           )
           ;; code offset: 0x2b5
           (local.tee $1
            ;; code offset: 0x2b4
            (i32.sub
             ;; code offset: 0x2b0
             (local.get $1)
             ;; code offset: 0x2b2
             (i32.const 1)
            )
           )
          )
         )
        )
       )
      )
      ;; code offset: 0x2c9
      (local.set $1
       ;; code offset: 0x2c6
       (i32.load
        ;; code offset: 0x2c4
        (local.tee $0
         ;; code offset: 0x2c3
         (i32.add
          ;; code offset: 0x2bc
          (local.get $8)
          ;; code offset: 0x2c2
          (i32.shl
           ;; code offset: 0x2be
           (local.get $7)
           ;; code offset: 0x2c0
           (i32.const 2)
          )
         )
        )
       )
      )
      ;; code offset: 0x2cf
      (i32.store
       ;; code offset: 0x2cb
       (local.get $0)
       ;; code offset: 0x2cd
       (local.get $7)
      )
      ;; code offset: 0x2d7
      (local.set $0
       ;; code offset: 0x2d6
       (i32.add
        ;; code offset: 0x2d2
        (local.get $10)
        ;; code offset: 0x2d4
        (i32.const 1)
       )
      )
      ;; code offset: 0x2db
      (local.set $7
       ;; code offset: 0x2d9
       (local.get $1)
      )
      ;; code offset: 0x2df
      (br_if $label$19
       ;; code offset: 0x2dd
       (local.get $1)
      )
     )
     ;; code offset: 0x2ec
     (local.set $5
      ;; code offset: 0x2eb
      (select
       ;; code offset: 0x2e2
       (local.get $5)
       ;; code offset: 0x2e4
       (local.get $0)
       ;; code offset: 0x2ea
       (i32.gt_s
        ;; code offset: 0x2e6
        (local.get $5)
        ;; code offset: 0x2e8
        (local.get $10)
       )
      )
     )
    )
    ;; code offset: 0x2f4
    (br_if $label$1
     ;; code offset: 0x2f3
     (i32.ge_s
      ;; code offset: 0x2ef
      (local.get $2)
      ;; code offset: 0x2f1
      (local.get $4)
     )
    )
    ;; code offset: 0x2f6
    (loop $label$22
     ;; code offset: 0x2fa
     (local.set $1
      ;; code offset: 0x2f8
      (i32.const 0)
     )
     ;; code offset: 0x301
     (if
      ;; code offset: 0x300
      (i32.gt_s
       ;; code offset: 0x2fc
       (local.get $2)
       ;; code offset: 0x2fe
       (i32.const 0)
      )
      (then
       ;; code offset: 0x303
       (loop $label$24
        ;; code offset: 0x31d
        (i32.store
         ;; code offset: 0x30c
         (i32.add
          ;; code offset: 0x305
          (local.get $3)
          ;; code offset: 0x30b
          (i32.shl
           ;; code offset: 0x307
           (local.get $1)
           ;; code offset: 0x309
           (i32.const 2)
          )
         )
         ;; code offset: 0x31a
         (i32.load
          ;; code offset: 0x319
          (i32.add
           ;; code offset: 0x30d
           (local.get $3)
           ;; code offset: 0x318
           (i32.shl
            ;; code offset: 0x314
            (local.tee $1
             ;; code offset: 0x313
             (i32.add
              ;; code offset: 0x30f
              (local.get $1)
              ;; code offset: 0x311
              (i32.const 1)
             )
            )
            ;; code offset: 0x316
            (i32.const 2)
           )
          )
         )
        )
        ;; code offset: 0x325
        (br_if $label$24
         ;; code offset: 0x324
         (i32.ne
          ;; code offset: 0x320
          (local.get $1)
          ;; code offset: 0x322
          (local.get $2)
         )
        )
       )
       ;; code offset: 0x32a
       (local.set $1
        ;; code offset: 0x328
        (local.get $2)
       )
      )
     )
     ;; code offset: 0x337
     (i32.store
      ;; code offset: 0x334
      (i32.add
       ;; code offset: 0x32d
       (local.get $3)
       ;; code offset: 0x333
       (i32.shl
        ;; code offset: 0x32f
        (local.get $1)
        ;; code offset: 0x331
        (i32.const 2)
       )
      )
      ;; code offset: 0x335
      (local.get $6)
     )
     ;; code offset: 0x34e
     (i32.store
      ;; code offset: 0x342
      (local.tee $1
       ;; code offset: 0x341
       (i32.add
        ;; code offset: 0x33a
        (local.get $9)
        ;; code offset: 0x340
        (i32.shl
         ;; code offset: 0x33c
         (local.get $2)
         ;; code offset: 0x33e
         (i32.const 2)
        )
       )
      )
      ;; code offset: 0x34d
      (i32.sub
       ;; code offset: 0x349
       (local.tee $1
        ;; code offset: 0x346
        (i32.load
         ;; code offset: 0x344
         (local.get $1)
        )
       )
       ;; code offset: 0x34b
       (i32.const 1)
      )
     )
     ;; code offset: 0x356
     (br_if $label$15
      ;; code offset: 0x355
      (i32.gt_s
       ;; code offset: 0x351
       (local.get $1)
       ;; code offset: 0x353
       (i32.const 1)
      )
     )
     ;; code offset: 0x362
     (br_if $label$1
      ;; code offset: 0x361
      (i32.eq
       ;; code offset: 0x35d
       (local.tee $2
        ;; code offset: 0x35c
        (i32.add
         ;; code offset: 0x358
         (local.get $2)
         ;; code offset: 0x35a
         (i32.const 1)
        )
       )
       ;; code offset: 0x35f
       (local.get $4)
      )
     )
     ;; code offset: 0x369
     (local.set $6
      ;; code offset: 0x366
      (i32.load
       ;; code offset: 0x364
       (local.get $3)
      )
     )
     ;; code offset: 0x36b
     (br $label$22)
    )
   )
  )
  ;; code offset: 0x374
  (call $free
   ;; code offset: 0x372
   (local.get $3)
  )
  ;; code offset: 0x378
  (call $free
   ;; code offset: 0x376
   (local.get $8)
  )
  ;; code offset: 0x37c
  (call $free
   ;; code offset: 0x37a
   (local.get $9)
  )
  ;; code offset: 0x37e
  (local.get $5)
 )
 (func $main (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  ;; code offset: 0x399
  (global.set $global$0
   ;; code offset: 0x397
   (local.tee $8
    ;; code offset: 0x396
    (i32.sub
     ;; code offset: 0x392
     (global.get $global$0)
     ;; code offset: 0x394
     (i32.const 32)
    )
   )
  )
  ;; code offset: 0x39b
  (block $label$1
   (block $label$2
    ;; code offset: 0x3a4
    (if
     ;; code offset: 0x3a3
     (i32.ge_s
      ;; code offset: 0x39f
      (local.get $0)
      ;; code offset: 0x3a1
      (i32.const 2)
     )
     (then
      ;; code offset: 0x3b2
      (br_if $label$2
       ;; code offset: 0x3b1
       (i32.gt_s
        ;; code offset: 0x3ad
        (local.tee $3
         ;; code offset: 0x3ab
         (call $atoi
          ;; code offset: 0x3a8
          (i32.load offset=4
           ;; code offset: 0x3a6
           (local.get $1)
          )
         )
        )
        ;; code offset: 0x3af
        (i32.const 0)
       )
      )
     )
    )
    ;; code offset: 0x3ba
    (drop
     ;; code offset: 0x3b8
     (call $puts
      ;; code offset: 0x3b5
      (i32.const 1050)
     )
    )
    ;; code offset: 0x3bd
    (local.set $5
     ;; code offset: 0x3bb
     (i32.const 1)
    )
    ;; code offset: 0x3bf
    (br $label$1)
   )
   ;; code offset: 0x3c7
   (if
    ;; code offset: 0x3c6
    (i32.ne
     ;; code offset: 0x3c2
     (local.get $3)
     ;; code offset: 0x3c4
     (i32.const 1)
    )
    (then
     ;; code offset: 0x3ce
     (local.set $2
      ;; code offset: 0x3cd
      (i32.sub
       ;; code offset: 0x3c9
       (local.get $3)
       ;; code offset: 0x3cb
       (i32.const 1)
      )
     )
     ;; code offset: 0x3d2
     (local.set $1
      ;; code offset: 0x3d0
      (i32.const 0)
     )
     ;; code offset: 0x3d6
     (local.set $0
      ;; code offset: 0x3d4
      (i32.const 0)
     )
     ;; code offset: 0x3d8
     (loop $label$5
      ;; code offset: 0x3e2
      (i32.store offset=8
       ;; code offset: 0x3de
       (local.tee $4
        ;; code offset: 0x3dc
        (call $malloc
         ;; code offset: 0x3da
         (i32.const 12)
        )
       )
       ;; code offset: 0x3e0
       (local.get $1)
      )
      ;; code offset: 0x3e9
      (i32.store offset=4
       ;; code offset: 0x3e5
       (local.get $4)
       ;; code offset: 0x3e7
       (local.get $3)
      )
      ;; code offset: 0x3f0
      (i32.store
       ;; code offset: 0x3ec
       (local.get $4)
       ;; code offset: 0x3ee
       (local.get $0)
      )
      ;; code offset: 0x3f5
      (local.set $1
       ;; code offset: 0x3f3
       (local.get $4)
      )
      ;; code offset: 0x401
      (br_if $label$5
       ;; code offset: 0x400
       (i32.ne
        ;; code offset: 0x3fc
        (local.tee $0
         ;; code offset: 0x3fb
         (i32.add
          ;; code offset: 0x3f7
          (local.get $0)
          ;; code offset: 0x3f9
          (i32.const 1)
         )
        )
        ;; code offset: 0x3fe
        (local.get $2)
       )
      )
     )
    )
   )
   ;; code offset: 0x407
   (local.set $0
    ;; code offset: 0x405
    (i32.const 0)
   )
   ;; code offset: 0x412
   (local.set $1
    ;; code offset: 0x410
    (call $malloc
     ;; code offset: 0x40e
     (local.tee $2
      ;; code offset: 0x40d
      (i32.shl
       ;; code offset: 0x409
       (local.get $3)
       ;; code offset: 0x40b
       (i32.const 2)
      )
     )
    )
   )
   ;; code offset: 0x418
   (local.set $5
    ;; code offset: 0x416
    (call $malloc
     ;; code offset: 0x414
     (local.get $2)
    )
   )
   ;; code offset: 0x41a
   (block $label$6
    (block $label$7
     (block $label$8
      ;; code offset: 0x425
      (if
       ;; code offset: 0x424
       (i32.gt_s
        ;; code offset: 0x420
        (local.get $3)
        ;; code offset: 0x422
        (i32.const 0)
       )
       (then
        ;; code offset: 0x427
        (loop $label$10
         ;; code offset: 0x433
         (i32.store
          ;; code offset: 0x430
          (i32.add
           ;; code offset: 0x429
           (local.get $1)
           ;; code offset: 0x42f
           (i32.shl
            ;; code offset: 0x42b
            (local.get $0)
            ;; code offset: 0x42d
            (i32.const 2)
           )
          )
          ;; code offset: 0x431
          (local.get $0)
         )
         ;; code offset: 0x440
         (br_if $label$10
          ;; code offset: 0x43f
          (i32.ne
           ;; code offset: 0x43b
           (local.tee $0
            ;; code offset: 0x43a
            (i32.add
             ;; code offset: 0x436
             (local.get $0)
             ;; code offset: 0x438
             (i32.const 1)
            )
           )
           ;; code offset: 0x43d
           (local.get $3)
          )
         )
        )
        ;; code offset: 0x445
        (local.set $6
         ;; code offset: 0x443
         (i32.const 30)
        )
        ;; code offset: 0x449
        (local.set $2
         ;; code offset: 0x447
         (local.get $3)
        )
        ;; code offset: 0x44b
        (br $label$8)
       )
      )
      ;; code offset: 0x450
      (local.set $6
       ;; code offset: 0x44e
       (i32.const 30)
      )
      ;; code offset: 0x454
      (local.set $2
       ;; code offset: 0x452
       (local.get $3)
      )
      ;; code offset: 0x456
      (br $label$7)
     )
     ;; code offset: 0x459
     (loop $label$11
      ;; code offset: 0x45d
      (local.set $0
       ;; code offset: 0x45b
       (i32.const 0)
      )
      ;; code offset: 0x45f
      (loop $label$12
       ;; code offset: 0x471
       (i32.store offset=16
        ;; code offset: 0x461
        (local.get $8)
        ;; code offset: 0x470
        (i32.add
         ;; code offset: 0x46b
         (i32.load
          ;; code offset: 0x46a
          (i32.add
           ;; code offset: 0x463
           (local.get $1)
           ;; code offset: 0x469
           (i32.shl
            ;; code offset: 0x465
            (local.get $0)
            ;; code offset: 0x467
            (i32.const 2)
           )
          )
         )
         ;; code offset: 0x46e
         (i32.const 1)
        )
       )
       ;; code offset: 0x47e
       (drop
        ;; code offset: 0x47c
        (call $iprintf
         ;; code offset: 0x474
         (i32.const 1047)
         ;; code offset: 0x47b
         (i32.add
          ;; code offset: 0x477
          (local.get $8)
          ;; code offset: 0x479
          (i32.const 16)
         )
        )
       )
       ;; code offset: 0x489
       (br_if $label$12
        ;; code offset: 0x488
        (i32.ne
         ;; code offset: 0x484
         (local.tee $0
          ;; code offset: 0x483
          (i32.add
           ;; code offset: 0x47f
           (local.get $0)
           ;; code offset: 0x481
           (i32.const 1)
          )
         )
         ;; code offset: 0x486
         (local.get $3)
        )
       )
      )
      ;; code offset: 0x490
      (drop
       ;; code offset: 0x48e
       (call $putchar
        ;; code offset: 0x48c
        (i32.const 10)
       )
      )
      ;; code offset: 0x496
      (if
       ;; code offset: 0x495
       (i32.gt_s
        ;; code offset: 0x491
        (local.get $2)
        ;; code offset: 0x493
        (i32.const 1)
       )
       (then
        ;; code offset: 0x498
        (loop $label$14
         ;; code offset: 0x4a9
         (i32.store
          ;; code offset: 0x4a6
          (i32.add
           ;; code offset: 0x49a
           (local.get $5)
           ;; code offset: 0x4a5
           (i32.shl
            ;; code offset: 0x4a1
            (local.tee $0
             ;; code offset: 0x4a0
             (i32.sub
              ;; code offset: 0x49c
              (local.get $2)
              ;; code offset: 0x49e
              (i32.const 1)
             )
            )
            ;; code offset: 0x4a3
            (i32.const 2)
           )
          )
          ;; code offset: 0x4a7
          (local.get $2)
         )
         ;; code offset: 0x4b5
         (br_if $label$14
          (block (result i32)
           (local.set $9
            ;; code offset: 0x4b0
            (i32.gt_s
             ;; code offset: 0x4ac
             (local.get $2)
             ;; code offset: 0x4ae
             (i32.const 2)
            )
           )
           ;; code offset: 0x4b3
           (local.set $2
            ;; code offset: 0x4b1
            (local.get $0)
           )
           (local.get $9)
          )
         )
        )
       )
      )
      ;; code offset: 0x4be
      (br_if $label$6
       ;; code offset: 0x4bd
       (i32.eq
        ;; code offset: 0x4b9
        (local.get $2)
        ;; code offset: 0x4bb
        (local.get $3)
       )
      )
      ;; code offset: 0x4c5
      (local.set $6
       ;; code offset: 0x4c4
       (i32.sub
        ;; code offset: 0x4c0
        (local.get $6)
        ;; code offset: 0x4c2
        (i32.const 1)
       )
      )
      ;; code offset: 0x4c7
      (loop $label$15
       ;; code offset: 0x4cb
       (local.set $0
        ;; code offset: 0x4c9
        (i32.const 0)
       )
       ;; code offset: 0x4d2
       (local.set $7
        ;; code offset: 0x4cf
        (i32.load
         ;; code offset: 0x4cd
         (local.get $1)
        )
       )
       ;; code offset: 0x4d9
       (if
        ;; code offset: 0x4d8
        (i32.gt_s
         ;; code offset: 0x4d4
         (local.get $2)
         ;; code offset: 0x4d6
         (i32.const 0)
        )
        (then
         ;; code offset: 0x4db
         (loop $label$17
          ;; code offset: 0x4f5
          (i32.store
           ;; code offset: 0x4e4
           (i32.add
            ;; code offset: 0x4dd
            (local.get $1)
            ;; code offset: 0x4e3
            (i32.shl
             ;; code offset: 0x4df
             (local.get $0)
             ;; code offset: 0x4e1
             (i32.const 2)
            )
           )
           ;; code offset: 0x4f2
           (i32.load
            ;; code offset: 0x4f1
            (i32.add
             ;; code offset: 0x4e5
             (local.get $1)
             ;; code offset: 0x4f0
             (i32.shl
              ;; code offset: 0x4ec
              (local.tee $0
               ;; code offset: 0x4eb
               (i32.add
                ;; code offset: 0x4e7
                (local.get $0)
                ;; code offset: 0x4e9
                (i32.const 1)
               )
              )
              ;; code offset: 0x4ee
              (i32.const 2)
             )
            )
           )
          )
          ;; code offset: 0x4fd
          (br_if $label$17
           ;; code offset: 0x4fc
           (i32.ne
            ;; code offset: 0x4f8
            (local.get $0)
            ;; code offset: 0x4fa
            (local.get $2)
           )
          )
         )
         ;; code offset: 0x502
         (local.set $0
          ;; code offset: 0x500
          (local.get $2)
         )
        )
       )
       ;; code offset: 0x50f
       (i32.store
        ;; code offset: 0x50c
        (i32.add
         ;; code offset: 0x505
         (local.get $1)
         ;; code offset: 0x50b
         (i32.shl
          ;; code offset: 0x507
          (local.get $0)
          ;; code offset: 0x509
          (i32.const 2)
         )
        )
        ;; code offset: 0x50d
        (local.get $7)
       )
       ;; code offset: 0x526
       (i32.store
        ;; code offset: 0x51a
        (local.tee $0
         ;; code offset: 0x519
         (i32.add
          ;; code offset: 0x512
          (local.get $5)
          ;; code offset: 0x518
          (i32.shl
           ;; code offset: 0x514
           (local.get $2)
           ;; code offset: 0x516
           (i32.const 2)
          )
         )
        )
        ;; code offset: 0x525
        (i32.sub
         ;; code offset: 0x521
         (local.tee $0
          ;; code offset: 0x51e
          (i32.load
           ;; code offset: 0x51c
           (local.get $0)
          )
         )
         ;; code offset: 0x523
         (i32.const 1)
        )
       )
       ;; code offset: 0x52e
       (if
        ;; code offset: 0x52d
        (i32.le_s
         ;; code offset: 0x529
         (local.get $0)
         ;; code offset: 0x52b
         (i32.const 1)
        )
        (then
         ;; code offset: 0x53a
         (br_if $label$15
          ;; code offset: 0x539
          (i32.ne
           ;; code offset: 0x535
           (local.tee $2
            ;; code offset: 0x534
            (i32.add
             ;; code offset: 0x530
             (local.get $2)
             ;; code offset: 0x532
             (i32.const 1)
            )
           )
           ;; code offset: 0x537
           (local.get $3)
          )
         )
         ;; code offset: 0x53c
         (br $label$6)
        )
       )
      )
      ;; code offset: 0x542
      (br_if $label$11
       ;; code offset: 0x540
       (local.get $6)
      )
     )
     ;; code offset: 0x545
     (br $label$6)
    )
    ;; code offset: 0x548
    (loop $label$19
     ;; code offset: 0x54e
     (drop
      ;; code offset: 0x54c
      (call $putchar
       ;; code offset: 0x54a
       (i32.const 10)
      )
     )
     ;; code offset: 0x554
     (if
      ;; code offset: 0x553
      (i32.gt_s
       ;; code offset: 0x54f
       (local.get $2)
       ;; code offset: 0x551
       (i32.const 1)
      )
      (then
       ;; code offset: 0x556
       (loop $label$21
        ;; code offset: 0x567
        (i32.store
         ;; code offset: 0x564
         (i32.add
          ;; code offset: 0x558
          (local.get $5)
          ;; code offset: 0x563
          (i32.shl
           ;; code offset: 0x55f
           (local.tee $0
            ;; code offset: 0x55e
            (i32.sub
             ;; code offset: 0x55a
             (local.get $2)
             ;; code offset: 0x55c
             (i32.const 1)
            )
           )
           ;; code offset: 0x561
           (i32.const 2)
          )
         )
         ;; code offset: 0x565
         (local.get $2)
        )
        ;; code offset: 0x573
        (br_if $label$21
         (block (result i32)
          (local.set $10
           ;; code offset: 0x56e
           (i32.gt_s
            ;; code offset: 0x56a
            (local.get $2)
            ;; code offset: 0x56c
            (i32.const 2)
           )
          )
          ;; code offset: 0x571
          (local.set $2
           ;; code offset: 0x56f
           (local.get $0)
          )
          (local.get $10)
         )
        )
       )
      )
     )
     ;; code offset: 0x57c
     (br_if $label$6
      ;; code offset: 0x57b
      (i32.eq
       ;; code offset: 0x577
       (local.get $2)
       ;; code offset: 0x579
       (local.get $3)
      )
     )
     ;; code offset: 0x583
     (local.set $6
      ;; code offset: 0x582
      (i32.sub
       ;; code offset: 0x57e
       (local.get $6)
       ;; code offset: 0x580
       (i32.const 1)
      )
     )
     ;; code offset: 0x585
     (loop $label$22
      ;; code offset: 0x58c
      (local.set $7
       ;; code offset: 0x589
       (i32.load
        ;; code offset: 0x587
        (local.get $1)
       )
      )
      ;; code offset: 0x590
      (local.set $0
       ;; code offset: 0x58e
       (i32.const 0)
      )
      ;; code offset: 0x597
      (if
       ;; code offset: 0x596
       (i32.gt_s
        ;; code offset: 0x592
        (local.get $2)
        ;; code offset: 0x594
        (i32.const 0)
       )
       (then
        ;; code offset: 0x599
        (loop $label$24
         ;; code offset: 0x5b3
         (i32.store
          ;; code offset: 0x5a2
          (i32.add
           ;; code offset: 0x59b
           (local.get $1)
           ;; code offset: 0x5a1
           (i32.shl
            ;; code offset: 0x59d
            (local.get $0)
            ;; code offset: 0x59f
            (i32.const 2)
           )
          )
          ;; code offset: 0x5b0
          (i32.load
           ;; code offset: 0x5af
           (i32.add
            ;; code offset: 0x5a3
            (local.get $1)
            ;; code offset: 0x5ae
            (i32.shl
             ;; code offset: 0x5aa
             (local.tee $0
              ;; code offset: 0x5a9
              (i32.add
               ;; code offset: 0x5a5
               (local.get $0)
               ;; code offset: 0x5a7
               (i32.const 1)
              )
             )
             ;; code offset: 0x5ac
             (i32.const 2)
            )
           )
          )
         )
         ;; code offset: 0x5bb
         (br_if $label$24
          ;; code offset: 0x5ba
          (i32.ne
           ;; code offset: 0x5b6
           (local.get $0)
           ;; code offset: 0x5b8
           (local.get $2)
          )
         )
        )
        ;; code offset: 0x5c0
        (local.set $0
         ;; code offset: 0x5be
         (local.get $2)
        )
       )
      )
      ;; code offset: 0x5cd
      (i32.store
       ;; code offset: 0x5ca
       (i32.add
        ;; code offset: 0x5c3
        (local.get $1)
        ;; code offset: 0x5c9
        (i32.shl
         ;; code offset: 0x5c5
         (local.get $0)
         ;; code offset: 0x5c7
         (i32.const 2)
        )
       )
       ;; code offset: 0x5cb
       (local.get $7)
      )
      ;; code offset: 0x5e4
      (i32.store
       ;; code offset: 0x5d8
       (local.tee $0
        ;; code offset: 0x5d7
        (i32.add
         ;; code offset: 0x5d0
         (local.get $5)
         ;; code offset: 0x5d6
         (i32.shl
          ;; code offset: 0x5d2
          (local.get $2)
          ;; code offset: 0x5d4
          (i32.const 2)
         )
        )
       )
       ;; code offset: 0x5e3
       (i32.sub
        ;; code offset: 0x5df
        (local.tee $0
         ;; code offset: 0x5dc
         (i32.load
          ;; code offset: 0x5da
          (local.get $0)
         )
        )
        ;; code offset: 0x5e1
        (i32.const 1)
       )
      )
      ;; code offset: 0x5ec
      (if
       ;; code offset: 0x5eb
       (i32.le_s
        ;; code offset: 0x5e7
        (local.get $0)
        ;; code offset: 0x5e9
        (i32.const 1)
       )
       (then
        ;; code offset: 0x5f8
        (br_if $label$22
         ;; code offset: 0x5f7
         (i32.ne
          ;; code offset: 0x5f3
          (local.tee $2
           ;; code offset: 0x5f2
           (i32.add
            ;; code offset: 0x5ee
            (local.get $2)
            ;; code offset: 0x5f0
            (i32.const 1)
           )
          )
          ;; code offset: 0x5f5
          (local.get $3)
         )
        )
        ;; code offset: 0x5fa
        (br $label$6)
       )
      )
     )
     ;; code offset: 0x600
     (br_if $label$19
      ;; code offset: 0x5fe
      (local.get $6)
     )
    )
   )
   ;; code offset: 0x606
   (call $free
    ;; code offset: 0x604
    (local.get $1)
   )
   ;; code offset: 0x60a
   (call $free
    ;; code offset: 0x608
    (local.get $5)
   )
   ;; code offset: 0x60e
   (local.set $5
    ;; code offset: 0x60c
    (i32.const 0)
   )
   ;; code offset: 0x612
   (local.set $0
    ;; code offset: 0x610
    (i32.const 0)
   )
   ;; code offset: 0x616
   (if
    ;; code offset: 0x614
    (local.get $4)
    (then
     ;; code offset: 0x618
     (loop $label$27
      ;; code offset: 0x61e
      (local.set $1
       ;; code offset: 0x61c
       (call $fannkuch_worker\28void*\29
        ;; code offset: 0x61a
        (local.get $4)
       )
      )
      ;; code offset: 0x625
      (local.set $2
       ;; code offset: 0x622
       (i32.load offset=8
        ;; code offset: 0x620
        (local.get $4)
       )
      )
      ;; code offset: 0x629
      (call $free
       ;; code offset: 0x627
       (local.get $4)
      )
      ;; code offset: 0x635
      (local.set $0
       ;; code offset: 0x634
       (select
        ;; code offset: 0x62b
        (local.get $1)
        ;; code offset: 0x62d
        (local.get $0)
        ;; code offset: 0x633
        (i32.lt_s
         ;; code offset: 0x62f
         (local.get $0)
         ;; code offset: 0x631
         (local.get $1)
        )
       )
      )
      ;; code offset: 0x639
      (local.set $4
       ;; code offset: 0x637
       (local.get $2)
      )
      ;; code offset: 0x63d
      (br_if $label$27
       ;; code offset: 0x63b
       (local.get $2)
      )
     )
    )
   )
   ;; code offset: 0x645
   (i32.store offset=4
    ;; code offset: 0x641
    (local.get $8)
    ;; code offset: 0x643
    (local.get $0)
   )
   ;; code offset: 0x64c
   (i32.store
    ;; code offset: 0x648
    (local.get $8)
    ;; code offset: 0x64a
    (local.get $3)
   )
   ;; code offset: 0x656
   (drop
    ;; code offset: 0x654
    (call $iprintf
     ;; code offset: 0x64f
     (i32.const 1024)
     ;; code offset: 0x652
     (local.get $8)
    )
   )
  )
  ;; code offset: 0x65d
  (global.set $global$0
   ;; code offset: 0x65c
   (i32.add
    ;; code offset: 0x658
    (local.get $8)
    ;; code offset: 0x65a
    (i32.const 32)
   )
  )
  ;; code offset: 0x65f
  (local.get $5)
 )
 ;; custom section ".debug_info", size 851
 ;; custom section ".debug_loc", size 1073
 ;; custom section ".debug_ranges", size 88
 ;; custom section ".debug_abbrev", size 333
 ;; custom section ".debug_line", size 2642
 ;; custom section ".debug_str", size 434
 ;; custom section "producers", size 135
)
