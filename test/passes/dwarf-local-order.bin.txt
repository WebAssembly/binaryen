(module
 (type $none_=>_none (func))
 (type $none_=>_i32 (func (result i32)))
 (memory $0 256 256)
 (table $0 1 1 funcref)
 (global $global$0 (mut i32) (i32.const 5243904))
 (global $global$1 i32 (i32.const 1024))
 (export "memory" (memory $0))
 (export "__wasm_call_ctors" (func $__wasm_call_ctors))
 (export "foo" (func $foo))
 (export "__data_end" (global $global$1))
 (func $__wasm_call_ctors
 )
 (func $foo (result i32)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 f32)
  (local $5 i32)
  (local $6 i32)
  (local $7 f32)
  (local $8 f32)
  (local $9 f32)
  (local $10 i32)
  (local $11 f32)
  (local $12 f32)
  (local $13 f32)
  (local $14 f32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local.set $0
   (global.get $global$0)
  )
  (local.set $1
   (i32.const 16)
  )
  (local.set $2
   (i32.sub
    (local.get $0)
    (local.get $1)
   )
  )
  (local.set $3
   (i32.const 3)
  )
  (local.set $4
   (f32.const 2)
  )
  (local.set $5
   (i32.const 1)
  )
  (i32.store offset=12
   (local.get $2)
   (local.get $5)
  )
  (f32.store offset=8
   (local.get $2)
   (local.get $4)
  )
  (i32.store offset=4
   (local.get $2)
   (local.get $3)
  )
  (local.set $6
   (i32.load offset=12
    (local.get $2)
   )
  )
  (local.set $7
   (f32.convert_i32_s
    (local.get $6)
   )
  )
  (local.set $8
   (f32.load offset=8
    (local.get $2)
   )
  )
  (local.set $9
   (f32.add
    (local.get $7)
    (local.get $8)
   )
  )
  (local.set $10
   (i32.load offset=4
    (local.get $2)
   )
  )
  (local.set $11
   (f32.convert_i32_s
    (local.get $10)
   )
  )
  (local.set $12
   (f32.add
    (local.get $9)
    (local.get $11)
   )
  )
  (local.set $13
   (f32.abs
    (local.get $12)
   )
  )
  (local.set $14
   (f32.const 2147483648)
  )
  (local.set $15
   (f32.lt
    (local.get $13)
    (local.get $14)
   )
  )
  (local.set $16
   (i32.eqz
    (local.get $15)
   )
  )
  (block $label$1
   (block $label$2
    (br_if $label$2
     (local.get $16)
    )
    (local.set $17
     (i32.trunc_f32_s
      (local.get $12)
     )
    )
    (local.set $18
     (local.get $17)
    )
    (br $label$1)
   )
   (local.set $19
    (i32.const -2147483648)
   )
   (local.set $18
    (local.get $19)
   )
  )
  (local.set $20
   (local.get $18)
  )
  (return
   (local.get $20)
  )
 )
 ;; custom section ".debug_info", size 120
 ;; custom section ".debug_abbrev", size 67
 ;; custom section ".debug_line", size 94
 ;; custom section ".debug_str", size 201
 ;; custom section "producers", size 172
)
(module
 (type $none_=>_none (func))
 (type $none_=>_i32 (func (result i32)))
 (memory $0 256 256)
 (table $0 1 1 funcref)
 (global $global$0 (mut i32) (i32.const 5243904))
 (global $global$1 i32 (i32.const 1024))
 (export "memory" (memory $0))
 (export "__wasm_call_ctors" (func $__wasm_call_ctors))
 (export "foo" (func $foo))
 (export "__data_end" (global $global$1))
 (func $__wasm_call_ctors
 )
 (func $foo (result i32)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 f32)
  (local $5 i32)
  (local $6 i32)
  (local $7 f32)
  (local $8 f32)
  (local $9 f32)
  (local $10 i32)
  (local $11 f32)
  (local $12 f32)
  (local $13 f32)
  (local $14 f32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  ;; code offset: 0x33
  (local.set $0
   ;; code offset: 0x31
   (global.get $global$0)
  )
  ;; code offset: 0x37
  (local.set $1
   ;; code offset: 0x35
   (i32.const 16)
  )
  ;; code offset: 0x3e
  (local.set $2
   ;; code offset: 0x3d
   (i32.sub
    ;; code offset: 0x39
    (local.get $0)
    ;; code offset: 0x3b
    (local.get $1)
   )
  )
  ;; code offset: 0x42
  (local.set $3
   ;; code offset: 0x40
   (i32.const 3)
  )
  ;; code offset: 0x49
  (local.set $4
   ;; code offset: 0x44
   (f32.const 2)
  )
  ;; code offset: 0x4d
  (local.set $5
   ;; code offset: 0x4b
   (i32.const 1)
  )
  ;; code offset: 0x53
  (i32.store offset=12
   ;; code offset: 0x4f
   (local.get $2)
   ;; code offset: 0x51
   (local.get $5)
  )
  ;; code offset: 0x5a
  (f32.store offset=8
   ;; code offset: 0x56
   (local.get $2)
   ;; code offset: 0x58
   (local.get $4)
  )
  ;; code offset: 0x61
  (i32.store offset=4
   ;; code offset: 0x5d
   (local.get $2)
   ;; code offset: 0x5f
   (local.get $3)
  )
  ;; code offset: 0x69
  (local.set $6
   ;; code offset: 0x66
   (i32.load offset=12
    ;; code offset: 0x64
    (local.get $2)
   )
  )
  ;; code offset: 0x6e
  (local.set $7
   ;; code offset: 0x6d
   (f32.convert_i32_s
    ;; code offset: 0x6b
    (local.get $6)
   )
  )
  ;; code offset: 0x75
  (local.set $8
   ;; code offset: 0x72
   (f32.load offset=8
    ;; code offset: 0x70
    (local.get $2)
   )
  )
  ;; code offset: 0x7c
  (local.set $9
   ;; code offset: 0x7b
   (f32.add
    ;; code offset: 0x77
    (local.get $7)
    ;; code offset: 0x79
    (local.get $8)
   )
  )
  ;; code offset: 0x83
  (local.set $10
   ;; code offset: 0x80
   (i32.load offset=4
    ;; code offset: 0x7e
    (local.get $2)
   )
  )
  ;; code offset: 0x88
  (local.set $11
   ;; code offset: 0x87
   (f32.convert_i32_s
    ;; code offset: 0x85
    (local.get $10)
   )
  )
  ;; code offset: 0x8f
  (local.set $12
   ;; code offset: 0x8e
   (f32.add
    ;; code offset: 0x8a
    (local.get $9)
    ;; code offset: 0x8c
    (local.get $11)
   )
  )
  ;; code offset: 0x94
  (local.set $13
   ;; code offset: 0x93
   (f32.abs
    ;; code offset: 0x91
    (local.get $12)
   )
  )
  ;; code offset: 0x9b
  (local.set $14
   ;; code offset: 0x96
   (f32.const 2147483648)
  )
  ;; code offset: 0xa2
  (local.set $15
   ;; code offset: 0xa1
   (f32.lt
    ;; code offset: 0x9d
    (local.get $13)
    ;; code offset: 0x9f
    (local.get $14)
   )
  )
  ;; code offset: 0xa7
  (local.set $16
   ;; code offset: 0xa6
   (i32.eqz
    ;; code offset: 0xa4
    (local.get $15)
   )
  )
  ;; code offset: 0xa9
  (block $label$1
   (block $label$2
    ;; code offset: 0xaf
    (br_if $label$2
     ;; code offset: 0xad
     (local.get $16)
    )
    ;; code offset: 0xb4
    (local.set $17
     ;; code offset: 0xb3
     (i32.trunc_f32_s
      ;; code offset: 0xb1
      (local.get $12)
     )
    )
    ;; code offset: 0xb8
    (local.set $18
     ;; code offset: 0xb6
     (local.get $17)
    )
    ;; code offset: 0xba
    (br $label$1)
   )
   ;; code offset: 0xc3
   (local.set $19
    ;; code offset: 0xbd
    (i32.const -2147483648)
   )
   ;; code offset: 0xc7
   (local.set $18
    ;; code offset: 0xc5
    (local.get $19)
   )
  )
  ;; code offset: 0xcc
  (local.set $20
   ;; code offset: 0xca
   (local.get $18)
  )
  ;; code offset: 0xd0
  (return
   ;; code offset: 0xce
   (local.get $20)
  )
 )
 ;; custom section ".debug_info", size 120
 ;; custom section ".debug_abbrev", size 67
 ;; custom section ".debug_line", size 37
 ;; custom section ".debug_str", size 201
 ;; custom section "producers", size 172
)
(module
 (type $none_=>_none (func))
 (type $none_=>_i32 (func (result i32)))
 (memory $0 256 256)
 (table $0 1 1 funcref)
 (global $global$0 (mut i32) (i32.const 5243904))
 (global $global$1 i32 (i32.const 1024))
 (export "memory" (memory $0))
 (export "__wasm_call_ctors" (func $__wasm_call_ctors))
 (export "foo" (func $foo))
 (export "__data_end" (global $global$1))
 (func $__wasm_call_ctors
 )
 (func $foo (result i32)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 f32)
  (local $14 f32)
  (local $15 f32)
  (local $16 f32)
  (local $17 f32)
  (local $18 f32)
  (local $19 f32)
  (local $20 f32)
  (local.set $0
   (global.get $global$0)
  )
  (local.set $1
   (i32.const 16)
  )
  (local.set $2
   (i32.sub
    (local.get $0)
    (local.get $1)
   )
  )
  (local.set $3
   (i32.const 3)
  )
  (local.set $13
   (f32.const 2)
  )
  (local.set $4
   (i32.const 1)
  )
  (i32.store offset=12
   (local.get $2)
   (local.get $4)
  )
  (f32.store offset=8
   (local.get $2)
   (local.get $13)
  )
  (i32.store offset=4
   (local.get $2)
   (local.get $3)
  )
  (local.set $5
   (i32.load offset=12
    (local.get $2)
   )
  )
  (local.set $14
   (f32.convert_i32_s
    (local.get $5)
   )
  )
  (local.set $15
   (f32.load offset=8
    (local.get $2)
   )
  )
  (local.set $16
   (f32.add
    (local.get $14)
    (local.get $15)
   )
  )
  (local.set $6
   (i32.load offset=4
    (local.get $2)
   )
  )
  (local.set $17
   (f32.convert_i32_s
    (local.get $6)
   )
  )
  (local.set $18
   (f32.add
    (local.get $16)
    (local.get $17)
   )
  )
  (local.set $19
   (f32.abs
    (local.get $18)
   )
  )
  (local.set $20
   (f32.const 2147483648)
  )
  (local.set $7
   (f32.lt
    (local.get $19)
    (local.get $20)
   )
  )
  (local.set $8
   (i32.eqz
    (local.get $7)
   )
  )
  (block $label$1
   (block $label$2
    (br_if $label$2
     (local.get $8)
    )
    (local.set $9
     (i32.trunc_f32_s
      (local.get $18)
     )
    )
    (local.set $10
     (local.get $9)
    )
    (br $label$1)
   )
   (local.set $11
    (i32.const -2147483648)
   )
   (local.set $10
    (local.get $11)
   )
  )
  (local.set $12
   (local.get $10)
  )
  (return
   (local.get $12)
  )
 )
 ;; custom section "producers", size 172
)
(module
 (type $none_=>_none (func))
 (type $none_=>_i32 (func (result i32)))
 (memory $0 256 256)
 (table $0 1 1 funcref)
 (global $global$0 (mut i32) (i32.const 5243904))
 (global $global$1 i32 (i32.const 1024))
 (export "memory" (memory $0))
 (export "__wasm_call_ctors" (func $__wasm_call_ctors))
 (export "foo" (func $foo))
 (export "__data_end" (global $global$1))
 (func $__wasm_call_ctors
 )
 (func $foo (result i32)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 f32)
  (local $14 f32)
  (local $15 f32)
  (local $16 f32)
  (local $17 f32)
  (local $18 f32)
  (local $19 f32)
  (local $20 f32)
  (local.set $0
   (global.get $global$0)
  )
  (local.set $1
   (i32.const 16)
  )
  (local.set $2
   (i32.sub
    (local.get $0)
    (local.get $1)
   )
  )
  (local.set $3
   (i32.const 3)
  )
  (local.set $13
   (f32.const 2)
  )
  (local.set $4
   (i32.const 1)
  )
  (i32.store offset=12
   (local.get $2)
   (local.get $4)
  )
  (f32.store offset=8
   (local.get $2)
   (local.get $13)
  )
  (i32.store offset=4
   (local.get $2)
   (local.get $3)
  )
  (local.set $5
   (i32.load offset=12
    (local.get $2)
   )
  )
  (local.set $14
   (f32.convert_i32_s
    (local.get $5)
   )
  )
  (local.set $15
   (f32.load offset=8
    (local.get $2)
   )
  )
  (local.set $16
   (f32.add
    (local.get $14)
    (local.get $15)
   )
  )
  (local.set $6
   (i32.load offset=4
    (local.get $2)
   )
  )
  (local.set $17
   (f32.convert_i32_s
    (local.get $6)
   )
  )
  (local.set $18
   (f32.add
    (local.get $16)
    (local.get $17)
   )
  )
  (local.set $19
   (f32.abs
    (local.get $18)
   )
  )
  (local.set $20
   (f32.const 2147483648)
  )
  (local.set $7
   (f32.lt
    (local.get $19)
    (local.get $20)
   )
  )
  (local.set $8
   (i32.eqz
    (local.get $7)
   )
  )
  (block $label$1
   (block $label$2
    (br_if $label$2
     (local.get $8)
    )
    (local.set $9
     (i32.trunc_f32_s
      (local.get $18)
     )
    )
    (local.set $10
     (local.get $9)
    )
    (br $label$1)
   )
   (local.set $11
    (i32.const -2147483648)
   )
   (local.set $10
    (local.get $11)
   )
  )
  (local.set $12
   (local.get $10)
  )
  (return
   (local.get $12)
  )
 )
 ;; custom section "producers", size 172
)
