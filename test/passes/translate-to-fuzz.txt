(module
 (type $FUNCSIG$ifi (func (param f32 i32) (result i32)))
 (type $FUNCSIG$dj (func (param i64) (result f64)))
 (type $FUNCSIG$f (func (result f32)))
 (global $global$0 (mut f64) (f64.const 138413376))
 (global $global$1 (mut f64) (f64.const 1.1754943508222875e-38))
 (global $hangLimit (mut i32) (i32.const 100))
 (table 2 anyfunc)
 (elem (i32.const 0) $func_0 $func_5)
 (memory $0 (shared 1 1))
 (data (i32.const 0) "\00C\00[\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (export "func_0" (func $func_0))
 (export "func_3" (func $func_3))
 (export "func_5" (func $func_5))
 (export "hangLimitInitializer" (func $hangLimitInitializer))
 (func $func_0 (; 0 ;) (type $FUNCSIG$ifi) (param $0 f32) (param $1 i32) (result i32)
  (block
   (if
    (i32.eqz
     (get_global $hangLimit)
    )
    (return
     (get_local $1)
    )
   )
   (set_global $hangLimit
    (i32.sub
     (get_global $hangLimit)
     (i32.const 1)
    )
   )
  )
  (tee_local $1
   (i32.eqz
    (if (result i32)
     (i32.eqz
      (f64.le
       (f64.const -2147483648)
       (f64.const 8)
      )
     )
     (i32.or
      (i32.div_s
       (if (result i32)
        (i32.eqz
         (loop $label$0 (result i32)
          (block
           (if
            (i32.eqz
             (get_global $hangLimit)
            )
            (return
             (i32.const 24332)
            )
           )
           (set_global $hangLimit
            (i32.sub
             (get_global $hangLimit)
             (i32.const 1)
            )
           )
          )
          (block (result i32)
           (loop $label$1
            (block
             (if
              (i32.eqz
               (get_global $hangLimit)
              )
              (return
               (get_local $1)
              )
             )
             (set_global $hangLimit
              (i32.sub
               (get_global $hangLimit)
               (i32.const 1)
              )
             )
            )
            (nop)
           )
           (br_if $label$0
            (i32.eqz
             (get_local $1)
            )
           )
           (loop $label$3 (result i32)
            (block
             (if
              (i32.eqz
               (get_global $hangLimit)
              )
              (return
               (get_local $1)
              )
             )
             (set_global $hangLimit
              (i32.sub
               (get_global $hangLimit)
               (i32.const 1)
              )
             )
            )
            (i32.trunc_s/f64
             (f64.const -9223372036854775808)
            )
           )
          )
         )
        )
        (block $label$4 (result i32)
         (i32.load8_u offset=3
          (i32.and
           (br_if $label$4
            (i32.const -44)
            (i32.const 437327895)
           )
           (i32.const 31)
          )
         )
        )
        (block $label$5 (result i32)
         (nop)
         (return
          (i32.const 84)
         )
        )
       )
       (block $label$6 (result i32)
        (block $label$7
         (block $label$8
          (nop)
          (nop)
         )
         (br_if $label$7
          (i32.eqz
           (get_local $1)
          )
         )
        )
        (get_local $1)
       )
      )
      (i32.const 1048576)
     )
     (get_local $1)
    )
   )
  )
 )
 (func $func_1 (; 1 ;) (result f64)
  (local $0 i64)
  (local $1 f32)
  (local $2 i32)
  (local $3 i64)
  (local $4 f32)
  (local $5 i32)
  (local $6 f32)
  (block
   (if
    (i32.eqz
     (get_global $hangLimit)
    )
    (return
     (f64.const 61)
    )
   )
   (set_global $hangLimit
    (i32.sub
     (get_global $hangLimit)
     (i32.const 1)
    )
   )
  )
  (get_global $global$1)
 )
 (func $func_2 (; 2 ;)
  (block
   (if
    (i32.eqz
     (get_global $hangLimit)
    )
    (return)
   )
   (set_global $hangLimit
    (i32.sub
     (get_global $hangLimit)
     (i32.const 1)
    )
   )
  )
  (block $label$0
   (set_global $global$0
    (loop $label$1 (result f64)
     (block
      (if
       (i32.eqz
        (get_global $hangLimit)
       )
       (return)
      )
      (set_global $hangLimit
       (i32.sub
        (get_global $hangLimit)
        (i32.const 1)
       )
      )
     )
     (block $label$2 (result f64)
      (loop $label$3 (result f64)
       (block
        (if
         (i32.eqz
          (get_global $hangLimit)
         )
         (return)
        )
        (set_global $hangLimit
         (i32.sub
          (get_global $hangLimit)
          (i32.const 1)
         )
        )
       )
       (block $label$4 (result f64)
        (loop $label$5
         (block
          (if
           (i32.eqz
            (get_global $hangLimit)
           )
           (return)
          )
          (set_global $hangLimit
           (i32.sub
            (get_global $hangLimit)
            (i32.const 1)
           )
          )
         )
         (nop)
        )
        (call $deNan64
         (f64.reinterpret/i64
          (i64.extend_u/i32
           (block $label$6 (result i32)
            (loop $label$7
             (block
              (if
               (i32.eqz
                (get_global $hangLimit)
               )
               (return)
              )
              (set_global $hangLimit
               (i32.sub
                (get_global $hangLimit)
                (i32.const 1)
               )
              )
             )
             (block $label$8
              (nop)
              (block $label$9
               (br_if $label$3
                (i32.eqz
                 (i32.const 185342814)
                )
               )
               (i32.store offset=3 align=2
                (i32.and
                 (loop $label$10 (result i32)
                  (block
                   (if
                    (i32.eqz
                     (get_global $hangLimit)
                    )
                    (return)
                   )
                   (set_global $hangLimit
                    (i32.sub
                     (get_global $hangLimit)
                     (i32.const 1)
                    )
                   )
                  )
                  (block (result i32)
                   (nop)
                   (br_if $label$10
                    (i32.const 1195902538)
                   )
                   (call $func_0
                    (call $deNan32
                     (f32.convert_u/i64
                      (i64.const 2251799813685248)
                     )
                    )
                    (i32.const 336464134)
                   )
                  )
                 )
                 (i32.const 31)
                )
                (i32.const 27)
               )
              )
             )
            )
            (i32.reinterpret/f32
             (f32.const 19533)
            )
           )
          )
         )
        )
       )
      )
     )
    )
   )
   (nop)
  )
 )
 (func $func_3 (; 3 ;) (type $FUNCSIG$dj) (param $0 i64) (result f64)
  (local $1 i64)
  (block
   (if
    (i32.eqz
     (get_global $hangLimit)
    )
    (return
     (f64.const -nan:0xffffffffffff9)
    )
   )
   (set_global $hangLimit
    (i32.sub
     (get_global $hangLimit)
     (i32.const 1)
    )
   )
  )
  (block $label$0 (result f64)
   (nop)
   (block $label$1
    (drop
     (i64.shr_s
      (loop $label$2 (result i64)
       (block
        (if
         (i32.eqz
          (get_global $hangLimit)
         )
         (return
          (f64.const 9150713448007298)
         )
        )
        (set_global $hangLimit
         (i32.sub
          (get_global $hangLimit)
          (i32.const 1)
         )
        )
       )
       (block $label$3 (result i64)
        (f64.store offset=2 align=4
         (i32.and
          (i32.const 127)
          (i32.const 31)
         )
         (f64.load offset=3
          (i32.and
           (i32.const -16777216)
           (i32.const 31)
          )
         )
        )
        (i64.popcnt
         (block $label$4 (result i64)
          (br_if $label$1
           (i32.load offset=1 align=1
            (i32.and
             (f64.gt
              (br_if $label$0
               (f64.const 7)
               (i32.eqz
                (call_indirect $FUNCSIG$ifi
                 (f32.const 2147483648)
                 (i32.const -28)
                 (i32.const 0)
                )
               )
              )
              (call $func_1)
             )
             (i32.const 31)
            )
           )
          )
          (br_if $label$4
           (if (result i64)
            (i32.const 825692018)
            (block $label$8 (result i64)
             (loop $label$9
              (block
               (if
                (i32.eqz
                 (get_global $hangLimit)
                )
                (return
                 (f64.const -nan:0xffffffffffff9)
                )
               )
               (set_global $hangLimit
                (i32.sub
                 (get_global $hangLimit)
                 (i32.const 1)
                )
               )
              )
              (block $label$10
               (nop)
               (nop)
              )
             )
             (i64.load8_u
              (block $label$11 (result i32)
               (nop)
               (i32.const -2)
              )
             )
            )
            (i64.shl
             (if (result i64)
              (f64.ge
               (f64.const 4294967200)
               (loop $label$12 (result f64)
                (block
                 (if
                  (i32.eqz
                   (get_global $hangLimit)
                  )
                  (return
                   (f64.const 16471262202863238)
                  )
                 )
                 (set_global $hangLimit
                  (i32.sub
                   (get_global $hangLimit)
                   (i32.const 1)
                  )
                 )
                )
                (f64.const 1812599913)
               )
              )
              (block $label$13 (result i64)
               (i32.atomic.store8 offset=3
                (i32.and
                 (i32.const 1026760786)
                 (i32.const 31)
                )
                (i32.const -32769)
               )
               (br $label$1)
              )
              (block $label$14 (result i64)
               (if
                (i32.const 185339652)
                (set_local $0
                 (select
                  (get_local $1)
                  (i64.const 9223372036854775807)
                  (if (result i32)
                   (i32.const 0)
                   (i32.const -21)
                   (i32.const 39)
                  )
                 )
                )
                (nop)
               )
               (br $label$1)
              )
             )
             (i64.div_u
              (i64.ctz
               (select
                (get_local $0)
                (i64.const 29041)
                (select
                 (i32.const 256)
                 (i32.const 65535)
                 (call $func_0
                  (f32.const 1.7485578309992735e-21)
                  (i32.const 134217728)
                 )
                )
               )
              )
              (i64.const -131072)
             )
            )
           )
           (i32.atomic.load16_u offset=22
            (i32.and
             (if (result i32)
              (i32.eqz
               (i32.const 268435456)
              )
              (block $label$5 (result i32)
               (nop)
               (br $label$1)
              )
              (loop $label$6 (result i32)
               (block
                (if
                 (i32.eqz
                  (get_global $hangLimit)
                 )
                 (return
                  (f64.const 9030)
                 )
                )
                (set_global $hangLimit
                 (i32.sub
                  (get_global $hangLimit)
                  (i32.const 1)
                 )
                )
               )
               (block (result i32)
                (loop $label$7
                 (block
                  (if
                   (i32.eqz
                    (get_global $hangLimit)
                   )
                   (return
                    (f64.const 1797693134862315708145274e284)
                   )
                  )
                  (set_global $hangLimit
                   (i32.sub
                    (get_global $hangLimit)
                    (i32.const 1)
                   )
                  )
                 )
                 (block
                  (nop)
                  (br_if $label$7
                   (i32.const 0)
                  )
                  (nop)
                 )
                )
                (br_if $label$6
                 (call $func_0
                  (f32.const 82)
                  (i32.const 770)
                 )
                )
                (call_indirect $FUNCSIG$ifi
                 (f32.const 1.1754943508222875e-38)
                 (i32.const -1)
                 (i32.const 0)
                )
               )
              )
             )
             (i32.const 31)
            )
           )
          )
         )
        )
       )
      )
      (i64.const -1)
     )
    )
    (f32.store offset=22
     (i32.and
      (i32.const 2147483647)
      (i32.const 31)
     )
     (f32.const -1)
    )
   )
   (return
    (f64.const 18446744073709551615)
   )
  )
 )
 (func $func_4 (; 4 ;) (result f32)
  (local $0 f32)
  (local $1 i32)
  (block
   (if
    (i32.eqz
     (get_global $hangLimit)
    )
    (return
     (f32.const -9223372036854775808)
    )
   )
   (set_global $hangLimit
    (i32.sub
     (get_global $hangLimit)
     (i32.const 1)
    )
   )
  )
  (block $label$0 (result f32)
   (return
    (f32.const -1048576)
   )
  )
 )
 (func $func_5 (; 5 ;) (type $FUNCSIG$f) (result f32)
  (local $0 f32)
  (local $1 i32)
  (local $2 i32)
  (local $3 f64)
  (local $4 i64)
  (local $5 i32)
  (block
   (if
    (i32.eqz
     (get_global $hangLimit)
    )
    (return
     (get_local $0)
    )
   )
   (set_global $hangLimit
    (i32.sub
     (get_global $hangLimit)
     (i32.const 1)
    )
   )
  )
  (call $deNan32
   (f32.convert_s/i64
    (if (result i64)
     (loop $label$0 (result i32)
      (block
       (if
        (i32.eqz
         (get_global $hangLimit)
        )
        (return
         (f32.const 28726)
        )
       )
       (set_global $hangLimit
        (i32.sub
         (get_global $hangLimit)
         (i32.const 1)
        )
       )
      )
      (i32.const -76)
     )
     (block $label$1 (result i64)
      (nop)
      (block $label$2 (result i64)
       (drop
        (if (result f32)
         (i32.const -64)
         (get_local $0)
         (block $label$5 (result f32)
          (drop
           (get_local $2)
          )
          (return
           (f32.const 1.9604099208437475e-30)
          )
         )
        )
       )
       (return
        (get_local $0)
       )
      )
     )
     (block $label$6 (result i64)
      (set_local $3
       (call $deNan64
        (f64.copysign
         (get_global $global$1)
         (block $label$7 (result f64)
          (block $label$8
           (br_if $label$8
            (i32.load offset=4 align=2
             (i32.and
              (i32.load16_u offset=4
               (i32.and
                (select
                 (get_local $1)
                 (select
                  (call $func_0
                   (get_local $0)
                   (select
                    (i32.const 65535)
                    (get_local $1)
                    (i32.const 1999974947)
                   )
                  )
                  (i32.const 64)
                  (get_local $5)
                 )
                 (get_local $2)
                )
                (i32.const 31)
               )
              )
              (i32.const 31)
             )
            )
           )
           (loop $label$9
            (block
             (if
              (i32.eqz
               (get_global $hangLimit)
              )
              (return
               (get_local $0)
              )
             )
             (set_global $hangLimit
              (i32.sub
               (get_global $hangLimit)
               (i32.const 1)
              )
             )
            )
            (block $label$10
             (drop
              (call_indirect $FUNCSIG$ifi
               (f32.const 2097640320)
               (i32.eqz
                (select
                 (i32.const -128)
                 (get_local $2)
                 (get_local $2)
                )
               )
               (i32.const 0)
              )
             )
             (if
              (tee_local $2
               (get_local $2)
              )
              (block $label$11
               (nop)
               (call $func_2)
              )
              (block $label$12
               (block $label$13
                (nop)
                (if
                 (i32.const 1936882040)
                 (nop)
                 (loop $label$14
                  (block
                   (if
                    (i32.eqz
                     (get_global $hangLimit)
                    )
                    (return
                     (f32.const 4294967296)
                    )
                   )
                   (set_global $hangLimit
                    (i32.sub
                     (get_global $hangLimit)
                     (i32.const 1)
                    )
                   )
                  )
                  (block
                   (nop)
                   (br_if $label$14
                    (i32.eqz
                     (i32.const -2147483648)
                    )
                   )
                   (nop)
                  )
                 )
                )
               )
               (nop)
              )
             )
            )
           )
          )
          (return
           (get_local $0)
          )
         )
        )
       )
      )
      (i64.atomic.rmw8_u.xor offset=4
       (i32.and
        (i32.const 32767)
        (i32.const 31)
       )
       (i64.const 9223372036854775807)
      )
     )
    )
   )
  )
 )
 (func $func_6 (; 6 ;) (param $0 f32) (param $1 f32) (result f64)
  (local $2 i64)
  (local $3 f32)
  (block
   (if
    (i32.eqz
     (get_global $hangLimit)
    )
    (return
     (f64.const -nan:0xffffffffffffa)
    )
   )
   (set_global $hangLimit
    (i32.sub
     (get_global $hangLimit)
     (i32.const 1)
    )
   )
  )
  (block $label$0 (result f64)
   (drop
    (i32.atomic.load8_u offset=4
     (i32.atomic.load offset=4
      (i32.and
       (loop $label$1 (result i32)
        (block
         (if
          (i32.eqz
           (get_global $hangLimit)
          )
          (return
           (f64.const 1.4089981056487379e-134)
          )
         )
         (set_global $hangLimit
          (i32.sub
           (get_global $hangLimit)
           (i32.const 1)
          )
         )
        )
        (block (result i32)
         (block $label$2
          (if
           (i32.eqz
            (i32.const 119342106)
           )
           (block $label$3
            (i64.atomic.store32 offset=3
             (i32.and
              (i32.const 127)
              (i32.const 31)
             )
             (i64.const 651625613631293707)
            )
           )
           (call $func_2)
          )
          (f64.store offset=22
           (i32.and
            (i32.atomic.rmw8_u.xchg offset=22
             (i32.and
              (block $label$4 (result i32)
               (nop)
               (br $label$1)
              )
              (i32.const 31)
             )
             (select
              (i32.atomic.rmw16_u.cmpxchg offset=4
               (i32.and
                (i32.const 37)
                (i32.const 31)
               )
               (select
                (i32.atomic.rmw16_u.cmpxchg offset=22
                 (i32.and
                  (f32.ge
                   (get_local $0)
                   (f32.const -2147483648)
                  )
                  (i32.const 31)
                 )
                 (loop $label$6 (result i32)
                  (block
                   (if
                    (i32.eqz
                     (get_global $hangLimit)
                    )
                    (return
                     (f64.const 1791883197976824701597689e116)
                    )
                   )
                   (set_global $hangLimit
                    (i32.sub
                     (get_global $hangLimit)
                     (i32.const 1)
                    )
                   )
                  )
                  (block (result i32)
                   (set_local $2
                    (i64.const -55)
                   )
                   (br_if $label$6
                    (i32.eqz
                     (i32.const 131072)
                    )
                   )
                   (i32.const -134217728)
                  )
                 )
                 (i32.const 924871013)
                )
                (call_indirect $FUNCSIG$ifi
                 (call $deNan32
                  (f32.sub
                   (call $deNan32
                    (f32.add
                     (get_local $0)
                     (f32.const 4.581032111437074e-16)
                    )
                   )
                   (tee_local $0
                    (block $label$7 (result f32)
                     (nop)
                     (get_local $0)
                    )
                   )
                  )
                 )
                 (i32.const 65446)
                 (i32.const 0)
                )
                (call_indirect $FUNCSIG$ifi
                 (call $deNan32
                  (f32.sub
                   (get_local $3)
                   (f32.const -4096)
                  )
                 )
                 (i32.const -2147483648)
                 (i32.const 0)
                )
               )
               (i32.const -42)
              )
              (call_indirect $FUNCSIG$ifi
               (call_indirect $FUNCSIG$f
                (i32.const -134217728)
               )
               (i32.const -2147483648)
               (i32.const 0)
              )
              (block $label$5 (result i32)
               (drop
                (call $func_0
                 (tee_local $1
                  (get_local $3)
                 )
                 (call_indirect $FUNCSIG$ifi
                  (get_local $3)
                  (i32.const 2)
                  (i32.const 0)
                 )
                )
               )
               (br $label$1)
              )
             )
            )
            (i32.const 31)
           )
           (f64.const 1.8443913781292733e-124)
          )
         )
         (br_if $label$1
          (i32.const 811742759)
         )
         (i32.const 19806)
        )
       )
       (i32.const 31)
      )
     )
    )
   )
   (f64.const 3495358995652723316329699e63)
  )
 )
 (func $hangLimitInitializer (; 7 ;)
  (set_global $hangLimit
   (i32.const 100)
  )
 )
 (func $deNan32 (; 8 ;) (param $0 f32) (result f32)
  (if (result f32)
   (f32.eq
    (get_local $0)
    (get_local $0)
   )
   (get_local $0)
   (f32.const 0)
  )
 )
 (func $deNan64 (; 9 ;) (param $0 f64) (result f64)
  (if (result f64)
   (f64.eq
    (get_local $0)
    (get_local $0)
   )
   (get_local $0)
   (f64.const 0)
  )
 )
)
