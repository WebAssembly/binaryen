(module
 (type $FUNCSIG$i (func (result i32)))
 (type $FUNCSIG$v (func))
 (type $FUNCSIG$jj (func (param i64) (result i64)))
 (type $FUNCSIG$djdfj (func (param i64 f64 f32 i64) (result f64)))
 (type $FUNCSIG$jidjd (func (param i32 f64 i64 f64) (result i64)))
 (type $FUNCSIG$jdjj (func (param f64 i64 i64) (result i64)))
 (type $FUNCSIG$vj (func (param i64)))
 (type $FUNCSIG$jjjfi (func (param i64 i64 f32 i32) (result i64)))
 (import "fuzzing-support" "log-i32" (func $log-i32 (param i32)))
 (import "fuzzing-support" "log-i64" (func $log-i64 (param i64)))
 (import "fuzzing-support" "log-f32" (func $log-f32 (param f32)))
 (import "fuzzing-support" "log-f64" (func $log-f64 (param f64)))
 (memory $0 (shared 1 1))
 (data (i32.const 0) "n\00\05E\00\00\00\00")
 (table $0 12 12 anyfunc)
 (elem (i32.const 0) $func_8 $func_8 $func_11 $func_11 $func_13 $func_14 $func_14 $func_21 $func_21 $func_21 $func_21 $func_21)
 (global $global$0 (mut f32) (f32.const 536870912))
 (global $global$1 (mut f32) (f32.const 2147483648))
 (global $global$2 (mut f64) (f64.const -1048576))
 (global $global$3 (mut f64) (f64.const 23643))
 (global $hangLimit (mut i32) (i32.const 10))
 (export "func_4" (func $func_4))
 (export "func_4_invoker" (func $func_4_invoker))
 (export "func_6" (func $func_6))
 (export "func_6_invoker" (func $func_6_invoker))
 (export "func_8" (func $func_8))
 (export "func_8_invoker" (func $func_8_invoker))
 (export "func_10" (func $func_10))
 (export "func_11" (func $func_11))
 (export "func_11_invoker" (func $func_11_invoker))
 (export "func_13" (func $func_13))
 (export "func_14" (func $func_14))
 (export "func_15_invoker" (func $func_15_invoker))
 (export "func_17" (func $func_17))
 (export "func_19_invoker" (func $func_19_invoker))
 (export "func_21_invoker" (func $func_21_invoker))
 (export "func_23" (func $func_23))
 (export "func_23_invoker" (func $func_23_invoker))
 (export "func_25_invoker" (func $func_25_invoker))
 (export "func_27" (func $func_27))
 (export "hangLimitInitializer" (func $hangLimitInitializer))
 (func $func_4 (; 4 ;) (type $FUNCSIG$i) (result i32)
  (local $0 i32)
  (local $1 i64)
  (local $2 f32)
  (local $3 f64)
  (local $4 f32)
  (local $5 f32)
  (local $6 f64)
  (block
   (if
    (i32.eqz
     (get_global $hangLimit)
    )
    (return
     (get_local $0)
    )
   )
   (set_global $hangLimit
    (i32.sub
     (get_global $hangLimit)
     (i32.const 1)
    )
   )
  )
  (tee_local $0
   (get_local $0)
  )
 )
 (func $func_4_invoker (; 5 ;) (type $FUNCSIG$v)
  (drop
   (call $func_4)
  )
 )
 (func $func_6 (; 6 ;) (type $FUNCSIG$jj) (param $0 i64) (result i64)
  (block
   (if
    (i32.eqz
     (get_global $hangLimit)
    )
    (return
     (get_local $0)
    )
   )
   (set_global $hangLimit
    (i32.sub
     (get_global $hangLimit)
     (i32.const 1)
    )
   )
  )
  (block $label$0
   (loop $label$1
    (block
     (if
      (i32.eqz
       (get_global $hangLimit)
      )
      (return
       (get_local $0)
      )
     )
     (set_global $hangLimit
      (i32.sub
       (get_global $hangLimit)
       (i32.const 1)
      )
     )
    )
    (block $label$2
     (set_local $0
      (get_local $0)
     )
     (block $label$3
      (loop $label$4
       (block
        (if
         (i32.eqz
          (get_global $hangLimit)
         )
         (return
          (get_local $0)
         )
        )
        (set_global $hangLimit
         (i32.sub
          (get_global $hangLimit)
          (i32.const 1)
         )
        )
       )
       (block
        (block $label$5
         (nop)
         (block $label$6
          (block $label$7
           (nop)
          )
          (nop)
         )
        )
        (br_if $label$4
         (i32.eqz
          (i32.const -131072)
         )
        )
        (loop $label$8
         (block
          (if
           (i32.eqz
            (get_global $hangLimit)
           )
           (return
            (get_local $0)
           )
          )
          (set_global $hangLimit
           (i32.sub
            (get_global $hangLimit)
            (i32.const 1)
           )
          )
         )
         (block
          (block $label$9
           (nop)
           (nop)
          )
          (br_if $label$8
           (i32.const 503448323)
          )
          (nop)
         )
        )
       )
      )
      (nop)
     )
    )
   )
   (return
    (get_local $0)
   )
  )
 )
 (func $func_6_invoker (; 7 ;) (type $FUNCSIG$v)
  (drop
   (call $func_6
    (i64.const 84)
   )
  )
 )
 (func $func_8 (; 8 ;) (type $FUNCSIG$djdfj) (param $0 i64) (param $1 f64) (param $2 f32) (param $3 i64) (result f64)
  (local $4 i64)
  (local $5 f64)
  (local $6 i64)
  (local $7 i64)
  (local $8 f32)
  (local $9 f64)
  (local $10 i32)
  (local $11 i32)
  (local $12 f32)
  (local $13 f64)
  (local $14 i64)
  (local $15 f64)
  (local $16 f32)
  (block
   (if
    (i32.eqz
     (get_global $hangLimit)
    )
    (return
     (f64.const 1447493)
    )
   )
   (set_global $hangLimit
    (i32.sub
     (get_global $hangLimit)
     (i32.const 1)
    )
   )
  )
  (get_local $13)
 )
 (func $func_8_invoker (; 9 ;) (type $FUNCSIG$v)
  (drop
   (call $func_8
    (i64.const -21)
    (f64.const 68)
    (f32.const 46)
    (i64.const 2147483647)
   )
  )
  (drop
   (call $func_8
    (i64.const 6633823219601071112)
    (f64.const 4294967296)
    (f32.const 138)
    (i64.const -2097152)
   )
  )
  (drop
   (call $func_8
    (i64.const 218425741905435651)
    (f64.const 5.480934032015885e-294)
    (f32.const 18446744073709551615)
    (i64.const -95)
   )
  )
  (drop
   (call $func_8
    (i64.const 1125899906842624)
    (f64.const -nan:0xfffffffffffa3)
    (f32.const -nan:0x7fffa0)
    (i64.const 1048576)
   )
  )
 )
 (func $func_10 (; 10 ;) (type $FUNCSIG$i) (result i32)
  (local $0 f32)
  (local $1 i32)
  (block
   (if
    (i32.eqz
     (get_global $hangLimit)
    )
    (return
     (get_local $1)
    )
   )
   (set_global $hangLimit
    (i32.sub
     (get_global $hangLimit)
     (i32.const 1)
    )
   )
  )
  (i32.const 255)
 )
 (func $func_11 (; 11 ;) (type $FUNCSIG$jidjd) (param $0 i32) (param $1 f64) (param $2 i64) (param $3 f64) (result i64)
  (block
   (if
    (i32.eqz
     (get_global $hangLimit)
    )
    (return
     (get_local $2)
    )
   )
   (set_global $hangLimit
    (i32.sub
     (get_global $hangLimit)
     (i32.const 1)
    )
   )
  )
  (block $label$0
   (set_local $2
    (i64.const -127)
   )
   (return
    (get_local $2)
   )
  )
 )
 (func $func_11_invoker (; 12 ;) (type $FUNCSIG$v)
  (drop
   (call $func_11
    (i32.const 514)
    (f64.const -3402823466385288598117041e14)
    (i64.const 1152921504606846976)
    (f64.const 4294967295)
   )
  )
 )
 (func $func_13 (; 13 ;) (type $FUNCSIG$i) (result i32)
  (local $0 f32)
  (local $1 f32)
  (local $2 f64)
  (local $3 f64)
  (local $4 f32)
  (block
   (if
    (i32.eqz
     (get_global $hangLimit)
    )
    (return
     (i32.const -27)
    )
   )
   (set_global $hangLimit
    (i32.sub
     (get_global $hangLimit)
     (i32.const 1)
    )
   )
  )
  (i32.const -28)
 )
 (func $func_14 (; 14 ;) (type $FUNCSIG$jdjj) (param $0 f64) (param $1 i64) (param $2 i64) (result i64)
  (local $3 i64)
  (local $4 i32)
  (local $5 f64)
  (local $6 f64)
  (local $7 i32)
  (local $8 f32)
  (local $9 f32)
  (local $10 i32)
  (local $11 i64)
  (local $12 i64)
  (local $13 f64)
  (local $14 f32)
  (local $15 i32)
  (local $16 f32)
  (block
   (if
    (i32.eqz
     (get_global $hangLimit)
    )
    (return
     (get_local $3)
    )
   )
   (set_global $hangLimit
    (i32.sub
     (get_global $hangLimit)
     (i32.const 1)
    )
   )
  )
  (get_local $2)
 )
 (func $func_15 (; 15 ;) (result i32)
  (local $0 i64)
  (local $1 f32)
  (local $2 f64)
  (local $3 f32)
  (block
   (if
    (i32.eqz
     (get_global $hangLimit)
    )
    (return
     (i32.const 0)
    )
   )
   (set_global $hangLimit
    (i32.sub
     (get_global $hangLimit)
     (i32.const 1)
    )
   )
  )
  (i32.const -268435456)
 )
 (func $func_15_invoker (; 16 ;) (type $FUNCSIG$v)
  (drop
   (call $func_15)
  )
  (drop
   (call $func_15)
  )
  (drop
   (call $func_15)
  )
  (drop
   (call $func_15)
  )
 )
 (func $func_17 (; 17 ;) (type $FUNCSIG$vj) (param $0 i64)
  (local $1 f32)
  (local $2 f32)
  (local $3 i64)
  (block
   (if
    (i32.eqz
     (get_global $hangLimit)
    )
    (return)
   )
   (set_global $hangLimit
    (i32.sub
     (get_global $hangLimit)
     (i32.const 1)
    )
   )
  )
  (set_local $3
   (tee_local $0
    (tee_local $3
     (tee_local $3
      (i64.const 1764953782083851800)
     )
    )
   )
  )
 )
 (func $func_18 (; 18 ;)
  (local $0 i64)
  (local $1 i64)
  (local $2 f32)
  (local $3 f32)
  (local $4 f32)
  (local $5 f32)
  (local $6 f64)
  (local $7 i32)
  (local $8 i64)
  (local $9 i32)
  (local $10 f64)
  (block
   (if
    (i32.eqz
     (get_global $hangLimit)
    )
    (return)
   )
   (set_global $hangLimit
    (i32.sub
     (get_global $hangLimit)
     (i32.const 1)
    )
   )
  )
  (block $label$0
   (tee_local $6
    (tee_local $10
     (loop $label$1
      (block
       (if
        (i32.eqz
         (get_global $hangLimit)
        )
        (return)
       )
       (set_global $hangLimit
        (i32.sub
         (get_global $hangLimit)
         (i32.const 1)
        )
       )
      )
      (block $label$2
       (set_local $5
        (f32.const 2318)
       )
       (set_local $6
        (f64.const 2048)
       )
       (br $label$1)
      )
     )
    )
   )
   (loop $label$3
    (block
     (if
      (i32.eqz
       (get_global $hangLimit)
      )
      (return)
     )
     (set_global $hangLimit
      (i32.sub
       (get_global $hangLimit)
       (i32.const 1)
      )
     )
    )
    (loop $label$4
     (block
      (if
       (i32.eqz
        (get_global $hangLimit)
       )
       (return)
      )
      (set_global $hangLimit
       (i32.sub
        (get_global $hangLimit)
        (i32.const 1)
       )
      )
     )
     (block
      (set_local $7
       (get_local $7)
      )
      (br_if $label$4
       (i32.eqz
        (get_local $7)
       )
      )
      (set_local $9
       (i32.const 33554432)
      )
     )
    )
   )
  )
 )
 (func $func_19 (; 19 ;) (result i64)
  (local $0 f64)
  (local $1 i64)
  (local $2 i32)
  (local $3 i64)
  (block
   (if
    (i32.eqz
     (get_global $hangLimit)
    )
    (return
     (get_local $3)
    )
   )
   (set_global $hangLimit
    (i32.sub
     (get_global $hangLimit)
     (i32.const 1)
    )
   )
  )
  (get_local $3)
 )
 (func $func_19_invoker (; 20 ;) (type $FUNCSIG$v)
  (drop
   (call $func_19)
  )
  (drop
   (call $func_19)
  )
  (drop
   (call $func_19)
  )
  (drop
   (call $func_19)
  )
  (drop
   (call $func_19)
  )
  (drop
   (call $func_19)
  )
  (drop
   (call $func_19)
  )
  (drop
   (call $func_19)
  )
  (drop
   (call $func_19)
  )
  (drop
   (call $func_19)
  )
  (drop
   (call $func_19)
  )
  (drop
   (call $func_19)
  )
 )
 (func $func_21 (; 21 ;) (param $0 f32) (param $1 i32) (result f64)
  (local $2 i32)
  (block
   (if
    (i32.eqz
     (get_global $hangLimit)
    )
    (return
     (f64.const 1.401535863231004e-309)
    )
   )
   (set_global $hangLimit
    (i32.sub
     (get_global $hangLimit)
     (i32.const 1)
    )
   )
  )
  (f64.const 1.1754943508222875e-38)
 )
 (func $func_21_invoker (; 22 ;) (type $FUNCSIG$v)
  (drop
   (call $func_21
    (f32.const 2.7744057051748428e-12)
    (i32.const 1796439826)
   )
  )
  (drop
   (call $func_21
    (f32.const 7.722939387428522e-25)
    (i32.const 744579417)
   )
  )
 )
 (func $func_23 (; 23 ;) (type $FUNCSIG$jjjfi) (param $0 i64) (param $1 i64) (param $2 f32) (param $3 i32) (result i64)
  (local $4 f64)
  (local $5 i64)
  (local $6 i64)
  (local $7 f64)
  (local $8 f32)
  (local $9 f64)
  (local $10 f32)
  (local $11 i32)
  (local $12 i64)
  (local $13 f64)
  (local $14 f32)
  (local $15 f64)
  (block
   (if
    (i32.eqz
     (get_global $hangLimit)
    )
    (return
     (i64.const -5)
    )
   )
   (set_global $hangLimit
    (i32.sub
     (get_global $hangLimit)
     (i32.const 1)
    )
   )
  )
  (block $label$0
   (set_local $14
    (if (result f32)
     (get_local $11)
     (tee_local $8
      (tee_local $2
       (get_local $2)
      )
     )
     (block $label$2 (result f32)
      (set_local $3
       (loop $label$3 (result i32)
        (block
         (if
          (i32.eqz
           (get_global $hangLimit)
          )
          (return
           (get_local $0)
          )
         )
         (set_global $hangLimit
          (i32.sub
           (get_global $hangLimit)
           (i32.const 1)
          )
         )
        )
        (block (result i32)
         (block $label$4
          (set_local $12
           (tee_local $0
            (loop $label$5 (result i64)
             (block
              (if
               (i32.eqz
                (get_global $hangLimit)
               )
               (return
                (get_local $0)
               )
              )
              (set_global $hangLimit
               (i32.sub
                (get_global $hangLimit)
                (i32.const 1)
               )
              )
             )
             (block $label$6 (result i64)
              (get_local $12)
             )
            )
           )
          )
          (set_local $15
           (tee_local $7
            (f64.const 9223372036854775808)
           )
          )
         )
         (br_if $label$3
          (tee_local $11
           (loop $label$7 (result i32)
            (block
             (if
              (i32.eqz
               (get_global $hangLimit)
              )
              (return
               (get_local $6)
              )
             )
             (set_global $hangLimit
              (i32.sub
               (get_global $hangLimit)
               (i32.const 1)
              )
             )
            )
            (block (result i32)
             (set_local $6
              (i64.const 5714575686539624514)
             )
             (br_if $label$7
              (unreachable.atomic.load8_u offset=3
               (i32.and
                (block $label$8
                 (set_local $2
                  (get_local $8)
                 )
                 (return
                  (i64.const 2147483647)
                 )
                )
                (i32.const 15)
               )
              )
             )
             (if (result i32)
              (loop $label$16 (result i32)
               (block
                (if
                 (i32.eqz
                  (get_global $hangLimit)
                 )
                 (return
                  (i64.const -576460752303423488)
                 )
                )
                (set_global $hangLimit
                 (i32.sub
                  (get_global $hangLimit)
                  (i32.const 1)
                 )
                )
               )
               (tee_local $3
                (i32.const 536870912)
               )
              )
              (loop $label$19 (result i32)
               (block
                (if
                 (i32.eqz
                  (get_global $hangLimit)
                 )
                 (return
                  (get_local $12)
                 )
                )
                (set_global $hangLimit
                 (i32.sub
                  (get_global $hangLimit)
                  (i32.const 1)
                 )
                )
               )
               (call_indirect (type $FUNCSIG$i)
                (i32.const 4)
               )
              )
              (get_local $3)
             )
            )
           )
          )
         )
         (i32.const -81)
        )
       )
      )
      (tee_local $2
       (tee_local $10
        (tee_local $2
         (tee_local $8
          (tee_local $2
           (get_local $2)
          )
         )
        )
       )
      )
     )
    )
   )
   (return
    (i64.const 34412304)
   )
  )
 )
 (func $func_23_invoker (; 24 ;) (type $FUNCSIG$v)
  (drop
   (call $func_23
    (i64.const -106)
    (i64.const -18014398509481984)
    (f32.const 2.2076586046038517e-15)
    (i32.const 32767)
   )
  )
 )
 (func $func_25 (; 25 ;) (result i32)
  (local $0 i32)
  (local $1 f64)
  (local $2 i64)
  (local $3 f32)
  (local $4 f32)
  (local $5 f64)
  (local $6 i64)
  (local $7 i64)
  (local $8 i64)
  (local $9 f64)
  (local $10 f64)
  (local $11 i64)
  (local $12 f32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (block
   (if
    (i32.eqz
     (get_global $hangLimit)
    )
    (return
     (i32.const 171)
    )
   )
   (set_global $hangLimit
    (i32.sub
     (get_global $hangLimit)
     (i32.const 1)
    )
   )
  )
  (block $label$0 (result i32)
   (set_local $2
    (tee_local $11
     (get_local $7)
    )
   )
   (tee_local $14
    (get_local $13)
   )
  )
 )
 (func $func_25_invoker (; 26 ;) (type $FUNCSIG$v)
  (drop
   (call $func_25)
  )
  (drop
   (call $func_25)
  )
  (drop
   (call $func_25)
  )
 )
 (func $func_27 (; 27 ;) (type $FUNCSIG$v)
  (local $0 i32)
  (local $1 f32)
  (block
   (if
    (i32.eqz
     (get_global $hangLimit)
    )
    (return)
   )
   (set_global $hangLimit
    (i32.sub
     (get_global $hangLimit)
     (i32.const 1)
    )
   )
  )
  (set_local $0
   (if (result i32)
    (loop $label$0
     (block
      (if
       (i32.eqz
        (get_global $hangLimit)
       )
       (return)
      )
      (set_global $hangLimit
       (i32.sub
        (get_global $hangLimit)
        (i32.const 1)
       )
      )
     )
     (block
      (block $label$1
       (block $label$2
        (nop)
        (nop)
       )
       (set_local $0
        (i32.const 141585928)
       )
      )
      (br_if $label$0
       (tee_local $0
        (get_local $0)
       )
      )
      (loop $label$3
       (block
        (if
         (i32.eqz
          (get_global $hangLimit)
         )
         (return)
        )
        (set_global $hangLimit
         (i32.sub
          (get_global $hangLimit)
          (i32.const 1)
         )
        )
       )
       (block $label$4
        (nop)
        (br $label$0)
       )
      )
     )
    )
    (get_local $0)
    (call_indirect (type $FUNCSIG$i)
     (if (result i32)
      (if (result i32)
       (i32.eqz
        (i32.const -128)
       )
       (block $label$5
        (loop $label$6
         (block
          (if
           (i32.eqz
            (get_global $hangLimit)
           )
           (return)
          )
          (set_global $hangLimit
           (i32.sub
            (get_global $hangLimit)
            (i32.const 1)
           )
          )
         )
         (set_local $1
          (get_local $1)
         )
        )
        (return)
       )
       (block $label$10 (result i32)
        (nop)
        (tee_local $0
         (tee_local $0
          (tee_local $0
           (tee_local $0
            (i32.const 2)
           )
          )
         )
        )
       )
      )
      (if (result i32)
       (i32.eqz
        (tee_local $0
         (i32.const 32768)
        )
       )
       (i32.const 5596001)
       (if (result i32)
        (if (result i32)
         (i32.eqz
          (if (result i32)
           (if (result i32)
            (i32.eqz
             (if (result i32)
              (i32.eqz
               (if (result i32)
                (i32.eqz
                 (i32.const 2)
                )
                (get_local $0)
                (get_local $0)
               )
              )
              (get_local $0)
              (get_local $0)
             )
            )
            (tee_local $0
             (loop $label$12 (result i32)
              (block
               (if
                (i32.eqz
                 (get_global $hangLimit)
                )
                (return)
               )
               (set_global $hangLimit
                (i32.sub
                 (get_global $hangLimit)
                 (i32.const 1)
                )
               )
              )
              (block (result i32)
               (set_local $0
                (i32.const 1128481603)
               )
               (br_if $label$12
                (i32.eqz
                 (i32.const 4096)
                )
               )
               (i32.const -2147483647)
              )
             )
            )
            (block $label$13 (result i32)
             (if
              (block (result i32)
               (nop)
               (nop)
               (get_local $0)
              )
              (nop)
              (block $label$15
               (if
                (i32.eqz
                 (i32.const 19741)
                )
                (nop)
                (set_local $1
                 (f32.const 2147483648)
                )
               )
               (nop)
              )
             )
             (tee_local $0
              (tee_local $0
               (br_if $label$13
                (if (result i32)
                 (get_local $0)
                 (get_local $0)
                 (get_local $0)
                )
                (get_local $0)
               )
              )
             )
            )
           )
           (get_local $0)
           (i32.const 269685275)
          )
         )
         (i32.const -2147483648)
         (i32.const -28)
        )
        (i32.const -21)
        (get_local $0)
       )
      )
      (block $label$25 (result i32)
       (get_local $0)
      )
     )
    )
   )
  )
 )
 (func $hangLimitInitializer (; 28 ;)
  (set_global $hangLimit
   (i32.const 10)
  )
 )
 (func $deNan32 (; 29 ;) (param $0 f32) (result f32)
  (if (result f32)
   (f32.eq
    (get_local $0)
    (get_local $0)
   )
   (get_local $0)
   (f32.const 0)
  )
 )
 (func $deNan64 (; 30 ;) (param $0 f64) (result f64)
  (if (result f64)
   (f64.eq
    (get_local $0)
    (get_local $0)
   )
   (get_local $0)
   (f64.const 0)
  )
 )
)
