(module
 (global $hangLimit (mut i32) (i32.const 25))
 (memory $0 1 1)
 (export "func_0" (func $func_0))
 (export "func_1" (func $func_1))
 (export "func_2" (func $func_2))
 (export "func_3" (func $func_3))
 (export "hangLimitInitializer" (func $hangLimitInitializer))
 (func $func_0 (result i32)
  (local $0 f32)
  (local $1 i64)
  (local $2 f32)
  (block
   (if
    (i32.eqz
     (get_global $hangLimit)
    )
    (return
     (i32.const 1549747976)
    )
   )
   (set_global $hangLimit
    (i32.sub
     (get_global $hangLimit)
     (i32.const 1)
    )
   )
  )
  (block $label$0 (result i32)
   (block $label$1
    (block $label$2
     (i32.store offset=3 align=1
      (i32.and
       (select
        (i32.const 2147483647)
        (block $label$3 (result i32)
         (drop
          (loop $label$4 (result i64)
           (block
            (if
             (i32.eqz
              (get_global $hangLimit)
             )
             (return
              (i32.const -92)
             )
            )
            (set_global $hangLimit
             (i32.sub
              (get_global $hangLimit)
              (i32.const 1)
             )
            )
           )
           (i64.const 65454)
          )
         )
         (i32.store16 offset=3 align=1
          (i32.and
           (i32.trunc_u/f64
            (f64.const -nan:0xfffffffffffef)
           )
           (i32.const 255)
          )
          (if (result i32)
           (i32.eqz
            (i32.const 127)
           )
           (i32.const 151719179)
           (i32.const -95)
          )
         )
         (i32.const 55)
        )
        (i32.eqz
         (i32.const 86)
        )
       )
       (i32.const 255)
      )
      (i32.const 7710)
     )
     (f32.store offset=1
      (i32.and
       (block $label$5 (result i32)
        (return
         (i32.const -65)
        )
       )
       (i32.const 255)
      )
      (call $deNaN32
       (f32.div
        (tee_local $0
         (if (result f32)
          (i32.eqz
           (i32.const -1)
          )
          (get_local $2)
          (get_local $2)
         )
        )
        (call $deNaN32
         (f32.sqrt
          (tee_local $2
           (get_local $0)
          )
         )
        )
       )
      )
     )
     (br_if $label$1
      (loop $label$6 (result i32)
       (block
        (if
         (i32.eqz
          (get_global $hangLimit)
         )
         (return
          (i32.const 2147483647)
         )
        )
        (set_global $hangLimit
         (i32.sub
          (get_global $hangLimit)
          (i32.const 1)
         )
        )
       )
       (br_if $label$0
        (br_if $label$0
         (i32.const 127)
         (i32.const -114)
        )
        (i32.const 16)
       )
      )
     )
     (drop
      (loop $label$7 (result f64)
       (block
        (if
         (i32.eqz
          (get_global $hangLimit)
         )
         (return
          (i32.const 493248085)
         )
        )
        (set_global $hangLimit
         (i32.sub
          (get_global $hangLimit)
          (i32.const 1)
         )
        )
       )
       (block $label$8 (result f64)
        (return
         (i32.const 73)
        )
       )
      )
     )
     (loop $label$9
      (block
       (if
        (i32.eqz
         (get_global $hangLimit)
        )
        (return
         (i32.const -28)
        )
       )
       (set_global $hangLimit
        (i32.sub
         (get_global $hangLimit)
         (i32.const 1)
        )
       )
      )
      (block $label$10
       (loop $label$11
        (block
         (if
          (i32.eqz
           (get_global $hangLimit)
          )
          (return
           (i32.const 66)
          )
         )
         (set_global $hangLimit
          (i32.sub
           (get_global $hangLimit)
           (i32.const 1)
          )
         )
        )
        (i32.store offset=3
         (i32.and
          (select
           (if (result i32)
            (i32.const -128)
            (i32.const -108)
            (i32.const 3086)
           )
           (i32.load offset=2 align=2
            (i32.and
             (i32.const 2147483647)
             (i32.const 255)
            )
           )
           (br_if $label$0
            (select
             (loop $label$12 (result i32)
              (block
               (if
                (i32.eqz
                 (get_global $hangLimit)
                )
                (return
                 (i32.const 1836136820)
                )
               )
               (set_global $hangLimit
                (i32.sub
                 (get_global $hangLimit)
                 (i32.const 1)
                )
               )
              )
              (i32.const -86)
             )
             (i32.const -17)
             (i32.const 3864)
            )
            (i32.const 18184)
           )
          )
          (i32.const 255)
         )
         (i32.const 32767)
        )
       )
       (loop $label$13
        (block
         (if
          (i32.eqz
           (get_global $hangLimit)
          )
          (return
           (i32.const 144)
          )
         )
         (set_global $hangLimit
          (i32.sub
           (get_global $hangLimit)
           (i32.const 1)
          )
         )
        )
        (drop
         (i64.trunc_s/f64
          (call $deNaN64
           (select
            (f64.const 2.2250738585072014e-308)
            (f64.const 2.2250738585072014e-308)
            (i32.const 87563292)
           )
          )
         )
        )
       )
      )
     )
     (block $label$14
      (nop)
      (br_if $label$14
       (loop $label$15 (result i32)
        (block
         (if
          (i32.eqz
           (get_global $hangLimit)
          )
          (return
           (i32.const 208825972)
          )
         )
         (set_global $hangLimit
          (i32.sub
           (get_global $hangLimit)
           (i32.const 1)
          )
         )
        )
        (i32.trunc_u/f64
         (block $label$16 (result f64)
          (f64.const -9223372036854775808)
         )
        )
       )
      )
      (loop $label$17
       (block
        (if
         (i32.eqz
          (get_global $hangLimit)
         )
         (return
          (i32.const -54)
         )
        )
        (set_global $hangLimit
         (i32.sub
          (get_global $hangLimit)
          (i32.const 1)
         )
        )
       )
       (drop
        (call $deNaN32
         (select
          (call $deNaN32
           (select
            (loop $label$18 (result f32)
             (block
              (if
               (i32.eqz
                (get_global $hangLimit)
               )
               (return
                (i32.const -86)
               )
              )
              (set_global $hangLimit
               (i32.sub
                (get_global $hangLimit)
                (i32.const 1)
               )
              )
             )
             (f32.const 65513)
            )
            (f32.const 6.964631649175601e-10)
            (i32.const -75)
           )
          )
          (call $deNaN32
           (f32.demote/f64
            (f64.const 231)
           )
          )
          (i32.trunc_u/f64
           (f64.const 2.748793041132509e-226)
          )
         )
        )
       )
      )
      (br_if $label$1
       (i32.eqz
        (f32.ge
         (get_local $2)
         (get_local $2)
        )
       )
      )
     )
    )
    (drop
     (get_local $0)
    )
   )
   (return
    (i32.const -32768)
   )
  )
 )
 (func $func_1 (param $0 i64) (result i32)
  (local $1 f32)
  (block
   (if
    (i32.eqz
     (get_global $hangLimit)
    )
    (return
     (i32.const -6)
    )
   )
   (set_global $hangLimit
    (i32.sub
     (get_global $hangLimit)
     (i32.const 1)
    )
   )
  )
  (block $label$0 (result i32)
   (block $label$1
    (i64.store32 offset=4 align=1
     (i32.and
      (br_if $label$0
       (i32.const -33)
       (i32.const 255)
      )
      (i32.const 255)
     )
     (if (result i64)
      (i32.const 127)
      (block $label$2 (result i64)
       (if
        (i64.eq
         (loop $label$3 (result i64)
          (block
           (if
            (i32.eqz
             (get_global $hangLimit)
            )
            (return
             (i32.const -88)
            )
           )
           (set_global $hangLimit
            (i32.sub
             (get_global $hangLimit)
             (i32.const 1)
            )
           )
          )
          (i64.xor
           (i64.const 4199395878282349900)
           (loop $label$4 (result i64)
            (block
             (if
              (i32.eqz
               (get_global $hangLimit)
              )
              (return
               (i32.const 11)
              )
             )
             (set_global $hangLimit
              (i32.sub
               (get_global $hangLimit)
               (i32.const 1)
              )
             )
            )
            (get_local $0)
           )
          )
         )
         (i64.popcnt
          (i64.const -84)
         )
        )
        (block $label$5
         (block $label$6
          (loop $label$7
           (block
            (if
             (i32.eqz
              (get_global $hangLimit)
             )
             (return
              (i32.const 12078)
             )
            )
            (set_global $hangLimit
             (i32.sub
              (get_global $hangLimit)
              (i32.const 1)
             )
            )
           )
           (if
            (i32.const -1)
            (nop)
            (nop)
           )
          )
          (i64.store8 offset=2
           (i32.const 251921733)
           (i64.load8_u offset=4
            (i32.and
             (i32.const 255)
             (i32.const 255)
            )
           )
          )
         )
         (drop
          (i32.const 19024)
         )
        )
        (i32.store8
         (i32.and
          (block $label$8 (result i32)
           (nop)
           (i32.const -2147483648)
          )
          (i32.const 255)
         )
         (i32.const 54744836)
        )
       )
       (i64.load32_u offset=22
        (i32.and
         (i32.const 65499)
         (i32.const 255)
        )
       )
      )
      (i64.div_s
       (i64.popcnt
        (if (result i64)
         (i32.const 47)
         (block $label$9 (result i64)
          (loop $label$10
           (block
            (if
             (i32.eqz
              (get_global $hangLimit)
             )
             (return
              (i32.const -1)
             )
            )
            (set_global $hangLimit
             (i32.sub
              (get_global $hangLimit)
              (i32.const 1)
             )
            )
           )
           (nop)
          )
          (i64.load32_u offset=3
           (i32.and
            (select
             (i32.const -101)
             (select
              (i32.const 403837462)
              (i32.wrap/i64
               (i64.const 8103462735035788396)
              )
              (i32.const 168)
             )
             (br_if $label$0
              (i32.const 286484496)
              (i32.eqz
               (i32.reinterpret/f32
                (f32.const -nan:0x7fffb9)
               )
              )
             )
            )
            (i32.const 255)
           )
          )
         )
         (block $label$11 (result i64)
          (return
           (i32.const -2147483648)
          )
         )
        )
       )
       (block $label$12 (result i64)
        (if
         (i32.const 10556)
         (block $label$13
          (br_if $label$1
           (i32.eqz
            (i32.const -65)
           )
          )
         )
         (br_if $label$1
          (i32.eqz
           (select
            (loop $label$14 (result i32)
             (block
              (if
               (i32.eqz
                (get_global $hangLimit)
               )
               (return
                (i32.const 1192691220)
               )
              )
              (set_global $hangLimit
               (i32.sub
                (get_global $hangLimit)
                (i32.const 1)
               )
              )
             )
             (i32.const 319951636)
            )
            (i32.const 65535)
            (i32.const 0)
           )
          )
         )
        )
        (i32.store16 offset=3
         (i32.and
          (i64.eq
           (get_local $0)
           (get_local $0)
          )
          (i32.const 255)
         )
         (if (result i32)
          (i32.eqz
           (block $label$15 (result i32)
            (nop)
            (br $label$1)
           )
          )
          (i32.const -78)
          (i32.const 255)
         )
        )
        (block $label$16
         (br_if $label$1
          (i32.eqz
           (i32.const -20)
          )
         )
         (block $label$17
          (nop)
         )
        )
        (if
         (i32.eqz
          (i32.const 370834461)
         )
         (block $label$18
          (br_if $label$18
           (i32.eqz
            (loop $label$19 (result i32)
             (block
              (if
               (i32.eqz
                (get_global $hangLimit)
               )
               (return
                (i32.const 1913722476)
               )
              )
              (set_global $hangLimit
               (i32.sub
                (get_global $hangLimit)
                (i32.const 1)
               )
              )
             )
             (i32.const -59)
            )
           )
          )
         )
         (block $label$20
          (br_if $label$1
           (i32.const -21)
          )
         )
        )
        (if
         (i32.const -2147483648)
         (block $label$21
          (loop $label$22
           (block
            (if
             (i32.eqz
              (get_global $hangLimit)
             )
             (return
              (i32.const 303371799)
             )
            )
            (set_global $hangLimit
             (i32.sub
              (get_global $hangLimit)
              (i32.const 1)
             )
            )
           )
           (nop)
          )
          (nop)
         )
         (nop)
        )
        (return
         (i32.const -68)
        )
       )
      )
     )
    )
   )
   (select
    (i32.const 0)
    (br_if $label$0
     (loop $label$23 (result i32)
      (block
       (if
        (i32.eqz
         (get_global $hangLimit)
        )
        (return
         (i32.const -128)
        )
       )
       (set_global $hangLimit
        (i32.sub
         (get_global $hangLimit)
         (i32.const 1)
        )
       )
      )
      (br_if $label$0
       (if (result i32)
        (i32.eqz
         (if (result i32)
          (i32.eqz
           (i32.const 20302)
          )
          (block $label$24 (result i32)
           (br $label$23)
          )
          (loop $label$25 (result i32)
           (block
            (if
             (i32.eqz
              (get_global $hangLimit)
             )
             (return
              (i32.const 242552161)
             )
            )
            (set_global $hangLimit
             (i32.sub
              (get_global $hangLimit)
              (i32.const 1)
             )
            )
           )
           (loop $label$26 (result i32)
            (block
             (if
              (i32.eqz
               (get_global $hangLimit)
              )
              (return
               (i32.const 26643)
              )
             )
             (set_global $hangLimit
              (i32.sub
               (get_global $hangLimit)
               (i32.const 1)
              )
             )
            )
            (loop $label$27 (result i32)
             (block
              (if
               (i32.eqz
                (get_global $hangLimit)
               )
               (return
                (i32.const -1)
               )
              )
              (set_global $hangLimit
               (i32.sub
                (get_global $hangLimit)
                (i32.const 1)
               )
              )
             )
             (i32.const -20)
            )
           )
          )
         )
        )
        (block $label$28 (result i32)
         (br $label$23)
        )
        (block $label$29 (result i32)
         (br $label$23)
        )
       )
       (i32.eqz
        (br_if $label$0
         (i32.const 65535)
         (i32.eqz
          (i32.const -111)
         )
        )
       )
      )
     )
     (i32.const 65535)
    )
    (br_if $label$0
     (i32.const 76)
     (i32.const 32767)
    )
   )
  )
 )
 (func $func_2 (result f64)
  (local $0 f64)
  (local $1 i32)
  (local $2 i64)
  (block
   (if
    (i32.eqz
     (get_global $hangLimit)
    )
    (return
     (f64.const 18236)
    )
   )
   (set_global $hangLimit
    (i32.sub
     (get_global $hangLimit)
     (i32.const 1)
    )
   )
  )
  (block $label$0 (result f64)
   (loop $label$1
    (block
     (if
      (i32.eqz
       (get_global $hangLimit)
      )
      (return
       (f64.const 1.8418436935774926e-191)
      )
     )
     (set_global $hangLimit
      (i32.sub
       (get_global $hangLimit)
       (i32.const 1)
      )
     )
    )
    (block $label$2
     (block $label$3
      (block $label$4
       (set_local $2
        (tee_local $2
         (get_local $2)
        )
       )
      )
     )
    )
   )
   (set_local $1
    (i32.load16_s offset=22 align=1
     (i32.and
      (i32.trunc_u/f32
       (call $deNaN32
        (f32.div
         (call $deNaN32
          (f32.mul
           (f32.load offset=4
            (i32.and
             (tee_local $1
              (call $func_1
               (i64.const 6709058660817848670)
              )
             )
             (i32.const 255)
            )
           )
           (f32.const 65523)
          )
         )
         (f32.const 179)
        )
       )
      )
      (i32.const 255)
     )
    )
   )
   (return
    (f64.const 11)
   )
  )
 )
 (func $func_3
  (block
   (if
    (i32.eqz
     (get_global $hangLimit)
    )
    (return)
   )
   (set_global $hangLimit
    (i32.sub
     (get_global $hangLimit)
     (i32.const 1)
    )
   )
  )
  (block $label$0
   (f32.store offset=4 align=1
    (i32.and
     (block $label$1 (result i32)
      (loop $label$2
       (block
        (if
         (i32.eqz
          (get_global $hangLimit)
         )
         (return)
        )
        (set_global $hangLimit
         (i32.sub
          (get_global $hangLimit)
          (i32.const 1)
         )
        )
       )
       (block $label$3
        (block $label$4
         (if
          (block $label$5 (result i32)
           (return)
          )
          (block $label$6
           (block $label$7
            (drop
             (i64.const -128)
            )
            (nop)
           )
           (if
            (if (result i32)
             (i32.eqz
              (if (result i32)
               (block $label$8 (result i32)
                (i32.const 32767)
               )
               (if (result i32)
                (i32.eqz
                 (i32.const 32767)
                )
                (i32.const 255)
                (i32.const 6939)
               )
               (br_if $label$1
                (block $label$9 (result i32)
                 (br $label$2)
                )
                (i32.eqz
                 (i32.const -72)
                )
               )
              )
             )
             (i32.const 11)
             (i32.const -1)
            )
            (i64.store16 offset=1
             (i32.and
              (i32.const 1)
              (i32.const 255)
             )
             (i64.const -81)
            )
            (nop)
           )
           (f32.store offset=4 align=1
            (i32.and
             (i32.const 255)
             (i32.const 255)
            )
            (f32.const 4294967296)
           )
           (drop
            (i32.const 23307)
           )
           (nop)
           (nop)
          )
          (block $label$10
           (f64.store offset=3 align=1
            (i32.and
             (i32.trunc_s/f64
              (f64.const -68)
             )
             (i32.const 255)
            )
            (f64.const 3.4181245569228934e-265)
           )
           (nop)
          )
         )
        )
        (block $label$11
         (nop)
        )
       )
      )
      (i64.store16 offset=3 align=1
       (i32.and
        (f64.eq
         (call $func_2)
         (f64.load offset=4 align=4
          (i32.and
           (if (result i32)
            (if (result i32)
             (i32.eqz
              (i32.const 1)
             )
             (br_if $label$1
              (i32.const -41)
              (i32.eqz
               (i32.const 5128)
              )
             )
             (i32.const 32767)
            )
            (block $label$12 (result i32)
             (nop)
             (return)
            )
            (block $label$13 (result i32)
             (drop
              (f64.const -nan:0xfffffffffffad)
             )
             (br $label$0)
            )
           )
           (i32.const 255)
          )
         )
        )
        (i32.const 255)
       )
       (block $label$14 (result i64)
        (nop)
        (return)
       )
      )
      (if
       (loop $label$15 (result i32)
        (block
         (if
          (i32.eqz
           (get_global $hangLimit)
          )
          (return)
         )
         (set_global $hangLimit
          (i32.sub
           (get_global $hangLimit)
           (i32.const 1)
          )
         )
        )
        (block $label$16 (result i32)
         (br_if $label$15
          (i32.eqz
           (i32.const 127)
          )
         )
         (return)
        )
       )
       (drop
        (i64.const 15)
       )
       (block $label$17
        (if
         (i32.load16_s offset=1 align=1
          (i32.and
           (i32.const -73)
           (i32.const 255)
          )
         )
         (block $label$18
          (f64.store offset=4 align=4
           (call $func_0)
           (loop $label$19 (result f64)
            (block
             (if
              (i32.eqz
               (get_global $hangLimit)
              )
              (return)
             )
             (set_global $hangLimit
              (i32.sub
               (get_global $hangLimit)
               (i32.const 1)
              )
             )
            )
            (loop $label$20 (result f64)
             (block
              (if
               (i32.eqz
                (get_global $hangLimit)
               )
               (return)
              )
              (set_global $hangLimit
               (i32.sub
                (get_global $hangLimit)
                (i32.const 1)
               )
              )
             )
             (f64.const 6.12838990811359e-139)
            )
           )
          )
         )
         (block $label$21
          (if
           (i32.const -128)
           (block $label$22
            (if
             (loop $label$23 (result i32)
              (block
               (if
                (i32.eqz
                 (get_global $hangLimit)
                )
                (return)
               )
               (set_global $hangLimit
                (i32.sub
                 (get_global $hangLimit)
                 (i32.const 1)
                )
               )
              )
              (i32.shr_u
               (i32.const 9565)
               (i32.const 32767)
              )
             )
             (block $label$24
              (i64.store offset=3 align=2
               (i32.and
                (i32.const 32767)
                (i32.const 255)
               )
               (block $label$25 (result i64)
                (br $label$17)
               )
              )
             )
             (block $label$26
              (block $label$27
               (nop)
              )
              (br_if $label$17
               (i32.const -32768)
              )
              (call $func_3)
             )
            )
            (loop $label$28
             (block
              (if
               (i32.eqz
                (get_global $hangLimit)
               )
               (return)
              )
              (set_global $hangLimit
               (i32.sub
                (get_global $hangLimit)
                (i32.const 1)
               )
              )
             )
             (nop)
            )
            (br_if $label$0
             (br_if $label$1
              (i32.const 493184283)
              (block $label$29 (result i32)
               (br $label$21)
              )
             )
            )
            (nop)
           )
           (block $label$30
            (block $label$31
             (loop $label$32
              (block
               (if
                (i32.eqz
                 (get_global $hangLimit)
                )
                (return)
               )
               (set_global $hangLimit
                (i32.sub
                 (get_global $hangLimit)
                 (i32.const 1)
                )
               )
              )
              (nop)
             )
            )
           )
          )
          (nop)
          (drop
           (f32.const -nan:0x7fff89)
          )
          (block $label$33
           (drop
            (block $label$34 (result i64)
             (br $label$33)
            )
           )
           (nop)
          )
         )
        )
       )
      )
      (br_if $label$0
       (i32.eqz
        (i64.lt_u
         (i64.trunc_s/f64
          (f64.load offset=3 align=1
           (i32.and
            (f32.gt
             (f32.const -55)
             (f32.const 1177766386007422271488)
            )
            (i32.const 255)
           )
          )
         )
         (i64.const 4639389774574258798)
        )
       )
      )
      (loop $label$35
       (block
        (if
         (i32.eqz
          (get_global $hangLimit)
         )
         (return)
        )
        (set_global $hangLimit
         (i32.sub
          (get_global $hangLimit)
          (i32.const 1)
         )
        )
       )
       (br_if $label$35
        (i32.const 2147483647)
       )
      )
      (nop)
      (if (result i32)
       (i32.eqz
        (loop $label$36 (result i32)
         (block
          (if
           (i32.eqz
            (get_global $hangLimit)
           )
           (return)
          )
          (set_global $hangLimit
           (i32.sub
            (get_global $hangLimit)
            (i32.const 1)
           )
          )
         )
         (i64.gt_s
          (i64.extend_u/i32
           (f64.eq
            (f64.const 26984)
            (f64.const 1.1754943508222875e-38)
           )
          )
          (i64.const 7349880141002845199)
         )
        )
       )
       (block $label$37 (result i32)
        (br_if $label$0
         (i32.eqz
          (i32.const 2100571699)
         )
        )
        (return)
       )
       (block $label$38 (result i32)
        (loop $label$39
         (block
          (if
           (i32.eqz
            (get_global $hangLimit)
           )
           (return)
          )
          (set_global $hangLimit
           (i32.sub
            (get_global $hangLimit)
            (i32.const 1)
           )
          )
         )
         (block $label$40
          (i32.store8 offset=4
           (i32.and
            (i32.const 27)
            (i32.const 255)
           )
           (i32.const -32768)
          )
         )
        )
        (i32.const 10)
       )
      )
     )
     (i32.const 255)
    )
    (f32.const 2147483648)
   )
  )
 )
 (func $hangLimitInitializer
  (set_global $hangLimit
   (i32.const 25)
  )
 )
 (func $deNaN32 (param $0 f32) (result f32)
  (if (result f32)
   (f32.eq
    (get_local $0)
    (get_local $0)
   )
   (get_local $0)
   (f32.const 0)
  )
 )
 (func $deNaN64 (param $0 f64) (result f64)
  (if (result f64)
   (f64.eq
    (get_local $0)
    (get_local $0)
   )
   (get_local $0)
   (f64.const 0)
  )
 )
)
