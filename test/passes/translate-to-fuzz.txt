(module
 (type $FUNCSIG$i (func (result i32)))
 (type $FUNCSIG$dd (func (param f64) (result f64)))
 (memory $0 (shared 1 1))
 (data (i32.const 0) "n\00\05E\00\00\00\00")
 (table $0 0 0 anyfunc)
 (global $global$0 (mut f32) (f32.const 536870912))
 (global $global$1 (mut f32) (f32.const 2147483648))
 (global $global$2 (mut f64) (f64.const -1048576))
 (global $global$3 (mut f64) (f64.const 23643))
 (global $hangLimit (mut i32) (i32.const 10))
 (export "func_0" (func $func_0))
 (export "func_2" (func $func_2))
 (export "hangLimitInitializer" (func $hangLimitInitializer))
 (func $func_0 (; 0 ;) (type $FUNCSIG$i) (result i32)
  (local $0 i32)
  (local $1 i64)
  (local $2 f32)
  (local $3 f64)
  (local $4 f32)
  (local $5 f32)
  (local $6 f64)
  (block
   (if
    (i32.eqz
     (get_global $hangLimit)
    )
    (return
     (get_local $0)
    )
   )
   (set_global $hangLimit
    (i32.sub
     (get_global $hangLimit)
     (i32.const 1)
    )
   )
  )
  (tee_local $0
   (get_local $0)
  )
 )
 (func $func_1 (; 1 ;) (param $0 i64) (param $1 i32) (param $2 f32) (param $3 i32) (param $4 i32) (param $5 i64) (param $6 i32)
  (block
   (if
    (i32.eqz
     (get_global $hangLimit)
    )
    (return)
   )
   (set_global $hangLimit
    (i32.sub
     (get_global $hangLimit)
     (i32.const 1)
    )
   )
  )
  (drop
   (i32.atomic.store16 offset=22
    (return)
    (get_local $1)
   )
  )
 )
 (func $func_2 (; 2 ;) (type $FUNCSIG$dd) (param $0 f64) (result f64)
  (local $1 i64)
  (local $2 f32)
  (local $3 i64)
  (local $4 i64)
  (local $5 f64)
  (local $6 i64)
  (local $7 f32)
  (block
   (if
    (i32.eqz
     (get_global $hangLimit)
    )
    (return
     (f64.const -118)
    )
   )
   (set_global $hangLimit
    (i32.sub
     (get_global $hangLimit)
     (i32.const 1)
    )
   )
  )
  (block $label$0
   (nop)
   (return
    (get_local $0)
   )
  )
 )
 (func $func_3 (; 3 ;) (param $0 f32) (param $1 f32) (param $2 f32) (param $3 i64) (param $4 i64) (result f32)
  (local $5 i32)
  (local $6 f64)
  (local $7 f32)
  (local $8 f64)
  (block
   (if
    (i32.eqz
     (get_global $hangLimit)
    )
    (return
     (get_local $0)
    )
   )
   (set_global $hangLimit
    (i32.sub
     (get_global $hangLimit)
     (i32.const 1)
    )
   )
  )
  (loop $label$0
   (block
    (if
     (i32.eqz
      (get_global $hangLimit)
     )
     (return
      (get_local $7)
     )
    )
    (set_global $hangLimit
     (i32.sub
      (get_global $hangLimit)
      (i32.const 1)
     )
    )
   )
   (block
    (block $label$1
     (if
      (i32.eqz
       (if (result i32)
        (block $label$2
         (block $label$3
          (set_local $4
           (i64.const -36028797018963968)
          )
          (br_if $label$1
           (loop $label$59 (result i32)
            (block
             (if
              (i32.eqz
               (get_global $hangLimit)
              )
              (return
               (f32.const 10284)
              )
             )
             (set_global $hangLimit
              (i32.sub
               (get_global $hangLimit)
               (i32.const 1)
              )
             )
            )
            (block (result i32)
             (set_local $5
              (get_local $5)
             )
             (br_if $label$59
              (if (result i32)
               (if (result i32)
                (get_local $5)
                (i32.const 94)
                (i32.const -16777216)
               )
               (i32.const 19)
               (get_local $5)
              )
             )
             (if (result i32)
              (i32.const -104)
              (loop $label$60 (result i32)
               (block
                (if
                 (i32.eqz
                  (get_global $hangLimit)
                 )
                 (return
                  (f32.const -32768)
                 )
                )
                (set_global $hangLimit
                 (i32.sub
                  (get_global $hangLimit)
                  (i32.const 1)
                 )
                )
               )
               (i32.const 131072)
              )
              (get_local $5)
             )
            )
           )
          )
         )
         (br $label$0)
        )
        (block $label$9 (result i32)
         (set_local $5
          (i32.const 1025652267)
         )
         (set_local $1
          (tee_local $1
           (get_local $2)
          )
         )
         (i32.const 16384)
        )
        (block $label$15
         (tee_local $5
          (loop $label$20
           (block
            (if
             (i32.eqz
              (get_global $hangLimit)
             )
             (return
              (f32.const -1)
             )
            )
            (set_global $hangLimit
             (i32.sub
              (get_global $hangLimit)
              (i32.const 1)
             )
            )
           )
           (block $label$21
            (br $label$1)
           )
          )
         )
         (return
          (get_local $1)
         )
        )
       )
      )
      (tee_local $8
       (block $label$16
        (loop $label$17
         (block
          (if
           (i32.eqz
            (get_global $hangLimit)
           )
           (return
            (f32.const 5140)
           )
          )
          (set_global $hangLimit
           (i32.sub
            (get_global $hangLimit)
            (i32.const 1)
           )
          )
         )
         (block
          (set_local $4
           (loop $label$18 (result i64)
            (block
             (if
              (i32.eqz
               (get_global $hangLimit)
              )
              (return
               (get_local $2)
              )
             )
             (set_global $hangLimit
              (i32.sub
               (get_global $hangLimit)
               (i32.const 1)
              )
             )
            )
            (tee_local $4
             (i64.const 386145560)
            )
           )
          )
          (br_if $label$17
           (tee_local $5
            (i32.trunc_s/f64
             (if
              (i32.eqz
               (block $label$25
                (set_local $0
                 (if (result f32)
                  (i32.eqz
                   (if (result i32)
                    (get_local $5)
                    (i32.const 125)
                    (get_local $5)
                   )
                  )
                  (f32.const 4406)
                  (loop $label$14 (result f32)
                   (block
                    (if
                     (i32.eqz
                      (get_global $hangLimit)
                     )
                     (return
                      (f32.const -3402823466385288598117041e14)
                     )
                    )
                    (set_global $hangLimit
                     (i32.sub
                      (get_global $hangLimit)
                      (i32.const 1)
                     )
                    )
                   )
                   (get_local $2)
                  )
                 )
                )
                (return
                 (get_local $1)
                )
               )
              )
              (block $label$27
               (set_local $5
                (i32.const 1025652267)
               )
               (br $label$1)
              )
              (block $label$28
               (br $label$1)
              )
             )
            )
           )
          )
          (br_if $label$0
           (i32.eqz
            (tee_local $5
             (i32.const 471604252)
            )
           )
          )
         )
        )
        (br $label$1)
       )
      )
      (block $label$29
       (set_local $5
        (i32.const 16777217)
       )
       (set_local $0
        (call $func_3
         (get_local $7)
         (get_local $2)
         (if (result f32)
          (i32.eqz
           (call $func_0)
          )
          (f32.const -3402823466385288598117041e14)
          (block $label$30
           (set_local $5
            (tee_local $5
             (tee_local $5
              (tee_local $5
               (tee_local $5
                (i32.const 15)
               )
              )
             )
            )
           )
           (br $label$29)
          )
         )
         (tee_local $3
          (loop $label$31 (result i64)
           (block
            (if
             (i32.eqz
              (get_global $hangLimit)
             )
             (return
              (get_local $2)
             )
            )
            (set_global $hangLimit
             (i32.sub
              (get_global $hangLimit)
              (i32.const 1)
             )
            )
           )
           (block $label$32 (result i64)
            (set_local $5
             (i32.const 550)
            )
            (get_local $3)
           )
          )
         )
         (tee_local $3
          (get_local $3)
         )
        )
       )
      )
     )
     (set_local $4
      (i64.const 577410030337349210)
     )
    )
    (br_if $label$0
     (i32.eqz
      (loop $label$83 (result i32)
       (block
        (if
         (i32.eqz
          (get_global $hangLimit)
         )
         (return
          (get_local $0)
         )
        )
        (set_global $hangLimit
         (i32.sub
          (get_global $hangLimit)
          (i32.const 1)
         )
        )
       )
       (block (result i32)
        (set_local $1
         (f32.const 4496741634840417934247649e6)
        )
        (br_if $label$83
         (i32.eqz
          (tee_local $5
           (tee_local $5
            (i32.const 20)
           )
          )
         )
        )
        (get_local $5)
       )
      )
     )
    )
    (unreachable)
   )
  )
 )
 (func $hangLimitInitializer (; 4 ;)
  (set_global $hangLimit
   (i32.const 10)
  )
 )
 (func $deNan32 (; 5 ;) (param $0 f32) (result f32)
  (if (result f32)
   (f32.eq
    (get_local $0)
    (get_local $0)
   )
   (get_local $0)
   (f32.const 0)
  )
 )
 (func $deNan64 (; 6 ;) (param $0 f64) (result f64)
  (if (result f64)
   (f64.eq
    (get_local $0)
    (get_local $0)
   )
   (get_local $0)
   (f64.const 0)
  )
 )
)
