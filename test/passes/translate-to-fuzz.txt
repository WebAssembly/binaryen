(module
 (global $hangLimit (mut i32) (i32.const 0))
 (memory $0 1 1)
 (export "func_0" (func $func_0))
 (export "func_1" (func $func_1))
 (export "func_2" (func $func_2))
 (export "hangLimitInitializer" (func $hangLimitInitializer))
 (func $func_0 (param $0 i32) (result i32)
  (local $1 f32)
  (local $2 f64)
  (local $3 i64)
  (block
   (if
    (i32.eqz
     (get_global $hangLimit)
    )
    (return
     (i32.const -60)
    )
   )
   (set_global $hangLimit
    (i32.sub
     (get_global $hangLimit)
     (i32.const 1)
    )
   )
  )
  (block $label$0 (result i32)
   (i32.const -9)
  )
 )
 (func $func_1 (param $0 f64) (param $1 i32) (result i32)
  (block
   (if
    (i32.eqz
     (get_global $hangLimit)
    )
    (return
     (i32.const -66)
    )
   )
   (set_global $hangLimit
    (i32.sub
     (get_global $hangLimit)
     (i32.const 1)
    )
   )
  )
  (block $label$0 (result i32)
   (if
    (i32.eqz
     (i64.lt_s
      (i64.const -1)
      (i64.const 2147483647)
     )
    )
    (block $label$1
     (drop
      (select
       (block $label$2 (result f32)
        (set_local $0
         (get_local $0)
        )
        (if (result f32)
         (i32.eqz
          (get_local $1)
         )
         (f32.const 9.112974216657788e-15)
         (f32.load offset=22 align=2
          (i32.and
           (i32.const 4)
           (i32.const 255)
          )
         )
        )
       )
       (f32.const -41)
       (get_local $1)
      )
     )
     (nop)
     (block $label$3
      (nop)
      (loop $label$4
       (block
        (if
         (i32.eqz
          (get_global $hangLimit)
         )
         (return
          (i32.const 255)
         )
        )
        (set_global $hangLimit
         (i32.sub
          (get_global $hangLimit)
          (i32.const 1)
         )
        )
       )
       (block $label$5
        (nop)
        (nop)
       )
      )
     )
    )
    (block $label$6
     (loop $label$7
      (block
       (if
        (i32.eqz
         (get_global $hangLimit)
        )
        (return
         (i32.const -41)
        )
       )
       (set_global $hangLimit
        (i32.sub
         (get_global $hangLimit)
         (i32.const 1)
        )
       )
      )
      (if
       (i32.load offset=4 align=1
        (i32.and
         (i32.const -1)
         (i32.const 255)
        )
       )
       (set_local $1
        (get_local $1)
       )
       (nop)
      )
     )
     (drop
      (f32.const 9223372036854775808)
     )
     (drop
      (f64.load offset=22 align=4
       (i32.and
        (i32.const -66)
        (i32.const 255)
       )
      )
     )
    )
   )
   (if
    (i32.const 1)
    (block $label$8
     (loop $label$9
      (block
       (if
        (i32.eqz
         (get_global $hangLimit)
        )
        (return
         (i32.const 0)
        )
       )
       (set_global $hangLimit
        (i32.sub
         (get_global $hangLimit)
         (i32.const 1)
        )
       )
      )
      (block $label$10
       (drop
        (f32.const 9223372036854775808)
       )
       (loop $label$11
        (block
         (if
          (i32.eqz
           (get_global $hangLimit)
          )
          (return
           (i32.const -32768)
          )
         )
         (set_global $hangLimit
          (i32.sub
           (get_global $hangLimit)
           (i32.const 1)
          )
         )
        )
        (set_local $1
         (i32.const 129)
        )
       )
       (if
        (i32.eqz
         (select
          (i32.const -81)
          (get_local $1)
          (tee_local $1
           (get_local $1)
          )
         )
        )
        (block $label$12
         (i64.store32 offset=3
          (i32.and
           (i32.const 127)
           (i32.const 255)
          )
          (i64.const -6)
         )
         (br_if $label$9
          (i32.eqz
           (block $label$13 (result i32)
            (br $label$9)
           )
          )
         )
        )
        (set_local $0
         (get_local $0)
        )
       )
      )
     )
     (if
      (loop $label$14 (result i32)
       (block
        (if
         (i32.eqz
          (get_global $hangLimit)
         )
         (return
          (i32.const -79)
         )
        )
        (set_global $hangLimit
         (i32.sub
          (get_global $hangLimit)
          (i32.const 1)
         )
        )
       )
       (i32.const 127)
      )
      (nop)
      (block $label$15
       (drop
        (f64.const 119)
       )
      )
     )
    )
    (block $label$16
     (f32.store offset=4 align=1
      (i32.and
       (if (result i32)
        (i32.eqz
         (tee_local $1
          (i32.const 690300710)
         )
        )
        (block $label$17 (result i32)
         (nop)
         (i32.const -128)
        )
        (i32.const 65458)
       )
       (i32.const 255)
      )
      (f32.div
       (f32.load offset=22 align=1
        (i32.and
         (i32.const -115)
         (i32.const 255)
        )
       )
       (f32.const 3932)
      )
     )
     (block $label$18
      (set_local $0
       (f64.const 1)
      )
     )
     (if
      (get_local $1)
      (block $label$19
       (block $label$20
        (nop)
        (br_if $label$20
         (i32.eqz
          (i32.const -110)
         )
        )
       )
       (loop $label$21
        (block
         (if
          (i32.eqz
           (get_global $hangLimit)
          )
          (return
           (i32.const 32767)
          )
         )
         (set_global $hangLimit
          (i32.sub
           (get_global $hangLimit)
           (i32.const 1)
          )
         )
        )
        (drop
         (i32.const -128)
        )
       )
       (set_local $0
        (select
         (f64.const 4294967295)
         (get_local $0)
         (get_local $1)
        )
       )
      )
      (block $label$22
       (f64.store offset=22 align=4
        (i32.and
         (tee_local $1
          (i32.const -1)
         )
         (i32.const 255)
        )
        (tee_local $0
         (f64.const 4294967295)
        )
       )
       (br_if $label$22
        (i32.eqz
         (loop $label$23 (result i32)
          (block
           (if
            (i32.eqz
             (get_global $hangLimit)
            )
            (return
             (i32.const 68)
            )
           )
           (set_global $hangLimit
            (i32.sub
             (get_global $hangLimit)
             (i32.const 1)
            )
           )
          )
          (get_local $1)
         )
        )
       )
      )
     )
     (i32.store16 offset=3
      (i32.and
       (if (result i32)
        (i32.const 65508)
        (get_local $1)
        (i32.load16_s offset=2 align=1
         (i32.and
          (i32.const -34)
          (i32.const 255)
         )
        )
       )
       (i32.const 255)
      )
      (loop $label$24 (result i32)
       (block
        (if
         (i32.eqz
          (get_global $hangLimit)
         )
         (return
          (i32.const -2147483648)
         )
        )
        (set_global $hangLimit
         (i32.sub
          (get_global $hangLimit)
          (i32.const 1)
         )
        )
       )
       (get_local $1)
      )
     )
    )
   )
   (nop)
   (nop)
   (i32.load16_s offset=22
    (i32.and
     (get_local $1)
     (i32.const 255)
    )
   )
  )
 )
 (func $func_2 (result i64)
  (block
   (if
    (i32.eqz
     (get_global $hangLimit)
    )
    (return
     (i64.const 11646)
    )
   )
   (set_global $hangLimit
    (i32.sub
     (get_global $hangLimit)
     (i32.const 1)
    )
   )
  )
  (select
   (i64.const -127)
   (i64.const -52)
   (if (result i32)
    (i64.ge_u
     (i64.const 65408)
     (i64.shr_u
      (i64.const -78)
      (i64.const 8578902562464409636)
     )
    )
    (i32.load16_u offset=22 align=1
     (i32.and
      (if (result i32)
       (i32.eqz
        (i32.const 2147483647)
       )
       (i32.const -57)
       (i32.const -128)
      )
      (i32.const 255)
     )
    )
    (call $func_0
     (i32.const -42)
    )
   )
  )
 )
 (func $hangLimitInitializer
  (set_global $hangLimit
   (i32.const 25)
  )
 )
)
