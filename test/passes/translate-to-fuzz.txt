(module
 (type $FUNCSIG$j (func (result i64)))
 (global $hangLimit (mut i32) (i32.const 100))
 (table 0 0 anyfunc)
 
 (memory $0 1 1)
 (data (i32.const 0) "\00C\00[\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (export "func_0" (func $func_0))
 (export "hangLimitInitializer" (func $hangLimitInitializer))
 (func $func_0 (type $FUNCSIG$j) (result i64)
  (local $0 i32)
  (local $1 f64)
  (block
   (if
    (i32.eqz
     (get_global $hangLimit)
    )
    (return
     (i64.const -68719476736)
    )
   )
   (set_global $hangLimit
    (i32.sub
     (get_global $hangLimit)
     (i32.const 1)
    )
   )
  )
  (block $label$0 (result i64)
   (nop)
   (br_if $label$0
    (i64.const 127)
    (i32.eqz
     (loop $label$37 (result i32)
      (block
       (if
        (i32.eqz
         (get_global $hangLimit)
        )
        (return
         (i64.const -524288)
        )
       )
       (set_global $hangLimit
        (i32.sub
         (get_global $hangLimit)
         (i32.const 1)
        )
       )
      )
      (block $label$38 (result i32)
       (if
        (i32.eqz
         (i32.wrap/i64
          (i64.const -82)
         )
        )
        (br_if $label$37
         (i32.eqz
          (i64.gt_u
           (i64.const 79723535910970419)
           (i64.const 255)
          )
         )
        )
        (block $label$39
         (loop $label$40
          (block
           (if
            (i32.eqz
             (get_global $hangLimit)
            )
            (return
             (i64.const 1073741824)
            )
           )
           (set_global $hangLimit
            (i32.sub
             (get_global $hangLimit)
             (i32.const 1)
            )
           )
          )
          (set_local $1
           (call $deNan64
            (select
             (call $deNan64
              (f64.convert_s/i64
               (i64.const 286791702)
              )
             )
             (call $deNan64
              (select
               (tee_local $1
                (block $label$44 (result f64)
                 (set_local $1
                  (get_local $1)
                 )
                 (get_local $1)
                )
               )
               (call $deNan64
                (f64.copysign
                 (call $deNan64
                  (select
                   (f64.const 18445)
                   (f64.const 251925010)
                   (i32.const 286004740)
                  )
                 )
                 (block $label$45 (result f64)
                  (nop)
                  (loop $label$46 (result f64)
                   (block
                    (if
                     (i32.eqz
                      (get_global $hangLimit)
                     )
                     (return
                      (i64.const -57)
                     )
                    )
                    (set_global $hangLimit
                     (i32.sub
                      (get_global $hangLimit)
                      (i32.const 1)
                     )
                    )
                   )
                   (get_local $1)
                  )
                 )
                )
               )
               (br_if $label$38
                (i32.reinterpret/f32
                 (f32.const -9223372036854775808)
                )
                (i32.eqz
                 (get_local $0)
                )
               )
              )
             )
             (tee_local $0
              (if (result i32)
               (i32.trunc_u/f64
                (get_local $1)
               )
               (block $label$41 (result i32)
                (nop)
                (br $label$40)
               )
               (loop $label$42 (result i32)
                (block
                 (if
                  (i32.eqz
                   (get_global $hangLimit)
                  )
                  (return
                   (i64.const 2241978001322417182)
                  )
                 )
                 (set_global $hangLimit
                  (i32.sub
                   (get_global $hangLimit)
                   (i32.const 1)
                  )
                 )
                )
                (block (result i32)
                 (loop $label$43
                  (block
                   (if
                    (i32.eqz
                     (get_global $hangLimit)
                    )
                    (return
                     (i64.const -8796093022208)
                    )
                   )
                   (set_global $hangLimit
                    (i32.sub
                     (get_global $hangLimit)
                     (i32.const 1)
                    )
                   )
                  )
                  (set_local $0
                   (select
                    (i32.const -70)
                    (get_local $0)
                    (get_local $0)
                   )
                  )
                 )
                 (br_if $label$42
                  (select
                   (get_local $0)
                   (get_local $0)
                   (get_local $0)
                  )
                 )
                 (f64.le
                  (call $deNan64
                   (f64.min
                    (get_local $1)
                    (get_local $1)
                   )
                  )
                  (get_local $1)
                 )
                )
               )
              )
             )
            )
           )
          )
         )
         (if
          (i32.const 1142375256)
          (block $label$47
           (block $label$48
            (nop)
            (block $label$49
             (set_local $0
              (i32.const -1)
             )
             (loop $label$50
              (block
               (if
                (i32.eqz
                 (get_global $hangLimit)
                )
                (return
                 (i64.const 8589934592)
                )
               )
               (set_global $hangLimit
                (i32.sub
                 (get_global $hangLimit)
                 (i32.const 1)
                )
               )
              )
              (block $label$51
               (loop $label$52
                (block
                 (if
                  (i32.eqz
                   (get_global $hangLimit)
                  )
                  (return
                   (i64.const 15442)
                  )
                 )
                 (set_global $hangLimit
                  (i32.sub
                   (get_global $hangLimit)
                   (i32.const 1)
                  )
                 )
                )
                (block
                 (f64.store offset=3 align=4
                  (i32.and
                   (select
                    (i32.const 255)
                    (br_if $label$38
                     (get_local $0)
                     (get_local $0)
                    )
                    (i32.const -4194304)
                   )
                   (i32.const 31)
                  )
                  (get_local $1)
                 )
                 (br_if $label$52
                  (i32.const 111)
                 )
                 (nop)
                )
               )
               (set_local $0
                (block $label$53 (result i32)
                 (set_local $0
                  (i32.const -512)
                 )
                 (br $label$47)
                )
               )
              )
             )
            )
           )
           (block $label$54
            (set_local $1
             (f64.const 36028797018963968)
            )
           )
          )
          (if
           (i32.eqz
            (select
             (get_local $0)
             (block $label$60 (result i32)
              (br_if $label$37
               (i32.eqz
                (i32.const -4194304)
               )
              )
              (select
               (br_if $label$60
                (tee_local $0
                 (get_local $0)
                )
                (i32.eqz
                 (block $label$61 (result i32)
                  (nop)
                  (get_local $0)
                 )
                )
               )
               (if (result i32)
                (i32.eqz
                 (if (result i32)
                  (i32.eqz
                   (i64.ne
                    (i64.const -1024)
                    (i64.load32_u offset=4
                     (i32.and
                      (get_local $0)
                      (i32.const 31)
                     )
                    )
                   )
                  )
                  (block $label$62 (result i32)
                   (set_local $0
                    (get_local $0)
                   )
                   (loop $label$63 (result i32)
                    (block
                     (if
                      (i32.eqz
                       (get_global $hangLimit)
                      )
                      (return
                       (i64.const -95)
                      )
                     )
                     (set_global $hangLimit
                      (i32.sub
                       (get_global $hangLimit)
                       (i32.const 1)
                      )
                     )
                    )
                    (block (result i32)
                     (set_local $1
                      (get_local $1)
                     )
                     (br_if $label$63
                      (get_local $0)
                     )
                     (i32.const 48)
                    )
                   )
                  )
                  (block $label$64 (result i32)
                   (if
                    (i32.eqz
                     (i32.wrap/i64
                      (loop $label$65 (result i64)
                       (block
                        (if
                         (i32.eqz
                          (get_global $hangLimit)
                         )
                         (return
                          (i64.const 470816280)
                         )
                        )
                        (set_global $hangLimit
                         (i32.sub
                          (get_global $hangLimit)
                          (i32.const 1)
                         )
                        )
                       )
                       (i64.const 108)
                      )
                     )
                    )
                    (nop)
                    (drop
                     (f64.const 2075497995636940095578691e82)
                    )
                   )
                   (loop $label$66 (result i32)
                    (block
                     (if
                      (i32.eqz
                       (get_global $hangLimit)
                      )
                      (return
                       (i64.const -27)
                      )
                     )
                     (set_global $hangLimit
                      (i32.sub
                       (get_global $hangLimit)
                       (i32.const 1)
                      )
                     )
                    )
                    (block (result i32)
                     (nop)
                     (br_if $label$66
                      (i32.const -36)
                     )
                     (get_local $0)
                    )
                   )
                  )
                 )
                )
                (block $label$67 (result i32)
                 (f64.store offset=1
                  (i32.and
                   (br_if $label$38
                    (get_local $0)
                    (i32.eqz
                     (i32.reinterpret/f32
                      (f32.const 2706.389892578125)
                     )
                    )
                   )
                   (i32.const 31)
                  )
                  (f64.const 68719476736)
                 )
                 (i32.const 25)
                )
                (i32.const 1449089114)
               )
               (get_local $0)
              )
             )
             (select
              (i32.const -4)
              (i32.eqz
               (loop $label$58 (result i32)
                (block
                 (if
                  (i32.eqz
                   (get_global $hangLimit)
                  )
                  (return
                   (i64.const 303239698)
                  )
                 )
                 (set_global $hangLimit
                  (i32.sub
                   (get_global $hangLimit)
                   (i32.const 1)
                  )
                 )
                )
                (block $label$59 (result i32)
                 (br_if $label$38
                  (i32.const 268435456)
                  (i32.eqz
                   (br_if $label$59
                    (get_local $0)
                    (get_local $0)
                   )
                  )
                 )
                )
               )
              )
              (tee_local $0
               (tee_local $0
                (tee_local $0
                 (i32.const 975322409)
                )
               )
              )
             )
            )
           )
           (block $label$68
            (block $label$69
             (br_if $label$39
              (block $label$70 (result i32)
               (if
                (i32.clz
                 (br_if $label$38
                  (get_local $0)
                  (get_local $0)
                 )
                )
                (block $label$71
                 (set_local $1
                  (f64.const 1.1754943508222875e-38)
                 )
                 (set_local $0
                  (i32.const 32)
                 )
                )
                (nop)
               )
               (get_local $0)
              )
             )
             (nop)
            )
            (nop)
           )
           (block $label$72
            (nop)
           )
          )
         )
        )
       )
       (get_local $0)
      )
     )
    )
   )
  )
 )
 (func $hangLimitInitializer
  (set_global $hangLimit
   (i32.const 100)
  )
 )
 (func $deNan32 (param $0 f32) (result f32)
  (if (result f32)
   (f32.eq
    (get_local $0)
    (get_local $0)
   )
   (get_local $0)
   (f32.const 0)
  )
 )
 (func $deNan64 (param $0 f64) (result f64)
  (if (result f64)
   (f64.eq
    (get_local $0)
    (get_local $0)
   )
   (get_local $0)
   (f64.const 0)
  )
 )
)
