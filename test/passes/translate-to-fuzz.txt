(module
 (type $FUNCSIG$j (func (result i64)))
 (type $FUNCSIG$v (func))
 (import "fuzzing-support" "log-i32" (func $log-i32 (param i32)))
 (import "fuzzing-support" "log-i64" (func $log-i64 (param i64)))
 (import "fuzzing-support" "log-f32" (func $log-f32 (param f32)))
 (import "fuzzing-support" "log-f64" (func $log-f64 (param f64)))
 (memory $0 (shared 1 1))
 (data (i32.const 0) "n\00\05E\00\00\00\00")
 (table $0 2 anyfunc)
 (elem (i32.const 0) $func_10 $func_13)
 (global $global$0 (mut f32) (f32.const 536870912))
 (global $global$1 (mut f32) (f32.const 2147483648))
 (global $global$2 (mut f64) (f64.const -1048576))
 (global $global$3 (mut f64) (f64.const 23643))
 (global $hangLimit (mut i32) (i32.const 10))
 (export "func_4" (func $func_4))
 (export "func_5" (func $func_5))
 (export "func_6_invoker" (func $func_6_invoker))
 (export "func_8_invoker" (func $func_8_invoker))
 (export "func_11_invoker" (func $func_11_invoker))
 (export "hangLimitInitializer" (func $hangLimitInitializer))
 (func $func_4 (; 4 ;) (type $FUNCSIG$j) (result i64)
  (local $0 f64)
  (local $1 f64)
  (local $2 i64)
  (local $3 f32)
  (local $4 f32)
  (block
   (if
    (i32.eqz
     (get_global $hangLimit)
    )
    (return
     (get_local $2)
    )
   )
   (set_global $hangLimit
    (i32.sub
     (get_global $hangLimit)
     (i32.const 1)
    )
   )
  )
  (block $label$0 (result i64)
   (loop $label$1
    (block
     (if
      (i32.eqz
       (get_global $hangLimit)
      )
      (return
       (i64.const 8224)
      )
     )
     (set_global $hangLimit
      (i32.sub
       (get_global $hangLimit)
       (i32.const 1)
      )
     )
    )
    (block
     (block $label$2
      (br_if $label$1
       (loop $label$3 (result i32)
        (block
         (if
          (i32.eqz
           (get_global $hangLimit)
          )
          (return
           (get_local $2)
          )
         )
         (set_global $hangLimit
          (i32.sub
           (get_global $hangLimit)
           (i32.const 1)
          )
         )
        )
        (block (result i32)
         (nop)
         (br_if $label$3
          (if (result i32)
           (i32.eqz
            (i32.const -88)
           )
           (block $label$4
            (tee_local $3
             (tee_local $4
              (tee_local $4
               (tee_local $4
                (tee_local $4
                 (tee_local $3
                  (loop $label$5
                   (block
                    (if
                     (i32.eqz
                      (get_global $hangLimit)
                     )
                     (return
                      (i64.const -128)
                     )
                    )
                    (set_global $hangLimit
                     (i32.sub
                      (get_global $hangLimit)
                      (i32.const 1)
                     )
                    )
                   )
                   (block $label$6
                    (set_local $0
                     (f64.const 5.4381023886308066e-33)
                    )
                    (br $label$1)
                   )
                  )
                 )
                )
               )
              )
             )
            )
            (br $label$1)
           )
           (i32.const 1)
          )
         )
         (i32.const 202113549)
        )
       )
      )
      (call $log-i64
       (i64.const -128)
      )
      (if
       (block $label$7
        (call $log-i32
         (i32.const 514)
        )
        (return
         (get_local $2)
        )
       )
       (block $label$8
        (set_local $2
         (i64.const 770)
        )
        (tee_local $1
         (tee_local $1
          (loop $label$9
           (block
            (if
             (i32.eqz
              (get_global $hangLimit)
             )
             (return
              (get_local $2)
             )
            )
            (set_global $hangLimit
             (i32.sub
              (get_global $hangLimit)
              (i32.const 1)
             )
            )
           )
           (tee_local $0
            (block $label$10
             (br $label$8)
            )
           )
          )
         )
        )
       )
       (block $label$11
        (set_local $4
         (f32.const 6941)
        )
        (set_local $3
         (get_local $4)
        )
       )
      )
     )
     (br_if $label$1
      (i32.const 17699098)
     )
     (set_local $3
      (if (result f32)
       (i32.eqz
        (loop $label$12 (result i32)
         (block
          (if
           (i32.eqz
            (get_global $hangLimit)
           )
           (return
            (get_local $2)
           )
          )
          (set_global $hangLimit
           (i32.sub
            (get_global $hangLimit)
            (i32.const 1)
           )
          )
         )
         (block $label$13 (result i32)
          (set_local $0
           (block $label$14 (result f64)
            (call $log-f32
             (tee_local $4
              (f32.const 512)
             )
            )
            (tee_local $0
             (if (result f64)
              (i32.eqz
               (i32.const -8388608)
              )
              (block $label$15 (result f64)
               (f64.const 18446744073709551615)
              )
              (block $label$16
               (nop)
               (br $label$1)
              )
             )
            )
           )
          )
          (i32.const -7)
         )
        )
       )
       (tee_local $4
        (f32.const 512)
       )
       (tee_local $3
        (get_local $4)
       )
      )
     )
    )
   )
   (if (result i64)
    (block $label$39
     (call $log-i64
      (i64.const -32767)
     )
     (return
      (get_local $2)
     )
    )
    (block $label$40 (result i64)
     (nop)
     (get_local $2)
    )
    (get_local $2)
   )
  )
 )
 (func $func_5 (; 5 ;) (type $FUNCSIG$v)
  (local $0 f64)
  (local $1 i32)
  (local $2 f64)
  (block
   (if
    (i32.eqz
     (get_global $hangLimit)
    )
    (return)
   )
   (set_global $hangLimit
    (i32.sub
     (get_global $hangLimit)
     (i32.const 1)
    )
   )
  )
  (nop)
 )
 (func $func_6 (; 6 ;) (param $0 f32) (param $1 i32) (result f64)
  (local $2 i32)
  (local $3 i32)
  (local $4 f32)
  (local $5 f64)
  (local $6 f32)
  (local $7 i64)
  (local $8 i64)
  (local $9 i32)
  (local $10 f32)
  (block
   (if
    (i32.eqz
     (get_global $hangLimit)
    )
    (return
     (get_local $5)
    )
   )
   (set_global $hangLimit
    (i32.sub
     (get_global $hangLimit)
     (i32.const 1)
    )
   )
  )
  (block $label$0 (result f64)
   (call $log-f32
    (get_local $6)
   )
   (tee_local $5
    (loop $label$1 (result f64)
     (block
      (if
       (i32.eqz
        (get_global $hangLimit)
       )
       (return
        (f64.const 1601459232863538481995503e227)
       )
      )
      (set_global $hangLimit
       (i32.sub
        (get_global $hangLimit)
        (i32.const 1)
       )
      )
     )
     (block (result f64)
      (block $label$2
       (call $log-i32
        (if (result i32)
         (i32.eqz
          (tee_local $2
           (i32.const 99)
          )
         )
         (block $label$6
          (return
           (f64.const 1492836843431331115705516e116)
          )
         )
         (loop $label$7 (result i32)
          (block
           (if
            (i32.eqz
             (get_global $hangLimit)
            )
            (return
             (f64.const 1347244313)
            )
           )
           (set_global $hangLimit
            (i32.sub
             (get_global $hangLimit)
             (i32.const 1)
            )
           )
          )
          (block $label$8 (result i32)
           (call $log-f64
            (get_local $5)
           )
           (i32.const 2147483647)
          )
         )
        )
       )
       (call $log-i32
        (block $label$3
         (return
          (loop $label$4 (result f64)
           (block
            (if
             (i32.eqz
              (get_global $hangLimit)
             )
             (return
              (get_local $5)
             )
            )
            (set_global $hangLimit
             (i32.sub
              (get_global $hangLimit)
              (i32.const 1)
             )
            )
           )
           (block $label$5 (result f64)
            (tee_local $5
             (f64.const 1585060895)
            )
           )
          )
         )
        )
       )
      )
      (br_if $label$1
       (tee_local $1
        (tee_local $1
         (tee_local $2
          (tee_local $3
           (tee_local $1
            (get_local $3)
           )
          )
         )
        )
       )
      )
      (tee_local $5
       (get_local $5)
      )
     )
    )
   )
  )
 )
 (func $func_6_invoker (; 7 ;) (type $FUNCSIG$v)
  (drop
   (call $func_6
    (f32.const -3402823466385288598117041e14)
    (i32.const 4)
   )
  )
 )
 (func $func_8 (; 8 ;) (param $0 i64) (param $1 f64) (result i64)
  (block
   (if
    (i32.eqz
     (get_global $hangLimit)
    )
    (return
     (i64.const 1810198612584833343)
    )
   )
   (set_global $hangLimit
    (i32.sub
     (get_global $hangLimit)
     (i32.const 1)
    )
   )
  )
  (block $label$0 (result i64)
   (call $log-i64
    (if (result i64)
     (i32.eqz
      (i32.const 3084)
     )
     (i64.const 17)
     (tee_local $0
      (br_if $label$0
       (loop $label$3 (result i64)
        (block
         (if
          (i32.eqz
           (get_global $hangLimit)
          )
          (return
           (i64.const 673867890)
          )
         )
         (set_global $hangLimit
          (i32.sub
           (get_global $hangLimit)
           (i32.const 1)
          )
         )
        )
        (block $label$4 (result i64)
         (call $log-i32
          (i32.const 1078790220)
         )
         (if
          (i32.eqz
           (i32.const -1)
          )
          (block $label$5
           (call $log-i64
            (tee_local $0
             (tee_local $0
              (tee_local $0
               (tee_local $0
                (br_if $label$4
                 (i64.const -33)
                 (i32.eqz
                  (select
                   (i32.const 31)
                   (if (result i32)
                    (i32.eqz
                     (i32.const 32767)
                    )
                    (i32.const -4096)
                    (if (result i32)
                     (i32.const 0)
                     (i32.const 354293528)
                     (i32.const 235887385)
                    )
                   )
                   (i32.const -33554432)
                  )
                 )
                )
               )
              )
             )
            )
           )
           (block $label$6
            (call $log-i32
             (loop $label$7 (result i32)
              (block
               (if
                (i32.eqz
                 (get_global $hangLimit)
                )
                (return
                 (i64.const -9223372036854775808)
                )
               )
               (set_global $hangLimit
                (i32.sub
                 (get_global $hangLimit)
                 (i32.const 1)
                )
               )
              )
              (i32.const 219352594)
             )
            )
            (br $label$3)
           )
          )
          (block $label$8
           (call $log-i32
            (i32.const 876109373)
           )
           (br $label$3)
          )
         )
        )
       )
       (i32.eqz
        (i32.const -27)
       )
      )
     )
    )
   )
   (return
    (i64.const -76)
   )
  )
 )
 (func $func_8_invoker (; 9 ;) (type $FUNCSIG$v)
  (drop
   (call $func_8
    (i64.const -562949953421312)
    (f64.const -nan:0xfffffffffffd5)
   )
  )
 )
 (func $func_10 (; 10 ;) (param $0 i64) (param $1 f64) (result f64)
  (local $2 f64)
  (block
   (if
    (i32.eqz
     (get_global $hangLimit)
    )
    (return
     (f64.const 2147483648)
    )
   )
   (set_global $hangLimit
    (i32.sub
     (get_global $hangLimit)
     (i32.const 1)
    )
   )
  )
  (return
   (f64.const -1797693134862315708145274e284)
  )
 )
 (func $func_11 (; 11 ;) (result i32)
  (local $0 f64)
  (local $1 i64)
  (local $2 f32)
  (block
   (if
    (i32.eqz
     (get_global $hangLimit)
    )
    (return
     (i32.const 1211255369)
    )
   )
   (set_global $hangLimit
    (i32.sub
     (get_global $hangLimit)
     (i32.const 1)
    )
   )
  )
  (i32.const 0)
 )
 (func $func_11_invoker (; 12 ;) (type $FUNCSIG$v)
  (drop
   (call $func_11)
  )
 )
 (func $func_13 (; 13 ;) (param $0 f32) (param $1 i64) (param $2 i32) (param $3 f64) (result f64)
  (local $4 f32)
  (block
   (if
    (i32.eqz
     (get_global $hangLimit)
    )
    (return
     (f64.const 17592186044416)
    )
   )
   (set_global $hangLimit
    (i32.sub
     (get_global $hangLimit)
     (i32.const 1)
    )
   )
  )
  (tee_local $3
   (loop $label$0 (result f64)
    (block
     (if
      (i32.eqz
       (get_global $hangLimit)
      )
      (return
       (get_local $3)
      )
     )
     (set_global $hangLimit
      (i32.sub
       (get_global $hangLimit)
       (i32.const 1)
      )
     )
    )
    (block (result f64)
     (block $label$1
      (call $log-f64
       (f64.const -1125899906842624)
      )
      (set_local $0
       (tee_local $4
        (get_local $4)
       )
      )
     )
     (br_if $label$0
      (loop $label$2 (result i32)
       (block
        (if
         (i32.eqz
          (get_global $hangLimit)
         )
         (return
          (get_local $3)
         )
        )
        (set_global $hangLimit
         (i32.sub
          (get_global $hangLimit)
          (i32.const 1)
         )
        )
       )
       (block (result i32)
        (block $label$3
         (set_local $3
          (f64.const -9223372036854775808)
         )
         (set_local $0
          (get_local $4)
         )
        )
        (nop)
        (get_local $2)
       )
      )
     )
     (get_local $3)
    )
   )
  )
 )
 (func $hangLimitInitializer (; 14 ;)
  (set_global $hangLimit
   (i32.const 10)
  )
 )
 (func $deNan32 (; 15 ;) (param $0 f32) (result f32)
  (if (result f32)
   (f32.eq
    (get_local $0)
    (get_local $0)
   )
   (get_local $0)
   (f32.const 0)
  )
 )
 (func $deNan64 (; 16 ;) (param $0 f64) (result f64)
  (if (result f64)
   (f64.eq
    (get_local $0)
    (get_local $0)
   )
   (get_local $0)
   (f64.const 0)
  )
 )
)
