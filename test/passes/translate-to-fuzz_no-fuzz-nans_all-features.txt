(module
 (type $none_=>_i32 (func (result i32)))
 (type $none_=>_none (func))
 (type $i32_=>_none (func (param i32)))
 (type $i64_=>_none (func (param i64)))
 (type $f32_=>_none (func (param f32)))
 (type $f64_=>_none (func (param f64)))
 (type $f64_f32_=>_none (func (param f64 f32)))
 (type $v128_=>_none (func (param v128)))
 (type $v128_i64_f32_v128_v128_v128_v128_=>_none (func (param v128 i64 f32 v128 v128 v128 v128)))
 (type $i32_=>_i32 (func (param i32) (result i32)))
 (type $f32_i64_f64_=>_i32 (func (param f32 i64 f64) (result i32)))
 (type $v128_=>_i32 (func (param v128) (result i32)))
 (type $none_=>_i64 (func (result i64)))
 (type $f32_=>_f32 (func (param f32) (result f32)))
 (type $f64_=>_f64 (func (param f64) (result f64)))
 (import "fuzzing-support" "log-i32" (func $log-i32 (param i32)))
 (import "fuzzing-support" "log-i64" (func $log-i64 (param i64)))
 (import "fuzzing-support" "log-f32" (func $log-f32 (param f32)))
 (import "fuzzing-support" "log-f64" (func $log-f64 (param f64)))
 (import "fuzzing-support" "log-v128" (func $log-v128 (param v128)))
 (memory $0 (shared 1 1))
 (data (i32.const 0) "N\0fN\f5\f9\b1\ff\fa\eb\e5\fe\a7\ec\fb\fc\f4\a6\e4\ea\f0\ae\e3")
 (table $0 2 2 funcref)
 (elem (i32.const 0) $func_10 $func_11)
 (global $global$0 (mut i32) (i32.const 975663930))
 (global $global$1 (mut i32) (i32.const 2066300474))
 (global $global$2 (mut i64) (i64.const 20510))
 (global $global$3 (mut f32) (f32.const -2147483648))
 (global $global$4 (mut v128) (v128.const i32x4 0x7f002833 0x580000fe 0x59750500 0x01ff002f))
 (global $hangLimit (mut i32) (i32.const 10))
 (event $event$0 (attr 0) (param f64 f32))
 (export "hashMemory" (func $hashMemory))
 (export "memory" (memory $0))
 (export "func_8" (func $func_8))
 (export "func_11" (func $func_11))
 (export "hangLimitInitializer" (func $hangLimitInitializer))
 (func $hashMemory (; 5 ;) (result i32)
  (local $0 i32)
  (local.set $0
   (i32.const 5381)
  )
  (local.set $0
   (i32.xor
    (i32.add
     (i32.shl
      (local.get $0)
      (i32.const 5)
     )
     (local.get $0)
    )
    (i32.load8_u
     (i32.const 0)
    )
   )
  )
  (local.set $0
   (i32.xor
    (i32.add
     (i32.shl
      (local.get $0)
      (i32.const 5)
     )
     (local.get $0)
    )
    (i32.load8_u offset=1
     (i32.const 0)
    )
   )
  )
  (local.set $0
   (i32.xor
    (i32.add
     (i32.shl
      (local.get $0)
      (i32.const 5)
     )
     (local.get $0)
    )
    (i32.load8_u offset=2
     (i32.const 0)
    )
   )
  )
  (local.set $0
   (i32.xor
    (i32.add
     (i32.shl
      (local.get $0)
      (i32.const 5)
     )
     (local.get $0)
    )
    (i32.load8_u offset=3
     (i32.const 0)
    )
   )
  )
  (local.set $0
   (i32.xor
    (i32.add
     (i32.shl
      (local.get $0)
      (i32.const 5)
     )
     (local.get $0)
    )
    (i32.load8_u offset=4
     (i32.const 0)
    )
   )
  )
  (local.set $0
   (i32.xor
    (i32.add
     (i32.shl
      (local.get $0)
      (i32.const 5)
     )
     (local.get $0)
    )
    (i32.load8_u offset=5
     (i32.const 0)
    )
   )
  )
  (local.set $0
   (i32.xor
    (i32.add
     (i32.shl
      (local.get $0)
      (i32.const 5)
     )
     (local.get $0)
    )
    (i32.load8_u offset=6
     (i32.const 0)
    )
   )
  )
  (local.set $0
   (i32.xor
    (i32.add
     (i32.shl
      (local.get $0)
      (i32.const 5)
     )
     (local.get $0)
    )
    (i32.load8_u offset=7
     (i32.const 0)
    )
   )
  )
  (local.set $0
   (i32.xor
    (i32.add
     (i32.shl
      (local.get $0)
      (i32.const 5)
     )
     (local.get $0)
    )
    (i32.load8_u offset=8
     (i32.const 0)
    )
   )
  )
  (local.set $0
   (i32.xor
    (i32.add
     (i32.shl
      (local.get $0)
      (i32.const 5)
     )
     (local.get $0)
    )
    (i32.load8_u offset=9
     (i32.const 0)
    )
   )
  )
  (local.set $0
   (i32.xor
    (i32.add
     (i32.shl
      (local.get $0)
      (i32.const 5)
     )
     (local.get $0)
    )
    (i32.load8_u offset=10
     (i32.const 0)
    )
   )
  )
  (local.set $0
   (i32.xor
    (i32.add
     (i32.shl
      (local.get $0)
      (i32.const 5)
     )
     (local.get $0)
    )
    (i32.load8_u offset=11
     (i32.const 0)
    )
   )
  )
  (local.set $0
   (i32.xor
    (i32.add
     (i32.shl
      (local.get $0)
      (i32.const 5)
     )
     (local.get $0)
    )
    (i32.load8_u offset=12
     (i32.const 0)
    )
   )
  )
  (local.set $0
   (i32.xor
    (i32.add
     (i32.shl
      (local.get $0)
      (i32.const 5)
     )
     (local.get $0)
    )
    (i32.load8_u offset=13
     (i32.const 0)
    )
   )
  )
  (local.set $0
   (i32.xor
    (i32.add
     (i32.shl
      (local.get $0)
      (i32.const 5)
     )
     (local.get $0)
    )
    (i32.load8_u offset=14
     (i32.const 0)
    )
   )
  )
  (local.set $0
   (i32.xor
    (i32.add
     (i32.shl
      (local.get $0)
      (i32.const 5)
     )
     (local.get $0)
    )
    (i32.load8_u offset=15
     (i32.const 0)
    )
   )
  )
  (local.get $0)
 )
 (func $func_6 (; 6 ;) (result i32)
  (local $0 i64)
  (block
   (if
    (i32.eqz
     (global.get $hangLimit)
    )
    (return
     (i32.const 1313884491)
    )
   )
   (global.set $hangLimit
    (i32.sub
     (global.get $hangLimit)
     (i32.const 1)
    )
   )
  )
  (block $label$0
   (i64.store8 offset=4
    (loop $label$1
     (block
      (if
       (i32.eqz
        (global.get $hangLimit)
       )
       (return
        (i32.const 4613640)
       )
      )
      (global.set $hangLimit
       (i32.sub
        (global.get $hangLimit)
        (i32.const 1)
       )
      )
     )
     (block
      (block $label$2
       (nop)
       (nop)
       (nop)
      )
      (br_if $label$1
       (block $label$3
        (br_if $label$1
         (i32.eqz
          (block
           (loop $label$4
            (block
             (if
              (i32.eqz
               (global.get $hangLimit)
              )
              (return
               (i32.const -131072)
              )
             )
             (global.set $hangLimit
              (i32.sub
               (global.get $hangLimit)
               (i32.const 1)
              )
             )
            )
            (block
             (block $label$5
              (nop)
              (v128.store offset=3 align=4
               (i32.and
                (select
                 (i32.const 1443239685)
                 (i32.const -75)
                 (i32.const 4627)
                )
                (i32.const 15)
               )
               (loop $label$6
                (block
                 (if
                  (i32.eqz
                   (global.get $hangLimit)
                  )
                  (return
                   (i32.const 195)
                  )
                 )
                 (global.set $hangLimit
                  (i32.sub
                   (global.get $hangLimit)
                   (i32.const 1)
                  )
                 )
                )
                (block $label$7
                 (loop $label$8
                  (block
                   (if
                    (i32.eqz
                     (global.get $hangLimit)
                    )
                    (return
                     (i32.const -255)
                    )
                   )
                   (global.set $hangLimit
                    (i32.sub
                     (global.get $hangLimit)
                     (i32.const 1)
                    )
                   )
                  )
                  (nop)
                 )
                 (br $label$4)
                )
               )
              )
             )
             (br_if $label$4
              (i32.and
               (select
                (i32.const 1443239685)
                (i32.const -75)
                (i32.const 4627)
               )
               (i32.const 15)
              )
             )
             (loop $label$9
              (block
               (if
                (i32.eqz
                 (global.get $hangLimit)
                )
                (return
                 (i32.const 1195719998)
                )
               )
               (global.set $hangLimit
                (i32.sub
                 (global.get $hangLimit)
                 (i32.const 1)
                )
               )
              )
              (block
               (block $label$10
                (nop)
                (loop $label$11
                 (block
                  (if
                   (i32.eqz
                    (global.get $hangLimit)
                   )
                   (return
                    (i32.const -65536)
                   )
                  )
                  (global.set $hangLimit
                   (i32.sub
                    (global.get $hangLimit)
                    (i32.const 1)
                   )
                  )
                 )
                 (block
                  (block $label$12
                   (nop)
                   (nop)
                  )
                  (br_if $label$11
                   (i32.const 1430538069)
                  )
                  (nop)
                 )
                )
               )
               (br_if $label$9
                (i32.const 18)
               )
               (loop $label$13
                (block
                 (if
                  (i32.eqz
                   (global.get $hangLimit)
                  )
                  (return
                   (i32.const 16)
                  )
                 )
                 (global.set $hangLimit
                  (i32.sub
                   (global.get $hangLimit)
                   (i32.const 1)
                  )
                 )
                )
                (block $label$14
                 (nop)
                 (return
                  (i32.const 65535)
                 )
                )
               )
              )
             )
            )
           )
           (drop
            (i32.eqz
             (i32.const 1073741824)
            )
           )
          )
         )
        )
        (br $label$1)
       )
      )
      (if
       (i32.const 707471653)
       (block $label$15
        (nop)
        (return
         (if (result i32)
          (i32.eqz
           (if (result i32)
            (if (result i32)
             (i32.eqz
              (if (result i32)
               (if (result i32)
                (if (result i32)
                 (i32.eqz
                  (i32.const 170)
                 )
                 (i32.const 9777)
                 (loop $label$16 (result i32)
                  (block
                   (if
                    (i32.eqz
                     (global.get $hangLimit)
                    )
                    (return
                     (i32.const 1073741824)
                    )
                   )
                   (global.set $hangLimit
                    (i32.sub
                     (global.get $hangLimit)
                     (i32.const 1)
                    )
                   )
                  )
                  (i32.const -4)
                 )
                )
                (block $label$17 (result i32)
                 (nop)
                 (loop $label$18 (result i32)
                  (block
                   (if
                    (i32.eqz
                     (global.get $hangLimit)
                    )
                    (return
                     (i32.const 125)
                    )
                   )
                   (global.set $hangLimit
                    (i32.sub
                     (global.get $hangLimit)
                     (i32.const 1)
                    )
                   )
                  )
                  (i32.const 28)
                 )
                )
                (block $label$19
                 (if
                  (i32.eqz
                   (i32.const 256)
                  )
                  (nop)
                  (nop)
                 )
                 (br $label$1)
                )
               )
               (i32.const 1344)
               (block $label$20 (result i32)
                (nop)
                (loop $label$21 (result i32)
                 (block
                  (if
                   (i32.eqz
                    (global.get $hangLimit)
                   )
                   (return
                    (i32.const -1)
                   )
                  )
                  (global.set $hangLimit
                   (i32.sub
                    (global.get $hangLimit)
                    (i32.const 1)
                   )
                  )
                 )
                 (i32.const 65536)
                )
               )
              )
             )
             (block $label$22 (result i32)
              (if
               (if (result i32)
                (i32.eqz
                 (block $label$23 (result i32)
                  (nop)
                  (i32.const 2048)
                 )
                )
                (block $label$24
                 (br_if $label$1
                  (i32.const 169351187)
                 )
                 (br $label$1)
                )
                (i32.const -1)
               )
               (block $label$25
                (nop)
                (if
                 (i32.const -127)
                 (block $label$26
                  (nop)
                 )
                 (block $label$27
                  (if
                   (br_if $label$22
                    (i32.const -90)
                    (i32.const 163)
                   )
                   (nop)
                   (nop)
                  )
                  (nop)
                 )
                )
               )
               (block $label$28
                (f32.store offset=2 align=2
                 (i32.and
                  (i32.const 2)
                  (i32.const 15)
                 )
                 (f32.const 2.6452930484980803e-38)
                )
                (nop)
               )
              )
              (br $label$1)
             )
             (block $label$29
              (f32.store offset=4 align=2
               (i32.and
                (if (result i32)
                 (i32.const -80)
                 (i32.const 290541147)
                 (i32.const 3085)
                )
                (i32.const 15)
               )
               (global.get $global$3)
              )
              (br $label$1)
             )
            )
            (i32.const -27)
            (i32.const -17)
           )
          )
          (i32.const 24332)
          (block $label$30
           (nop)
           (br $label$1)
          )
         )
        )
       )
       (if
        (i32.eqz
         (if (result i32)
          (i32.eqz
           (if (result i32)
            (if (result i32)
             (i32.eqz
              (if (result i32)
               (if (result i32)
                (if (result i32)
                 (i32.eqz
                  (i32.const 170)
                 )
                 (i32.const 9777)
                 (i32.const 32768)
                )
                (i32.const 1024)
                (i32.const 134217728)
               )
               (i32.const 1344)
               (i32.const -2147483648)
              )
             )
             (i32.const 606480166)
             (i32.const 219025165)
            )
            (i32.const -27)
            (i32.const 1073741824)
           )
          )
          (i32.const 24332)
          (i32.const 128)
         )
        )
        (block $label$31
         (loop $label$32
          (block
           (if
            (i32.eqz
             (global.get $hangLimit)
            )
            (return
             (i32.const 16668)
            )
           )
           (global.set $hangLimit
            (i32.sub
             (global.get $hangLimit)
             (i32.const 1)
            )
           )
          )
          (block
           (local.set $0
            (i64.atomic.load32_u offset=4
             (i32.and
              (i32.const 514)
              (i32.const 15)
             )
            )
           )
           (br_if $label$32
            (i32.const 1443239685)
           )
           (if
            (i32.eqz
             (i32.const -2147483647)
            )
            (nop)
            (block $label$34
             (br $label$1)
             (br_if $label$32
              (i32.eqz
               (i32x4.any_true
                (v128.const i32x4 0x00000080 0x00000000 0xffff8000 0xffffffff)
               )
              )
             )
            )
           )
          )
         )
         (br $label$1)
        )
        (block $label$35
         (nop)
         (br $label$1)
        )
       )
      )
     )
    )
    (local.tee $0
     (local.tee $0
      (local.tee $0
       (local.tee $0
        (local.tee $0
         (local.tee $0
          (local.tee $0
           (local.tee $0
            (local.tee $0
             (local.tee $0
              (local.get $0)
             )
            )
           )
          )
         )
        )
       )
      )
     )
    )
   )
   (nop)
   (return
    (i32.const -1048576)
   )
  )
 )
 (func $func_7 (; 7 ;) (param $0 i32) (result i32)
  (block
   (if
    (i32.eqz
     (global.get $hangLimit)
    )
    (return
     (i32.const -71)
    )
   )
   (global.set $hangLimit
    (i32.sub
     (global.get $hangLimit)
     (i32.const 1)
    )
   )
  )
  (i32.const 30571)
 )
 (func $func_8 (; 8 ;) (param $0 v128) (param $1 i64) (param $2 f32) (param $3 v128) (param $4 v128) (param $5 v128) (param $6 v128)
  (block
   (if
    (i32.eqz
     (global.get $hangLimit)
    )
    (return)
   )
   (global.set $hangLimit
    (i32.sub
     (global.get $hangLimit)
     (i32.const 1)
    )
   )
  )
  (call $log-f64
   (f64.const 25)
  )
 )
 (func $func_9 (; 9 ;) (result i64)
  (local $0 f64)
  (local $1 f32)
  (local $2 i32)
  (local $3 f64)
  (local $4 f64)
  (local $5 f64)
  (local $6 i64)
  (local $7 f64)
  (block
   (if
    (i32.eqz
     (global.get $hangLimit)
    )
    (return
     (i64.const 1196704571)
    )
   )
   (global.set $hangLimit
    (i32.sub
     (global.get $hangLimit)
     (i32.const 1)
    )
   )
  )
  (block $label$0 (result i64)
   (call $log-i32
    (call $hashMemory)
   )
   (loop $label$1 (result i64)
    (block
     (if
      (i32.eqz
       (global.get $hangLimit)
      )
      (return
       (local.get $6)
      )
     )
     (global.set $hangLimit
      (i32.sub
       (global.get $hangLimit)
       (i32.const 1)
      )
     )
    )
    (loop $label$2 (result i64)
     (block
      (if
       (i32.eqz
        (global.get $hangLimit)
       )
       (return
        (i64.const -89)
       )
      )
      (global.set $hangLimit
       (i32.sub
        (global.get $hangLimit)
        (i32.const 1)
       )
      )
     )
     (block (result i64)
      (block $label$3
       (local.set $4
        (f64.const 4398046511104)
       )
       (local.set $1
        (if (result f32)
         (if
          (i32.eqz
           (local.tee $2
            (i32.const -127)
           )
          )
          (block $label$4
           (call $log-i64
            (loop $label$5 (result i64)
             (block
              (if
               (i32.eqz
                (global.get $hangLimit)
               )
               (return
                (local.get $6)
               )
              )
              (global.set $hangLimit
               (i32.sub
                (global.get $hangLimit)
                (i32.const 1)
               )
              )
             )
             (i64.const -2147483648)
            )
           )
           (br $label$1)
          )
          (local.tee $2
           (block $label$6
            (block $label$7
             (call $log-f64
              (local.tee $4
               (local.tee $0
                (f64.const -9223372036854775808)
               )
              )
             )
             (call $log-i32
              (call $hashMemory)
             )
            )
            (br $label$2)
           )
          )
         )
         (block $label$8
          (call $log-i32
           (local.tee $2
            (local.tee $2
             (i32.const -122)
            )
           )
          )
          (br $label$1)
         )
         (block $label$9 (result f32)
          (call $log-i32
           (call $hashMemory)
          )
          (f32.const -274877906944)
         )
        )
       )
       (local.set $4
        (local.get $7)
       )
      )
      (br_if $label$2
       (i32.eqz
        (local.tee $2
         (local.tee $2
          (local.tee $2
           (local.tee $2
            (local.get $2)
           )
          )
         )
        )
       )
      )
      (i64.const 0)
     )
    )
   )
  )
 )
 (func $func_10 (; 10 ;) (param $0 v128) (result i32)
  (block
   (if
    (i32.eqz
     (global.get $hangLimit)
    )
    (return
     (i32.const 0)
    )
   )
   (global.set $hangLimit
    (i32.sub
     (global.get $hangLimit)
     (i32.const 1)
    )
   )
  )
  (i64.eq
   (i64.const 3422)
   (i64.const 2147483648)
  )
 )
 (func $func_11 (; 11 ;) (param $0 f32) (param $1 i64) (param $2 f64) (result i32)
  (local $3 f32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i64)
  (local $7 i64)
  (local $8 f64)
  (local $9 f64)
  (local $10 i64)
  (local $11 i64)
  (block
   (if
    (i32.eqz
     (global.get $hangLimit)
    )
    (return
     (i32.const 32768)
    )
   )
   (global.set $hangLimit
    (i32.sub
     (global.get $hangLimit)
     (i32.const 1)
    )
   )
  )
  (local.get $4)
 )
 (func $hangLimitInitializer (; 12 ;)
  (global.set $hangLimit
   (i32.const 10)
  )
 )
 (func $deNan32 (; 13 ;) (param $0 f32) (result f32)
  (if (result f32)
   (f32.eq
    (local.get $0)
    (local.get $0)
   )
   (local.get $0)
   (f32.const 0)
  )
 )
 (func $deNan64 (; 14 ;) (param $0 f64) (result f64)
  (if (result f64)
   (f64.eq
    (local.get $0)
    (local.get $0)
   )
   (local.get $0)
   (f64.const 0)
  )
 )
)
