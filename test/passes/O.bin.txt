(module
 (type $i64_=>_i64 (func (param i64) (result i64)))
 (export "fac-rec" (func $0))
 (export "fac-rec-named" (func $1))
 (export "fac-iter" (func $2))
 (export "fac-iter-named" (func $3))
 (export "fac-opt" (func $4))
 (func $0 (param $0 i64) (result i64)
  local.get $0
  i64.eqz
  if (result i64)
   i64.const 1
  else
   local.get $0
   i64.const 1
   i64.sub
   call $0
   local.get $0
   i64.mul
  end
 )
 (func $1 (param $0 i64) (result i64)
  local.get $0
  i64.eqz
  if (result i64)
   i64.const 1
  else
   local.get $0
   i64.const 1
   i64.sub
   call $1
   local.get $0
   i64.mul
  end
 )
 (func $2 (param $0 i64) (result i64)
  unreachable
 )
 (func $3 (param $0 i64) (result i64)
  (local $1 i64)
  i64.const 1
  local.set $1
  loop $label$3
   local.get $0
   i64.eqz
   i32.eqz
   if
    local.get $0
    local.get $1
    i64.mul
    local.set $1
    local.get $0
    i64.const 1
    i64.sub
    local.set $0
    br $label$3
   end
  end
  local.get $1
 )
 (func $4 (param $0 i64) (result i64)
  (local $1 i64)
  i64.const 1
  local.set $1
  local.get $0
  i64.const 2
  i64.ge_s
  if
   loop $label$3
    local.get $0
    local.get $1
    i64.mul
    local.set $1
    local.get $0
    i64.const -1
    i64.add
    local.tee $0
    i64.const 1
    i64.gt_s
    br_if $label$3
   end
  end
  local.get $1
 )
)
