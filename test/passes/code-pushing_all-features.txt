(module
 (type $none_=>_none (func))
 (type $i32_=>_none (func (param i32)))
 (event $e (attr 0) (param i32))
 (func $cant-push-past-call
  (local $x i32)
  (block $out
   (local.set $x
    (i32.const 1)
   )
   (call $cant-push-past-call)
   (drop
    (i32.const 1)
   )
   (br_if $out
    (i32.const 2)
   )
   (drop
    (local.get $x)
   )
  )
 )
 (func $cant-push-past-throw
  (local $x i32)
  (block $out
   (local.set $x
    (i32.const 1)
   )
   (throw $e
    (i32.const 0)
   )
   (drop
    (i32.const 1)
   )
   (br_if $out
    (i32.const 2)
   )
   (drop
    (local.get $x)
   )
  )
 )
 (func $can-push-past-try
  (local $x i32)
  (block $out
   (try $try
    (do
     (throw $e
      (i32.const 0)
     )
    )
    (catch_all
     (nop)
    )
   )
   (drop
    (i32.const 1)
   )
   (br_if $out
    (i32.const 2)
   )
   (local.set $x
    (i32.const 1)
   )
   (drop
    (local.get $x)
   )
  )
 )
 (func $foo
  (nop)
 )
 (func $cant-push-past-try
  (local $x i32)
  (block $out
   (local.set $x
    (i32.const 1)
   )
   (try $try
    (do
     (call $foo)
    )
    (catch $e
     (drop
      (pop i32)
     )
    )
   )
   (drop
    (i32.const 1)
   )
   (br_if $out
    (i32.const 2)
   )
   (drop
    (local.get $x)
   )
  )
 )
 (func $cant-push-past-rethrow-within-catch
  (local $x i32)
  (block $out
   (local.set $x
    (i32.const 1)
   )
   (try $l0
    (do
     (throw $e
      (i32.const 0)
     )
    )
    (catch_all
     (rethrow $l0)
    )
   )
   (drop
    (i32.const 1)
   )
   (br_if $out
    (i32.const 2)
   )
   (drop
    (local.get $x)
   )
  )
 )
)
