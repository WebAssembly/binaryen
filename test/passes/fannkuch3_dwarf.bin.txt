DWARF debug info
================

Contains section .debug_info (851 bytes)
Contains section .debug_loc (1073 bytes)
Contains section .debug_ranges (88 bytes)
Contains section .debug_abbrev (333 bytes)
Contains section .debug_line (1477 bytes)
Contains section .debug_str (434 bytes)

.debug_abbrev contents:
Abbrev table for offset: 0x00000000
[1] DW_TAG_compile_unit	DW_CHILDREN_yes
	DW_AT_producer	DW_FORM_strp
	DW_AT_language	DW_FORM_data2
	DW_AT_name	DW_FORM_strp
	DW_AT_stmt_list	DW_FORM_sec_offset
	DW_AT_comp_dir	DW_FORM_strp
	DW_AT_low_pc	DW_FORM_addr
	DW_AT_ranges	DW_FORM_sec_offset

[2] DW_TAG_pointer_type	DW_CHILDREN_no
	DW_AT_type	DW_FORM_ref4

[3] DW_TAG_structure_type	DW_CHILDREN_yes
	DW_AT_calling_convention	DW_FORM_data1
	DW_AT_name	DW_FORM_strp
	DW_AT_byte_size	DW_FORM_data1
	DW_AT_decl_file	DW_FORM_data1
	DW_AT_decl_line	DW_FORM_data1

[4] DW_TAG_member	DW_CHILDREN_no
	DW_AT_name	DW_FORM_strp
	DW_AT_type	DW_FORM_ref4
	DW_AT_decl_file	DW_FORM_data1
	DW_AT_decl_line	DW_FORM_data1
	DW_AT_data_member_location	DW_FORM_data1

[5] DW_TAG_base_type	DW_CHILDREN_no
	DW_AT_name	DW_FORM_strp
	DW_AT_encoding	DW_FORM_data1
	DW_AT_byte_size	DW_FORM_data1

[6] DW_TAG_namespace	DW_CHILDREN_yes
	DW_AT_name	DW_FORM_strp

[7] DW_TAG_typedef	DW_CHILDREN_no
	DW_AT_type	DW_FORM_ref4
	DW_AT_name	DW_FORM_strp
	DW_AT_decl_file	DW_FORM_data1
	DW_AT_decl_line	DW_FORM_data1

[8] DW_TAG_unspecified_type	DW_CHILDREN_no
	DW_AT_name	DW_FORM_strp

[9] DW_TAG_imported_declaration	DW_CHILDREN_no
	DW_AT_decl_file	DW_FORM_data1
	DW_AT_decl_line	DW_FORM_data1
	DW_AT_import	DW_FORM_ref4

[10] DW_TAG_subprogram	DW_CHILDREN_yes
	DW_AT_low_pc	DW_FORM_addr
	DW_AT_high_pc	DW_FORM_data4
	DW_AT_frame_base	DW_FORM_exprloc
	DW_AT_GNU_all_call_sites	DW_FORM_flag_present
	DW_AT_linkage_name	DW_FORM_strp
	DW_AT_name	DW_FORM_strp
	DW_AT_decl_file	DW_FORM_data1
	DW_AT_decl_line	DW_FORM_data1
	DW_AT_type	DW_FORM_ref4
	DW_AT_external	DW_FORM_flag_present

[11] DW_TAG_formal_parameter	DW_CHILDREN_no
	DW_AT_name	DW_FORM_strp
	DW_AT_decl_file	DW_FORM_data1
	DW_AT_decl_line	DW_FORM_data1
	DW_AT_type	DW_FORM_ref4

[12] DW_TAG_variable	DW_CHILDREN_no
	DW_AT_name	DW_FORM_strp
	DW_AT_decl_file	DW_FORM_data1
	DW_AT_decl_line	DW_FORM_data1
	DW_AT_type	DW_FORM_ref4

[13] DW_TAG_variable	DW_CHILDREN_no
	DW_AT_location	DW_FORM_sec_offset
	DW_AT_name	DW_FORM_strp
	DW_AT_decl_file	DW_FORM_data1
	DW_AT_decl_line	DW_FORM_data1
	DW_AT_type	DW_FORM_ref4

[14] DW_TAG_lexical_block	DW_CHILDREN_yes
	DW_AT_ranges	DW_FORM_sec_offset

[15] DW_TAG_GNU_call_site	DW_CHILDREN_no
	DW_AT_low_pc	DW_FORM_addr

[16] DW_TAG_GNU_call_site	DW_CHILDREN_no
	DW_AT_abstract_origin	DW_FORM_ref4
	DW_AT_low_pc	DW_FORM_addr

[17] DW_TAG_subprogram	DW_CHILDREN_yes
	DW_AT_name	DW_FORM_strp
	DW_AT_decl_file	DW_FORM_data1
	DW_AT_decl_line	DW_FORM_data1
	DW_AT_declaration	DW_FORM_flag_present
	DW_AT_external	DW_FORM_flag_present

[18] DW_TAG_formal_parameter	DW_CHILDREN_no
	DW_AT_type	DW_FORM_ref4

[19] DW_TAG_pointer_type	DW_CHILDREN_no

[20] DW_TAG_subprogram	DW_CHILDREN_yes
	DW_AT_linkage_name	DW_FORM_strp
	DW_AT_name	DW_FORM_strp
	DW_AT_decl_file	DW_FORM_data1
	DW_AT_decl_line	DW_FORM_data1
	DW_AT_type	DW_FORM_ref4
	DW_AT_inline	DW_FORM_data1

[21] DW_TAG_label	DW_CHILDREN_no
	DW_AT_name	DW_FORM_strp
	DW_AT_decl_file	DW_FORM_data1
	DW_AT_decl_line	DW_FORM_data1

[22] DW_TAG_lexical_block	DW_CHILDREN_yes

[23] DW_TAG_subprogram	DW_CHILDREN_yes
	DW_AT_low_pc	DW_FORM_addr
	DW_AT_high_pc	DW_FORM_data4
	DW_AT_frame_base	DW_FORM_exprloc
	DW_AT_GNU_all_call_sites	DW_FORM_flag_present
	DW_AT_name	DW_FORM_strp
	DW_AT_decl_file	DW_FORM_data1
	DW_AT_decl_line	DW_FORM_data1
	DW_AT_type	DW_FORM_ref4
	DW_AT_external	DW_FORM_flag_present

[24] DW_TAG_inlined_subroutine	DW_CHILDREN_yes
	DW_AT_abstract_origin	DW_FORM_ref4
	DW_AT_low_pc	DW_FORM_addr
	DW_AT_high_pc	DW_FORM_data4
	DW_AT_call_file	DW_FORM_data1
	DW_AT_call_line	DW_FORM_data1
	DW_AT_call_column	DW_FORM_data1

[25] DW_TAG_formal_parameter	DW_CHILDREN_no
	DW_AT_abstract_origin	DW_FORM_ref4

[26] DW_TAG_variable	DW_CHILDREN_no
	DW_AT_location	DW_FORM_sec_offset
	DW_AT_abstract_origin	DW_FORM_ref4

[27] DW_TAG_variable	DW_CHILDREN_no
	DW_AT_abstract_origin	DW_FORM_ref4

[28] DW_TAG_label	DW_CHILDREN_no
	DW_AT_abstract_origin	DW_FORM_ref4
	DW_AT_low_pc	DW_FORM_addr


.debug_info contents:
0x00000000: Compile Unit: length = 0x0000034f version = 0x0004 abbr_offset = 0x0000 addr_size = 0x04 (next unit at 0x00000353)

0x0000000b: DW_TAG_compile_unit [1] *
              DW_AT_producer [DW_FORM_strp]	( .debug_str[0x00000000] = "clang version 11.0.0 (https://github.com/llvm/llvm-project.git 313d89724ce3ccf66c1c51849903e1e6d184dd85)")
              DW_AT_language [DW_FORM_data2]	(DW_LANG_C_plus_plus)
              DW_AT_name [DW_FORM_strp]	( .debug_str[0x00000069] = "/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
              DW_AT_stmt_list [DW_FORM_sec_offset]	(0x00000000)
              DW_AT_comp_dir [DW_FORM_strp]	( .debug_str[0x000000a9] = "/usr/local/google/home/azakai/Dev/2-binaryen")
              DW_AT_low_pc [DW_FORM_addr]	(0x0000000000000000)
              DW_AT_ranges [DW_FORM_sec_offset]	(0x00000040
                 [0x00000006, 0x0000039d)
                 [0x0000039f, 0x000006e1))

0x00000026:   DW_TAG_pointer_type [2]  
                DW_AT_type [DW_FORM_ref4]	(cu + 0x002b => {0x0000002b} "worker_args")

0x0000002b:   DW_TAG_structure_type [3] *
                DW_AT_calling_convention [DW_FORM_data1]	(DW_CC_pass_by_value)
                DW_AT_name [DW_FORM_strp]	( .debug_str[0x000000e3] = "worker_args")
                DW_AT_byte_size [DW_FORM_data1]	(0x0c)
                DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                DW_AT_decl_line [DW_FORM_data1]	(20)

0x00000034:     DW_TAG_member [4]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x000000d6] = "i")
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(21)
                  DW_AT_data_member_location [DW_FORM_data1]	(0x00)

0x00000040:     DW_TAG_member [4]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x000000dc] = "n")
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(21)
                  DW_AT_data_member_location [DW_FORM_data1]	(0x04)

0x0000004c:     DW_TAG_member [4]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x000000de] = "next")
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0026 => {0x00000026} "worker_args*")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(22)
                  DW_AT_data_member_location [DW_FORM_data1]	(0x08)

0x00000058:     NULL

0x00000059:   DW_TAG_base_type [5]  
                DW_AT_name [DW_FORM_strp]	( .debug_str[0x000000d8] = "int")
                DW_AT_encoding [DW_FORM_data1]	(DW_ATE_signed)
                DW_AT_byte_size [DW_FORM_data1]	(0x04)

0x00000060:   DW_TAG_pointer_type [2]  
                DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x00000065:   DW_TAG_namespace [6] *
                DW_AT_name [DW_FORM_strp]	( .debug_str[0x000000ef] = "std")

0x0000006a:     DW_TAG_typedef [7]  
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0076 => {0x00000076} "decltype(nullptr)")
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x00000105] = "nullptr_t")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/system/include/libcxx/__nullptr")
                  DW_AT_decl_line [DW_FORM_data1]	(57)

0x00000075:     NULL

0x00000076:   DW_TAG_unspecified_type [8]  
                DW_AT_name [DW_FORM_strp]	( .debug_str[0x000000f3] = "decltype(nullptr)")

0x0000007b:   DW_TAG_imported_declaration [9]  
                DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/system/include/libcxx/stddef.h")
                DW_AT_decl_line [DW_FORM_data1]	(52)
                DW_AT_import [DW_FORM_ref4]	(cu + 0x006a => {0x0000006a})

0x00000082:   DW_TAG_subprogram [10] *
                DW_AT_low_pc [DW_FORM_addr]	(0x0000000000000006)
                DW_AT_high_pc [DW_FORM_data4]	(0x00000397)
                DW_AT_frame_base [DW_FORM_exprloc]	(DW_OP_WASM_location 0x1 +0, DW_OP_stack_value)
                DW_AT_GNU_all_call_sites [DW_FORM_flag_present]	(true)
                DW_AT_linkage_name [DW_FORM_strp]	( .debug_str[0x00000166] = "_Z15fannkuch_workerPv")
                DW_AT_name [DW_FORM_strp]	( .debug_str[0x0000017c] = "fannkuch_worker")
                DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                DW_AT_decl_line [DW_FORM_data1]	(26)
                DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")
                DW_AT_external [DW_FORM_flag_present]	(true)

0x0000009e:     DW_TAG_formal_parameter [11]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x00000191] = "_arg")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(26)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x01a7 => {0x000001a7} "*")

0x000000a9:     DW_TAG_variable [12]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x00000133] = "args")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(28)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0026 => {0x00000026} "worker_args*")

0x000000b4:     DW_TAG_variable [13]  
                  DW_AT_location [DW_FORM_sec_offset]	(0x00000000: 
                     [0xffffffff,  0x00000006): 
                     [0x00000000,  0x0000003c): DW_OP_consts +0, DW_OP_stack_value)
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x0000014c] = "maxflips")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(30)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x000000c3:     DW_TAG_variable [13]  
                  DW_AT_location [DW_FORM_sec_offset]	(0x0000001d: 
                     [0xffffffff,  0x00000006): 
                     [0x00000007,  0x0000003c): DW_OP_consts +0, DW_OP_stack_value
                     [0x00000052,  0x00000057): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value
                     [0x000000ec,  0x000000f5): DW_OP_consts +1, DW_OP_stack_value
                     [0x00000131,  0x0000013b): DW_OP_WASM_location 0x0 +0, DW_OP_stack_value
                     [0x00000179,  0x00000186): DW_OP_consts +0, DW_OP_stack_value
                     [0x00000264,  0x0000026f): DW_OP_consts +0, DW_OP_stack_value
                     [0x00000275,  0x0000027e): DW_OP_consts +1, DW_OP_stack_value
                     [0x000002ba,  0x000002c4): DW_OP_WASM_location 0x0 +0, DW_OP_stack_value
                     [0x00000302,  0x0000030f): DW_OP_consts +0, DW_OP_stack_value)
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x000000d6] = "i")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(30)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x000000d2:     DW_TAG_variable [13]  
                  DW_AT_location [DW_FORM_sec_offset]	(0x000000a5: 
                     [0xffffffff,  0x00000006): 
                     [0x0000000e,  0x0000003c): DW_OP_WASM_location 0x0 +2, DW_OP_stack_value)
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x000000dc] = "n")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(30)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x000000e1:     DW_TAG_variable [13]  
                  DW_AT_location [DW_FORM_sec_offset]	(0x000000c3: 
                     [0xffffffff,  0x00000006): 
                     [0x0000001b,  0x0000003c): DW_OP_WASM_location 0x0 +4, DW_OP_stack_value)
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x0000013e] = "perm1")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(29)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0060 => {0x00000060} "int*")

0x000000f0:     DW_TAG_variable [13]  
                  DW_AT_location [DW_FORM_sec_offset]	(0x000000e1: 
                     [0xffffffff,  0x00000006): 
                     [0x00000025,  0x0000003c): DW_OP_WASM_location 0x0 +5, DW_OP_stack_value)
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x00000196] = "perm")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(29)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0060 => {0x00000060} "int*")

0x000000ff:     DW_TAG_variable [13]  
                  DW_AT_location [DW_FORM_sec_offset]	(0x000000ff: 
                     [0xffffffff,  0x00000006): 
                     [0x0000002f,  0x0000003c): DW_OP_WASM_location 0x0 +6, DW_OP_stack_value)
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x00000144] = "count")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(29)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0060 => {0x00000060} "int*")

0x0000010e:     DW_TAG_variable [13]  
                  DW_AT_location [DW_FORM_sec_offset]	(0x0000011d: 
                     [0xffffffff,  0x00000006): 
                     [0x000001e2,  0x000001e7): DW_OP_WASM_location 0x0 +2, DW_OP_stack_value
                     [0x0000036b,  0x00000370): DW_OP_WASM_location 0x0 +2, DW_OP_stack_value)
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x0000014a] = "r")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(30)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x0000011d:     DW_TAG_variable [13]  
                  DW_AT_location [DW_FORM_sec_offset]	(0x00000149: 
                     [0xffffffff,  0x00000006): 
                     [0x000000cf,  0x000000e6): DW_OP_consts +0, DW_OP_stack_value
                     [0x000000ec,  0x000000f5): DW_OP_WASM_location 0x0 +13, DW_OP_stack_value
                     [0x0000015a,  0x00000162): DW_OP_WASM_location 0x0 +0, DW_OP_stack_value
                     [0x00000264,  0x0000026f): DW_OP_consts +0, DW_OP_stack_value
                     [0x00000275,  0x0000027e): DW_OP_WASM_location 0x0 +10, DW_OP_stack_value
                     [0x000002e3,  0x000002eb): DW_OP_WASM_location 0x0 +0, DW_OP_stack_value)
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x00000155] = "flips")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(30)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x0000012c:     DW_TAG_variable [13]  
                  DW_AT_location [DW_FORM_sec_offset]	(0x000001ab: 
                     [0xffffffff,  0x00000006): 
                     [0x000000e2,  0x000000e6): DW_OP_WASM_location 0x0 +12, DW_OP_stack_value
                     [0x0000026b,  0x0000026f): DW_OP_WASM_location 0x0 +16, DW_OP_stack_value)
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x0000019b] = "k")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(30)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x0000013b:     DW_TAG_variable [13]  
                  DW_AT_location [DW_FORM_sec_offset]	(0x000001d7: 
                     [0xffffffff,  0x00000006): 
                     [0x000000fc,  0x00000100): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value
                     [0x00000138,  0x0000013b): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value
                     [0x00000285,  0x00000289): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value
                     [0x000002c1,  0x000002c4): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value)
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x0000019d] = "j")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(30)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x0000014a:     DW_TAG_variable [13]  
                  DW_AT_location [DW_FORM_sec_offset]	(0x0000021f: 
                     [0xffffffff,  0x00000006): 
                     [0x00000111,  0x0000013b): DW_OP_WASM_location 0x0 +15, DW_OP_stack_value
                     [0x0000014c,  0x00000162): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value
                     [0x0000029a,  0x000002c4): DW_OP_WASM_location 0x0 +14, DW_OP_stack_value
                     [0x000002d5,  0x000002eb): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value)
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x0000019f] = "tmp")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(30)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x00000159:     DW_TAG_lexical_block [14] *
                  DW_AT_ranges [DW_FORM_sec_offset]	(0x00000000
                     [0x00000185, 0x000001c3)
                     [0x000001ed, 0x000001f6)
                     [0x0000030e, 0x0000034c)
                     [0x00000376, 0x0000037f))

0x0000015e:       DW_TAG_variable [12]  
                    DW_AT_name [DW_FORM_strp]	( .debug_str[0x00000163] = "p0")
                    DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                    DW_AT_decl_line [DW_FORM_data1]	(74)
                    DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x00000169:       NULL

0x0000016a:     DW_TAG_GNU_call_site [15]  
                  DW_AT_low_pc [DW_FORM_addr]	(0x000000000000001f)

0x0000016f:     DW_TAG_GNU_call_site [15]  
                  DW_AT_low_pc [DW_FORM_addr]	(0x0000000000000029)

0x00000174:     DW_TAG_GNU_call_site [15]  
                  DW_AT_low_pc [DW_FORM_addr]	(0x0000000000000033)

0x00000179:     DW_TAG_GNU_call_site [15]  
                  DW_AT_low_pc [DW_FORM_addr]	(0x00000000000000e1)

0x0000017e:     DW_TAG_GNU_call_site [16]  
                  DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x019a => {0x0000019a} "free")
                  DW_AT_low_pc [DW_FORM_addr]	(0x000000000000038a)

0x00000187:     DW_TAG_GNU_call_site [16]  
                  DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x019a => {0x0000019a} "free")
                  DW_AT_low_pc [DW_FORM_addr]	(0x0000000000000392)

0x00000190:     DW_TAG_GNU_call_site [16]  
                  DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x019a => {0x0000019a} "free")
                  DW_AT_low_pc [DW_FORM_addr]	(0x000000000000039a)

0x00000199:     NULL

0x0000019a:   DW_TAG_subprogram [17] *
                DW_AT_name [DW_FORM_strp]	( .debug_str[0x0000010f] = "free")
                DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/system/include/libc/stdlib.h")
                DW_AT_decl_line [DW_FORM_data1]	(41)
                DW_AT_declaration [DW_FORM_flag_present]	(true)
                DW_AT_external [DW_FORM_flag_present]	(true)

0x000001a1:     DW_TAG_formal_parameter [18]  
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x01a7 => {0x000001a7} "*")

0x000001a6:     NULL

0x000001a7:   DW_TAG_pointer_type [19]  

0x000001a8:   DW_TAG_subprogram [20] *
                DW_AT_linkage_name [DW_FORM_strp]	( .debug_str[0x00000114] = "_ZL8fannkuchi")
                DW_AT_name [DW_FORM_strp]	( .debug_str[0x00000122] = "fannkuch")
                DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                DW_AT_decl_line [DW_FORM_data1]	(87)
                DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")
                DW_AT_inline [DW_FORM_data1]	(DW_INL_inlined)

0x000001b8:     DW_TAG_formal_parameter [11]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x000000dc] = "n")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(87)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x000001c3:     DW_TAG_variable [12]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x0000012b] = "showmax")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(90)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x000001ce:     DW_TAG_variable [12]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x00000133] = "args")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(89)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0026 => {0x00000026} "worker_args*")

0x000001d9:     DW_TAG_variable [12]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x000000d6] = "i")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(91)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x000001e4:     DW_TAG_variable [12]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x00000138] = "targs")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(89)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0026 => {0x00000026} "worker_args*")

0x000001ef:     DW_TAG_variable [12]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x0000013e] = "perm1")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(91)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0060 => {0x00000060} "int*")

0x000001fa:     DW_TAG_variable [12]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x00000144] = "count")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(91)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0060 => {0x00000060} "int*")

0x00000205:     DW_TAG_variable [12]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x0000014a] = "r")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(91)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x00000210:     DW_TAG_variable [12]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x0000014c] = "maxflips")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(91)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x0000021b:     DW_TAG_variable [12]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x00000155] = "flips")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(91)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x00000226:     DW_TAG_label [21]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x0000015b] = "cleanup")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(137)

0x0000022d:     DW_TAG_lexical_block [22] *

0x0000022e:       DW_TAG_variable [12]  
                    DW_AT_name [DW_FORM_strp]	( .debug_str[0x00000163] = "p0")
                    DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                    DW_AT_decl_line [DW_FORM_data1]	(125)
                    DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x00000239:       NULL

0x0000023a:     NULL

0x0000023b:   DW_TAG_subprogram [23] *
                DW_AT_low_pc [DW_FORM_addr]	(0x000000000000039f)
                DW_AT_high_pc [DW_FORM_data4]	(0x00000342)
                DW_AT_frame_base [DW_FORM_exprloc]	(DW_OP_WASM_location 0x0 +2, DW_OP_stack_value)
                DW_AT_GNU_all_call_sites [DW_FORM_flag_present]	(true)
                DW_AT_name [DW_FORM_strp]	( .debug_str[0x0000018c] = "main")
                DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                DW_AT_decl_line [DW_FORM_data1]	(152)
                DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")
                DW_AT_external [DW_FORM_flag_present]	(true)

0x00000253:     DW_TAG_formal_parameter [11]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x000001a3] = "argc")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(152)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x0000025e:     DW_TAG_formal_parameter [11]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x000001a8] = "argv")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(152)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0341 => {0x00000341} "char**")

0x00000269:     DW_TAG_variable [13]  
                  DW_AT_location [DW_FORM_sec_offset]	(0x00000267: 
                     [0xffffffff,  0x0000039f): 
                     [0x00000032,  0x00000037): DW_OP_WASM_location 0x0 +4, DW_OP_stack_value)
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x000000dc] = "n")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(153)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x00000278:     DW_TAG_inlined_subroutine [24] *
                  DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x01a8 => {0x000001a8} "_ZL8fannkuchi")
                  DW_AT_low_pc [DW_FORM_addr]	(0x00000000000003ed)
                  DW_AT_high_pc [DW_FORM_data4]	(0x000002c8)
                  DW_AT_call_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_call_line [DW_FORM_data1]	(159)
                  DW_AT_call_column [DW_FORM_data1]	(0x29)

0x00000288:       DW_TAG_formal_parameter [25]  
                    DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x01b8 => {0x000001b8} "n")

0x0000028d:       DW_TAG_variable [26]  
                    DW_AT_location [DW_FORM_sec_offset]	(0x00000285: 
                       [0xffffffff,  0x0000039f): 
                       [0x0000004c,  0x00000055): DW_OP_consts +30, DW_OP_stack_value)
                    DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x01c3 => {0x000001c3} "showmax")

0x00000296:       DW_TAG_variable [26]  
                    DW_AT_location [DW_FORM_sec_offset]	(0x000002a2: 
                       [0xffffffff,  0x0000039f): 
                       [0x0000004c,  0x00000055): DW_OP_lit0, DW_OP_stack_value
                       [0x000002f8,  0x00000314): DW_OP_WASM_location 0x0 +6, DW_OP_stack_value)
                    DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x01ce => {0x000001ce} "args")

0x0000029f:       DW_TAG_variable [26]  
                    DW_AT_location [DW_FORM_sec_offset]	(0x000002cc: 
                       [0xffffffff,  0x0000039f): 
                       [0x0000004c,  0x00000055): DW_OP_consts +0, DW_OP_stack_value
                       [0x0000008e,  0x00000093): DW_OP_WASM_location 0x0 +0, DW_OP_stack_value
                       [0x00000099,  0x000000c1): DW_OP_consts +0, DW_OP_stack_value
                       [0x000000d7,  0x000000dc): DW_OP_WASM_location 0x0 +0, DW_OP_stack_value
                       [0x000000f5,  0x000000f9): DW_OP_consts +0, DW_OP_stack_value
                       [0x00000127,  0x0000012c): DW_OP_WASM_location 0x0 +0, DW_OP_stack_value
                       [0x00000178,  0x00000188): DW_OP_consts +0, DW_OP_stack_value
                       [0x000001fa,  0x0000020c): DW_OP_consts +0, DW_OP_stack_value
                       [0x00000241,  0x00000255): DW_OP_consts +0, DW_OP_stack_value)
                    DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x01d9 => {0x000001d9} "i")

0x000002a8:       DW_TAG_variable [27]  
                    DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x01e4 => {0x000001e4} "targs")

0x000002ad:       DW_TAG_variable [26]  
                    DW_AT_location [DW_FORM_sec_offset]	(0x00000354: 
                       [0xffffffff,  0x0000039f): 
                       [0x000000a8,  0x000000c1): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value)
                    DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x01ef => {0x000001ef} "perm1")

0x000002b6:       DW_TAG_variable [26]  
                    DW_AT_location [DW_FORM_sec_offset]	(0x00000372: 
                       [0xffffffff,  0x0000039f): 
                       [0x000000b2,  0x000000c1): DW_OP_WASM_location 0x0 +5, DW_OP_stack_value)
                    DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x01fa => {0x000001fa} "count")

0x000002bf:       DW_TAG_variable [26]  
                    DW_AT_location [DW_FORM_sec_offset]	(0x00000390: 
                       [0xffffffff,  0x0000039f): 
                       [0x000001e6,  0x000001ed): DW_OP_WASM_location 0x0 +6, DW_OP_stack_value
                       [0x000002b3,  0x000002ba): DW_OP_WASM_location 0x0 +6, DW_OP_stack_value)
                    DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x0205 => {0x00000205} "r")

0x000002c8:       DW_TAG_variable [26]  
                    DW_AT_location [DW_FORM_sec_offset]	(0x000003e8: 
                       [0xffffffff,  0x0000039f): 
                       [0x000002d6,  0x000002e1): DW_OP_consts +0, DW_OP_stack_value
                       [0x0000030c,  0x00000314): DW_OP_WASM_location 0x0 +0, DW_OP_stack_value)
                    DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x0210 => {0x00000210} "maxflips")

0x000002d1:       DW_TAG_variable [26]  
                    DW_AT_location [DW_FORM_sec_offset]	(0x00000413: 
                       [0xffffffff,  0x0000039f): 
                       [0x000002f1,  0x00000314): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value)
                    DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x021b => {0x0000021b} "flips")

0x000002da:       DW_TAG_label [28]  
                    DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x0226 => {0x00000226} "cleanup")
                    DW_AT_low_pc [DW_FORM_addr]	(0x0000000000000661)

0x000002e3:       DW_TAG_lexical_block [14] *
                    DW_AT_ranges [DW_FORM_sec_offset]	(0x00000028
                       [0x00000517, 0x0000055e)
                       [0x000005de, 0x0000062b))

0x000002e8:         DW_TAG_variable [26]  
                      DW_AT_location [DW_FORM_sec_offset]	(0x000003bc: 
                         [0xffffffff,  0x0000039f): 
                         [0x0000017f,  0x00000188): DW_OP_WASM_location 0x0 +8, DW_OP_stack_value
                         [0x00000248,  0x00000255): DW_OP_WASM_location 0x0 +8, DW_OP_stack_value)
                      DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x022e => {0x0000022e} "p0")

0x000002f1:         NULL

0x000002f2:       NULL

0x000002f3:     DW_TAG_GNU_call_site [15]  
                  DW_AT_low_pc [DW_FORM_addr]	(0x00000000000003cf)

0x000002f8:     DW_TAG_GNU_call_site [15]  
                  DW_AT_low_pc [DW_FORM_addr]	(0x00000000000003e3)

0x000002fd:     DW_TAG_GNU_call_site [15]  
                  DW_AT_low_pc [DW_FORM_addr]	(0x000000000000040d)

0x00000302:     DW_TAG_GNU_call_site [15]  
                  DW_AT_low_pc [DW_FORM_addr]	(0x0000000000000445)

0x00000307:     DW_TAG_GNU_call_site [15]  
                  DW_AT_low_pc [DW_FORM_addr]	(0x000000000000044f)

0x0000030c:     DW_TAG_GNU_call_site [15]  
                  DW_AT_low_pc [DW_FORM_addr]	(0x00000000000004be)

0x00000311:     DW_TAG_GNU_call_site [15]  
                  DW_AT_low_pc [DW_FORM_addr]	(0x00000000000004d4)

0x00000316:     DW_TAG_GNU_call_site [15]  
                  DW_AT_low_pc [DW_FORM_addr]	(0x00000000000005a1)

0x0000031b:     DW_TAG_GNU_call_site [16]  
                  DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x019a => {0x0000019a} "free")
                  DW_AT_low_pc [DW_FORM_addr]	(0x0000000000000669)

0x00000324:     DW_TAG_GNU_call_site [16]  
                  DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x019a => {0x0000019a} "free")
                  DW_AT_low_pc [DW_FORM_addr]	(0x0000000000000671)

0x0000032d:     DW_TAG_GNU_call_site [15]  
                  DW_AT_low_pc [DW_FORM_addr]	(0x000000000000068e)

0x00000332:     DW_TAG_GNU_call_site [16]  
                  DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x019a => {0x0000019a} "free")
                  DW_AT_low_pc [DW_FORM_addr]	(0x000000000000069f)

0x0000033b:     DW_TAG_GNU_call_site [15]  
                  DW_AT_low_pc [DW_FORM_addr]	(0x00000000000006d1)

0x00000340:     NULL

0x00000341:   DW_TAG_pointer_type [2]  
                DW_AT_type [DW_FORM_ref4]	(cu + 0x0346 => {0x00000346} "char*")

0x00000346:   DW_TAG_pointer_type [2]  
                DW_AT_type [DW_FORM_ref4]	(cu + 0x034b => {0x0000034b} "char")

0x0000034b:   DW_TAG_base_type [5]  
                DW_AT_name [DW_FORM_strp]	( .debug_str[0x000001ad] = "char")
                DW_AT_encoding [DW_FORM_data1]	(DW_ATE_signed_char)
                DW_AT_byte_size [DW_FORM_data1]	(0x01)

0x00000352:   NULL

.debug_loc contents:
0x00000000: 
            [0xffffffff,  0x00000006): 
            [0x00000000,  0x0000003c): DW_OP_consts +0, DW_OP_stack_value

0x0000001d: 
            [0xffffffff,  0x00000006): 
            [0x00000007,  0x0000003c): DW_OP_consts +0, DW_OP_stack_value
            [0x00000052,  0x00000057): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value
            [0x000000ec,  0x000000f5): DW_OP_consts +1, DW_OP_stack_value
            [0x00000131,  0x0000013b): DW_OP_WASM_location 0x0 +0, DW_OP_stack_value
            [0x00000179,  0x00000186): DW_OP_consts +0, DW_OP_stack_value
            [0x00000264,  0x0000026f): DW_OP_consts +0, DW_OP_stack_value
            [0x00000275,  0x0000027e): DW_OP_consts +1, DW_OP_stack_value
            [0x000002ba,  0x000002c4): DW_OP_WASM_location 0x0 +0, DW_OP_stack_value
            [0x00000302,  0x0000030f): DW_OP_consts +0, DW_OP_stack_value

0x000000a5: 
            [0xffffffff,  0x00000006): 
            [0x0000000e,  0x0000003c): DW_OP_WASM_location 0x0 +2, DW_OP_stack_value

0x000000c3: 
            [0xffffffff,  0x00000006): 
            [0x0000001b,  0x0000003c): DW_OP_WASM_location 0x0 +4, DW_OP_stack_value

0x000000e1: 
            [0xffffffff,  0x00000006): 
            [0x00000025,  0x0000003c): DW_OP_WASM_location 0x0 +5, DW_OP_stack_value

0x000000ff: 
            [0xffffffff,  0x00000006): 
            [0x0000002f,  0x0000003c): DW_OP_WASM_location 0x0 +6, DW_OP_stack_value

0x0000011d: 
            [0xffffffff,  0x00000006): 
            [0x000001e2,  0x000001e7): DW_OP_WASM_location 0x0 +2, DW_OP_stack_value
            [0x0000036b,  0x00000370): DW_OP_WASM_location 0x0 +2, DW_OP_stack_value

0x00000149: 
            [0xffffffff,  0x00000006): 
            [0x000000cf,  0x000000e6): DW_OP_consts +0, DW_OP_stack_value
            [0x000000ec,  0x000000f5): DW_OP_WASM_location 0x0 +13, DW_OP_stack_value
            [0x0000015a,  0x00000162): DW_OP_WASM_location 0x0 +0, DW_OP_stack_value
            [0x00000264,  0x0000026f): DW_OP_consts +0, DW_OP_stack_value
            [0x00000275,  0x0000027e): DW_OP_WASM_location 0x0 +10, DW_OP_stack_value
            [0x000002e3,  0x000002eb): DW_OP_WASM_location 0x0 +0, DW_OP_stack_value

0x000001ab: 
            [0xffffffff,  0x00000006): 
            [0x000000e2,  0x000000e6): DW_OP_WASM_location 0x0 +12, DW_OP_stack_value
            [0x0000026b,  0x0000026f): DW_OP_WASM_location 0x0 +16, DW_OP_stack_value

0x000001d7: 
            [0xffffffff,  0x00000006): 
            [0x000000fc,  0x00000100): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value
            [0x00000138,  0x0000013b): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value
            [0x00000285,  0x00000289): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value
            [0x000002c1,  0x000002c4): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value

0x0000021f: 
            [0xffffffff,  0x00000006): 
            [0x00000111,  0x0000013b): DW_OP_WASM_location 0x0 +15, DW_OP_stack_value
            [0x0000014c,  0x00000162): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value
            [0x0000029a,  0x000002c4): DW_OP_WASM_location 0x0 +14, DW_OP_stack_value
            [0x000002d5,  0x000002eb): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value

0x00000267: 
            [0xffffffff,  0x0000039f): 
            [0x00000032,  0x00000037): DW_OP_WASM_location 0x0 +4, DW_OP_stack_value

0x00000285: 
            [0xffffffff,  0x0000039f): 
            [0x0000004c,  0x00000055): DW_OP_consts +30, DW_OP_stack_value

0x000002a2: 
            [0xffffffff,  0x0000039f): 
            [0x0000004c,  0x00000055): DW_OP_lit0, DW_OP_stack_value
            [0x000002f8,  0x00000314): DW_OP_WASM_location 0x0 +6, DW_OP_stack_value

0x000002cc: 
            [0xffffffff,  0x0000039f): 
            [0x0000004c,  0x00000055): DW_OP_consts +0, DW_OP_stack_value
            [0x0000008e,  0x00000093): DW_OP_WASM_location 0x0 +0, DW_OP_stack_value
            [0x00000099,  0x000000c1): DW_OP_consts +0, DW_OP_stack_value
            [0x000000d7,  0x000000dc): DW_OP_WASM_location 0x0 +0, DW_OP_stack_value
            [0x000000f5,  0x000000f9): DW_OP_consts +0, DW_OP_stack_value
            [0x00000127,  0x0000012c): DW_OP_WASM_location 0x0 +0, DW_OP_stack_value
            [0x00000178,  0x00000188): DW_OP_consts +0, DW_OP_stack_value
            [0x000001fa,  0x0000020c): DW_OP_consts +0, DW_OP_stack_value
            [0x00000241,  0x00000255): DW_OP_consts +0, DW_OP_stack_value

0x00000354: 
            [0xffffffff,  0x0000039f): 
            [0x000000a8,  0x000000c1): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value

0x00000372: 
            [0xffffffff,  0x0000039f): 
            [0x000000b2,  0x000000c1): DW_OP_WASM_location 0x0 +5, DW_OP_stack_value

0x00000390: 
            [0xffffffff,  0x0000039f): 
            [0x000001e6,  0x000001ed): DW_OP_WASM_location 0x0 +6, DW_OP_stack_value
            [0x000002b3,  0x000002ba): DW_OP_WASM_location 0x0 +6, DW_OP_stack_value

0x000003bc: 
            [0xffffffff,  0x0000039f): 
            [0x0000017f,  0x00000188): DW_OP_WASM_location 0x0 +8, DW_OP_stack_value
            [0x00000248,  0x00000255): DW_OP_WASM_location 0x0 +8, DW_OP_stack_value

0x000003e8: 
            [0xffffffff,  0x0000039f): 
            [0x000002d6,  0x000002e1): DW_OP_consts +0, DW_OP_stack_value
            [0x0000030c,  0x00000314): DW_OP_WASM_location 0x0 +0, DW_OP_stack_value

0x00000413: 
            [0xffffffff,  0x0000039f): 
            [0x000002f1,  0x00000314): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value

.debug_line contents:
debug_line[0x00000000]
Line table prologue:
    total_length: 0x000005c1
         version: 4
 prologue_length: 0x000000dd
 min_inst_length: 1
max_ops_per_inst: 1
 default_is_stmt: 1
       line_base: -5
      line_range: 14
     opcode_base: 13
standard_opcode_lengths[DW_LNS_copy] = 0
standard_opcode_lengths[DW_LNS_advance_pc] = 1
standard_opcode_lengths[DW_LNS_advance_line] = 1
standard_opcode_lengths[DW_LNS_set_file] = 1
standard_opcode_lengths[DW_LNS_set_column] = 1
standard_opcode_lengths[DW_LNS_negate_stmt] = 0
standard_opcode_lengths[DW_LNS_set_basic_block] = 0
standard_opcode_lengths[DW_LNS_const_add_pc] = 0
standard_opcode_lengths[DW_LNS_fixed_advance_pc] = 1
standard_opcode_lengths[DW_LNS_set_prologue_end] = 0
standard_opcode_lengths[DW_LNS_set_epilogue_begin] = 0
standard_opcode_lengths[DW_LNS_set_isa] = 1
include_directories[  1] = "/usr/local/google/home/azakai/Dev"
file_names[  1]:
           name: "emscripten/tests/fannkuch.cpp"
      dir_index: 1
       mod_time: 0x00000000
         length: 0x00000000
file_names[  2]:
           name: "emscripten/system/include/libcxx/__nullptr"
      dir_index: 1
       mod_time: 0x00000000
         length: 0x00000000
file_names[  3]:
           name: "emscripten/system/include/libcxx/stddef.h"
      dir_index: 1
       mod_time: 0x00000000
         length: 0x00000000
file_names[  4]:
           name: "emscripten/system/include/libc/stdlib.h"
      dir_index: 1
       mod_time: 0x00000000
         length: 0x00000000
0x000000e7: 00 DW_LNE_set_address (0x0000000000000006)
0x000000ee: 03 DW_LNS_advance_line (27)
0x000000f0: 01 DW_LNS_copy
            0x0000000000000006     27      0      1   0             0  is_stmt


0x000000f1: 05 DW_LNS_set_column (14)
0x000000f3: 0a DW_LNS_set_prologue_end
0x000000f4: 7a address += 7,  line += 6
            0x000000000000000d     33     14      1   0             0  is_stmt prologue_end

0x000000f5: 06 DW_LNS_negate_stmt
0x000000f6: 03 DW_LNS_advance_line (0)
0x000000f8: 58 address += 5,  line += 0
            0x0000000000000012      0     14      1   0             0 

0x000000f9: 05 DW_LNS_set_column (27)
0x000000fb: 06 DW_LNS_negate_stmt
0x000000fc: 03 DW_LNS_advance_line (34)
0x000000fe: 4a address += 4,  line += 0
            0x0000000000000016     34     27      1   0             0  is_stmt

0x000000ff: 05 DW_LNS_set_column (18)
0x00000101: 06 DW_LNS_negate_stmt
0x00000102: 20 address += 1,  line += 0
            0x0000000000000017     34     18      1   0             0 

0x00000103: 05 DW_LNS_set_column (17)
0x00000105: 06 DW_LNS_negate_stmt
0x00000106: 9f address += 10,  line += 1
            0x0000000000000021     35     17      1   0             0  is_stmt

0x00000107: 05 DW_LNS_set_column (18)
0x00000109: 9f address += 10,  line += 1
            0x000000000000002b     36     18      1   0             0  is_stmt

0x0000010a: 06 DW_LNS_negate_stmt
0x0000010b: 03 DW_LNS_advance_line (0)
0x0000010d: 9e address += 10,  line += 0
            0x0000000000000035      0     18      1   0             0 

0x0000010e: 06 DW_LNS_negate_stmt
0x0000010f: 03 DW_LNS_advance_line (37)
0x00000111: 66 address += 6,  line += 0
            0x000000000000003b     37     18      1   0             0  is_stmt

0x00000112: 05 DW_LNS_set_column (4)
0x00000114: 06 DW_LNS_negate_stmt
0x00000115: 58 address += 5,  line += 0
            0x0000000000000040     37      4      1   0             0 

0x00000116: 03 DW_LNS_advance_line (0)
0x00000118: 2e address += 2,  line += 0
            0x0000000000000042      0      4      1   0             0 

0x00000119: 05 DW_LNS_set_column (7)
0x0000011b: 06 DW_LNS_negate_stmt
0x0000011c: 03 DW_LNS_advance_line (38)
0x0000011e: 2e address += 2,  line += 0
            0x0000000000000044     38      7      1   0             0  is_stmt

0x0000011f: 05 DW_LNS_set_column (16)
0x00000121: 06 DW_LNS_negate_stmt
0x00000122: 82 address += 8,  line += 0
            0x000000000000004c     38     16      1   0             0 

0x00000123: 05 DW_LNS_set_column (24)
0x00000125: 06 DW_LNS_negate_stmt
0x00000126: 57 address += 5,  line += -1
            0x0000000000000051     37     24      1   0             0  is_stmt

0x00000127: 05 DW_LNS_set_column (18)
0x00000129: 06 DW_LNS_negate_stmt
0x0000012a: 58 address += 5,  line += 0
            0x0000000000000056     37     18      1   0             0 

0x0000012b: 05 DW_LNS_set_column (4)
0x0000012d: 58 address += 5,  line += 0
            0x000000000000005b     37      4      1   0             0 

0x0000012e: 06 DW_LNS_negate_stmt
0x0000012f: 3e address += 3,  line += 2
            0x000000000000005e     39      4      1   0             0  is_stmt

0x00000130: 05 DW_LNS_set_column (16)
0x00000132: 06 DW_LNS_negate_stmt
0x00000133: 2e address += 2,  line += 0
            0x0000000000000060     39     16      1   0             0 

0x00000134: 05 DW_LNS_set_column (4)
0x00000136: 90 address += 9,  line += 0
            0x0000000000000069     39      4      1   0             0 

0x00000137: 05 DW_LNS_set_column (23)
0x00000139: 2e address += 2,  line += 0
            0x000000000000006b     39     23      1   0             0 

0x0000013a: 05 DW_LNS_set_column (19)
0x0000013c: 58 address += 5,  line += 0
            0x0000000000000070     39     19      1   0             0 

0x0000013d: 05 DW_LNS_set_column (4)
0x0000013f: 06 DW_LNS_negate_stmt
0x00000140: 59 address += 5,  line += 1
            0x0000000000000075     40      4      1   0             0  is_stmt

0x00000141: 05 DW_LNS_set_column (17)
0x00000143: 06 DW_LNS_negate_stmt
0x00000144: 82 address += 8,  line += 0
            0x000000000000007d     40     17      1   0             0 

0x00000145: 05 DW_LNS_set_column (18)
0x00000147: 06 DW_LNS_negate_stmt
0x00000148: a9 address += 11,  line += -3
            0x0000000000000088     37     18      1   0             0  is_stmt

0x00000149: 05 DW_LNS_set_column (4)
0x0000014b: 5e address += 5,  line += 6
            0x000000000000008d     43      4      1   0             0  is_stmt

0x0000014c: 06 DW_LNS_negate_stmt
0x0000014d: 03 DW_LNS_advance_line (0)
0x0000014f: 2e address += 2,  line += 0
            0x000000000000008f      0      4      1   0             0 

0x00000150: 05 DW_LNS_set_column (16)
0x00000152: 06 DW_LNS_negate_stmt
0x00000153: 03 DW_LNS_advance_line (44)
0x00000155: 4a address += 4,  line += 0
            0x0000000000000093     44     16      1   0             0  is_stmt

0x00000156: 06 DW_LNS_negate_stmt
0x00000157: 03 DW_LNS_advance_line (0)
0x00000159: 74 address += 7,  line += 0
            0x000000000000009a      0     16      1   0             0 

0x0000015a: 05 DW_LNS_set_column (10)
0x0000015c: 06 DW_LNS_negate_stmt
0x0000015d: 03 DW_LNS_advance_line (45)
0x0000015f: 2e address += 2,  line += 0
            0x000000000000009c     45     10      1   0             0  is_stmt

0x00000160: 05 DW_LNS_set_column (18)
0x00000162: 06 DW_LNS_negate_stmt
0x00000163: 2e address += 2,  line += 0
            0x000000000000009e     45     18      1   0             0 

0x00000164: 05 DW_LNS_set_column (10)
0x00000166: 90 address += 9,  line += 0
            0x00000000000000a7     45     10      1   0             0 

0x00000167: 05 DW_LNS_set_column (23)
0x00000169: 2e address += 2,  line += 0
            0x00000000000000a9     45     23      1   0             0 

0x0000016a: 05 DW_LNS_set_column (16)
0x0000016c: 06 DW_LNS_negate_stmt
0x0000016d: 57 address += 5,  line += -1
            0x00000000000000ae     44     16      1   0             0  is_stmt

0x0000016e: 05 DW_LNS_set_column (0)
0x00000170: 06 DW_LNS_negate_stmt
0x00000171: 03 DW_LNS_advance_line (0)
0x00000173: 74 address += 7,  line += 0
            0x00000000000000b5      0      0      1   0             0 

0x00000174: 05 DW_LNS_set_column (7)
0x00000176: 03 DW_LNS_advance_line (44)
0x00000178: 4a address += 4,  line += 0
            0x00000000000000b9     44      7      1   0             0 

0x00000179: 05 DW_LNS_set_column (11)
0x0000017b: 06 DW_LNS_negate_stmt
0x0000017c: 68 address += 6,  line += 2
            0x00000000000000bf     46     11      1   0             0  is_stmt

0x0000017d: 05 DW_LNS_set_column (28)
0x0000017f: 06 DW_LNS_negate_stmt
0x00000180: ba address += 12,  line += 0
            0x00000000000000cb     46     28      1   0             0 

0x00000181: 05 DW_LNS_set_column (41)
0x00000183: 58 address += 5,  line += 0
            0x00000000000000d0     46     41      1   0             0 

0x00000184: 05 DW_LNS_set_column (21)
0x00000186: 06 DW_LNS_negate_stmt
0x00000187: 5a address += 5,  line += 2
            0x00000000000000d5     48     21      1   0             0  is_stmt

0x00000188: 05 DW_LNS_set_column (14)
0x0000018a: bc address += 12,  line += 2
            0x00000000000000e1     50     14      1   0             0  is_stmt

0x0000018b: 06 DW_LNS_negate_stmt
0x0000018c: 03 DW_LNS_advance_line (0)
0x0000018e: 74 address += 7,  line += 0
            0x00000000000000e8      0     14      1   0             0 

0x0000018f: 05 DW_LNS_set_column (38)
0x00000191: 06 DW_LNS_negate_stmt
0x00000192: 03 DW_LNS_advance_line (52)
0x00000194: ba address += 12,  line += 0
            0x00000000000000f4     52     38      1   0             0  is_stmt

0x00000195: 05 DW_LNS_set_column (0)
0x00000197: 06 DW_LNS_negate_stmt
0x00000198: 03 DW_LNS_advance_line (0)
0x0000019a: 74 address += 7,  line += 0
            0x00000000000000fb      0      0      1   0             0 

0x0000019b: 05 DW_LNS_set_column (22)
0x0000019d: 06 DW_LNS_negate_stmt
0x0000019e: 03 DW_LNS_advance_line (53)
0x000001a0: c8 address += 13,  line += 0
            0x0000000000000108     53     22      1   0             0  is_stmt

0x000001a1: 05 DW_LNS_set_column (24)
0x000001a3: e5 address += 15,  line += 1
            0x0000000000000117     54     24      1   0             0  is_stmt

0x000001a4: 05 DW_LNS_set_column (26)
0x000001a6: 06 DW_LNS_negate_stmt
0x000001a7: 2e address += 2,  line += 0
            0x0000000000000119     54     26      1   0             0 

0x000001a8: 05 DW_LNS_set_column (24)
0x000001aa: c8 address += 13,  line += 0
            0x0000000000000126     54     24      1   0             0 

0x000001ab: 06 DW_LNS_negate_stmt
0x000001ac: 3d address += 3,  line += 1
            0x0000000000000129     55     24      1   0             0  is_stmt

0x000001ad: 05 DW_LNS_set_column (44)
0x000001af: 71 address += 7,  line += -3
            0x0000000000000130     52     44      1   0             0  is_stmt

0x000001b0: 06 DW_LNS_negate_stmt
0x000001b1: 03 DW_LNS_advance_line (0)
0x000001b3: 58 address += 5,  line += 0
            0x0000000000000135      0     44      1   0             0 

0x000001b4: 05 DW_LNS_set_column (38)
0x000001b6: 03 DW_LNS_advance_line (52)
0x000001b8: 74 address += 7,  line += 0
            0x000000000000013c     52     38      1   0             0 

0x000001b9: 05 DW_LNS_set_column (13)
0x000001bb: 3c address += 3,  line += 0
            0x000000000000013f     52     13      1   0             0 

0x000001bc: 05 DW_LNS_set_column (19)
0x000001be: 06 DW_LNS_negate_stmt
0x000001bf: 50 address += 4,  line += 6
            0x0000000000000143     58     19      1   0             0  is_stmt

0x000001c0: 05 DW_LNS_set_column (21)
0x000001c2: e5 address += 15,  line += 1
            0x0000000000000152     59     21      1   0             0  is_stmt

0x000001c3: 05 DW_LNS_set_column (18)
0x000001c5: 72 address += 7,  line += -2
            0x0000000000000159     57     18      1   0             0  is_stmt

0x000001c6: 05 DW_LNS_set_column (0)
0x000001c8: 06 DW_LNS_negate_stmt
0x000001c9: 03 DW_LNS_advance_line (0)
0x000001cb: 74 address += 7,  line += 0
            0x0000000000000160      0      0      1   0             0 

0x000001cc: 05 DW_LNS_set_column (14)
0x000001ce: 06 DW_LNS_negate_stmt
0x000001cf: 03 DW_LNS_advance_line (62)
0x000001d1: 90 address += 9,  line += 0
            0x0000000000000169     62     14      1   0             0  is_stmt

0x000001d2: 05 DW_LNS_set_column (23)
0x000001d4: 06 DW_LNS_negate_stmt
0x000001d5: 4a address += 4,  line += 0
            0x000000000000016d     62     23      1   0             0 

0x000001d6: 05 DW_LNS_set_column (14)
0x000001d8: 58 address += 5,  line += 0
            0x0000000000000172     62     14      1   0             0 

0x000001d9: 03 DW_LNS_advance_line (0)
0x000001db: 3c address += 3,  line += 0
            0x0000000000000175      0     14      1   0             0 

0x000001dc: 05 DW_LNS_set_column (16)
0x000001de: 06 DW_LNS_negate_stmt
0x000001df: 03 DW_LNS_advance_line (66)
0x000001e2: 20 address += 1,  line += 0
            0x0000000000000176     66     16      1   0             0  is_stmt

0x000001e3: 06 DW_LNS_negate_stmt
0x000001e4: 03 DW_LNS_advance_line (0)
0x000001e7: 74 address += 7,  line += 0
            0x000000000000017d      0     16      1   0             0 

0x000001e8: 05 DW_LNS_set_column (27)
0x000001ea: 06 DW_LNS_negate_stmt
0x000001eb: 03 DW_LNS_advance_line (75)
0x000001ee: 82 address += 8,  line += 0
            0x0000000000000185     75     27      1   0             0  is_stmt

0x000001ef: 06 DW_LNS_negate_stmt
0x000001f0: 03 DW_LNS_advance_line (0)
0x000001f3: 74 address += 7,  line += 0
            0x000000000000018c      0     27      1   0             0 

0x000001f4: 05 DW_LNS_set_column (16)
0x000001f6: 06 DW_LNS_negate_stmt
0x000001f7: 03 DW_LNS_advance_line (76)
0x000001fa: 2e address += 2,  line += 0
            0x000000000000018e     76     16      1   0             0  is_stmt

0x000001fb: 05 DW_LNS_set_column (27)
0x000001fd: 06 DW_LNS_negate_stmt
0x000001fe: 82 address += 8,  line += 0
            0x0000000000000196     76     27      1   0             0 

0x000001ff: 05 DW_LNS_set_column (35)
0x00000201: 2e address += 2,  line += 0
            0x0000000000000198     76     35      1   0             0 

0x00000202: 05 DW_LNS_set_column (27)
0x00000204: 90 address += 9,  line += 0
            0x00000000000001a1     76     27      1   0             0 

0x00000205: 05 DW_LNS_set_column (25)
0x00000207: 58 address += 5,  line += 0
            0x00000000000001a6     76     25      1   0             0 

0x00000208: 05 DW_LNS_set_column (27)
0x0000020a: 06 DW_LNS_negate_stmt
0x0000020b: 3b address += 3,  line += -1
            0x00000000000001a9     75     27      1   0             0  is_stmt

0x0000020c: 05 DW_LNS_set_column (13)
0x0000020e: 06 DW_LNS_negate_stmt
0x0000020f: 58 address += 5,  line += 0
            0x00000000000001ae     75     13      1   0             0 

0x00000210: 05 DW_LNS_set_column (0)
0x00000212: 03 DW_LNS_advance_line (0)
0x00000215: 3c address += 3,  line += 0
            0x00000000000001b1      0      0      1   0             0 

0x00000216: 05 DW_LNS_set_column (13)
0x00000218: 06 DW_LNS_negate_stmt
0x00000219: 03 DW_LNS_advance_line (77)
0x0000021c: 58 address += 5,  line += 0
            0x00000000000001b6     77     13      1   0             0  is_stmt

0x0000021d: 05 DW_LNS_set_column (22)
0x0000021f: 06 DW_LNS_negate_stmt
0x00000220: 82 address += 8,  line += 0
            0x00000000000001be     77     22      1   0             0 

0x00000221: 05 DW_LNS_set_column (16)
0x00000223: 06 DW_LNS_negate_stmt
0x00000224: 5a address += 5,  line += 2
            0x00000000000001c3     79     16      1   0             0  is_stmt

0x00000225: 05 DW_LNS_set_column (14)
0x00000227: 06 DW_LNS_negate_stmt
0x00000228: 82 address += 8,  line += 0
            0x00000000000001cb     79     14      1   0             0 

0x00000229: 05 DW_LNS_set_column (25)
0x0000022b: e4 address += 15,  line += 0
            0x00000000000001da     79     25      1   0             0 

0x0000022c: 05 DW_LNS_set_column (11)
0x0000022e: 06 DW_LNS_negate_stmt
0x0000022f: 76 address += 7,  line += 2
            0x00000000000001e1     81     11      1   0             0  is_stmt

0x00000230: 05 DW_LNS_set_column (16)
0x00000232: 03 DW_LNS_advance_line (66)
0x00000234: 58 address += 5,  line += 0
            0x00000000000001e6     66     16      1   0             0  is_stmt

0x00000235: 05 DW_LNS_set_column (22)
0x00000237: 7c address += 7,  line += 8
            0x00000000000001ed     74     22      1   0             0  is_stmt

0x00000238: 05 DW_LNS_set_column (4)
0x0000023a: 03 DW_LNS_advance_line (37)
0x0000023c: 90 address += 9,  line += 0
            0x00000000000001f6     37      4      1   0             0  is_stmt

0x0000023d: 3e address += 3,  line += 2
            0x00000000000001f9     39      4      1   0             0  is_stmt

0x0000023e: 05 DW_LNS_set_column (16)
0x00000240: 06 DW_LNS_negate_stmt
0x00000241: 2e address += 2,  line += 0
            0x00000000000001fb     39     16      1   0             0 

0x00000242: 05 DW_LNS_set_column (4)
0x00000244: 90 address += 9,  line += 0
            0x0000000000000204     39      4      1   0             0 

0x00000245: 05 DW_LNS_set_column (23)
0x00000247: 2e address += 2,  line += 0
            0x0000000000000206     39     23      1   0             0 

0x00000248: 05 DW_LNS_set_column (19)
0x0000024a: 58 address += 5,  line += 0
            0x000000000000020b     39     19      1   0             0 

0x0000024b: 05 DW_LNS_set_column (4)
0x0000024d: 06 DW_LNS_negate_stmt
0x0000024e: 59 address += 5,  line += 1
            0x0000000000000210     40      4      1   0             0  is_stmt

0x0000024f: 05 DW_LNS_set_column (17)
0x00000251: 06 DW_LNS_negate_stmt
0x00000252: 82 address += 8,  line += 0
            0x0000000000000218     40     17      1   0             0 

0x00000253: 03 DW_LNS_advance_line (0)
0x00000255: 74 address += 7,  line += 0
            0x000000000000021f      0     17      1   0             0 

0x00000256: 05 DW_LNS_set_column (16)
0x00000258: 06 DW_LNS_negate_stmt
0x00000259: 03 DW_LNS_advance_line (44)
0x0000025b: 90 address += 9,  line += 0
            0x0000000000000228     44     16      1   0             0  is_stmt

0x0000025c: 06 DW_LNS_negate_stmt
0x0000025d: 03 DW_LNS_advance_line (0)
0x0000025f: 74 address += 7,  line += 0
            0x000000000000022f      0     16      1   0             0 

0x00000260: 05 DW_LNS_set_column (10)
0x00000262: 06 DW_LNS_negate_stmt
0x00000263: 03 DW_LNS_advance_line (45)
0x00000265: 2e address += 2,  line += 0
            0x0000000000000231     45     10      1   0             0  is_stmt

0x00000266: 05 DW_LNS_set_column (18)
0x00000268: 06 DW_LNS_negate_stmt
0x00000269: 2e address += 2,  line += 0
            0x0000000000000233     45     18      1   0             0 

0x0000026a: 05 DW_LNS_set_column (10)
0x0000026c: 90 address += 9,  line += 0
            0x000000000000023c     45     10      1   0             0 

0x0000026d: 05 DW_LNS_set_column (23)
0x0000026f: 2e address += 2,  line += 0
            0x000000000000023e     45     23      1   0             0 

0x00000270: 05 DW_LNS_set_column (16)
0x00000272: 06 DW_LNS_negate_stmt
0x00000273: 57 address += 5,  line += -1
            0x0000000000000243     44     16      1   0             0  is_stmt

0x00000274: 06 DW_LNS_negate_stmt
0x00000275: 03 DW_LNS_advance_line (0)
0x00000277: e4 address += 15,  line += 0
            0x0000000000000252      0     16      1   0             0 

0x00000278: 05 DW_LNS_set_column (11)
0x0000027a: 06 DW_LNS_negate_stmt
0x0000027b: 03 DW_LNS_advance_line (46)
0x0000027d: 2e address += 2,  line += 0
            0x0000000000000254     46     11      1   0             0  is_stmt

0x0000027e: 05 DW_LNS_set_column (28)
0x00000280: 06 DW_LNS_negate_stmt
0x00000281: ba address += 12,  line += 0
            0x0000000000000260     46     28      1   0             0 

0x00000282: 05 DW_LNS_set_column (41)
0x00000284: 58 address += 5,  line += 0
            0x0000000000000265     46     41      1   0             0 

0x00000285: 05 DW_LNS_set_column (14)
0x00000287: 06 DW_LNS_negate_stmt
0x00000288: 5c address += 5,  line += 4
            0x000000000000026a     50     14      1   0             0  is_stmt

0x00000289: 06 DW_LNS_negate_stmt
0x0000028a: 03 DW_LNS_advance_line (0)
0x0000028c: 74 address += 7,  line += 0
            0x0000000000000271      0     14      1   0             0 

0x0000028d: 05 DW_LNS_set_column (38)
0x0000028f: 06 DW_LNS_negate_stmt
0x00000290: 03 DW_LNS_advance_line (52)
0x00000292: ba address += 12,  line += 0
            0x000000000000027d     52     38      1   0             0  is_stmt

0x00000293: 05 DW_LNS_set_column (0)
0x00000295: 06 DW_LNS_negate_stmt
0x00000296: 03 DW_LNS_advance_line (0)
0x00000298: 74 address += 7,  line += 0
            0x0000000000000284      0      0      1   0             0 

0x00000299: 05 DW_LNS_set_column (22)
0x0000029b: 06 DW_LNS_negate_stmt
0x0000029c: 03 DW_LNS_advance_line (53)
0x0000029e: c8 address += 13,  line += 0
            0x0000000000000291     53     22      1   0             0  is_stmt

0x0000029f: 05 DW_LNS_set_column (24)
0x000002a1: e5 address += 15,  line += 1
            0x00000000000002a0     54     24      1   0             0  is_stmt

0x000002a2: 05 DW_LNS_set_column (26)
0x000002a4: 06 DW_LNS_negate_stmt
0x000002a5: 2e address += 2,  line += 0
            0x00000000000002a2     54     26      1   0             0 

0x000002a6: 05 DW_LNS_set_column (24)
0x000002a8: c8 address += 13,  line += 0
            0x00000000000002af     54     24      1   0             0 

0x000002a9: 06 DW_LNS_negate_stmt
0x000002aa: 3d address += 3,  line += 1
            0x00000000000002b2     55     24      1   0             0  is_stmt

0x000002ab: 05 DW_LNS_set_column (44)
0x000002ad: 71 address += 7,  line += -3
            0x00000000000002b9     52     44      1   0             0  is_stmt

0x000002ae: 06 DW_LNS_negate_stmt
0x000002af: 03 DW_LNS_advance_line (0)
0x000002b1: 58 address += 5,  line += 0
            0x00000000000002be      0     44      1   0             0 

0x000002b2: 05 DW_LNS_set_column (38)
0x000002b4: 03 DW_LNS_advance_line (52)
0x000002b6: 74 address += 7,  line += 0
            0x00000000000002c5     52     38      1   0             0 

0x000002b7: 03 DW_LNS_advance_line (0)
0x000002b9: 58 address += 5,  line += 0
            0x00000000000002ca      0     38      1   0             0 

0x000002ba: 05 DW_LNS_set_column (19)
0x000002bc: 06 DW_LNS_negate_stmt
0x000002bd: 03 DW_LNS_advance_line (58)
0x000002bf: 2e address += 2,  line += 0
            0x00000000000002cc     58     19      1   0             0  is_stmt

0x000002c0: 05 DW_LNS_set_column (21)
0x000002c2: e5 address += 15,  line += 1
            0x00000000000002db     59     21      1   0             0  is_stmt

0x000002c3: 05 DW_LNS_set_column (18)
0x000002c5: 72 address += 7,  line += -2
            0x00000000000002e2     57     18      1   0             0  is_stmt

0x000002c6: 05 DW_LNS_set_column (0)
0x000002c8: 06 DW_LNS_negate_stmt
0x000002c9: 03 DW_LNS_advance_line (0)
0x000002cb: 74 address += 7,  line += 0
            0x00000000000002e9      0      0      1   0             0 

0x000002cc: 05 DW_LNS_set_column (14)
0x000002ce: 06 DW_LNS_negate_stmt
0x000002cf: 03 DW_LNS_advance_line (62)
0x000002d1: 90 address += 9,  line += 0
            0x00000000000002f2     62     14      1   0             0  is_stmt

0x000002d2: 05 DW_LNS_set_column (23)
0x000002d4: 06 DW_LNS_negate_stmt
0x000002d5: 4a address += 4,  line += 0
            0x00000000000002f6     62     23      1   0             0 

0x000002d6: 05 DW_LNS_set_column (14)
0x000002d8: 58 address += 5,  line += 0
            0x00000000000002fb     62     14      1   0             0 

0x000002d9: 03 DW_LNS_advance_line (0)
0x000002db: 3c address += 3,  line += 0
            0x00000000000002fe      0     14      1   0             0 

0x000002dc: 05 DW_LNS_set_column (16)
0x000002de: 06 DW_LNS_negate_stmt
0x000002df: 03 DW_LNS_advance_line (66)
0x000002e2: 20 address += 1,  line += 0
            0x00000000000002ff     66     16      1   0             0  is_stmt

0x000002e3: 06 DW_LNS_negate_stmt
0x000002e4: 03 DW_LNS_advance_line (0)
0x000002e7: 74 address += 7,  line += 0
            0x0000000000000306      0     16      1   0             0 

0x000002e8: 05 DW_LNS_set_column (27)
0x000002ea: 06 DW_LNS_negate_stmt
0x000002eb: 03 DW_LNS_advance_line (75)
0x000002ee: 82 address += 8,  line += 0
            0x000000000000030e     75     27      1   0             0  is_stmt

0x000002ef: 06 DW_LNS_negate_stmt
0x000002f0: 03 DW_LNS_advance_line (0)
0x000002f3: 74 address += 7,  line += 0
            0x0000000000000315      0     27      1   0             0 

0x000002f4: 05 DW_LNS_set_column (16)
0x000002f6: 06 DW_LNS_negate_stmt
0x000002f7: 03 DW_LNS_advance_line (76)
0x000002fa: 2e address += 2,  line += 0
            0x0000000000000317     76     16      1   0             0  is_stmt

0x000002fb: 05 DW_LNS_set_column (27)
0x000002fd: 06 DW_LNS_negate_stmt
0x000002fe: 82 address += 8,  line += 0
            0x000000000000031f     76     27      1   0             0 

0x000002ff: 05 DW_LNS_set_column (35)
0x00000301: 2e address += 2,  line += 0
            0x0000000000000321     76     35      1   0             0 

0x00000302: 05 DW_LNS_set_column (27)
0x00000304: 90 address += 9,  line += 0
            0x000000000000032a     76     27      1   0             0 

0x00000305: 05 DW_LNS_set_column (25)
0x00000307: 58 address += 5,  line += 0
            0x000000000000032f     76     25      1   0             0 

0x00000308: 05 DW_LNS_set_column (27)
0x0000030a: 06 DW_LNS_negate_stmt
0x0000030b: 3b address += 3,  line += -1
            0x0000000000000332     75     27      1   0             0  is_stmt

0x0000030c: 06 DW_LNS_negate_stmt
0x0000030d: 03 DW_LNS_advance_line (0)
0x00000310: 74 address += 7,  line += 0
            0x0000000000000339      0     27      1   0             0 

0x00000311: 05 DW_LNS_set_column (13)
0x00000313: 06 DW_LNS_negate_stmt
0x00000314: 03 DW_LNS_advance_line (77)
0x00000317: 66 address += 6,  line += 0
            0x000000000000033f     77     13      1   0             0  is_stmt

0x00000318: 05 DW_LNS_set_column (22)
0x0000031a: 06 DW_LNS_negate_stmt
0x0000031b: 82 address += 8,  line += 0
            0x0000000000000347     77     22      1   0             0 

0x0000031c: 05 DW_LNS_set_column (16)
0x0000031e: 06 DW_LNS_negate_stmt
0x0000031f: 5a address += 5,  line += 2
            0x000000000000034c     79     16      1   0             0  is_stmt

0x00000320: 05 DW_LNS_set_column (14)
0x00000322: 06 DW_LNS_negate_stmt
0x00000323: 82 address += 8,  line += 0
            0x0000000000000354     79     14      1   0             0 

0x00000324: 05 DW_LNS_set_column (25)
0x00000326: e4 address += 15,  line += 0
            0x0000000000000363     79     25      1   0             0 

0x00000327: 05 DW_LNS_set_column (11)
0x00000329: 06 DW_LNS_negate_stmt
0x0000032a: 76 address += 7,  line += 2
            0x000000000000036a     81     11      1   0             0  is_stmt

0x0000032b: 05 DW_LNS_set_column (16)
0x0000032d: 03 DW_LNS_advance_line (66)
0x0000032f: 58 address += 5,  line += 0
            0x000000000000036f     66     16      1   0             0  is_stmt

0x00000330: 05 DW_LNS_set_column (22)
0x00000332: 7c address += 7,  line += 8
            0x0000000000000376     74     22      1   0             0  is_stmt

0x00000333: 06 DW_LNS_negate_stmt
0x00000334: 03 DW_LNS_advance_line (0)
0x00000337: 90 address += 9,  line += 0
            0x000000000000037f      0     22      1   0             0 

0x00000338: 05 DW_LNS_set_column (13)
0x0000033a: 06 DW_LNS_negate_stmt
0x0000033b: 03 DW_LNS_advance_line (67)
0x0000033e: 3c address += 3,  line += 0
            0x0000000000000382     67     13      1   0             0  is_stmt

0x0000033f: 83 address += 8,  line += 1
            0x000000000000038a     68     13      1   0             0  is_stmt

0x00000340: 83 address += 8,  line += 1
            0x0000000000000392     69     13      1   0             0  is_stmt

0x00000341: 83 address += 8,  line += 1
            0x000000000000039a     70     13      1   0             0  is_stmt

0x00000342: 02 DW_LNS_advance_pc (3)
0x00000344: 00 DW_LNE_end_sequence
            0x000000000000039d     70     13      1   0             0  is_stmt end_sequence

0x00000347: 00 DW_LNE_set_address (0x000000000000039f)
0x0000034e: 03 DW_LNS_advance_line (152)
0x00000351: 01 DW_LNS_copy
            0x000000000000039f    152      0      1   0             0  is_stmt


0x00000352: 05 DW_LNS_set_column (17)
0x00000354: 0a DW_LNS_set_prologue_end
0x00000355: 08 DW_LNS_const_add_pc (0x0000000000000011)
0x00000356: 91 address += 9,  line += 1
            0x00000000000003b9    153     17      1   0             0  is_stmt prologue_end

0x00000357: 05 DW_LNS_set_column (12)
0x00000359: 06 DW_LNS_negate_stmt
0x0000035a: 58 address += 5,  line += 0
            0x00000000000003be    153     12      1   0             0 

0x0000035b: 03 DW_LNS_advance_line (0)
0x0000035e: 2e address += 2,  line += 0
            0x00000000000003c0      0     12      1   0             0 

0x0000035f: 05 DW_LNS_set_column (28)
0x00000361: 03 DW_LNS_advance_line (153)
0x00000364: 4a address += 4,  line += 0
            0x00000000000003c4    153     28      1   0             0 

0x00000365: 05 DW_LNS_set_column (23)
0x00000367: 58 address += 5,  line += 0
            0x00000000000003c9    153     23      1   0             0 

0x00000368: 03 DW_LNS_advance_line (0)
0x0000036b: 66 address += 6,  line += 0
            0x00000000000003cf      0     23      1   0             0 

0x0000036c: 05 DW_LNS_set_column (10)
0x0000036e: 06 DW_LNS_negate_stmt
0x0000036f: 03 DW_LNS_advance_line (155)
0x00000372: 4a address += 4,  line += 0
            0x00000000000003d3    155     10      1   0             0  is_stmt

0x00000373: 05 DW_LNS_set_column (8)
0x00000375: 06 DW_LNS_negate_stmt
0x00000376: 20 address += 1,  line += 0
            0x00000000000003d4    155      8      1   0             0 

0x00000377: 03 DW_LNS_advance_line (0)
0x0000037a: 2e address += 2,  line += 0
            0x00000000000003d6      0      8      1   0             0 

0x0000037b: 05 DW_LNS_set_column (7)
0x0000037d: 06 DW_LNS_negate_stmt
0x0000037e: 03 DW_LNS_advance_line (156)
0x00000381: 20 address += 1,  line += 0
            0x00000000000003d7    156      7      1   0             0  is_stmt

0x00000382: 06 DW_LNS_negate_stmt
0x00000383: 03 DW_LNS_advance_line (0)
0x00000386: 08 DW_LNS_const_add_pc (0x0000000000000011)
0x00000387: 2e address += 2,  line += 0
            0x00000000000003ea      0      7      1   0             0 

0x00000388: 05 DW_LNS_set_column (18)
0x0000038a: 06 DW_LNS_negate_stmt
0x0000038b: 03 DW_LNS_advance_line (94)
0x0000038e: 3c address += 3,  line += 0
            0x00000000000003ed     94     18      1   0             0  is_stmt

0x0000038f: 05 DW_LNS_set_column (4)
0x00000391: 06 DW_LNS_negate_stmt
0x00000392: 58 address += 5,  line += 0
            0x00000000000003f2     94      4      1   0             0 

0x00000393: 03 DW_LNS_advance_line (0)
0x00000396: 08 DW_LNS_const_add_pc (0x0000000000000011)
0x00000397: 12 address += 0,  line += 0
            0x0000000000000403      0      4      1   0             0 

0x00000398: 05 DW_LNS_set_column (29)
0x0000039a: 06 DW_LNS_negate_stmt
0x0000039b: 03 DW_LNS_advance_line (95)
0x0000039e: 4a address += 4,  line += 0
            0x0000000000000407     95     29      1   0             0  is_stmt

0x0000039f: 05 DW_LNS_set_column (19)
0x000003a1: 69 address += 6,  line += 3
            0x000000000000040d     98     19      1   0             0  is_stmt

0x000003a2: 05 DW_LNS_set_column (16)
0x000003a4: 73 address += 7,  line += -1
            0x0000000000000414     97     16      1   0             0  is_stmt

0x000003a5: 73 address += 7,  line += -1
            0x000000000000041b     96     16      1   0             0  is_stmt

0x000003a6: 06 DW_LNS_negate_stmt
0x000003a7: 03 DW_LNS_advance_line (0)
0x000003aa: 74 address += 7,  line += 0
            0x0000000000000422      0     16      1   0             0 

0x000003ab: 05 DW_LNS_set_column (28)
0x000003ad: 06 DW_LNS_negate_stmt
0x000003ae: 03 DW_LNS_advance_line (94)
0x000003b1: 4a address += 4,  line += 0
            0x0000000000000426     94     28      1   0             0  is_stmt

0x000003b2: 05 DW_LNS_set_column (18)
0x000003b4: 06 DW_LNS_negate_stmt
0x000003b5: 58 address += 5,  line += 0
            0x000000000000042b     94     18      1   0             0 

0x000003b6: 05 DW_LNS_set_column (4)
0x000003b8: 58 address += 5,  line += 0
            0x0000000000000430     94      4      1   0             0 

0x000003b9: 03 DW_LNS_advance_line (0)
0x000003bc: 4a address += 4,  line += 0
            0x0000000000000434      0      4      1   0             0 

0x000003bd: 05 DW_LNS_set_column (27)
0x000003bf: 06 DW_LNS_negate_stmt
0x000003c0: 03 DW_LNS_advance_line (102)
0x000003c3: 4a address += 4,  line += 0
            0x0000000000000438    102     27      1   0             0  is_stmt

0x000003c4: 05 DW_LNS_set_column (18)
0x000003c6: 06 DW_LNS_negate_stmt
0x000003c7: 58 address += 5,  line += 0
            0x000000000000043d    102     18      1   0             0 

0x000003c8: 06 DW_LNS_negate_stmt
0x000003c9: 9f address += 10,  line += 1
            0x0000000000000447    103     18      1   0             0  is_stmt

0x000003ca: 06 DW_LNS_negate_stmt
0x000003cb: 03 DW_LNS_advance_line (0)
0x000003ce: 9e address += 10,  line += 0
            0x0000000000000451      0     18      1   0             0 

0x000003cf: 06 DW_LNS_negate_stmt
0x000003d0: 03 DW_LNS_advance_line (105)
0x000003d3: 82 address += 8,  line += 0
            0x0000000000000459    105     18      1   0             0  is_stmt

0x000003d4: 05 DW_LNS_set_column (4)
0x000003d6: 06 DW_LNS_negate_stmt
0x000003d7: 58 address += 5,  line += 0
            0x000000000000045e    105      4      1   0             0 

0x000003d8: 03 DW_LNS_advance_line (0)
0x000003db: 2e address += 2,  line += 0
            0x0000000000000460      0      4      1   0             0 

0x000003dc: 05 DW_LNS_set_column (7)
0x000003de: 06 DW_LNS_negate_stmt
0x000003df: 03 DW_LNS_advance_line (106)
0x000003e2: 2e address += 2,  line += 0
            0x0000000000000462    106      7      1   0             0  is_stmt

0x000003e3: 05 DW_LNS_set_column (16)
0x000003e5: 06 DW_LNS_negate_stmt
0x000003e6: 82 address += 8,  line += 0
            0x000000000000046a    106     16      1   0             0 

0x000003e7: 05 DW_LNS_set_column (24)
0x000003e9: 06 DW_LNS_negate_stmt
0x000003ea: 57 address += 5,  line += -1
            0x000000000000046f    105     24      1   0             0  is_stmt

0x000003eb: 05 DW_LNS_set_column (18)
0x000003ed: 06 DW_LNS_negate_stmt
0x000003ee: 58 address += 5,  line += 0
            0x0000000000000474    105     18      1   0             0 

0x000003ef: 03 DW_LNS_advance_line (0)
0x000003f2: 74 address += 7,  line += 0
            0x000000000000047b      0     18      1   0             0 

0x000003f3: 05 DW_LNS_set_column (13)
0x000003f5: 06 DW_LNS_negate_stmt
0x000003f6: 03 DW_LNS_advance_line (112)
0x000003f9: 08 DW_LNS_const_add_pc (0x0000000000000011)
0x000003fa: d6 address += 14,  line += 0
            0x000000000000049a    112     13      1   0             0  is_stmt

0x000003fb: 05 DW_LNS_set_column (26)
0x000003fd: 06 DW_LNS_negate_stmt
0x000003fe: 2e address += 2,  line += 0
            0x000000000000049c    112     26      1   0             0 

0x000003ff: 05 DW_LNS_set_column (35)
0x00000401: c8 address += 13,  line += 0
            0x00000000000004a9    112     35      1   0             0 

0x00000402: 05 DW_LNS_set_column (13)
0x00000404: 20 address += 1,  line += 0
            0x00000000000004aa    112     13      1   0             0 

0x00000405: 05 DW_LNS_set_column (30)
0x00000407: 06 DW_LNS_negate_stmt
0x00000408: 08 DW_LNS_const_add_pc (0x0000000000000011)
0x00000409: 49 address += 4,  line += -1
            0x00000000000004bf    111     30      1   0             0  is_stmt

0x0000040a: 05 DW_LNS_set_column (24)
0x0000040c: 06 DW_LNS_negate_stmt
0x0000040d: 58 address += 5,  line += 0
            0x00000000000004c4    111     24      1   0             0 

0x0000040e: 05 DW_LNS_set_column (10)
0x00000410: 58 address += 5,  line += 0
            0x00000000000004c9    111     10      1   0             0 

0x00000411: 06 DW_LNS_negate_stmt
0x00000412: 5a address += 5,  line += 2
            0x00000000000004ce    113     10      1   0             0  is_stmt

0x00000413: 06 DW_LNS_negate_stmt
0x00000414: 03 DW_LNS_advance_line (0)
0x00000417: 74 address += 7,  line += 0
            0x00000000000004d5      0     10      1   0             0 

0x00000418: 05 DW_LNS_set_column (16)
0x0000041a: 06 DW_LNS_negate_stmt
0x0000041b: 03 DW_LNS_advance_line (118)
0x0000041e: 2e address += 2,  line += 0
            0x00000000000004d7    118     16      1   0             0  is_stmt

0x0000041f: 05 DW_LNS_set_column (7)
0x00000421: 06 DW_LNS_negate_stmt
0x00000422: 58 address += 5,  line += 0
            0x00000000000004dc    118      7      1   0             0 

0x00000423: 03 DW_LNS_advance_line (0)
0x00000426: 2e address += 2,  line += 0
            0x00000000000004de      0      7      1   0             0 

0x00000427: 05 DW_LNS_set_column (10)
0x00000429: 06 DW_LNS_negate_stmt
0x0000042a: 03 DW_LNS_advance_line (119)
0x0000042d: 2e address += 2,  line += 0
            0x00000000000004e0    119     10      1   0             0  is_stmt

0x0000042e: 05 DW_LNS_set_column (18)
0x00000430: 06 DW_LNS_negate_stmt
0x00000431: 2e address += 2,  line += 0
            0x00000000000004e2    119     18      1   0             0 

0x00000432: 05 DW_LNS_set_column (10)
0x00000434: 90 address += 9,  line += 0
            0x00000000000004eb    119     10      1   0             0 

0x00000435: 05 DW_LNS_set_column (23)
0x00000437: 2e address += 2,  line += 0
            0x00000000000004ed    119     23      1   0             0 

0x00000438: 05 DW_LNS_set_column (16)
0x0000043a: 06 DW_LNS_negate_stmt
0x0000043b: 57 address += 5,  line += -1
            0x00000000000004f2    118     16      1   0             0  is_stmt

0x0000043c: 05 DW_LNS_set_column (7)
0x0000043e: 06 DW_LNS_negate_stmt
0x0000043f: ac address += 11,  line += 0
            0x00000000000004fd    118      7      1   0             0 

0x00000440: 05 DW_LNS_set_column (16)
0x00000442: 06 DW_LNS_negate_stmt
0x00000443: 6a address += 6,  line += 4
            0x0000000000000503    122     16      1   0             0  is_stmt

0x00000444: 06 DW_LNS_negate_stmt
0x00000445: 03 DW_LNS_advance_line (0)
0x00000448: 74 address += 7,  line += 0
            0x000000000000050a      0     16      1   0             0 

0x00000449: 05 DW_LNS_set_column (22)
0x0000044b: 06 DW_LNS_negate_stmt
0x0000044c: 03 DW_LNS_advance_line (125)
0x0000044f: c8 address += 13,  line += 0
            0x0000000000000517    125     22      1   0             0  is_stmt

0x00000450: 06 DW_LNS_negate_stmt
0x00000451: 03 DW_LNS_advance_line (0)
0x00000454: 74 address += 7,  line += 0
            0x000000000000051e      0     22      1   0             0 

0x00000455: 05 DW_LNS_set_column (27)
0x00000457: 06 DW_LNS_negate_stmt
0x00000458: 03 DW_LNS_advance_line (126)
0x0000045b: 2e address += 2,  line += 0
            0x0000000000000520    126     27      1   0             0  is_stmt

0x0000045c: 05 DW_LNS_set_column (13)
0x0000045e: 06 DW_LNS_negate_stmt
0x0000045f: 58 address += 5,  line += 0
            0x0000000000000525    126     13      1   0             0 

0x00000460: 03 DW_LNS_advance_line (0)
0x00000463: 2e address += 2,  line += 0
            0x0000000000000527      0     13      1   0             0 

0x00000464: 05 DW_LNS_set_column (16)
0x00000466: 06 DW_LNS_negate_stmt
0x00000467: 03 DW_LNS_advance_line (127)
0x0000046a: 2e address += 2,  line += 0
            0x0000000000000529    127     16      1   0             0  is_stmt

0x0000046b: 05 DW_LNS_set_column (27)
0x0000046d: 06 DW_LNS_negate_stmt
0x0000046e: 82 address += 8,  line += 0
            0x0000000000000531    127     27      1   0             0 

0x0000046f: 05 DW_LNS_set_column (35)
0x00000471: 2e address += 2,  line += 0
            0x0000000000000533    127     35      1   0             0 

0x00000472: 05 DW_LNS_set_column (27)
0x00000474: 90 address += 9,  line += 0
            0x000000000000053c    127     27      1   0             0 

0x00000475: 05 DW_LNS_set_column (25)
0x00000477: 58 address += 5,  line += 0
            0x0000000000000541    127     25      1   0             0 

0x00000478: 05 DW_LNS_set_column (27)
0x0000047a: 06 DW_LNS_negate_stmt
0x0000047b: 3b address += 3,  line += -1
            0x0000000000000544    126     27      1   0             0  is_stmt

0x0000047c: 05 DW_LNS_set_column (13)
0x0000047e: 06 DW_LNS_negate_stmt
0x0000047f: 58 address += 5,  line += 0
            0x0000000000000549    126     13      1   0             0 

0x00000480: 05 DW_LNS_set_column (0)
0x00000482: 03 DW_LNS_advance_line (0)
0x00000485: 3c address += 3,  line += 0
            0x000000000000054c      0      0      1   0             0 

0x00000486: 05 DW_LNS_set_column (13)
0x00000488: 06 DW_LNS_negate_stmt
0x00000489: 03 DW_LNS_advance_line (128)
0x0000048c: 58 address += 5,  line += 0
            0x0000000000000551    128     13      1   0             0  is_stmt

0x0000048d: 05 DW_LNS_set_column (22)
0x0000048f: 06 DW_LNS_negate_stmt
0x00000490: 82 address += 8,  line += 0
            0x0000000000000559    128     22      1   0             0 

0x00000491: 05 DW_LNS_set_column (16)
0x00000493: 06 DW_LNS_negate_stmt
0x00000494: 5a address += 5,  line += 2
            0x000000000000055e    130     16      1   0             0  is_stmt

0x00000495: 05 DW_LNS_set_column (14)
0x00000497: 06 DW_LNS_negate_stmt
0x00000498: 82 address += 8,  line += 0
            0x0000000000000566    130     14      1   0             0 

0x00000499: 05 DW_LNS_set_column (25)
0x0000049b: 08 DW_LNS_const_add_pc (0x0000000000000011)
0x0000049c: 12 address += 0,  line += 0
            0x0000000000000577    130     25      1   0             0 

0x0000049d: 05 DW_LNS_set_column (14)
0x0000049f: 58 address += 5,  line += 0
            0x000000000000057c    130     14      1   0             0 

0x000004a0: 05 DW_LNS_set_column (11)
0x000004a2: 06 DW_LNS_negate_stmt
0x000004a3: 31 address += 2,  line += 3
            0x000000000000057e    133     11      1   0             0  is_stmt

0x000004a4: 05 DW_LNS_set_column (16)
0x000004a6: 03 DW_LNS_advance_line (122)
0x000004a8: 58 address += 5,  line += 0
            0x0000000000000583    122     16      1   0             0  is_stmt

0x000004a9: 05 DW_LNS_set_column (14)
0x000004ab: 06 DW_LNS_negate_stmt
0x000004ac: 58 address += 5,  line += 0
            0x0000000000000588    122     14      1   0             0 

0x000004ad: 03 DW_LNS_advance_line (0)
0x000004b0: 4a address += 4,  line += 0
            0x000000000000058c      0     14      1   0             0 

0x000004b1: 06 DW_LNS_negate_stmt
0x000004b2: 03 DW_LNS_advance_line (130)
0x000004b5: 20 address += 1,  line += 0
            0x000000000000058d    130     14      1   0             0  is_stmt

0x000004b6: 05 DW_LNS_set_column (11)
0x000004b8: 03 DW_LNS_advance_line (110)
0x000004ba: 20 address += 1,  line += 0
            0x000000000000058e    110     11      1   0             0  is_stmt

0x000004bb: 06 DW_LNS_negate_stmt
0x000004bc: 03 DW_LNS_advance_line (0)
0x000004bf: 74 address += 7,  line += 0
            0x0000000000000595      0     11      1   0             0 

0x000004c0: 05 DW_LNS_set_column (10)
0x000004c2: 06 DW_LNS_negate_stmt
0x000004c3: 03 DW_LNS_advance_line (113)
0x000004c6: 66 address += 6,  line += 0
            0x000000000000059b    113     10      1   0             0  is_stmt

0x000004c7: 06 DW_LNS_negate_stmt
0x000004c8: 03 DW_LNS_advance_line (0)
0x000004cb: 74 address += 7,  line += 0
            0x00000000000005a2      0     10      1   0             0 

0x000004cc: 05 DW_LNS_set_column (16)
0x000004ce: 06 DW_LNS_negate_stmt
0x000004cf: 03 DW_LNS_advance_line (118)
0x000004d2: 2e address += 2,  line += 0
            0x00000000000005a4    118     16      1   0             0  is_stmt

0x000004d3: 05 DW_LNS_set_column (7)
0x000004d5: 06 DW_LNS_negate_stmt
0x000004d6: 58 address += 5,  line += 0
            0x00000000000005a9    118      7      1   0             0 

0x000004d7: 03 DW_LNS_advance_line (0)
0x000004da: 2e address += 2,  line += 0
            0x00000000000005ab      0      7      1   0             0 

0x000004db: 05 DW_LNS_set_column (10)
0x000004dd: 06 DW_LNS_negate_stmt
0x000004de: 03 DW_LNS_advance_line (119)
0x000004e1: 2e address += 2,  line += 0
            0x00000000000005ad    119     10      1   0             0  is_stmt

0x000004e2: 05 DW_LNS_set_column (18)
0x000004e4: 06 DW_LNS_negate_stmt
0x000004e5: 2e address += 2,  line += 0
            0x00000000000005af    119     18      1   0             0 

0x000004e6: 05 DW_LNS_set_column (10)
0x000004e8: 90 address += 9,  line += 0
            0x00000000000005b8    119     10      1   0             0 

0x000004e9: 05 DW_LNS_set_column (23)
0x000004eb: 2e address += 2,  line += 0
            0x00000000000005ba    119     23      1   0             0 

0x000004ec: 05 DW_LNS_set_column (16)
0x000004ee: 06 DW_LNS_negate_stmt
0x000004ef: 57 address += 5,  line += -1
            0x00000000000005bf    118     16      1   0             0  is_stmt

0x000004f0: 05 DW_LNS_set_column (0)
0x000004f2: 06 DW_LNS_negate_stmt
0x000004f3: 03 DW_LNS_advance_line (0)
0x000004f6: 74 address += 7,  line += 0
            0x00000000000005c6      0      0      1   0             0 

0x000004f7: 05 DW_LNS_set_column (7)
0x000004f9: 03 DW_LNS_advance_line (118)
0x000004fc: 4a address += 4,  line += 0
            0x00000000000005ca    118      7      1   0             0 

0x000004fd: 05 DW_LNS_set_column (16)
0x000004ff: 06 DW_LNS_negate_stmt
0x00000500: 6a address += 6,  line += 4
            0x00000000000005d0    122     16      1   0             0  is_stmt

0x00000501: 05 DW_LNS_set_column (14)
0x00000503: 06 DW_LNS_negate_stmt
0x00000504: 58 address += 5,  line += 0
            0x00000000000005d5    122     14      1   0             0 

0x00000505: 03 DW_LNS_advance_line (0)
0x00000508: 2e address += 2,  line += 0
            0x00000000000005d7      0     14      1   0             0 

0x00000509: 05 DW_LNS_set_column (22)
0x0000050b: 06 DW_LNS_negate_stmt
0x0000050c: 03 DW_LNS_advance_line (125)
0x0000050f: 74 address += 7,  line += 0
            0x00000000000005de    125     22      1   0             0  is_stmt

0x00000510: 06 DW_LNS_negate_stmt
0x00000511: 03 DW_LNS_advance_line (0)
0x00000514: 90 address += 9,  line += 0
            0x00000000000005e7      0     22      1   0             0 

0x00000515: 05 DW_LNS_set_column (27)
0x00000517: 06 DW_LNS_negate_stmt
0x00000518: 03 DW_LNS_advance_line (126)
0x0000051b: 66 address += 6,  line += 0
            0x00000000000005ed    126     27      1   0             0  is_stmt

0x0000051c: 05 DW_LNS_set_column (13)
0x0000051e: 06 DW_LNS_negate_stmt
0x0000051f: 58 address += 5,  line += 0
            0x00000000000005f2    126     13      1   0             0 

0x00000520: 03 DW_LNS_advance_line (0)
0x00000523: 2e address += 2,  line += 0
            0x00000000000005f4      0     13      1   0             0 

0x00000524: 05 DW_LNS_set_column (16)
0x00000526: 06 DW_LNS_negate_stmt
0x00000527: 03 DW_LNS_advance_line (127)
0x0000052a: 2e address += 2,  line += 0
            0x00000000000005f6    127     16      1   0             0  is_stmt

0x0000052b: 05 DW_LNS_set_column (27)
0x0000052d: 06 DW_LNS_negate_stmt
0x0000052e: 82 address += 8,  line += 0
            0x00000000000005fe    127     27      1   0             0 

0x0000052f: 05 DW_LNS_set_column (35)
0x00000531: 2e address += 2,  line += 0
            0x0000000000000600    127     35      1   0             0 

0x00000532: 05 DW_LNS_set_column (27)
0x00000534: 90 address += 9,  line += 0
            0x0000000000000609    127     27      1   0             0 

0x00000535: 05 DW_LNS_set_column (25)
0x00000537: 58 address += 5,  line += 0
            0x000000000000060e    127     25      1   0             0 

0x00000538: 05 DW_LNS_set_column (27)
0x0000053a: 06 DW_LNS_negate_stmt
0x0000053b: 3b address += 3,  line += -1
            0x0000000000000611    126     27      1   0             0  is_stmt

0x0000053c: 05 DW_LNS_set_column (13)
0x0000053e: 06 DW_LNS_negate_stmt
0x0000053f: 58 address += 5,  line += 0
            0x0000000000000616    126     13      1   0             0 

0x00000540: 05 DW_LNS_set_column (0)
0x00000542: 03 DW_LNS_advance_line (0)
0x00000545: 3c address += 3,  line += 0
            0x0000000000000619      0      0      1   0             0 

0x00000546: 05 DW_LNS_set_column (13)
0x00000548: 06 DW_LNS_negate_stmt
0x00000549: 03 DW_LNS_advance_line (128)
0x0000054c: 58 address += 5,  line += 0
            0x000000000000061e    128     13      1   0             0  is_stmt

0x0000054d: 05 DW_LNS_set_column (22)
0x0000054f: 06 DW_LNS_negate_stmt
0x00000550: 82 address += 8,  line += 0
            0x0000000000000626    128     22      1   0             0 

0x00000551: 05 DW_LNS_set_column (16)
0x00000553: 06 DW_LNS_negate_stmt
0x00000554: 5a address += 5,  line += 2
            0x000000000000062b    130     16      1   0             0  is_stmt

0x00000555: 05 DW_LNS_set_column (14)
0x00000557: 06 DW_LNS_negate_stmt
0x00000558: 82 address += 8,  line += 0
            0x0000000000000633    130     14      1   0             0 

0x00000559: 05 DW_LNS_set_column (25)
0x0000055b: 08 DW_LNS_const_add_pc (0x0000000000000011)
0x0000055c: 12 address += 0,  line += 0
            0x0000000000000644    130     25      1   0             0 

0x0000055d: 05 DW_LNS_set_column (14)
0x0000055f: 58 address += 5,  line += 0
            0x0000000000000649    130     14      1   0             0 

0x00000560: 05 DW_LNS_set_column (11)
0x00000562: 06 DW_LNS_negate_stmt
0x00000563: 31 address += 2,  line += 3
            0x000000000000064b    133     11      1   0             0  is_stmt

0x00000564: 05 DW_LNS_set_column (16)
0x00000566: 03 DW_LNS_advance_line (122)
0x00000568: 58 address += 5,  line += 0
            0x0000000000000650    122     16      1   0             0  is_stmt

0x00000569: 05 DW_LNS_set_column (14)
0x0000056b: 06 DW_LNS_negate_stmt
0x0000056c: 58 address += 5,  line += 0
            0x0000000000000655    122     14      1   0             0 

0x0000056d: 03 DW_LNS_advance_line (0)
0x00000570: 4a address += 4,  line += 0
            0x0000000000000659      0     14      1   0             0 

0x00000571: 06 DW_LNS_negate_stmt
0x00000572: 03 DW_LNS_advance_line (130)
0x00000575: 20 address += 1,  line += 0
            0x000000000000065a    130     14      1   0             0  is_stmt

0x00000576: 05 DW_LNS_set_column (11)
0x00000578: 03 DW_LNS_advance_line (110)
0x0000057a: 20 address += 1,  line += 0
            0x000000000000065b    110     11      1   0             0  is_stmt

0x0000057b: 05 DW_LNS_set_column (4)
0x0000057d: 03 DW_LNS_advance_line (138)
0x0000057f: 66 address += 6,  line += 0
            0x0000000000000661    138      4      1   0             0  is_stmt

0x00000580: 83 address += 8,  line += 1
            0x0000000000000669    139      4      1   0             0  is_stmt

0x00000581: 06 DW_LNS_negate_stmt
0x00000582: 03 DW_LNS_advance_line (0)
0x00000585: 82 address += 8,  line += 0
            0x0000000000000671      0      4      1   0             0 

0x00000586: 06 DW_LNS_negate_stmt
0x00000587: 03 DW_LNS_advance_line (141)
0x0000058a: 82 address += 8,  line += 0
            0x0000000000000679    141      4      1   0             0  is_stmt

0x0000058b: 06 DW_LNS_negate_stmt
0x0000058c: 03 DW_LNS_advance_line (0)
0x0000058f: 74 address += 7,  line += 0
            0x0000000000000680      0      4      1   0             0 

0x00000590: 05 DW_LNS_set_column (20)
0x00000592: 06 DW_LNS_negate_stmt
0x00000593: 03 DW_LNS_advance_line (142)
0x00000596: 4a address += 4,  line += 0
            0x0000000000000684    142     20      1   0             0  is_stmt

0x00000597: be address += 12,  line += 4
            0x0000000000000690    146     20      1   0             0  is_stmt

0x00000598: 05 DW_LNS_set_column (7)
0x0000059a: 75 address += 7,  line += 1
            0x0000000000000697    147      7      1   0             0  is_stmt

0x0000059b: 05 DW_LNS_set_column (11)
0x0000059d: 7e address += 8,  line += -4
            0x000000000000069f    143     11      1   0             0  is_stmt

0x0000059e: 05 DW_LNS_set_column (20)
0x000005a0: 06 DW_LNS_negate_stmt
0x000005a1: 4a address += 4,  line += 0
            0x00000000000006a3    143     20      1   0             0 

0x000005a2: 05 DW_LNS_set_column (11)
0x000005a4: 58 address += 5,  line += 0
            0x00000000000006a8    143     11      1   0             0 

0x000005a5: 03 DW_LNS_advance_line (0)
0x000005a8: 3c address += 3,  line += 0
            0x00000000000006ab      0     11      1   0             0 

0x000005a9: 05 DW_LNS_set_column (4)
0x000005ab: 06 DW_LNS_negate_stmt
0x000005ac: 03 DW_LNS_advance_line (141)
0x000005af: 4a address += 4,  line += 0
            0x00000000000006af    141      4      1   0             0  is_stmt

0x000005b0: 03 DW_LNS_advance_line (159)
0x000005b2: 66 address += 6,  line += 0
            0x00000000000006b5    159      4      1   0             0  is_stmt

0x000005b3: 06 DW_LNS_negate_stmt
0x000005b4: 03 DW_LNS_advance_line (0)
0x000005b7: 08 DW_LNS_const_add_pc (0x0000000000000011)
0x000005b8: ba address += 12,  line += 0
            0x00000000000006d2      0      4      1   0             0 

0x000005b9: 05 DW_LNS_set_column (1)
0x000005bb: 06 DW_LNS_negate_stmt
0x000005bc: 03 DW_LNS_advance_line (161)
0x000005bf: 20 address += 1,  line += 0
            0x00000000000006d3    161      1      1   0             0  is_stmt

0x000005c0: 02 DW_LNS_advance_pc (14)
0x000005c2: 00 DW_LNE_end_sequence
            0x00000000000006e1    161      1      1   0             0  is_stmt end_sequence


.debug_str contents:
0x00000000: "clang version 11.0.0 (https://github.com/llvm/llvm-project.git 313d89724ce3ccf66c1c51849903e1e6d184dd85)"
0x00000069: "/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp"
0x000000a9: "/usr/local/google/home/azakai/Dev/2-binaryen"
0x000000d6: "i"
0x000000d8: "int"
0x000000dc: "n"
0x000000de: "next"
0x000000e3: "worker_args"
0x000000ef: "std"
0x000000f3: "decltype(nullptr)"
0x00000105: "nullptr_t"
0x0000010f: "free"
0x00000114: "_ZL8fannkuchi"
0x00000122: "fannkuch"
0x0000012b: "showmax"
0x00000133: "args"
0x00000138: "targs"
0x0000013e: "perm1"
0x00000144: "count"
0x0000014a: "r"
0x0000014c: "maxflips"
0x00000155: "flips"
0x0000015b: "cleanup"
0x00000163: "p0"
0x00000166: "_Z15fannkuch_workerPv"
0x0000017c: "fannkuch_worker"
0x0000018c: "main"
0x00000191: "_arg"
0x00000196: "perm"
0x0000019b: "k"
0x0000019d: "j"
0x0000019f: "tmp"
0x000001a3: "argc"
0x000001a8: "argv"
0x000001ad: "char"

.debug_ranges contents:
00000000 00000185 000001c3
00000000 000001ed 000001f6
00000000 0000030e 0000034c
00000000 00000376 0000037f
00000000 <End of list>
00000028 00000517 0000055e
00000028 000005de 0000062b
00000028 <End of list>
00000040 00000006 0000039d
00000040 0000039f 000006e1
00000040 <End of list>
DWARF debug info
================

Contains section .debug_info (851 bytes)
Contains section .debug_loc (1073 bytes)
Contains section .debug_ranges (88 bytes)
Contains section .debug_abbrev (333 bytes)
Contains section .debug_line (2826 bytes)
Contains section .debug_str (434 bytes)

.debug_abbrev contents:
Abbrev table for offset: 0x00000000
[1] DW_TAG_compile_unit	DW_CHILDREN_yes
	DW_AT_producer	DW_FORM_strp
	DW_AT_language	DW_FORM_data2
	DW_AT_name	DW_FORM_strp
	DW_AT_stmt_list	DW_FORM_sec_offset
	DW_AT_comp_dir	DW_FORM_strp
	DW_AT_low_pc	DW_FORM_addr
	DW_AT_ranges	DW_FORM_sec_offset

[2] DW_TAG_pointer_type	DW_CHILDREN_no
	DW_AT_type	DW_FORM_ref4

[3] DW_TAG_structure_type	DW_CHILDREN_yes
	DW_AT_calling_convention	DW_FORM_data1
	DW_AT_name	DW_FORM_strp
	DW_AT_byte_size	DW_FORM_data1
	DW_AT_decl_file	DW_FORM_data1
	DW_AT_decl_line	DW_FORM_data1

[4] DW_TAG_member	DW_CHILDREN_no
	DW_AT_name	DW_FORM_strp
	DW_AT_type	DW_FORM_ref4
	DW_AT_decl_file	DW_FORM_data1
	DW_AT_decl_line	DW_FORM_data1
	DW_AT_data_member_location	DW_FORM_data1

[5] DW_TAG_base_type	DW_CHILDREN_no
	DW_AT_name	DW_FORM_strp
	DW_AT_encoding	DW_FORM_data1
	DW_AT_byte_size	DW_FORM_data1

[6] DW_TAG_namespace	DW_CHILDREN_yes
	DW_AT_name	DW_FORM_strp

[7] DW_TAG_typedef	DW_CHILDREN_no
	DW_AT_type	DW_FORM_ref4
	DW_AT_name	DW_FORM_strp
	DW_AT_decl_file	DW_FORM_data1
	DW_AT_decl_line	DW_FORM_data1

[8] DW_TAG_unspecified_type	DW_CHILDREN_no
	DW_AT_name	DW_FORM_strp

[9] DW_TAG_imported_declaration	DW_CHILDREN_no
	DW_AT_decl_file	DW_FORM_data1
	DW_AT_decl_line	DW_FORM_data1
	DW_AT_import	DW_FORM_ref4

[10] DW_TAG_subprogram	DW_CHILDREN_yes
	DW_AT_low_pc	DW_FORM_addr
	DW_AT_high_pc	DW_FORM_data4
	DW_AT_frame_base	DW_FORM_exprloc
	DW_AT_GNU_all_call_sites	DW_FORM_flag_present
	DW_AT_linkage_name	DW_FORM_strp
	DW_AT_name	DW_FORM_strp
	DW_AT_decl_file	DW_FORM_data1
	DW_AT_decl_line	DW_FORM_data1
	DW_AT_type	DW_FORM_ref4
	DW_AT_external	DW_FORM_flag_present

[11] DW_TAG_formal_parameter	DW_CHILDREN_no
	DW_AT_name	DW_FORM_strp
	DW_AT_decl_file	DW_FORM_data1
	DW_AT_decl_line	DW_FORM_data1
	DW_AT_type	DW_FORM_ref4

[12] DW_TAG_variable	DW_CHILDREN_no
	DW_AT_name	DW_FORM_strp
	DW_AT_decl_file	DW_FORM_data1
	DW_AT_decl_line	DW_FORM_data1
	DW_AT_type	DW_FORM_ref4

[13] DW_TAG_variable	DW_CHILDREN_no
	DW_AT_location	DW_FORM_sec_offset
	DW_AT_name	DW_FORM_strp
	DW_AT_decl_file	DW_FORM_data1
	DW_AT_decl_line	DW_FORM_data1
	DW_AT_type	DW_FORM_ref4

[14] DW_TAG_lexical_block	DW_CHILDREN_yes
	DW_AT_ranges	DW_FORM_sec_offset

[15] DW_TAG_GNU_call_site	DW_CHILDREN_no
	DW_AT_low_pc	DW_FORM_addr

[16] DW_TAG_GNU_call_site	DW_CHILDREN_no
	DW_AT_abstract_origin	DW_FORM_ref4
	DW_AT_low_pc	DW_FORM_addr

[17] DW_TAG_subprogram	DW_CHILDREN_yes
	DW_AT_name	DW_FORM_strp
	DW_AT_decl_file	DW_FORM_data1
	DW_AT_decl_line	DW_FORM_data1
	DW_AT_declaration	DW_FORM_flag_present
	DW_AT_external	DW_FORM_flag_present

[18] DW_TAG_formal_parameter	DW_CHILDREN_no
	DW_AT_type	DW_FORM_ref4

[19] DW_TAG_pointer_type	DW_CHILDREN_no

[20] DW_TAG_subprogram	DW_CHILDREN_yes
	DW_AT_linkage_name	DW_FORM_strp
	DW_AT_name	DW_FORM_strp
	DW_AT_decl_file	DW_FORM_data1
	DW_AT_decl_line	DW_FORM_data1
	DW_AT_type	DW_FORM_ref4
	DW_AT_inline	DW_FORM_data1

[21] DW_TAG_label	DW_CHILDREN_no
	DW_AT_name	DW_FORM_strp
	DW_AT_decl_file	DW_FORM_data1
	DW_AT_decl_line	DW_FORM_data1

[22] DW_TAG_lexical_block	DW_CHILDREN_yes

[23] DW_TAG_subprogram	DW_CHILDREN_yes
	DW_AT_low_pc	DW_FORM_addr
	DW_AT_high_pc	DW_FORM_data4
	DW_AT_frame_base	DW_FORM_exprloc
	DW_AT_GNU_all_call_sites	DW_FORM_flag_present
	DW_AT_name	DW_FORM_strp
	DW_AT_decl_file	DW_FORM_data1
	DW_AT_decl_line	DW_FORM_data1
	DW_AT_type	DW_FORM_ref4
	DW_AT_external	DW_FORM_flag_present

[24] DW_TAG_inlined_subroutine	DW_CHILDREN_yes
	DW_AT_abstract_origin	DW_FORM_ref4
	DW_AT_low_pc	DW_FORM_addr
	DW_AT_high_pc	DW_FORM_data4
	DW_AT_call_file	DW_FORM_data1
	DW_AT_call_line	DW_FORM_data1
	DW_AT_call_column	DW_FORM_data1

[25] DW_TAG_formal_parameter	DW_CHILDREN_no
	DW_AT_abstract_origin	DW_FORM_ref4

[26] DW_TAG_variable	DW_CHILDREN_no
	DW_AT_location	DW_FORM_sec_offset
	DW_AT_abstract_origin	DW_FORM_ref4

[27] DW_TAG_variable	DW_CHILDREN_no
	DW_AT_abstract_origin	DW_FORM_ref4

[28] DW_TAG_label	DW_CHILDREN_no
	DW_AT_abstract_origin	DW_FORM_ref4
	DW_AT_low_pc	DW_FORM_addr


.debug_info contents:
0x00000000: Compile Unit: length = 0x0000034f version = 0x0004 abbr_offset = 0x0000 addr_size = 0x04 (next unit at 0x00000353)

0x0000000b: DW_TAG_compile_unit [1] *
              DW_AT_producer [DW_FORM_strp]	( .debug_str[0x00000000] = "clang version 11.0.0 (https://github.com/llvm/llvm-project.git 313d89724ce3ccf66c1c51849903e1e6d184dd85)")
              DW_AT_language [DW_FORM_data2]	(DW_LANG_C_plus_plus)
              DW_AT_name [DW_FORM_strp]	( .debug_str[0x00000069] = "/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
              DW_AT_stmt_list [DW_FORM_sec_offset]	(0x00000000)
              DW_AT_comp_dir [DW_FORM_strp]	( .debug_str[0x000000a9] = "/usr/local/google/home/azakai/Dev/2-binaryen")
              DW_AT_low_pc [DW_FORM_addr]	(0x0000000000000000)
              DW_AT_ranges [DW_FORM_sec_offset]	(0x00000040
                 [0x00000006, 0x000003a3)
                 [0x000003a5, 0x000006ab))

0x00000026:   DW_TAG_pointer_type [2]  
                DW_AT_type [DW_FORM_ref4]	(cu + 0x002b => {0x0000002b} "worker_args")

0x0000002b:   DW_TAG_structure_type [3] *
                DW_AT_calling_convention [DW_FORM_data1]	(DW_CC_pass_by_value)
                DW_AT_name [DW_FORM_strp]	( .debug_str[0x000000e3] = "worker_args")
                DW_AT_byte_size [DW_FORM_data1]	(0x0c)
                DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                DW_AT_decl_line [DW_FORM_data1]	(20)

0x00000034:     DW_TAG_member [4]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x000000d6] = "i")
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(21)
                  DW_AT_data_member_location [DW_FORM_data1]	(0x00)

0x00000040:     DW_TAG_member [4]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x000000dc] = "n")
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(21)
                  DW_AT_data_member_location [DW_FORM_data1]	(0x04)

0x0000004c:     DW_TAG_member [4]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x000000de] = "next")
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0026 => {0x00000026} "worker_args*")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(22)
                  DW_AT_data_member_location [DW_FORM_data1]	(0x08)

0x00000058:     NULL

0x00000059:   DW_TAG_base_type [5]  
                DW_AT_name [DW_FORM_strp]	( .debug_str[0x000000d8] = "int")
                DW_AT_encoding [DW_FORM_data1]	(DW_ATE_signed)
                DW_AT_byte_size [DW_FORM_data1]	(0x04)

0x00000060:   DW_TAG_pointer_type [2]  
                DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x00000065:   DW_TAG_namespace [6] *
                DW_AT_name [DW_FORM_strp]	( .debug_str[0x000000ef] = "std")

0x0000006a:     DW_TAG_typedef [7]  
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0076 => {0x00000076} "decltype(nullptr)")
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x00000105] = "nullptr_t")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/system/include/libcxx/__nullptr")
                  DW_AT_decl_line [DW_FORM_data1]	(57)

0x00000075:     NULL

0x00000076:   DW_TAG_unspecified_type [8]  
                DW_AT_name [DW_FORM_strp]	( .debug_str[0x000000f3] = "decltype(nullptr)")

0x0000007b:   DW_TAG_imported_declaration [9]  
                DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/system/include/libcxx/stddef.h")
                DW_AT_decl_line [DW_FORM_data1]	(52)
                DW_AT_import [DW_FORM_ref4]	(cu + 0x006a => {0x0000006a})

0x00000082:   DW_TAG_subprogram [10] *
                DW_AT_low_pc [DW_FORM_addr]	(0x0000000000000006)
                DW_AT_high_pc [DW_FORM_data4]	(0x0000039d)
                DW_AT_frame_base [DW_FORM_exprloc]	(DW_OP_WASM_location 0x1 +0, DW_OP_stack_value)
                DW_AT_GNU_all_call_sites [DW_FORM_flag_present]	(true)
                DW_AT_linkage_name [DW_FORM_strp]	( .debug_str[0x00000166] = "_Z15fannkuch_workerPv")
                DW_AT_name [DW_FORM_strp]	( .debug_str[0x0000017c] = "fannkuch_worker")
                DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                DW_AT_decl_line [DW_FORM_data1]	(26)
                DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")
                DW_AT_external [DW_FORM_flag_present]	(true)

0x0000009e:     DW_TAG_formal_parameter [11]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x00000191] = "_arg")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(26)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x01a7 => {0x000001a7} "*")

0x000000a9:     DW_TAG_variable [12]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x00000133] = "args")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(28)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0026 => {0x00000026} "worker_args*")

0x000000b4:     DW_TAG_variable [13]  
                  DW_AT_location [DW_FORM_sec_offset]	(0x00000000: 
                     [0xffffffff,  0x00000006): 
                     [0x00000000,  0x0000004e): DW_OP_consts +0, DW_OP_stack_value)
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x0000014c] = "maxflips")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(30)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x000000c3:     DW_TAG_variable [13]  
                  DW_AT_location [DW_FORM_sec_offset]	(0x0000001d: 
                     [0xffffffff,  0x0000002b): 
                     [0x00000000,  0x00000029): DW_OP_consts +0, DW_OP_stack_value
                     [0x0000003f,  0x00000044): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value
                     [0x000000d5,  0x000000de): DW_OP_consts +1, DW_OP_stack_value
                     [0x0000011a,  0x00000124): DW_OP_WASM_location 0x0 +0, DW_OP_stack_value
                     [0x00000162,  0x0000016f): DW_OP_consts +0, DW_OP_stack_value
                     [0x0000024f,  0x0000025a): DW_OP_consts +0, DW_OP_stack_value
                     [0x00000260,  0x00000269): DW_OP_consts +1, DW_OP_stack_value
                     [0x000002a5,  0x000002af): DW_OP_WASM_location 0x0 +0, DW_OP_stack_value
                     [0x000002ed,  0x000002fa): DW_OP_consts +0, DW_OP_stack_value)
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x000000d6] = "i")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(30)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x000000d2:     DW_TAG_variable [13]  
                  DW_AT_location [DW_FORM_sec_offset]	(0x000000a5: 
                     [0xffffffff,  0x00000032): 
                     [0x00000000,  0x00000022): DW_OP_WASM_location 0x0 +2, DW_OP_stack_value)
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x000000dc] = "n")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(30)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x000000e1:     DW_TAG_variable [13]  
                  DW_AT_location [DW_FORM_sec_offset]	(0x000000c3: 
                     [0xffffffff,  0x0000003b): 
                     [0x00000000,  0x00000019): DW_OP_WASM_location 0x0 +4, DW_OP_stack_value)
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x0000013e] = "perm1")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(29)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0060 => {0x00000060} "int*")

0x000000f0:     DW_TAG_variable [13]  
                  DW_AT_location [DW_FORM_sec_offset]	(0x000000e1: 
                     [0xffffffff,  0x00000041): 
                     [0x00000000,  0x00000013): DW_OP_WASM_location 0x0 +5, DW_OP_stack_value)
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x00000196] = "perm")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(29)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0060 => {0x00000060} "int*")

0x000000ff:     DW_TAG_variable [13]  
                  DW_AT_location [DW_FORM_sec_offset]	(0x000000ff: 
                     [0xffffffff,  0x00000047): 
                     [0x00000000,  0x0000000d): DW_OP_WASM_location 0x0 +6, DW_OP_stack_value)
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x00000144] = "count")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(29)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0060 => {0x00000060} "int*")

0x0000010e:     DW_TAG_variable [13]  
                  DW_AT_location [DW_FORM_sec_offset]	(0x0000011d: 
                     [0xffffffff,  0x000001f6): 
                     [0x00000000,  0x00000005): DW_OP_WASM_location 0x0 +2, DW_OP_stack_value
                     [0x0000018b,  0x00000190): DW_OP_WASM_location 0x0 +2, DW_OP_stack_value)
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x0000014a] = "r")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(30)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x0000011d:     DW_TAG_variable [13]  
                  DW_AT_location [DW_FORM_sec_offset]	(0x00000149: 
                     [0xffffffff,  0x000000e7): 
                     [0x00000000,  0x00000013): DW_OP_consts +0, DW_OP_stack_value
                     [0x00000019,  0x00000022): DW_OP_WASM_location 0x0 +13, DW_OP_stack_value
                     [0x00000087,  0x0000008f): DW_OP_WASM_location 0x0 +0, DW_OP_stack_value
                     [0x00000193,  0x0000019e): DW_OP_consts +0, DW_OP_stack_value
                     [0x000001a4,  0x000001ad): DW_OP_WASM_location 0x0 +10, DW_OP_stack_value
                     [0x00000212,  0x0000021a): DW_OP_WASM_location 0x0 +0, DW_OP_stack_value)
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x00000155] = "flips")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(30)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x0000012c:     DW_TAG_variable [13]  
                  DW_AT_location [DW_FORM_sec_offset]	(0x000001ab: 
                     [0xffffffff,  0x000000f6): 
                     [0x00000000,  0x00000004): DW_OP_WASM_location 0x0 +12, DW_OP_stack_value
                     [0x0000018b,  0x0000018f): DW_OP_WASM_location 0x0 +16, DW_OP_stack_value)
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x0000019b] = "k")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(30)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x0000013b:     DW_TAG_variable [13]  
                  DW_AT_location [DW_FORM_sec_offset]	(0x000001d7: 
                     [0xffffffff,  0x00000110): 
                     [0x00000000,  0x00000004): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value
                     [0x0000003c,  0x0000003f): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value
                     [0x0000018b,  0x0000018f): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value
                     [0x000001c7,  0x000001ca): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value)
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x0000019d] = "j")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(30)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x0000014a:     DW_TAG_variable [13]  
                  DW_AT_location [DW_FORM_sec_offset]	(0x0000021f: 
                     [0xffffffff,  0x00000125): 
                     [0x00000000,  0x0000002a): DW_OP_WASM_location 0x0 +15, DW_OP_stack_value
                     [0x0000003b,  0x00000051): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value
                     [0x0000018b,  0x000001b5): DW_OP_WASM_location 0x0 +14, DW_OP_stack_value
                     [0x000001c6,  0x000001dc): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value)
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x0000019f] = "tmp")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(30)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x00000159:     DW_TAG_lexical_block [14] *
                  DW_AT_ranges [DW_FORM_sec_offset]	(0x00000000
                     [0x00000193, 0x000001d1)
                     [0x000001fb, 0x00000204)
                     [0x0000031e, 0x0000035c)
                     [0x00000386, 0x0000038f))

0x0000015e:       DW_TAG_variable [12]  
                    DW_AT_name [DW_FORM_strp]	( .debug_str[0x00000163] = "p0")
                    DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                    DW_AT_decl_line [DW_FORM_data1]	(74)
                    DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x00000169:       NULL

0x0000016a:     DW_TAG_GNU_call_site [15]  
                  DW_AT_low_pc [DW_FORM_addr]	(0x0000000000000039)

0x0000016f:     DW_TAG_GNU_call_site [15]  
                  DW_AT_low_pc [DW_FORM_addr]	(0x000000000000003f)

0x00000174:     DW_TAG_GNU_call_site [15]  
                  DW_AT_low_pc [DW_FORM_addr]	(0x0000000000000045)

0x00000179:     DW_TAG_GNU_call_site [15]  
                  DW_AT_low_pc [DW_FORM_addr]	(0x00000000000000ef)

0x0000017e:     DW_TAG_GNU_call_site [16]  
                  DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x019a => {0x0000019a} "free")
                  DW_AT_low_pc [DW_FORM_addr]	(0x0000000000000398)

0x00000187:     DW_TAG_GNU_call_site [16]  
                  DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x019a => {0x0000019a} "free")
                  DW_AT_low_pc [DW_FORM_addr]	(0x000000000000039c)

0x00000190:     DW_TAG_GNU_call_site [16]  
                  DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x019a => {0x0000019a} "free")
                  DW_AT_low_pc [DW_FORM_addr]	(0x00000000000003a0)

0x00000199:     NULL

0x0000019a:   DW_TAG_subprogram [17] *
                DW_AT_name [DW_FORM_strp]	( .debug_str[0x0000010f] = "free")
                DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/system/include/libc/stdlib.h")
                DW_AT_decl_line [DW_FORM_data1]	(41)
                DW_AT_declaration [DW_FORM_flag_present]	(true)
                DW_AT_external [DW_FORM_flag_present]	(true)

0x000001a1:     DW_TAG_formal_parameter [18]  
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x01a7 => {0x000001a7} "*")

0x000001a6:     NULL

0x000001a7:   DW_TAG_pointer_type [19]  

0x000001a8:   DW_TAG_subprogram [20] *
                DW_AT_linkage_name [DW_FORM_strp]	( .debug_str[0x00000114] = "_ZL8fannkuchi")
                DW_AT_name [DW_FORM_strp]	( .debug_str[0x00000122] = "fannkuch")
                DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                DW_AT_decl_line [DW_FORM_data1]	(87)
                DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")
                DW_AT_inline [DW_FORM_data1]	(DW_INL_inlined)

0x000001b8:     DW_TAG_formal_parameter [11]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x000000dc] = "n")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(87)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x000001c3:     DW_TAG_variable [12]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x0000012b] = "showmax")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(90)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x000001ce:     DW_TAG_variable [12]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x00000133] = "args")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(89)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0026 => {0x00000026} "worker_args*")

0x000001d9:     DW_TAG_variable [12]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x000000d6] = "i")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(91)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x000001e4:     DW_TAG_variable [12]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x00000138] = "targs")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(89)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0026 => {0x00000026} "worker_args*")

0x000001ef:     DW_TAG_variable [12]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x0000013e] = "perm1")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(91)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0060 => {0x00000060} "int*")

0x000001fa:     DW_TAG_variable [12]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x00000144] = "count")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(91)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0060 => {0x00000060} "int*")

0x00000205:     DW_TAG_variable [12]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x0000014a] = "r")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(91)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x00000210:     DW_TAG_variable [12]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x0000014c] = "maxflips")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(91)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x0000021b:     DW_TAG_variable [12]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x00000155] = "flips")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(91)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x00000226:     DW_TAG_label [21]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x0000015b] = "cleanup")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(137)

0x0000022d:     DW_TAG_lexical_block [22] *

0x0000022e:       DW_TAG_variable [12]  
                    DW_AT_name [DW_FORM_strp]	( .debug_str[0x00000163] = "p0")
                    DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                    DW_AT_decl_line [DW_FORM_data1]	(125)
                    DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x00000239:       NULL

0x0000023a:     NULL

0x0000023b:   DW_TAG_subprogram [23] *
                DW_AT_low_pc [DW_FORM_addr]	(0x00000000000003a5)
                DW_AT_high_pc [DW_FORM_data4]	(0x00000306)
                DW_AT_frame_base [DW_FORM_exprloc]	(DW_OP_WASM_location 0x0 +2, DW_OP_stack_value)
                DW_AT_GNU_all_call_sites [DW_FORM_flag_present]	(true)
                DW_AT_name [DW_FORM_strp]	( .debug_str[0x0000018c] = "main")
                DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                DW_AT_decl_line [DW_FORM_data1]	(152)
                DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")
                DW_AT_external [DW_FORM_flag_present]	(true)

0x00000253:     DW_TAG_formal_parameter [11]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x000001a3] = "argc")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(152)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x0000025e:     DW_TAG_formal_parameter [11]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x000001a8] = "argv")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(152)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0341 => {0x00000341} "char**")

0x00000269:     DW_TAG_variable [13]  
                  DW_AT_location [DW_FORM_sec_offset]	(0x00000267: 
                     [0xffffffff,  0x000003d7): 
                     [0x00000000,  0x00000005): DW_OP_WASM_location 0x0 +4, DW_OP_stack_value)
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x000000dc] = "n")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(153)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x00000278:     DW_TAG_inlined_subroutine [24] *
                  DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x01a8 => {0x000001a8} "_ZL8fannkuchi")
                  DW_AT_low_pc [DW_FORM_addr]	(0x00000000000003ec)
                  DW_AT_high_pc [DW_FORM_data4]	(0x0000026c)
                  DW_AT_call_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_call_line [DW_FORM_data1]	(159)
                  DW_AT_call_column [DW_FORM_data1]	(0x29)

0x00000288:       DW_TAG_formal_parameter [25]  
                    DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x01b8 => {0x000001b8} "n")

0x0000028d:       DW_TAG_variable [26]  
                    DW_AT_location [DW_FORM_sec_offset]	(0x00000285: 
                       [0xffffffff,  0x000003ea): 
                       [0x00000000,  0x00000009): DW_OP_consts +30, DW_OP_stack_value)
                    DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x01c3 => {0x000001c3} "showmax")

0x00000296:       DW_TAG_variable [26]  
                    DW_AT_location [DW_FORM_sec_offset]	(0x000002a2: 
                       [0xffffffff,  0x000003ea): 
                       [0x00000000,  0x00000009): DW_OP_lit0, DW_OP_stack_value
                       [0x00000286,  0x0000029e): DW_OP_WASM_location 0x0 +6, DW_OP_stack_value)
                    DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x01ce => {0x000001ce} "args")

0x0000029f:       DW_TAG_variable [26]  
                    DW_AT_location [DW_FORM_sec_offset]	(0x000002cc: 
                       [0xffffffff,  0x000003ea): 
                       [0x00000000,  0x00000009): DW_OP_consts +0, DW_OP_stack_value
                       [0x0000003e,  0x00000043): DW_OP_WASM_location 0x0 +0, DW_OP_stack_value
                       [0x00000049,  0x00000069): DW_OP_consts +0, DW_OP_stack_value
                       [0x0000007f,  0x00000084): DW_OP_WASM_location 0x0 +0, DW_OP_stack_value
                       [0x0000009d,  0x000000a1): DW_OP_consts +0, DW_OP_stack_value
                       [0x000000c8,  0x000000cd): DW_OP_WASM_location 0x0 +0, DW_OP_stack_value
                       [0x00000115,  0x00000125): DW_OP_consts +0, DW_OP_stack_value
                       [0x00000198,  0x000001a6): DW_OP_consts +0, DW_OP_stack_value
                       [0x000001db,  0x000001ef): DW_OP_consts +0, DW_OP_stack_value)
                    DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x01d9 => {0x000001d9} "i")

0x000002a8:       DW_TAG_variable [27]  
                    DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x01e4 => {0x000001e4} "targs")

0x000002ad:       DW_TAG_variable [26]  
                    DW_AT_location [DW_FORM_sec_offset]	(0x00000354: 
                       [0xffffffff,  0x0000043e): 
                       [0x00000000,  0x00000015): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value)
                    DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x01ef => {0x000001ef} "perm1")

0x000002b6:       DW_TAG_variable [26]  
                    DW_AT_location [DW_FORM_sec_offset]	(0x00000372: 
                       [0xffffffff,  0x00000444): 
                       [0x00000000,  0x0000000f): DW_OP_WASM_location 0x0 +5, DW_OP_stack_value)
                    DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x01fa => {0x000001fa} "count")

0x000002bf:       DW_TAG_variable [26]  
                    DW_AT_location [DW_FORM_sec_offset]	(0x00000390: 
                       [0xffffffff,  0x0000056d): 
                       [0x00000000,  0x00000007): DW_OP_WASM_location 0x0 +6, DW_OP_stack_value
                       [0x000000ca,  0x000000d1): DW_OP_WASM_location 0x0 +6, DW_OP_stack_value)
                    DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x0205 => {0x00000205} "r")

0x000002c8:       DW_TAG_variable [26]  
                    DW_AT_location [DW_FORM_sec_offset]	(0x000003e8: 
                       [0xffffffff,  0x00000652): 
                       [0x00000000,  0x0000000b): DW_OP_consts +0, DW_OP_stack_value
                       [0x0000002e,  0x00000036): DW_OP_WASM_location 0x0 +0, DW_OP_stack_value)
                    DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x0210 => {0x00000210} "maxflips")

0x000002d1:       DW_TAG_variable [26]  
                    DW_AT_location [DW_FORM_sec_offset]	(0x00000413: 
                       [0xffffffff,  0x00000669): 
                       [0x00000000,  0x0000001f): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value)
                    DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x021b => {0x0000021b} "flips")

0x000002da:       DW_TAG_label [28]  
                    DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x0226 => {0x00000226} "cleanup")
                    DW_AT_low_pc [DW_FORM_addr]	(0x0000000000000646)

0x000002e3:       DW_TAG_lexical_block [14] *
                    DW_AT_ranges [DW_FORM_sec_offset]	(0x00000028
                       [0x000004ff, 0x00000546)
                       [0x000005c3, 0x00000610))

0x000002e8:         DW_TAG_variable [26]  
                      DW_AT_location [DW_FORM_sec_offset]	(0x000003bc: 
                         [0xffffffff,  0x00000506): 
                         [0x00000000,  0x00000009): DW_OP_WASM_location 0x0 +8, DW_OP_stack_value
                         [0x000000c6,  0x000000d3): DW_OP_WASM_location 0x0 +8, DW_OP_stack_value)
                      DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x022e => {0x0000022e} "p0")

0x000002f1:         NULL

0x000002f2:       NULL

0x000002f3:     DW_TAG_GNU_call_site [15]  
                  DW_AT_low_pc [DW_FORM_addr]	(0x00000000000003d5)

0x000002f8:     DW_TAG_GNU_call_site [15]  
                  DW_AT_low_pc [DW_FORM_addr]	(0x00000000000003e2)

0x000002fd:     DW_TAG_GNU_call_site [15]  
                  DW_AT_low_pc [DW_FORM_addr]	(0x0000000000000408)

0x00000302:     DW_TAG_GNU_call_site [15]  
                  DW_AT_low_pc [DW_FORM_addr]	(0x000000000000043c)

0x00000307:     DW_TAG_GNU_call_site [15]  
                  DW_AT_low_pc [DW_FORM_addr]	(0x0000000000000442)

0x0000030c:     DW_TAG_GNU_call_site [15]  
                  DW_AT_low_pc [DW_FORM_addr]	(0x00000000000004aa)

0x00000311:     DW_TAG_GNU_call_site [15]  
                  DW_AT_low_pc [DW_FORM_addr]	(0x00000000000004bc)

0x00000316:     DW_TAG_GNU_call_site [15]  
                  DW_AT_low_pc [DW_FORM_addr]	(0x0000000000000586)

0x0000031b:     DW_TAG_GNU_call_site [16]  
                  DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x019a => {0x0000019a} "free")
                  DW_AT_low_pc [DW_FORM_addr]	(0x000000000000064a)

0x00000324:     DW_TAG_GNU_call_site [16]  
                  DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x019a => {0x0000019a} "free")
                  DW_AT_low_pc [DW_FORM_addr]	(0x000000000000064e)

0x0000032d:     DW_TAG_GNU_call_site [15]  
                  DW_AT_low_pc [DW_FORM_addr]	(0x0000000000000667)

0x00000332:     DW_TAG_GNU_call_site [16]  
                  DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x019a => {0x0000019a} "free")
                  DW_AT_low_pc [DW_FORM_addr]	(0x0000000000000674)

0x0000033b:     DW_TAG_GNU_call_site [15]  
                  DW_AT_low_pc [DW_FORM_addr]	(0x000000000000069f)

0x00000340:     NULL

0x00000341:   DW_TAG_pointer_type [2]  
                DW_AT_type [DW_FORM_ref4]	(cu + 0x0346 => {0x00000346} "char*")

0x00000346:   DW_TAG_pointer_type [2]  
                DW_AT_type [DW_FORM_ref4]	(cu + 0x034b => {0x0000034b} "char")

0x0000034b:   DW_TAG_base_type [5]  
                DW_AT_name [DW_FORM_strp]	( .debug_str[0x000001ad] = "char")
                DW_AT_encoding [DW_FORM_data1]	(DW_ATE_signed_char)
                DW_AT_byte_size [DW_FORM_data1]	(0x01)

0x00000352:   NULL

.debug_loc contents:
0x00000000: 
            [0xffffffff,  0x00000006): 
            [0x00000000,  0x0000004e): DW_OP_consts +0, DW_OP_stack_value

0x0000001d: 
            [0xffffffff,  0x0000002b): 
            [0x00000000,  0x00000029): DW_OP_consts +0, DW_OP_stack_value
            [0x0000003f,  0x00000044): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value
            [0x000000d5,  0x000000de): DW_OP_consts +1, DW_OP_stack_value
            [0x0000011a,  0x00000124): DW_OP_WASM_location 0x0 +0, DW_OP_stack_value
            [0x00000162,  0x0000016f): DW_OP_consts +0, DW_OP_stack_value
            [0x0000024f,  0x0000025a): DW_OP_consts +0, DW_OP_stack_value
            [0x00000260,  0x00000269): DW_OP_consts +1, DW_OP_stack_value
            [0x000002a5,  0x000002af): DW_OP_WASM_location 0x0 +0, DW_OP_stack_value
            [0x000002ed,  0x000002fa): DW_OP_consts +0, DW_OP_stack_value

0x000000a5: 
            [0xffffffff,  0x00000032): 
            [0x00000000,  0x00000022): DW_OP_WASM_location 0x0 +2, DW_OP_stack_value

0x000000c3: 
            [0xffffffff,  0x0000003b): 
            [0x00000000,  0x00000019): DW_OP_WASM_location 0x0 +4, DW_OP_stack_value

0x000000e1: 
            [0xffffffff,  0x00000041): 
            [0x00000000,  0x00000013): DW_OP_WASM_location 0x0 +5, DW_OP_stack_value

0x000000ff: 
            [0xffffffff,  0x00000047): 
            [0x00000000,  0x0000000d): DW_OP_WASM_location 0x0 +6, DW_OP_stack_value

0x0000011d: 
            [0xffffffff,  0x000001f6): 
            [0x00000000,  0x00000005): DW_OP_WASM_location 0x0 +2, DW_OP_stack_value
            [0x0000018b,  0x00000190): DW_OP_WASM_location 0x0 +2, DW_OP_stack_value

0x00000149: 
            [0xffffffff,  0x000000e7): 
            [0x00000000,  0x00000013): DW_OP_consts +0, DW_OP_stack_value
            [0x00000019,  0x00000022): DW_OP_WASM_location 0x0 +13, DW_OP_stack_value
            [0x00000087,  0x0000008f): DW_OP_WASM_location 0x0 +0, DW_OP_stack_value
            [0x00000193,  0x0000019e): DW_OP_consts +0, DW_OP_stack_value
            [0x000001a4,  0x000001ad): DW_OP_WASM_location 0x0 +10, DW_OP_stack_value
            [0x00000212,  0x0000021a): DW_OP_WASM_location 0x0 +0, DW_OP_stack_value

0x000001ab: 
            [0xffffffff,  0x000000f6): 
            [0x00000000,  0x00000004): DW_OP_WASM_location 0x0 +12, DW_OP_stack_value
            [0x0000018b,  0x0000018f): DW_OP_WASM_location 0x0 +16, DW_OP_stack_value

0x000001d7: 
            [0xffffffff,  0x00000110): 
            [0x00000000,  0x00000004): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value
            [0x0000003c,  0x0000003f): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value
            [0x0000018b,  0x0000018f): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value
            [0x000001c7,  0x000001ca): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value

0x0000021f: 
            [0xffffffff,  0x00000125): 
            [0x00000000,  0x0000002a): DW_OP_WASM_location 0x0 +15, DW_OP_stack_value
            [0x0000003b,  0x00000051): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value
            [0x0000018b,  0x000001b5): DW_OP_WASM_location 0x0 +14, DW_OP_stack_value
            [0x000001c6,  0x000001dc): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value

0x00000267: 
            [0xffffffff,  0x000003d7): 
            [0x00000000,  0x00000005): DW_OP_WASM_location 0x0 +4, DW_OP_stack_value

0x00000285: 
            [0xffffffff,  0x000003ea): 
            [0x00000000,  0x00000009): DW_OP_consts +30, DW_OP_stack_value

0x000002a2: 
            [0xffffffff,  0x000003ea): 
            [0x00000000,  0x00000009): DW_OP_lit0, DW_OP_stack_value
            [0x00000286,  0x0000029e): DW_OP_WASM_location 0x0 +6, DW_OP_stack_value

0x000002cc: 
            [0xffffffff,  0x000003ea): 
            [0x00000000,  0x00000009): DW_OP_consts +0, DW_OP_stack_value
            [0x0000003e,  0x00000043): DW_OP_WASM_location 0x0 +0, DW_OP_stack_value
            [0x00000049,  0x00000069): DW_OP_consts +0, DW_OP_stack_value
            [0x0000007f,  0x00000084): DW_OP_WASM_location 0x0 +0, DW_OP_stack_value
            [0x0000009d,  0x000000a1): DW_OP_consts +0, DW_OP_stack_value
            [0x000000c8,  0x000000cd): DW_OP_WASM_location 0x0 +0, DW_OP_stack_value
            [0x00000115,  0x00000125): DW_OP_consts +0, DW_OP_stack_value
            [0x00000198,  0x000001a6): DW_OP_consts +0, DW_OP_stack_value
            [0x000001db,  0x000001ef): DW_OP_consts +0, DW_OP_stack_value

0x00000354: 
            [0xffffffff,  0x0000043e): 
            [0x00000000,  0x00000015): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value

0x00000372: 
            [0xffffffff,  0x00000444): 
            [0x00000000,  0x0000000f): DW_OP_WASM_location 0x0 +5, DW_OP_stack_value

0x00000390: 
            [0xffffffff,  0x0000056d): 
            [0x00000000,  0x00000007): DW_OP_WASM_location 0x0 +6, DW_OP_stack_value
            [0x000000ca,  0x000000d1): DW_OP_WASM_location 0x0 +6, DW_OP_stack_value

0x000003bc: 
            [0xffffffff,  0x00000506): 
            [0x00000000,  0x00000009): DW_OP_WASM_location 0x0 +8, DW_OP_stack_value
            [0x000000c6,  0x000000d3): DW_OP_WASM_location 0x0 +8, DW_OP_stack_value

0x000003e8: 
            [0xffffffff,  0x00000652): 
            [0x00000000,  0x0000000b): DW_OP_consts +0, DW_OP_stack_value
            [0x0000002e,  0x00000036): DW_OP_WASM_location 0x0 +0, DW_OP_stack_value

0x00000413: 
            [0xffffffff,  0x00000669): 
            [0x00000000,  0x0000001f): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value

.debug_line contents:
debug_line[0x00000000]
Line table prologue:
    total_length: 0x00000b06
         version: 4
 prologue_length: 0x000000dd
 min_inst_length: 1
max_ops_per_inst: 1
 default_is_stmt: 1
       line_base: -5
      line_range: 14
     opcode_base: 13
standard_opcode_lengths[DW_LNS_copy] = 0
standard_opcode_lengths[DW_LNS_advance_pc] = 1
standard_opcode_lengths[DW_LNS_advance_line] = 1
standard_opcode_lengths[DW_LNS_set_file] = 1
standard_opcode_lengths[DW_LNS_set_column] = 1
standard_opcode_lengths[DW_LNS_negate_stmt] = 0
standard_opcode_lengths[DW_LNS_set_basic_block] = 0
standard_opcode_lengths[DW_LNS_const_add_pc] = 0
standard_opcode_lengths[DW_LNS_fixed_advance_pc] = 1
standard_opcode_lengths[DW_LNS_set_prologue_end] = 0
standard_opcode_lengths[DW_LNS_set_epilogue_begin] = 0
standard_opcode_lengths[DW_LNS_set_isa] = 1
include_directories[  1] = "/usr/local/google/home/azakai/Dev"
file_names[  1]:
           name: "emscripten/tests/fannkuch.cpp"
      dir_index: 1
       mod_time: 0x00000000
         length: 0x00000000
file_names[  2]:
           name: "emscripten/system/include/libcxx/__nullptr"
      dir_index: 1
       mod_time: 0x00000000
         length: 0x00000000
file_names[  3]:
           name: "emscripten/system/include/libcxx/stddef.h"
      dir_index: 1
       mod_time: 0x00000000
         length: 0x00000000
file_names[  4]:
           name: "emscripten/system/include/libc/stdlib.h"
      dir_index: 1
       mod_time: 0x00000000
         length: 0x00000000
0x000000e7: 00 DW_LNE_set_address (0x0000000000000006)
0x000000ee: 03 DW_LNS_advance_line (27)
0x000000f0: 01 DW_LNS_copy
            0x0000000000000006     27      0      1   0             0  is_stmt


0x000000f1: 00 DW_LNE_set_address (0x000000000000002b)
0x000000f8: 03 DW_LNS_advance_line (33)
0x000000fa: 05 DW_LNS_set_column (14)
0x000000fc: 0a DW_LNS_set_prologue_end
0x000000fd: 01 DW_LNS_copy
            0x000000000000002b     33     14      1   0             0  is_stmt prologue_end


0x000000fe: 00 DW_LNE_set_address (0x0000000000000034)
0x00000105: 03 DW_LNS_advance_line (34)
0x00000107: 05 DW_LNS_set_column (27)
0x00000109: 01 DW_LNS_copy
            0x0000000000000034     34     27      1   0             0  is_stmt


0x0000010a: 00 DW_LNE_set_address (0x0000000000000035)
0x00000111: 05 DW_LNS_set_column (18)
0x00000113: 06 DW_LNS_negate_stmt
0x00000114: 01 DW_LNS_copy
            0x0000000000000035     34     18      1   0             0 


0x00000115: 00 DW_LNE_set_address (0x000000000000003b)
0x0000011c: 03 DW_LNS_advance_line (35)
0x0000011e: 05 DW_LNS_set_column (17)
0x00000120: 06 DW_LNS_negate_stmt
0x00000121: 01 DW_LNS_copy
            0x000000000000003b     35     17      1   0             0  is_stmt


0x00000122: 00 DW_LNE_set_address (0x0000000000000041)
0x00000129: 03 DW_LNS_advance_line (36)
0x0000012b: 05 DW_LNS_set_column (18)
0x0000012d: 01 DW_LNS_copy
            0x0000000000000041     36     18      1   0             0  is_stmt


0x0000012e: 00 DW_LNE_set_address (0x000000000000004d)
0x00000135: 03 DW_LNS_advance_line (37)
0x00000137: 01 DW_LNS_copy
            0x000000000000004d     37     18      1   0             0  is_stmt


0x00000138: 00 DW_LNE_set_address (0x0000000000000052)
0x0000013f: 05 DW_LNS_set_column (4)
0x00000141: 06 DW_LNS_negate_stmt
0x00000142: 01 DW_LNS_copy
            0x0000000000000052     37      4      1   0             0 


0x00000143: 00 DW_LNE_set_address (0x0000000000000056)
0x0000014a: 03 DW_LNS_advance_line (38)
0x0000014c: 05 DW_LNS_set_column (7)
0x0000014e: 06 DW_LNS_negate_stmt
0x0000014f: 01 DW_LNS_copy
            0x0000000000000056     38      7      1   0             0  is_stmt


0x00000150: 00 DW_LNE_set_address (0x000000000000005e)
0x00000157: 05 DW_LNS_set_column (16)
0x00000159: 06 DW_LNS_negate_stmt
0x0000015a: 01 DW_LNS_copy
            0x000000000000005e     38     16      1   0             0 


0x0000015b: 00 DW_LNE_set_address (0x0000000000000063)
0x00000162: 03 DW_LNS_advance_line (37)
0x00000164: 05 DW_LNS_set_column (24)
0x00000166: 06 DW_LNS_negate_stmt
0x00000167: 01 DW_LNS_copy
            0x0000000000000063     37     24      1   0             0  is_stmt


0x00000168: 00 DW_LNE_set_address (0x0000000000000068)
0x0000016f: 05 DW_LNS_set_column (18)
0x00000171: 06 DW_LNS_negate_stmt
0x00000172: 01 DW_LNS_copy
            0x0000000000000068     37     18      1   0             0 


0x00000173: 00 DW_LNE_set_address (0x000000000000006d)
0x0000017a: 05 DW_LNS_set_column (4)
0x0000017c: 01 DW_LNS_copy
            0x000000000000006d     37      4      1   0             0 


0x0000017d: 00 DW_LNE_set_address (0x0000000000000070)
0x00000184: 03 DW_LNS_advance_line (39)
0x00000186: 06 DW_LNS_negate_stmt
0x00000187: 01 DW_LNS_copy
            0x0000000000000070     39      4      1   0             0  is_stmt


0x00000188: 00 DW_LNE_set_address (0x0000000000000072)
0x0000018f: 05 DW_LNS_set_column (16)
0x00000191: 06 DW_LNS_negate_stmt
0x00000192: 01 DW_LNS_copy
            0x0000000000000072     39     16      1   0             0 


0x00000193: 00 DW_LNE_set_address (0x000000000000007b)
0x0000019a: 05 DW_LNS_set_column (4)
0x0000019c: 01 DW_LNS_copy
            0x000000000000007b     39      4      1   0             0 


0x0000019d: 00 DW_LNE_set_address (0x000000000000007d)
0x000001a4: 05 DW_LNS_set_column (23)
0x000001a6: 01 DW_LNS_copy
            0x000000000000007d     39     23      1   0             0 


0x000001a7: 00 DW_LNE_set_address (0x0000000000000082)
0x000001ae: 05 DW_LNS_set_column (19)
0x000001b0: 01 DW_LNS_copy
            0x0000000000000082     39     19      1   0             0 


0x000001b1: 00 DW_LNE_set_address (0x0000000000000087)
0x000001b8: 03 DW_LNS_advance_line (40)
0x000001ba: 05 DW_LNS_set_column (4)
0x000001bc: 06 DW_LNS_negate_stmt
0x000001bd: 01 DW_LNS_copy
            0x0000000000000087     40      4      1   0             0  is_stmt


0x000001be: 00 DW_LNE_set_address (0x000000000000008f)
0x000001c5: 05 DW_LNS_set_column (17)
0x000001c7: 06 DW_LNS_negate_stmt
0x000001c8: 01 DW_LNS_copy
            0x000000000000008f     40     17      1   0             0 


0x000001c9: 00 DW_LNE_set_address (0x000000000000009a)
0x000001d0: 03 DW_LNS_advance_line (37)
0x000001d2: 05 DW_LNS_set_column (18)
0x000001d4: 06 DW_LNS_negate_stmt
0x000001d5: 01 DW_LNS_copy
            0x000000000000009a     37     18      1   0             0  is_stmt


0x000001d6: 00 DW_LNE_set_address (0x000000000000009f)
0x000001dd: 03 DW_LNS_advance_line (43)
0x000001df: 05 DW_LNS_set_column (4)
0x000001e1: 01 DW_LNS_copy
            0x000000000000009f     43      4      1   0             0  is_stmt


0x000001e2: 00 DW_LNE_set_address (0x00000000000000a5)
0x000001e9: 03 DW_LNS_advance_line (44)
0x000001eb: 05 DW_LNS_set_column (16)
0x000001ed: 01 DW_LNS_copy
            0x00000000000000a5     44     16      1   0             0  is_stmt


0x000001ee: 00 DW_LNE_set_address (0x00000000000000ae)
0x000001f5: 03 DW_LNS_advance_line (45)
0x000001f7: 05 DW_LNS_set_column (10)
0x000001f9: 01 DW_LNS_copy
            0x00000000000000ae     45     10      1   0             0  is_stmt


0x000001fa: 00 DW_LNE_set_address (0x00000000000000b0)
0x00000201: 05 DW_LNS_set_column (18)
0x00000203: 06 DW_LNS_negate_stmt
0x00000204: 01 DW_LNS_copy
            0x00000000000000b0     45     18      1   0             0 


0x00000205: 00 DW_LNE_set_address (0x00000000000000b9)
0x0000020c: 05 DW_LNS_set_column (10)
0x0000020e: 01 DW_LNS_copy
            0x00000000000000b9     45     10      1   0             0 


0x0000020f: 00 DW_LNE_set_address (0x00000000000000bb)
0x00000216: 05 DW_LNS_set_column (23)
0x00000218: 01 DW_LNS_copy
            0x00000000000000bb     45     23      1   0             0 


0x00000219: 00 DW_LNE_set_address (0x00000000000000c0)
0x00000220: 03 DW_LNS_advance_line (44)
0x00000222: 05 DW_LNS_set_column (16)
0x00000224: 06 DW_LNS_negate_stmt
0x00000225: 01 DW_LNS_copy
            0x00000000000000c0     44     16      1   0             0  is_stmt


0x00000226: 00 DW_LNE_set_address (0x00000000000000cb)
0x0000022d: 05 DW_LNS_set_column (7)
0x0000022f: 06 DW_LNS_negate_stmt
0x00000230: 01 DW_LNS_copy
            0x00000000000000cb     44      7      1   0             0 


0x00000231: 00 DW_LNE_set_address (0x00000000000000d1)
0x00000238: 03 DW_LNS_advance_line (46)
0x0000023a: 05 DW_LNS_set_column (11)
0x0000023c: 06 DW_LNS_negate_stmt
0x0000023d: 01 DW_LNS_copy
            0x00000000000000d1     46     11      1   0             0  is_stmt


0x0000023e: 00 DW_LNE_set_address (0x00000000000000dd)
0x00000245: 05 DW_LNS_set_column (28)
0x00000247: 06 DW_LNS_negate_stmt
0x00000248: 01 DW_LNS_copy
            0x00000000000000dd     46     28      1   0             0 


0x00000249: 00 DW_LNE_set_address (0x00000000000000e2)
0x00000250: 05 DW_LNS_set_column (41)
0x00000252: 01 DW_LNS_copy
            0x00000000000000e2     46     41      1   0             0 


0x00000253: 00 DW_LNE_set_address (0x00000000000000e7)
0x0000025a: 03 DW_LNS_advance_line (48)
0x0000025c: 05 DW_LNS_set_column (21)
0x0000025e: 06 DW_LNS_negate_stmt
0x0000025f: 01 DW_LNS_copy
            0x00000000000000e7     48     21      1   0             0  is_stmt


0x00000260: 00 DW_LNE_set_address (0x00000000000000ef)
0x00000267: 03 DW_LNS_advance_line (50)
0x00000269: 05 DW_LNS_set_column (14)
0x0000026b: 01 DW_LNS_copy
            0x00000000000000ef     50     14      1   0             0  is_stmt


0x0000026c: 00 DW_LNE_set_address (0x0000000000000102)
0x00000273: 03 DW_LNS_advance_line (52)
0x00000275: 05 DW_LNS_set_column (38)
0x00000277: 01 DW_LNS_copy
            0x0000000000000102     52     38      1   0             0  is_stmt


0x00000278: 00 DW_LNE_set_address (0x0000000000000116)
0x0000027f: 03 DW_LNS_advance_line (53)
0x00000281: 05 DW_LNS_set_column (22)
0x00000283: 01 DW_LNS_copy
            0x0000000000000116     53     22      1   0             0  is_stmt


0x00000284: 00 DW_LNE_set_address (0x0000000000000125)
0x0000028b: 03 DW_LNS_advance_line (54)
0x0000028d: 05 DW_LNS_set_column (24)
0x0000028f: 01 DW_LNS_copy
            0x0000000000000125     54     24      1   0             0  is_stmt


0x00000290: 00 DW_LNE_set_address (0x0000000000000127)
0x00000297: 05 DW_LNS_set_column (26)
0x00000299: 06 DW_LNS_negate_stmt
0x0000029a: 01 DW_LNS_copy
            0x0000000000000127     54     26      1   0             0 


0x0000029b: 00 DW_LNE_set_address (0x0000000000000134)
0x000002a2: 05 DW_LNS_set_column (24)
0x000002a4: 01 DW_LNS_copy
            0x0000000000000134     54     24      1   0             0 


0x000002a5: 00 DW_LNE_set_address (0x0000000000000137)
0x000002ac: 03 DW_LNS_advance_line (55)
0x000002ae: 06 DW_LNS_negate_stmt
0x000002af: 01 DW_LNS_copy
            0x0000000000000137     55     24      1   0             0  is_stmt


0x000002b0: 00 DW_LNE_set_address (0x000000000000013e)
0x000002b7: 03 DW_LNS_advance_line (52)
0x000002b9: 05 DW_LNS_set_column (44)
0x000002bb: 01 DW_LNS_copy
            0x000000000000013e     52     44      1   0             0  is_stmt


0x000002bc: 00 DW_LNE_set_address (0x000000000000014a)
0x000002c3: 05 DW_LNS_set_column (38)
0x000002c5: 06 DW_LNS_negate_stmt
0x000002c6: 01 DW_LNS_copy
            0x000000000000014a     52     38      1   0             0 


0x000002c7: 00 DW_LNE_set_address (0x000000000000014d)
0x000002ce: 05 DW_LNS_set_column (13)
0x000002d0: 01 DW_LNS_copy
            0x000000000000014d     52     13      1   0             0 


0x000002d1: 00 DW_LNE_set_address (0x0000000000000151)
0x000002d8: 03 DW_LNS_advance_line (58)
0x000002da: 05 DW_LNS_set_column (19)
0x000002dc: 06 DW_LNS_negate_stmt
0x000002dd: 01 DW_LNS_copy
            0x0000000000000151     58     19      1   0             0  is_stmt


0x000002de: 00 DW_LNE_set_address (0x0000000000000160)
0x000002e5: 03 DW_LNS_advance_line (59)
0x000002e7: 05 DW_LNS_set_column (21)
0x000002e9: 01 DW_LNS_copy
            0x0000000000000160     59     21      1   0             0  is_stmt


0x000002ea: 00 DW_LNE_set_address (0x0000000000000167)
0x000002f1: 03 DW_LNS_advance_line (57)
0x000002f3: 05 DW_LNS_set_column (18)
0x000002f5: 01 DW_LNS_copy
            0x0000000000000167     57     18      1   0             0  is_stmt


0x000002f6: 00 DW_LNE_set_address (0x0000000000000177)
0x000002fd: 03 DW_LNS_advance_line (62)
0x000002ff: 05 DW_LNS_set_column (14)
0x00000301: 01 DW_LNS_copy
            0x0000000000000177     62     14      1   0             0  is_stmt


0x00000302: 00 DW_LNE_set_address (0x000000000000017b)
0x00000309: 05 DW_LNS_set_column (23)
0x0000030b: 06 DW_LNS_negate_stmt
0x0000030c: 01 DW_LNS_copy
            0x000000000000017b     62     23      1   0             0 


0x0000030d: 00 DW_LNE_set_address (0x0000000000000180)
0x00000314: 05 DW_LNS_set_column (14)
0x00000316: 01 DW_LNS_copy
            0x0000000000000180     62     14      1   0             0 


0x00000317: 00 DW_LNE_set_address (0x0000000000000184)
0x0000031e: 03 DW_LNS_advance_line (66)
0x00000320: 05 DW_LNS_set_column (16)
0x00000322: 06 DW_LNS_negate_stmt
0x00000323: 01 DW_LNS_copy
            0x0000000000000184     66     16      1   0             0  is_stmt


0x00000324: 00 DW_LNE_set_address (0x0000000000000193)
0x0000032b: 03 DW_LNS_advance_line (75)
0x0000032d: 05 DW_LNS_set_column (27)
0x0000032f: 01 DW_LNS_copy
            0x0000000000000193     75     27      1   0             0  is_stmt


0x00000330: 00 DW_LNE_set_address (0x000000000000019c)
0x00000337: 03 DW_LNS_advance_line (76)
0x00000339: 05 DW_LNS_set_column (16)
0x0000033b: 01 DW_LNS_copy
            0x000000000000019c     76     16      1   0             0  is_stmt


0x0000033c: 00 DW_LNE_set_address (0x00000000000001a4)
0x00000343: 05 DW_LNS_set_column (27)
0x00000345: 06 DW_LNS_negate_stmt
0x00000346: 01 DW_LNS_copy
            0x00000000000001a4     76     27      1   0             0 


0x00000347: 00 DW_LNE_set_address (0x00000000000001a6)
0x0000034e: 05 DW_LNS_set_column (35)
0x00000350: 01 DW_LNS_copy
            0x00000000000001a6     76     35      1   0             0 


0x00000351: 00 DW_LNE_set_address (0x00000000000001af)
0x00000358: 05 DW_LNS_set_column (27)
0x0000035a: 01 DW_LNS_copy
            0x00000000000001af     76     27      1   0             0 


0x0000035b: 00 DW_LNE_set_address (0x00000000000001b4)
0x00000362: 05 DW_LNS_set_column (25)
0x00000364: 01 DW_LNS_copy
            0x00000000000001b4     76     25      1   0             0 


0x00000365: 00 DW_LNE_set_address (0x00000000000001b7)
0x0000036c: 03 DW_LNS_advance_line (75)
0x0000036e: 05 DW_LNS_set_column (27)
0x00000370: 06 DW_LNS_negate_stmt
0x00000371: 01 DW_LNS_copy
            0x00000000000001b7     75     27      1   0             0  is_stmt


0x00000372: 00 DW_LNE_set_address (0x00000000000001bc)
0x00000379: 05 DW_LNS_set_column (13)
0x0000037b: 06 DW_LNS_negate_stmt
0x0000037c: 01 DW_LNS_copy
            0x00000000000001bc     75     13      1   0             0 


0x0000037d: 00 DW_LNE_set_address (0x00000000000001c4)
0x00000384: 03 DW_LNS_advance_line (77)
0x00000386: 06 DW_LNS_negate_stmt
0x00000387: 01 DW_LNS_copy
            0x00000000000001c4     77     13      1   0             0  is_stmt


0x00000388: 00 DW_LNE_set_address (0x00000000000001cc)
0x0000038f: 05 DW_LNS_set_column (22)
0x00000391: 06 DW_LNS_negate_stmt
0x00000392: 01 DW_LNS_copy
            0x00000000000001cc     77     22      1   0             0 


0x00000393: 00 DW_LNE_set_address (0x00000000000001d1)
0x0000039a: 03 DW_LNS_advance_line (79)
0x0000039c: 05 DW_LNS_set_column (16)
0x0000039e: 06 DW_LNS_negate_stmt
0x0000039f: 01 DW_LNS_copy
            0x00000000000001d1     79     16      1   0             0  is_stmt


0x000003a0: 00 DW_LNE_set_address (0x00000000000001d9)
0x000003a7: 05 DW_LNS_set_column (14)
0x000003a9: 06 DW_LNS_negate_stmt
0x000003aa: 01 DW_LNS_copy
            0x00000000000001d9     79     14      1   0             0 


0x000003ab: 00 DW_LNE_set_address (0x00000000000001e8)
0x000003b2: 05 DW_LNS_set_column (25)
0x000003b4: 01 DW_LNS_copy
            0x00000000000001e8     79     25      1   0             0 


0x000003b5: 00 DW_LNE_set_address (0x00000000000001ef)
0x000003bc: 03 DW_LNS_advance_line (81)
0x000003be: 05 DW_LNS_set_column (11)
0x000003c0: 06 DW_LNS_negate_stmt
0x000003c1: 01 DW_LNS_copy
            0x00000000000001ef     81     11      1   0             0  is_stmt


0x000003c2: 00 DW_LNE_set_address (0x00000000000001f4)
0x000003c9: 03 DW_LNS_advance_line (66)
0x000003cb: 05 DW_LNS_set_column (16)
0x000003cd: 01 DW_LNS_copy
            0x00000000000001f4     66     16      1   0             0  is_stmt


0x000003ce: 00 DW_LNE_set_address (0x00000000000001fb)
0x000003d5: 03 DW_LNS_advance_line (74)
0x000003d7: 05 DW_LNS_set_column (22)
0x000003d9: 01 DW_LNS_copy
            0x00000000000001fb     74     22      1   0             0  is_stmt


0x000003da: 00 DW_LNE_set_address (0x0000000000000204)
0x000003e1: 03 DW_LNS_advance_line (37)
0x000003e3: 05 DW_LNS_set_column (4)
0x000003e5: 01 DW_LNS_copy
            0x0000000000000204     37      4      1   0             0  is_stmt


0x000003e6: 00 DW_LNE_set_address (0x0000000000000209)
0x000003ed: 03 DW_LNS_advance_line (39)
0x000003ef: 01 DW_LNS_copy
            0x0000000000000209     39      4      1   0             0  is_stmt


0x000003f0: 00 DW_LNE_set_address (0x000000000000020b)
0x000003f7: 05 DW_LNS_set_column (16)
0x000003f9: 06 DW_LNS_negate_stmt
0x000003fa: 01 DW_LNS_copy
            0x000000000000020b     39     16      1   0             0 


0x000003fb: 00 DW_LNE_set_address (0x0000000000000214)
0x00000402: 05 DW_LNS_set_column (4)
0x00000404: 01 DW_LNS_copy
            0x0000000000000214     39      4      1   0             0 


0x00000405: 00 DW_LNE_set_address (0x0000000000000216)
0x0000040c: 05 DW_LNS_set_column (23)
0x0000040e: 01 DW_LNS_copy
            0x0000000000000216     39     23      1   0             0 


0x0000040f: 00 DW_LNE_set_address (0x000000000000021b)
0x00000416: 05 DW_LNS_set_column (19)
0x00000418: 01 DW_LNS_copy
            0x000000000000021b     39     19      1   0             0 


0x00000419: 00 DW_LNE_set_address (0x0000000000000220)
0x00000420: 03 DW_LNS_advance_line (40)
0x00000422: 05 DW_LNS_set_column (4)
0x00000424: 06 DW_LNS_negate_stmt
0x00000425: 01 DW_LNS_copy
            0x0000000000000220     40      4      1   0             0  is_stmt


0x00000426: 00 DW_LNE_set_address (0x0000000000000228)
0x0000042d: 05 DW_LNS_set_column (17)
0x0000042f: 06 DW_LNS_negate_stmt
0x00000430: 01 DW_LNS_copy
            0x0000000000000228     40     17      1   0             0 


0x00000431: 00 DW_LNE_set_address (0x0000000000000238)
0x00000438: 03 DW_LNS_advance_line (44)
0x0000043a: 05 DW_LNS_set_column (16)
0x0000043c: 06 DW_LNS_negate_stmt
0x0000043d: 01 DW_LNS_copy
            0x0000000000000238     44     16      1   0             0  is_stmt


0x0000043e: 00 DW_LNE_set_address (0x0000000000000241)
0x00000445: 03 DW_LNS_advance_line (45)
0x00000447: 05 DW_LNS_set_column (10)
0x00000449: 01 DW_LNS_copy
            0x0000000000000241     45     10      1   0             0  is_stmt


0x0000044a: 00 DW_LNE_set_address (0x0000000000000243)
0x00000451: 05 DW_LNS_set_column (18)
0x00000453: 06 DW_LNS_negate_stmt
0x00000454: 01 DW_LNS_copy
            0x0000000000000243     45     18      1   0             0 


0x00000455: 00 DW_LNE_set_address (0x000000000000024c)
0x0000045c: 05 DW_LNS_set_column (10)
0x0000045e: 01 DW_LNS_copy
            0x000000000000024c     45     10      1   0             0 


0x0000045f: 00 DW_LNE_set_address (0x000000000000024e)
0x00000466: 05 DW_LNS_set_column (23)
0x00000468: 01 DW_LNS_copy
            0x000000000000024e     45     23      1   0             0 


0x00000469: 00 DW_LNE_set_address (0x0000000000000253)
0x00000470: 03 DW_LNS_advance_line (44)
0x00000472: 05 DW_LNS_set_column (16)
0x00000474: 06 DW_LNS_negate_stmt
0x00000475: 01 DW_LNS_copy
            0x0000000000000253     44     16      1   0             0  is_stmt


0x00000476: 00 DW_LNE_set_address (0x0000000000000264)
0x0000047d: 03 DW_LNS_advance_line (46)
0x0000047f: 05 DW_LNS_set_column (11)
0x00000481: 01 DW_LNS_copy
            0x0000000000000264     46     11      1   0             0  is_stmt


0x00000482: 00 DW_LNE_set_address (0x0000000000000270)
0x00000489: 05 DW_LNS_set_column (28)
0x0000048b: 06 DW_LNS_negate_stmt
0x0000048c: 01 DW_LNS_copy
            0x0000000000000270     46     28      1   0             0 


0x0000048d: 00 DW_LNE_set_address (0x0000000000000275)
0x00000494: 05 DW_LNS_set_column (41)
0x00000496: 01 DW_LNS_copy
            0x0000000000000275     46     41      1   0             0 


0x00000497: 00 DW_LNE_set_address (0x000000000000027a)
0x0000049e: 03 DW_LNS_advance_line (50)
0x000004a0: 05 DW_LNS_set_column (14)
0x000004a2: 06 DW_LNS_negate_stmt
0x000004a3: 01 DW_LNS_copy
            0x000000000000027a     50     14      1   0             0  is_stmt


0x000004a4: 00 DW_LNE_set_address (0x000000000000028d)
0x000004ab: 03 DW_LNS_advance_line (52)
0x000004ad: 05 DW_LNS_set_column (38)
0x000004af: 01 DW_LNS_copy
            0x000000000000028d     52     38      1   0             0  is_stmt


0x000004b0: 00 DW_LNE_set_address (0x00000000000002a1)
0x000004b7: 03 DW_LNS_advance_line (53)
0x000004b9: 05 DW_LNS_set_column (22)
0x000004bb: 01 DW_LNS_copy
            0x00000000000002a1     53     22      1   0             0  is_stmt


0x000004bc: 00 DW_LNE_set_address (0x00000000000002b0)
0x000004c3: 03 DW_LNS_advance_line (54)
0x000004c5: 05 DW_LNS_set_column (24)
0x000004c7: 01 DW_LNS_copy
            0x00000000000002b0     54     24      1   0             0  is_stmt


0x000004c8: 00 DW_LNE_set_address (0x00000000000002b2)
0x000004cf: 05 DW_LNS_set_column (26)
0x000004d1: 06 DW_LNS_negate_stmt
0x000004d2: 01 DW_LNS_copy
            0x00000000000002b2     54     26      1   0             0 


0x000004d3: 00 DW_LNE_set_address (0x00000000000002bf)
0x000004da: 05 DW_LNS_set_column (24)
0x000004dc: 01 DW_LNS_copy
            0x00000000000002bf     54     24      1   0             0 


0x000004dd: 00 DW_LNE_set_address (0x00000000000002c2)
0x000004e4: 03 DW_LNS_advance_line (55)
0x000004e6: 06 DW_LNS_negate_stmt
0x000004e7: 01 DW_LNS_copy
            0x00000000000002c2     55     24      1   0             0  is_stmt


0x000004e8: 00 DW_LNE_set_address (0x00000000000002c9)
0x000004ef: 03 DW_LNS_advance_line (52)
0x000004f1: 05 DW_LNS_set_column (44)
0x000004f3: 01 DW_LNS_copy
            0x00000000000002c9     52     44      1   0             0  is_stmt


0x000004f4: 00 DW_LNE_set_address (0x00000000000002d5)
0x000004fb: 05 DW_LNS_set_column (38)
0x000004fd: 06 DW_LNS_negate_stmt
0x000004fe: 01 DW_LNS_copy
            0x00000000000002d5     52     38      1   0             0 


0x000004ff: 00 DW_LNE_set_address (0x00000000000002dc)
0x00000506: 03 DW_LNS_advance_line (58)
0x00000508: 05 DW_LNS_set_column (19)
0x0000050a: 06 DW_LNS_negate_stmt
0x0000050b: 01 DW_LNS_copy
            0x00000000000002dc     58     19      1   0             0  is_stmt


0x0000050c: 00 DW_LNE_set_address (0x00000000000002eb)
0x00000513: 03 DW_LNS_advance_line (59)
0x00000515: 05 DW_LNS_set_column (21)
0x00000517: 01 DW_LNS_copy
            0x00000000000002eb     59     21      1   0             0  is_stmt


0x00000518: 00 DW_LNE_set_address (0x00000000000002f2)
0x0000051f: 03 DW_LNS_advance_line (57)
0x00000521: 05 DW_LNS_set_column (18)
0x00000523: 01 DW_LNS_copy
            0x00000000000002f2     57     18      1   0             0  is_stmt


0x00000524: 00 DW_LNE_set_address (0x0000000000000302)
0x0000052b: 03 DW_LNS_advance_line (62)
0x0000052d: 05 DW_LNS_set_column (14)
0x0000052f: 01 DW_LNS_copy
            0x0000000000000302     62     14      1   0             0  is_stmt


0x00000530: 00 DW_LNE_set_address (0x0000000000000306)
0x00000537: 05 DW_LNS_set_column (23)
0x00000539: 06 DW_LNS_negate_stmt
0x0000053a: 01 DW_LNS_copy
            0x0000000000000306     62     23      1   0             0 


0x0000053b: 00 DW_LNE_set_address (0x000000000000030b)
0x00000542: 05 DW_LNS_set_column (14)
0x00000544: 01 DW_LNS_copy
            0x000000000000030b     62     14      1   0             0 


0x00000545: 00 DW_LNE_set_address (0x000000000000030f)
0x0000054c: 03 DW_LNS_advance_line (66)
0x0000054e: 05 DW_LNS_set_column (16)
0x00000550: 06 DW_LNS_negate_stmt
0x00000551: 01 DW_LNS_copy
            0x000000000000030f     66     16      1   0             0  is_stmt


0x00000552: 00 DW_LNE_set_address (0x000000000000031e)
0x00000559: 03 DW_LNS_advance_line (75)
0x0000055b: 05 DW_LNS_set_column (27)
0x0000055d: 01 DW_LNS_copy
            0x000000000000031e     75     27      1   0             0  is_stmt


0x0000055e: 00 DW_LNE_set_address (0x0000000000000327)
0x00000565: 03 DW_LNS_advance_line (76)
0x00000567: 05 DW_LNS_set_column (16)
0x00000569: 01 DW_LNS_copy
            0x0000000000000327     76     16      1   0             0  is_stmt


0x0000056a: 00 DW_LNE_set_address (0x000000000000032f)
0x00000571: 05 DW_LNS_set_column (27)
0x00000573: 06 DW_LNS_negate_stmt
0x00000574: 01 DW_LNS_copy
            0x000000000000032f     76     27      1   0             0 


0x00000575: 00 DW_LNE_set_address (0x0000000000000331)
0x0000057c: 05 DW_LNS_set_column (35)
0x0000057e: 01 DW_LNS_copy
            0x0000000000000331     76     35      1   0             0 


0x0000057f: 00 DW_LNE_set_address (0x000000000000033a)
0x00000586: 05 DW_LNS_set_column (27)
0x00000588: 01 DW_LNS_copy
            0x000000000000033a     76     27      1   0             0 


0x00000589: 00 DW_LNE_set_address (0x000000000000033f)
0x00000590: 05 DW_LNS_set_column (25)
0x00000592: 01 DW_LNS_copy
            0x000000000000033f     76     25      1   0             0 


0x00000593: 00 DW_LNE_set_address (0x0000000000000342)
0x0000059a: 03 DW_LNS_advance_line (75)
0x0000059c: 05 DW_LNS_set_column (27)
0x0000059e: 06 DW_LNS_negate_stmt
0x0000059f: 01 DW_LNS_copy
            0x0000000000000342     75     27      1   0             0  is_stmt


0x000005a0: 00 DW_LNE_set_address (0x000000000000034f)
0x000005a7: 03 DW_LNS_advance_line (77)
0x000005a9: 05 DW_LNS_set_column (13)
0x000005ab: 01 DW_LNS_copy
            0x000000000000034f     77     13      1   0             0  is_stmt


0x000005ac: 00 DW_LNE_set_address (0x0000000000000357)
0x000005b3: 05 DW_LNS_set_column (22)
0x000005b5: 06 DW_LNS_negate_stmt
0x000005b6: 01 DW_LNS_copy
            0x0000000000000357     77     22      1   0             0 


0x000005b7: 00 DW_LNE_set_address (0x000000000000035c)
0x000005be: 03 DW_LNS_advance_line (79)
0x000005c0: 05 DW_LNS_set_column (16)
0x000005c2: 06 DW_LNS_negate_stmt
0x000005c3: 01 DW_LNS_copy
            0x000000000000035c     79     16      1   0             0  is_stmt


0x000005c4: 00 DW_LNE_set_address (0x0000000000000364)
0x000005cb: 05 DW_LNS_set_column (14)
0x000005cd: 06 DW_LNS_negate_stmt
0x000005ce: 01 DW_LNS_copy
            0x0000000000000364     79     14      1   0             0 


0x000005cf: 00 DW_LNE_set_address (0x0000000000000373)
0x000005d6: 05 DW_LNS_set_column (25)
0x000005d8: 01 DW_LNS_copy
            0x0000000000000373     79     25      1   0             0 


0x000005d9: 00 DW_LNE_set_address (0x000000000000037a)
0x000005e0: 03 DW_LNS_advance_line (81)
0x000005e2: 05 DW_LNS_set_column (11)
0x000005e4: 06 DW_LNS_negate_stmt
0x000005e5: 01 DW_LNS_copy
            0x000000000000037a     81     11      1   0             0  is_stmt


0x000005e6: 00 DW_LNE_set_address (0x000000000000037f)
0x000005ed: 03 DW_LNS_advance_line (66)
0x000005ef: 05 DW_LNS_set_column (16)
0x000005f1: 01 DW_LNS_copy
            0x000000000000037f     66     16      1   0             0  is_stmt


0x000005f2: 00 DW_LNE_set_address (0x0000000000000386)
0x000005f9: 03 DW_LNS_advance_line (74)
0x000005fb: 05 DW_LNS_set_column (22)
0x000005fd: 01 DW_LNS_copy
            0x0000000000000386     74     22      1   0             0  is_stmt


0x000005fe: 00 DW_LNE_set_address (0x0000000000000394)
0x00000605: 03 DW_LNS_advance_line (67)
0x00000607: 05 DW_LNS_set_column (13)
0x00000609: 01 DW_LNS_copy
            0x0000000000000394     67     13      1   0             0  is_stmt


0x0000060a: 00 DW_LNE_set_address (0x0000000000000398)
0x00000611: 03 DW_LNS_advance_line (68)
0x00000613: 01 DW_LNS_copy
            0x0000000000000398     68     13      1   0             0  is_stmt


0x00000614: 00 DW_LNE_set_address (0x000000000000039c)
0x0000061b: 03 DW_LNS_advance_line (69)
0x0000061d: 01 DW_LNS_copy
            0x000000000000039c     69     13      1   0             0  is_stmt


0x0000061e: 00 DW_LNE_set_address (0x00000000000003a0)
0x00000625: 03 DW_LNS_advance_line (70)
0x00000627: 01 DW_LNS_copy
            0x00000000000003a0     70     13      1   0             0  is_stmt


0x00000628: 00 DW_LNE_set_address (0x00000000000003a3)
0x0000062f: 00 DW_LNE_end_sequence
            0x00000000000003a3     70     13      1   0             0  is_stmt end_sequence

0x00000632: 00 DW_LNE_set_address (0x00000000000003a5)
0x00000639: 03 DW_LNS_advance_line (152)
0x0000063c: 01 DW_LNS_copy
            0x00000000000003a5    152      0      1   0             0  is_stmt


0x0000063d: 00 DW_LNE_set_address (0x00000000000003c3)
0x00000644: 03 DW_LNS_advance_line (153)
0x00000646: 05 DW_LNS_set_column (17)
0x00000648: 0a DW_LNS_set_prologue_end
0x00000649: 01 DW_LNS_copy
            0x00000000000003c3    153     17      1   0             0  is_stmt prologue_end


0x0000064a: 00 DW_LNE_set_address (0x00000000000003c8)
0x00000651: 05 DW_LNS_set_column (12)
0x00000653: 06 DW_LNS_negate_stmt
0x00000654: 01 DW_LNS_copy
            0x00000000000003c8    153     12      1   0             0 


0x00000655: 00 DW_LNE_set_address (0x00000000000003ce)
0x0000065c: 05 DW_LNS_set_column (28)
0x0000065e: 01 DW_LNS_copy
            0x00000000000003ce    153     28      1   0             0 


0x0000065f: 00 DW_LNE_set_address (0x00000000000003d3)
0x00000666: 05 DW_LNS_set_column (23)
0x00000668: 01 DW_LNS_copy
            0x00000000000003d3    153     23      1   0             0 


0x00000669: 00 DW_LNE_set_address (0x00000000000003d9)
0x00000670: 03 DW_LNS_advance_line (155)
0x00000672: 05 DW_LNS_set_column (10)
0x00000674: 06 DW_LNS_negate_stmt
0x00000675: 01 DW_LNS_copy
            0x00000000000003d9    155     10      1   0             0  is_stmt


0x00000676: 00 DW_LNE_set_address (0x00000000000003da)
0x0000067d: 05 DW_LNS_set_column (8)
0x0000067f: 06 DW_LNS_negate_stmt
0x00000680: 01 DW_LNS_copy
            0x00000000000003da    155      8      1   0             0 


0x00000681: 00 DW_LNE_set_address (0x00000000000003dd)
0x00000688: 03 DW_LNS_advance_line (156)
0x0000068a: 05 DW_LNS_set_column (7)
0x0000068c: 06 DW_LNS_negate_stmt
0x0000068d: 01 DW_LNS_copy
            0x00000000000003dd    156      7      1   0             0  is_stmt


0x0000068e: 00 DW_LNE_set_address (0x00000000000003ec)
0x00000695: 03 DW_LNS_advance_line (94)
0x00000697: 05 DW_LNS_set_column (18)
0x00000699: 01 DW_LNS_copy
            0x00000000000003ec     94     18      1   0             0  is_stmt


0x0000069a: 00 DW_LNE_set_address (0x00000000000003f1)
0x000006a1: 05 DW_LNS_set_column (4)
0x000006a3: 06 DW_LNS_negate_stmt
0x000006a4: 01 DW_LNS_copy
            0x00000000000003f1     94      4      1   0             0 


0x000006a5: 00 DW_LNE_set_address (0x0000000000000406)
0x000006ac: 03 DW_LNS_advance_line (95)
0x000006ae: 05 DW_LNS_set_column (29)
0x000006b0: 06 DW_LNS_negate_stmt
0x000006b1: 01 DW_LNS_copy
            0x0000000000000406     95     29      1   0             0  is_stmt


0x000006b2: 00 DW_LNE_set_address (0x0000000000000408)
0x000006b9: 03 DW_LNS_advance_line (98)
0x000006bb: 05 DW_LNS_set_column (19)
0x000006bd: 01 DW_LNS_copy
            0x0000000000000408     98     19      1   0             0  is_stmt


0x000006be: 00 DW_LNE_set_address (0x000000000000040f)
0x000006c5: 03 DW_LNS_advance_line (97)
0x000006c7: 05 DW_LNS_set_column (16)
0x000006c9: 01 DW_LNS_copy
            0x000000000000040f     97     16      1   0             0  is_stmt


0x000006ca: 00 DW_LNE_set_address (0x0000000000000416)
0x000006d1: 03 DW_LNS_advance_line (96)
0x000006d3: 01 DW_LNS_copy
            0x0000000000000416     96     16      1   0             0  is_stmt


0x000006d4: 00 DW_LNE_set_address (0x0000000000000421)
0x000006db: 03 DW_LNS_advance_line (94)
0x000006dd: 05 DW_LNS_set_column (28)
0x000006df: 01 DW_LNS_copy
            0x0000000000000421     94     28      1   0             0  is_stmt


0x000006e0: 00 DW_LNE_set_address (0x0000000000000426)
0x000006e7: 05 DW_LNS_set_column (18)
0x000006e9: 06 DW_LNS_negate_stmt
0x000006ea: 01 DW_LNS_copy
            0x0000000000000426     94     18      1   0             0 


0x000006eb: 00 DW_LNE_set_address (0x000000000000042b)
0x000006f2: 05 DW_LNS_set_column (4)
0x000006f4: 01 DW_LNS_copy
            0x000000000000042b     94      4      1   0             0 


0x000006f5: 00 DW_LNE_set_address (0x0000000000000433)
0x000006fc: 03 DW_LNS_advance_line (102)
0x000006fe: 05 DW_LNS_set_column (27)
0x00000700: 06 DW_LNS_negate_stmt
0x00000701: 01 DW_LNS_copy
            0x0000000000000433    102     27      1   0             0  is_stmt


0x00000702: 00 DW_LNE_set_address (0x0000000000000438)
0x00000709: 05 DW_LNS_set_column (18)
0x0000070b: 06 DW_LNS_negate_stmt
0x0000070c: 01 DW_LNS_copy
            0x0000000000000438    102     18      1   0             0 


0x0000070d: 00 DW_LNE_set_address (0x000000000000043e)
0x00000714: 03 DW_LNS_advance_line (103)
0x00000716: 06 DW_LNS_negate_stmt
0x00000717: 01 DW_LNS_copy
            0x000000000000043e    103     18      1   0             0  is_stmt


0x00000718: 00 DW_LNE_set_address (0x000000000000044c)
0x0000071f: 03 DW_LNS_advance_line (105)
0x00000721: 01 DW_LNS_copy
            0x000000000000044c    105     18      1   0             0  is_stmt


0x00000722: 00 DW_LNE_set_address (0x0000000000000451)
0x00000729: 05 DW_LNS_set_column (4)
0x0000072b: 06 DW_LNS_negate_stmt
0x0000072c: 01 DW_LNS_copy
            0x0000000000000451    105      4      1   0             0 


0x0000072d: 00 DW_LNE_set_address (0x0000000000000455)
0x00000734: 03 DW_LNS_advance_line (106)
0x00000736: 05 DW_LNS_set_column (7)
0x00000738: 06 DW_LNS_negate_stmt
0x00000739: 01 DW_LNS_copy
            0x0000000000000455    106      7      1   0             0  is_stmt


0x0000073a: 00 DW_LNE_set_address (0x000000000000045d)
0x00000741: 05 DW_LNS_set_column (16)
0x00000743: 06 DW_LNS_negate_stmt
0x00000744: 01 DW_LNS_copy
            0x000000000000045d    106     16      1   0             0 


0x00000745: 00 DW_LNE_set_address (0x0000000000000462)
0x0000074c: 03 DW_LNS_advance_line (105)
0x0000074e: 05 DW_LNS_set_column (24)
0x00000750: 06 DW_LNS_negate_stmt
0x00000751: 01 DW_LNS_copy
            0x0000000000000462    105     24      1   0             0  is_stmt


0x00000752: 00 DW_LNE_set_address (0x0000000000000467)
0x00000759: 05 DW_LNS_set_column (18)
0x0000075b: 06 DW_LNS_negate_stmt
0x0000075c: 01 DW_LNS_copy
            0x0000000000000467    105     18      1   0             0 


0x0000075d: 00 DW_LNE_set_address (0x000000000000048d)
0x00000764: 03 DW_LNS_advance_line (112)
0x00000766: 05 DW_LNS_set_column (13)
0x00000768: 06 DW_LNS_negate_stmt
0x00000769: 01 DW_LNS_copy
            0x000000000000048d    112     13      1   0             0  is_stmt


0x0000076a: 00 DW_LNE_set_address (0x000000000000048f)
0x00000771: 05 DW_LNS_set_column (26)
0x00000773: 06 DW_LNS_negate_stmt
0x00000774: 01 DW_LNS_copy
            0x000000000000048f    112     26      1   0             0 


0x00000775: 00 DW_LNE_set_address (0x000000000000049c)
0x0000077c: 05 DW_LNS_set_column (35)
0x0000077e: 01 DW_LNS_copy
            0x000000000000049c    112     35      1   0             0 


0x0000077f: 00 DW_LNE_set_address (0x000000000000049d)
0x00000786: 05 DW_LNS_set_column (13)
0x00000788: 01 DW_LNS_copy
            0x000000000000049d    112     13      1   0             0 


0x00000789: 00 DW_LNE_set_address (0x00000000000004ab)
0x00000790: 03 DW_LNS_advance_line (111)
0x00000792: 05 DW_LNS_set_column (30)
0x00000794: 06 DW_LNS_negate_stmt
0x00000795: 01 DW_LNS_copy
            0x00000000000004ab    111     30      1   0             0  is_stmt


0x00000796: 00 DW_LNE_set_address (0x00000000000004b0)
0x0000079d: 05 DW_LNS_set_column (24)
0x0000079f: 06 DW_LNS_negate_stmt
0x000007a0: 01 DW_LNS_copy
            0x00000000000004b0    111     24      1   0             0 


0x000007a1: 00 DW_LNE_set_address (0x00000000000004b5)
0x000007a8: 05 DW_LNS_set_column (10)
0x000007aa: 01 DW_LNS_copy
            0x00000000000004b5    111     10      1   0             0 


0x000007ab: 00 DW_LNE_set_address (0x00000000000004ba)
0x000007b2: 03 DW_LNS_advance_line (113)
0x000007b4: 06 DW_LNS_negate_stmt
0x000007b5: 01 DW_LNS_copy
            0x00000000000004ba    113     10      1   0             0  is_stmt


0x000007b6: 00 DW_LNE_set_address (0x00000000000004bf)
0x000007bd: 03 DW_LNS_advance_line (118)
0x000007bf: 05 DW_LNS_set_column (16)
0x000007c1: 01 DW_LNS_copy
            0x00000000000004bf    118     16      1   0             0  is_stmt


0x000007c2: 00 DW_LNE_set_address (0x00000000000004c4)
0x000007c9: 05 DW_LNS_set_column (7)
0x000007cb: 06 DW_LNS_negate_stmt
0x000007cc: 01 DW_LNS_copy
            0x00000000000004c4    118      7      1   0             0 


0x000007cd: 00 DW_LNE_set_address (0x00000000000004c8)
0x000007d4: 03 DW_LNS_advance_line (119)
0x000007d6: 05 DW_LNS_set_column (10)
0x000007d8: 06 DW_LNS_negate_stmt
0x000007d9: 01 DW_LNS_copy
            0x00000000000004c8    119     10      1   0             0  is_stmt


0x000007da: 00 DW_LNE_set_address (0x00000000000004ca)
0x000007e1: 05 DW_LNS_set_column (18)
0x000007e3: 06 DW_LNS_negate_stmt
0x000007e4: 01 DW_LNS_copy
            0x00000000000004ca    119     18      1   0             0 


0x000007e5: 00 DW_LNE_set_address (0x00000000000004d3)
0x000007ec: 05 DW_LNS_set_column (10)
0x000007ee: 01 DW_LNS_copy
            0x00000000000004d3    119     10      1   0             0 


0x000007ef: 00 DW_LNE_set_address (0x00000000000004d5)
0x000007f6: 05 DW_LNS_set_column (23)
0x000007f8: 01 DW_LNS_copy
            0x00000000000004d5    119     23      1   0             0 


0x000007f9: 00 DW_LNE_set_address (0x00000000000004da)
0x00000800: 03 DW_LNS_advance_line (118)
0x00000802: 05 DW_LNS_set_column (16)
0x00000804: 06 DW_LNS_negate_stmt
0x00000805: 01 DW_LNS_copy
            0x00000000000004da    118     16      1   0             0  is_stmt


0x00000806: 00 DW_LNE_set_address (0x00000000000004e5)
0x0000080d: 05 DW_LNS_set_column (7)
0x0000080f: 06 DW_LNS_negate_stmt
0x00000810: 01 DW_LNS_copy
            0x00000000000004e5    118      7      1   0             0 


0x00000811: 00 DW_LNE_set_address (0x00000000000004eb)
0x00000818: 03 DW_LNS_advance_line (122)
0x0000081a: 05 DW_LNS_set_column (16)
0x0000081c: 06 DW_LNS_negate_stmt
0x0000081d: 01 DW_LNS_copy
            0x00000000000004eb    122     16      1   0             0  is_stmt


0x0000081e: 00 DW_LNE_set_address (0x00000000000004ff)
0x00000825: 03 DW_LNS_advance_line (125)
0x00000827: 05 DW_LNS_set_column (22)
0x00000829: 01 DW_LNS_copy
            0x00000000000004ff    125     22      1   0             0  is_stmt


0x0000082a: 00 DW_LNE_set_address (0x0000000000000508)
0x00000831: 03 DW_LNS_advance_line (126)
0x00000833: 05 DW_LNS_set_column (27)
0x00000835: 01 DW_LNS_copy
            0x0000000000000508    126     27      1   0             0  is_stmt


0x00000836: 00 DW_LNE_set_address (0x000000000000050d)
0x0000083d: 05 DW_LNS_set_column (13)
0x0000083f: 06 DW_LNS_negate_stmt
0x00000840: 01 DW_LNS_copy
            0x000000000000050d    126     13      1   0             0 


0x00000841: 00 DW_LNE_set_address (0x0000000000000511)
0x00000848: 03 DW_LNS_advance_line (127)
0x0000084a: 05 DW_LNS_set_column (16)
0x0000084c: 06 DW_LNS_negate_stmt
0x0000084d: 01 DW_LNS_copy
            0x0000000000000511    127     16      1   0             0  is_stmt


0x0000084e: 00 DW_LNE_set_address (0x0000000000000519)
0x00000855: 05 DW_LNS_set_column (27)
0x00000857: 06 DW_LNS_negate_stmt
0x00000858: 01 DW_LNS_copy
            0x0000000000000519    127     27      1   0             0 


0x00000859: 00 DW_LNE_set_address (0x000000000000051b)
0x00000860: 05 DW_LNS_set_column (35)
0x00000862: 01 DW_LNS_copy
            0x000000000000051b    127     35      1   0             0 


0x00000863: 00 DW_LNE_set_address (0x0000000000000524)
0x0000086a: 05 DW_LNS_set_column (27)
0x0000086c: 01 DW_LNS_copy
            0x0000000000000524    127     27      1   0             0 


0x0000086d: 00 DW_LNE_set_address (0x0000000000000529)
0x00000874: 05 DW_LNS_set_column (25)
0x00000876: 01 DW_LNS_copy
            0x0000000000000529    127     25      1   0             0 


0x00000877: 00 DW_LNE_set_address (0x000000000000052c)
0x0000087e: 03 DW_LNS_advance_line (126)
0x00000880: 05 DW_LNS_set_column (27)
0x00000882: 06 DW_LNS_negate_stmt
0x00000883: 01 DW_LNS_copy
            0x000000000000052c    126     27      1   0             0  is_stmt


0x00000884: 00 DW_LNE_set_address (0x0000000000000531)
0x0000088b: 05 DW_LNS_set_column (13)
0x0000088d: 06 DW_LNS_negate_stmt
0x0000088e: 01 DW_LNS_copy
            0x0000000000000531    126     13      1   0             0 


0x0000088f: 00 DW_LNE_set_address (0x0000000000000539)
0x00000896: 03 DW_LNS_advance_line (128)
0x00000898: 06 DW_LNS_negate_stmt
0x00000899: 01 DW_LNS_copy
            0x0000000000000539    128     13      1   0             0  is_stmt


0x0000089a: 00 DW_LNE_set_address (0x0000000000000541)
0x000008a1: 05 DW_LNS_set_column (22)
0x000008a3: 06 DW_LNS_negate_stmt
0x000008a4: 01 DW_LNS_copy
            0x0000000000000541    128     22      1   0             0 


0x000008a5: 00 DW_LNE_set_address (0x0000000000000546)
0x000008ac: 03 DW_LNS_advance_line (130)
0x000008ae: 05 DW_LNS_set_column (16)
0x000008b0: 06 DW_LNS_negate_stmt
0x000008b1: 01 DW_LNS_copy
            0x0000000000000546    130     16      1   0             0  is_stmt


0x000008b2: 00 DW_LNE_set_address (0x000000000000054e)
0x000008b9: 05 DW_LNS_set_column (14)
0x000008bb: 06 DW_LNS_negate_stmt
0x000008bc: 01 DW_LNS_copy
            0x000000000000054e    130     14      1   0             0 


0x000008bd: 00 DW_LNE_set_address (0x000000000000055f)
0x000008c4: 05 DW_LNS_set_column (25)
0x000008c6: 01 DW_LNS_copy
            0x000000000000055f    130     25      1   0             0 


0x000008c7: 00 DW_LNE_set_address (0x0000000000000564)
0x000008ce: 05 DW_LNS_set_column (14)
0x000008d0: 01 DW_LNS_copy
            0x0000000000000564    130     14      1   0             0 


0x000008d1: 00 DW_LNE_set_address (0x0000000000000566)
0x000008d8: 03 DW_LNS_advance_line (133)
0x000008da: 05 DW_LNS_set_column (11)
0x000008dc: 06 DW_LNS_negate_stmt
0x000008dd: 01 DW_LNS_copy
            0x0000000000000566    133     11      1   0             0  is_stmt


0x000008de: 00 DW_LNE_set_address (0x000000000000056b)
0x000008e5: 03 DW_LNS_advance_line (122)
0x000008e7: 05 DW_LNS_set_column (16)
0x000008e9: 01 DW_LNS_copy
            0x000000000000056b    122     16      1   0             0  is_stmt


0x000008ea: 00 DW_LNE_set_address (0x0000000000000570)
0x000008f1: 05 DW_LNS_set_column (14)
0x000008f3: 06 DW_LNS_negate_stmt
0x000008f4: 01 DW_LNS_copy
            0x0000000000000570    122     14      1   0             0 


0x000008f5: 00 DW_LNE_set_address (0x0000000000000575)
0x000008fc: 03 DW_LNS_advance_line (130)
0x000008fe: 06 DW_LNS_negate_stmt
0x000008ff: 01 DW_LNS_copy
            0x0000000000000575    130     14      1   0             0  is_stmt


0x00000900: 00 DW_LNE_set_address (0x0000000000000576)
0x00000907: 03 DW_LNS_advance_line (110)
0x00000909: 05 DW_LNS_set_column (11)
0x0000090b: 01 DW_LNS_copy
            0x0000000000000576    110     11      1   0             0  is_stmt


0x0000090c: 00 DW_LNE_set_address (0x0000000000000584)
0x00000913: 03 DW_LNS_advance_line (113)
0x00000915: 05 DW_LNS_set_column (10)
0x00000917: 01 DW_LNS_copy
            0x0000000000000584    113     10      1   0             0  is_stmt


0x00000918: 00 DW_LNE_set_address (0x0000000000000589)
0x0000091f: 03 DW_LNS_advance_line (118)
0x00000921: 05 DW_LNS_set_column (16)
0x00000923: 01 DW_LNS_copy
            0x0000000000000589    118     16      1   0             0  is_stmt


0x00000924: 00 DW_LNE_set_address (0x000000000000058e)
0x0000092b: 05 DW_LNS_set_column (7)
0x0000092d: 06 DW_LNS_negate_stmt
0x0000092e: 01 DW_LNS_copy
            0x000000000000058e    118      7      1   0             0 


0x0000092f: 00 DW_LNE_set_address (0x0000000000000592)
0x00000936: 03 DW_LNS_advance_line (119)
0x00000938: 05 DW_LNS_set_column (10)
0x0000093a: 06 DW_LNS_negate_stmt
0x0000093b: 01 DW_LNS_copy
            0x0000000000000592    119     10      1   0             0  is_stmt


0x0000093c: 00 DW_LNE_set_address (0x0000000000000594)
0x00000943: 05 DW_LNS_set_column (18)
0x00000945: 06 DW_LNS_negate_stmt
0x00000946: 01 DW_LNS_copy
            0x0000000000000594    119     18      1   0             0 


0x00000947: 00 DW_LNE_set_address (0x000000000000059d)
0x0000094e: 05 DW_LNS_set_column (10)
0x00000950: 01 DW_LNS_copy
            0x000000000000059d    119     10      1   0             0 


0x00000951: 00 DW_LNE_set_address (0x000000000000059f)
0x00000958: 05 DW_LNS_set_column (23)
0x0000095a: 01 DW_LNS_copy
            0x000000000000059f    119     23      1   0             0 


0x0000095b: 00 DW_LNE_set_address (0x00000000000005a4)
0x00000962: 03 DW_LNS_advance_line (118)
0x00000964: 05 DW_LNS_set_column (16)
0x00000966: 06 DW_LNS_negate_stmt
0x00000967: 01 DW_LNS_copy
            0x00000000000005a4    118     16      1   0             0  is_stmt


0x00000968: 00 DW_LNE_set_address (0x00000000000005af)
0x0000096f: 05 DW_LNS_set_column (7)
0x00000971: 06 DW_LNS_negate_stmt
0x00000972: 01 DW_LNS_copy
            0x00000000000005af    118      7      1   0             0 


0x00000973: 00 DW_LNE_set_address (0x00000000000005b5)
0x0000097a: 03 DW_LNS_advance_line (122)
0x0000097c: 05 DW_LNS_set_column (16)
0x0000097e: 06 DW_LNS_negate_stmt
0x0000097f: 01 DW_LNS_copy
            0x00000000000005b5    122     16      1   0             0  is_stmt


0x00000980: 00 DW_LNE_set_address (0x00000000000005ba)
0x00000987: 05 DW_LNS_set_column (14)
0x00000989: 06 DW_LNS_negate_stmt
0x0000098a: 01 DW_LNS_copy
            0x00000000000005ba    122     14      1   0             0 


0x0000098b: 00 DW_LNE_set_address (0x00000000000005c3)
0x00000992: 03 DW_LNS_advance_line (125)
0x00000994: 05 DW_LNS_set_column (22)
0x00000996: 06 DW_LNS_negate_stmt
0x00000997: 01 DW_LNS_copy
            0x00000000000005c3    125     22      1   0             0  is_stmt


0x00000998: 00 DW_LNE_set_address (0x00000000000005d2)
0x0000099f: 03 DW_LNS_advance_line (126)
0x000009a1: 05 DW_LNS_set_column (27)
0x000009a3: 01 DW_LNS_copy
            0x00000000000005d2    126     27      1   0             0  is_stmt


0x000009a4: 00 DW_LNE_set_address (0x00000000000005d7)
0x000009ab: 05 DW_LNS_set_column (13)
0x000009ad: 06 DW_LNS_negate_stmt
0x000009ae: 01 DW_LNS_copy
            0x00000000000005d7    126     13      1   0             0 


0x000009af: 00 DW_LNE_set_address (0x00000000000005db)
0x000009b6: 03 DW_LNS_advance_line (127)
0x000009b8: 05 DW_LNS_set_column (16)
0x000009ba: 06 DW_LNS_negate_stmt
0x000009bb: 01 DW_LNS_copy
            0x00000000000005db    127     16      1   0             0  is_stmt


0x000009bc: 00 DW_LNE_set_address (0x00000000000005e3)
0x000009c3: 05 DW_LNS_set_column (27)
0x000009c5: 06 DW_LNS_negate_stmt
0x000009c6: 01 DW_LNS_copy
            0x00000000000005e3    127     27      1   0             0 


0x000009c7: 00 DW_LNE_set_address (0x00000000000005e5)
0x000009ce: 05 DW_LNS_set_column (35)
0x000009d0: 01 DW_LNS_copy
            0x00000000000005e5    127     35      1   0             0 


0x000009d1: 00 DW_LNE_set_address (0x00000000000005ee)
0x000009d8: 05 DW_LNS_set_column (27)
0x000009da: 01 DW_LNS_copy
            0x00000000000005ee    127     27      1   0             0 


0x000009db: 00 DW_LNE_set_address (0x00000000000005f3)
0x000009e2: 05 DW_LNS_set_column (25)
0x000009e4: 01 DW_LNS_copy
            0x00000000000005f3    127     25      1   0             0 


0x000009e5: 00 DW_LNE_set_address (0x00000000000005f6)
0x000009ec: 03 DW_LNS_advance_line (126)
0x000009ee: 05 DW_LNS_set_column (27)
0x000009f0: 06 DW_LNS_negate_stmt
0x000009f1: 01 DW_LNS_copy
            0x00000000000005f6    126     27      1   0             0  is_stmt


0x000009f2: 00 DW_LNE_set_address (0x00000000000005fb)
0x000009f9: 05 DW_LNS_set_column (13)
0x000009fb: 06 DW_LNS_negate_stmt
0x000009fc: 01 DW_LNS_copy
            0x00000000000005fb    126     13      1   0             0 


0x000009fd: 00 DW_LNE_set_address (0x0000000000000603)
0x00000a04: 03 DW_LNS_advance_line (128)
0x00000a06: 06 DW_LNS_negate_stmt
0x00000a07: 01 DW_LNS_copy
            0x0000000000000603    128     13      1   0             0  is_stmt


0x00000a08: 00 DW_LNE_set_address (0x000000000000060b)
0x00000a0f: 05 DW_LNS_set_column (22)
0x00000a11: 06 DW_LNS_negate_stmt
0x00000a12: 01 DW_LNS_copy
            0x000000000000060b    128     22      1   0             0 


0x00000a13: 00 DW_LNE_set_address (0x0000000000000610)
0x00000a1a: 03 DW_LNS_advance_line (130)
0x00000a1c: 05 DW_LNS_set_column (16)
0x00000a1e: 06 DW_LNS_negate_stmt
0x00000a1f: 01 DW_LNS_copy
            0x0000000000000610    130     16      1   0             0  is_stmt


0x00000a20: 00 DW_LNE_set_address (0x0000000000000618)
0x00000a27: 05 DW_LNS_set_column (14)
0x00000a29: 06 DW_LNS_negate_stmt
0x00000a2a: 01 DW_LNS_copy
            0x0000000000000618    130     14      1   0             0 


0x00000a2b: 00 DW_LNE_set_address (0x0000000000000629)
0x00000a32: 05 DW_LNS_set_column (25)
0x00000a34: 01 DW_LNS_copy
            0x0000000000000629    130     25      1   0             0 


0x00000a35: 00 DW_LNE_set_address (0x000000000000062e)
0x00000a3c: 05 DW_LNS_set_column (14)
0x00000a3e: 01 DW_LNS_copy
            0x000000000000062e    130     14      1   0             0 


0x00000a3f: 00 DW_LNE_set_address (0x0000000000000630)
0x00000a46: 03 DW_LNS_advance_line (133)
0x00000a48: 05 DW_LNS_set_column (11)
0x00000a4a: 06 DW_LNS_negate_stmt
0x00000a4b: 01 DW_LNS_copy
            0x0000000000000630    133     11      1   0             0  is_stmt


0x00000a4c: 00 DW_LNE_set_address (0x0000000000000635)
0x00000a53: 03 DW_LNS_advance_line (122)
0x00000a55: 05 DW_LNS_set_column (16)
0x00000a57: 01 DW_LNS_copy
            0x0000000000000635    122     16      1   0             0  is_stmt


0x00000a58: 00 DW_LNE_set_address (0x000000000000063a)
0x00000a5f: 05 DW_LNS_set_column (14)
0x00000a61: 06 DW_LNS_negate_stmt
0x00000a62: 01 DW_LNS_copy
            0x000000000000063a    122     14      1   0             0 


0x00000a63: 00 DW_LNE_set_address (0x000000000000063f)
0x00000a6a: 03 DW_LNS_advance_line (130)
0x00000a6c: 06 DW_LNS_negate_stmt
0x00000a6d: 01 DW_LNS_copy
            0x000000000000063f    130     14      1   0             0  is_stmt


0x00000a6e: 00 DW_LNE_set_address (0x0000000000000640)
0x00000a75: 03 DW_LNS_advance_line (110)
0x00000a77: 05 DW_LNS_set_column (11)
0x00000a79: 01 DW_LNS_copy
            0x0000000000000640    110     11      1   0             0  is_stmt


0x00000a7a: 00 DW_LNE_set_address (0x0000000000000646)
0x00000a81: 03 DW_LNS_advance_line (138)
0x00000a83: 05 DW_LNS_set_column (4)
0x00000a85: 01 DW_LNS_copy
            0x0000000000000646    138      4      1   0             0  is_stmt


0x00000a86: 00 DW_LNE_set_address (0x000000000000064a)
0x00000a8d: 03 DW_LNS_advance_line (139)
0x00000a8f: 01 DW_LNS_copy
            0x000000000000064a    139      4      1   0             0  is_stmt


0x00000a90: 00 DW_LNE_set_address (0x0000000000000656)
0x00000a97: 03 DW_LNS_advance_line (141)
0x00000a99: 01 DW_LNS_copy
            0x0000000000000656    141      4      1   0             0  is_stmt


0x00000a9a: 00 DW_LNE_set_address (0x0000000000000661)
0x00000aa1: 03 DW_LNS_advance_line (142)
0x00000aa3: 05 DW_LNS_set_column (20)
0x00000aa5: 01 DW_LNS_copy
            0x0000000000000661    142     20      1   0             0  is_stmt


0x00000aa6: 00 DW_LNE_set_address (0x0000000000000669)
0x00000aad: 03 DW_LNS_advance_line (146)
0x00000aaf: 01 DW_LNS_copy
            0x0000000000000669    146     20      1   0             0  is_stmt


0x00000ab0: 00 DW_LNE_set_address (0x0000000000000670)
0x00000ab7: 03 DW_LNS_advance_line (147)
0x00000ab9: 05 DW_LNS_set_column (7)
0x00000abb: 01 DW_LNS_copy
            0x0000000000000670    147      7      1   0             0  is_stmt


0x00000abc: 00 DW_LNE_set_address (0x0000000000000674)
0x00000ac3: 03 DW_LNS_advance_line (143)
0x00000ac5: 05 DW_LNS_set_column (11)
0x00000ac7: 01 DW_LNS_copy
            0x0000000000000674    143     11      1   0             0  is_stmt


0x00000ac8: 00 DW_LNE_set_address (0x0000000000000678)
0x00000acf: 05 DW_LNS_set_column (20)
0x00000ad1: 06 DW_LNS_negate_stmt
0x00000ad2: 01 DW_LNS_copy
            0x0000000000000678    143     20      1   0             0 


0x00000ad3: 00 DW_LNE_set_address (0x000000000000067d)
0x00000ada: 05 DW_LNS_set_column (11)
0x00000adc: 01 DW_LNS_copy
            0x000000000000067d    143     11      1   0             0 


0x00000add: 00 DW_LNE_set_address (0x0000000000000684)
0x00000ae4: 03 DW_LNS_advance_line (141)
0x00000ae6: 05 DW_LNS_set_column (4)
0x00000ae8: 06 DW_LNS_negate_stmt
0x00000ae9: 01 DW_LNS_copy
            0x0000000000000684    141      4      1   0             0  is_stmt


0x00000aea: 00 DW_LNE_set_address (0x000000000000068a)
0x00000af1: 03 DW_LNS_advance_line (159)
0x00000af3: 01 DW_LNS_copy
            0x000000000000068a    159      4      1   0             0  is_stmt


0x00000af4: 00 DW_LNE_set_address (0x00000000000006a1)
0x00000afb: 03 DW_LNS_advance_line (161)
0x00000afd: 05 DW_LNS_set_column (1)
0x00000aff: 01 DW_LNS_copy
            0x00000000000006a1    161      1      1   0             0  is_stmt


0x00000b00: 00 DW_LNE_set_address (0x00000000000006ab)
0x00000b07: 00 DW_LNE_end_sequence
            0x00000000000006ab    161      1      1   0             0  is_stmt end_sequence


.debug_str contents:
0x00000000: "clang version 11.0.0 (https://github.com/llvm/llvm-project.git 313d89724ce3ccf66c1c51849903e1e6d184dd85)"
0x00000069: "/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp"
0x000000a9: "/usr/local/google/home/azakai/Dev/2-binaryen"
0x000000d6: "i"
0x000000d8: "int"
0x000000dc: "n"
0x000000de: "next"
0x000000e3: "worker_args"
0x000000ef: "std"
0x000000f3: "decltype(nullptr)"
0x00000105: "nullptr_t"
0x0000010f: "free"
0x00000114: "_ZL8fannkuchi"
0x00000122: "fannkuch"
0x0000012b: "showmax"
0x00000133: "args"
0x00000138: "targs"
0x0000013e: "perm1"
0x00000144: "count"
0x0000014a: "r"
0x0000014c: "maxflips"
0x00000155: "flips"
0x0000015b: "cleanup"
0x00000163: "p0"
0x00000166: "_Z15fannkuch_workerPv"
0x0000017c: "fannkuch_worker"
0x0000018c: "main"
0x00000191: "_arg"
0x00000196: "perm"
0x0000019b: "k"
0x0000019d: "j"
0x0000019f: "tmp"
0x000001a3: "argc"
0x000001a8: "argv"
0x000001ad: "char"

.debug_ranges contents:
00000000 00000193 000001d1
00000000 000001fb 00000204
00000000 0000031e 0000035c
00000000 00000386 0000038f
00000000 <End of list>
00000028 000004ff 00000546
00000028 000005c3 00000610
00000028 <End of list>
00000040 00000006 000003a3
00000040 000003a5 000006ab
00000040 <End of list>
(module
 (type $i32_=>_i32 (func (param i32) (result i32)))
 (type $i32_i32_=>_i32 (func (param i32 i32) (result i32)))
 (type $none_=>_none (func))
 (type $i32_=>_none (func (param i32)))
 (type $i32_i32_i32_=>_i32 (func (param i32 i32 i32) (result i32)))
 (import "env" "memory" (memory $mimport$0 256 256))
 (data (i32.const 1024) "Pfannkuchen(%d) = %d.\n\00%d\00Wrong argument.\00")
 (import "env" "__indirect_function_table" (table $timport$0 1 funcref))
 (import "env" "malloc" (func $malloc (param i32) (result i32)))
 (import "env" "memcpy" (func $memcpy (param i32 i32 i32) (result i32)))
 (import "env" "free" (func $free (param i32)))
 (import "env" "atoi" (func $atoi (param i32) (result i32)))
 (import "env" "puts" (func $puts (param i32) (result i32)))
 (import "env" "iprintf" (func $iprintf (param i32 i32) (result i32)))
 (import "env" "putchar" (func $putchar (param i32) (result i32)))
 (global $global$0 (mut i32) (i32.const 5243952))
 (global $global$1 i32 (i32.const 1066))
 (export "__wasm_call_ctors" (func $__wasm_call_ctors))
 (export "main" (func $main))
 (export "__data_end" (global $global$1))
 (func $__wasm_call_ctors
 )
 (func $fannkuch_worker\28void*\29 (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  ;; code offset: 0x29
  (local.set $1
   ;; code offset: 0x27
   (i32.const 0)
  )
  ;; code offset: 0x39
  (local.set $4
   ;; code offset: 0x37
   (call $malloc
    ;; code offset: 0x35
    (local.tee $3
     ;; code offset: 0x34
     (i32.shl
      ;; code offset: 0x30
      (local.tee $2
       ;; code offset: 0x2d
       (i32.load offset=4
        ;; code offset: 0x2b
        (local.get $0)
       )
      )
      ;; code offset: 0x32
      (i32.const 2)
     )
    )
   )
  )
  ;; code offset: 0x3f
  (local.set $5
   ;; code offset: 0x3d
   (call $malloc
    ;; code offset: 0x3b
    (local.get $3)
   )
  )
  ;; code offset: 0x45
  (local.set $6
   ;; code offset: 0x43
   (call $malloc
    ;; code offset: 0x41
    (local.get $3)
   )
  )
  ;; code offset: 0x47
  (block $label$1
   (block $label$2
    (block $label$3
     ;; code offset: 0x52
     (br_if $label$3
      ;; code offset: 0x51
      (i32.le_s
       ;; code offset: 0x4d
       (local.get $2)
       ;; code offset: 0x4f
       (i32.const 0)
      )
     )
     ;; code offset: 0x54
     (loop $label$4
      ;; code offset: 0x60
      (i32.store
       ;; code offset: 0x5d
       (i32.add
        ;; code offset: 0x56
        (local.get $4)
        ;; code offset: 0x5c
        (i32.shl
         ;; code offset: 0x58
         (local.get $1)
         ;; code offset: 0x5a
         (i32.const 2)
        )
       )
       ;; code offset: 0x5e
       (local.get $1)
      )
      ;; code offset: 0x6d
      (br_if $label$4
       ;; code offset: 0x6c
       (i32.ne
        ;; code offset: 0x68
        (local.tee $1
         ;; code offset: 0x67
         (i32.add
          ;; code offset: 0x63
          (local.get $1)
          ;; code offset: 0x65
          (i32.const 1)
         )
        )
        ;; code offset: 0x6a
        (local.get $2)
       )
      )
     )
     ;; code offset: 0x84
     (i32.store
      ;; code offset: 0x7c
      (i32.add
       ;; code offset: 0x70
       (local.get $4)
       ;; code offset: 0x7b
       (i32.shl
        ;; code offset: 0x77
        (local.tee $1
         ;; code offset: 0x74
         (i32.load
          ;; code offset: 0x72
          (local.get $0)
         )
        )
        ;; code offset: 0x79
        (i32.const 2)
       )
      )
      ;; code offset: 0x82
      (local.tee $7
       ;; code offset: 0x81
       (i32.add
        ;; code offset: 0x7d
        (local.get $2)
        ;; code offset: 0x7f
        (i32.const -1)
       )
      )
     )
     ;; code offset: 0x93
     (i32.store
      ;; code offset: 0x8f
      (local.tee $8
       ;; code offset: 0x8e
       (i32.add
        ;; code offset: 0x87
        (local.get $4)
        ;; code offset: 0x8d
        (i32.shl
         ;; code offset: 0x89
         (local.get $7)
         ;; code offset: 0x8b
         (i32.const 2)
        )
       )
      )
      ;; code offset: 0x91
      (local.get $1)
     )
     ;; code offset: 0x98
     (local.set $9
      ;; code offset: 0x96
      (i32.const 0)
     )
     ;; code offset: 0x9f
     (br_if $label$2
      ;; code offset: 0x9e
      (i32.le_s
       ;; code offset: 0x9a
       (local.get $2)
       ;; code offset: 0x9c
       (i32.const 0)
      )
     )
     ;; code offset: 0xa1
     (loop $label$5
      ;; code offset: 0xa3
      (block $label$6
       ;; code offset: 0xaa
       (br_if $label$6
        ;; code offset: 0xa9
        (i32.le_s
         ;; code offset: 0xa5
         (local.get $2)
         ;; code offset: 0xa7
         (i32.const 1)
        )
       )
       ;; code offset: 0xac
       (loop $label$7
        ;; code offset: 0xbd
        (i32.store
         ;; code offset: 0xba
         (i32.add
          ;; code offset: 0xae
          (local.get $6)
          ;; code offset: 0xb9
          (i32.shl
           ;; code offset: 0xb5
           (local.tee $1
            ;; code offset: 0xb4
            (i32.add
             ;; code offset: 0xb0
             (local.get $2)
             ;; code offset: 0xb2
             (i32.const -1)
            )
           )
           ;; code offset: 0xb7
           (i32.const 2)
          )
         )
         ;; code offset: 0xbb
         (local.get $2)
        )
        ;; code offset: 0xc5
        (local.set $0
         ;; code offset: 0xc4
         (i32.gt_s
          ;; code offset: 0xc0
          (local.get $2)
          ;; code offset: 0xc2
          (i32.const 2)
         )
        )
        ;; code offset: 0xc9
        (local.set $2
         ;; code offset: 0xc7
         (local.get $1)
        )
        ;; code offset: 0xcd
        (br_if $label$7
         ;; code offset: 0xcb
         (local.get $0)
        )
       )
      )
      ;; code offset: 0xd1
      (block $label$8
       ;; code offset: 0xdb
       (br_if $label$8
        ;; code offset: 0xda
        (i32.eqz
         ;; code offset: 0xd8
         (local.tee $10
          ;; code offset: 0xd5
          (i32.load
           ;; code offset: 0xd3
           (local.get $4)
          )
         )
        )
       )
       ;; code offset: 0xe5
       (br_if $label$8
        ;; code offset: 0xe4
        (i32.eq
         ;; code offset: 0xdf
         (i32.load
          ;; code offset: 0xdd
          (local.get $8)
         )
         ;; code offset: 0xe2
         (local.get $7)
        )
       )
       ;; code offset: 0xf4
       (local.set $12
        ;; code offset: 0xf1
        (i32.load
         ;; code offset: 0xef
         (local.tee $11
          ;; code offset: 0xed
          (call $memcpy
           ;; code offset: 0xe7
           (local.get $5)
           ;; code offset: 0xe9
           (local.get $4)
           ;; code offset: 0xeb
           (local.get $3)
          )
         )
        )
       )
       ;; code offset: 0xf8
       (local.set $0
        ;; code offset: 0xf6
        (i32.const 0)
       )
       ;; code offset: 0xfa
       (loop $label$9
        ;; code offset: 0xfe
        (local.set $13
         ;; code offset: 0xfc
         (local.get $0)
        )
        ;; code offset: 0x100
        (block $label$10
         ;; code offset: 0x107
         (br_if $label$10
          ;; code offset: 0x106
          (i32.lt_s
           ;; code offset: 0x102
           (local.get $12)
           ;; code offset: 0x104
           (i32.const 3)
          )
         )
         ;; code offset: 0x10e
         (local.set $1
          ;; code offset: 0x10d
          (i32.add
           ;; code offset: 0x109
           (local.get $12)
           ;; code offset: 0x10b
           (i32.const -1)
          )
         )
         ;; code offset: 0x112
         (local.set $0
          ;; code offset: 0x110
          (i32.const 1)
         )
         ;; code offset: 0x114
         (loop $label$11
          ;; code offset: 0x123
          (local.set $15
           ;; code offset: 0x120
           (i32.load
            ;; code offset: 0x11e
            (local.tee $14
             ;; code offset: 0x11d
             (i32.add
              ;; code offset: 0x116
              (local.get $11)
              ;; code offset: 0x11c
              (i32.shl
               ;; code offset: 0x118
               (local.get $0)
               ;; code offset: 0x11a
               (i32.const 2)
              )
             )
            )
           )
          )
          ;; code offset: 0x134
          (i32.store
           ;; code offset: 0x125
           (local.get $14)
           ;; code offset: 0x131
           (i32.load
            ;; code offset: 0x12f
            (local.tee $16
             ;; code offset: 0x12e
             (i32.add
              ;; code offset: 0x127
              (local.get $11)
              ;; code offset: 0x12d
              (i32.shl
               ;; code offset: 0x129
               (local.get $1)
               ;; code offset: 0x12b
               (i32.const 2)
              )
             )
            )
           )
          )
          ;; code offset: 0x13b
          (i32.store
           ;; code offset: 0x137
           (local.get $16)
           ;; code offset: 0x139
           (local.get $15)
          )
          ;; code offset: 0x14d
          (br_if $label$11
           ;; code offset: 0x14c
           (i32.lt_s
            ;; code offset: 0x143
            (local.tee $0
             ;; code offset: 0x142
             (i32.add
              ;; code offset: 0x13e
              (local.get $0)
              ;; code offset: 0x140
              (i32.const 1)
             )
            )
            ;; code offset: 0x14a
            (local.tee $1
             ;; code offset: 0x149
             (i32.add
              ;; code offset: 0x145
              (local.get $1)
              ;; code offset: 0x147
              (i32.const -1)
             )
            )
           )
          )
         )
        )
        ;; code offset: 0x15e
        (local.set $1
         ;; code offset: 0x15b
         (i32.load
          ;; code offset: 0x159
          (local.tee $0
           ;; code offset: 0x158
           (i32.add
            ;; code offset: 0x151
            (local.get $11)
            ;; code offset: 0x157
            (i32.shl
             ;; code offset: 0x153
             (local.get $12)
             ;; code offset: 0x155
             (i32.const 2)
            )
           )
          )
         )
        )
        ;; code offset: 0x164
        (i32.store
         ;; code offset: 0x160
         (local.get $0)
         ;; code offset: 0x162
         (local.get $12)
        )
        ;; code offset: 0x16c
        (local.set $0
         ;; code offset: 0x16b
         (i32.add
          ;; code offset: 0x167
          (local.get $13)
          ;; code offset: 0x169
          (i32.const 1)
         )
        )
        ;; code offset: 0x170
        (local.set $12
         ;; code offset: 0x16e
         (local.get $1)
        )
        ;; code offset: 0x174
        (br_if $label$9
         ;; code offset: 0x172
         (local.get $1)
        )
       )
       ;; code offset: 0x181
       (local.set $9
        ;; code offset: 0x180
        (select
         ;; code offset: 0x177
         (local.get $9)
         ;; code offset: 0x179
         (local.get $0)
         ;; code offset: 0x17f
         (i32.gt_s
          ;; code offset: 0x17b
          (local.get $9)
          ;; code offset: 0x17d
          (local.get $13)
         )
        )
       )
      )
      ;; code offset: 0x189
      (br_if $label$1
       ;; code offset: 0x188
       (i32.ge_s
        ;; code offset: 0x184
        (local.get $2)
        ;; code offset: 0x186
        (local.get $7)
       )
      )
      ;; code offset: 0x18b
      (loop $label$12
       ;; code offset: 0x18f
       (local.set $1
        ;; code offset: 0x18d
        (i32.const 0)
       )
       ;; code offset: 0x191
       (block $label$13
        ;; code offset: 0x198
        (br_if $label$13
         ;; code offset: 0x197
         (i32.le_s
          ;; code offset: 0x193
          (local.get $2)
          ;; code offset: 0x195
          (i32.const 0)
         )
        )
        ;; code offset: 0x19a
        (loop $label$14
         ;; code offset: 0x1b4
         (i32.store
          ;; code offset: 0x1a3
          (i32.add
           ;; code offset: 0x19c
           (local.get $4)
           ;; code offset: 0x1a2
           (i32.shl
            ;; code offset: 0x19e
            (local.get $1)
            ;; code offset: 0x1a0
            (i32.const 2)
           )
          )
          ;; code offset: 0x1b1
          (i32.load
           ;; code offset: 0x1b0
           (i32.add
            ;; code offset: 0x1a4
            (local.get $4)
            ;; code offset: 0x1af
            (i32.shl
             ;; code offset: 0x1ab
             (local.tee $1
              ;; code offset: 0x1aa
              (i32.add
               ;; code offset: 0x1a6
               (local.get $1)
               ;; code offset: 0x1a8
               (i32.const 1)
              )
             )
             ;; code offset: 0x1ad
             (i32.const 2)
            )
           )
          )
         )
         ;; code offset: 0x1bc
         (br_if $label$14
          ;; code offset: 0x1bb
          (i32.ne
           ;; code offset: 0x1b7
           (local.get $1)
           ;; code offset: 0x1b9
           (local.get $2)
          )
         )
        )
        ;; code offset: 0x1c1
        (local.set $1
         ;; code offset: 0x1bf
         (local.get $2)
        )
       )
       ;; code offset: 0x1ce
       (i32.store
        ;; code offset: 0x1cb
        (i32.add
         ;; code offset: 0x1c4
         (local.get $4)
         ;; code offset: 0x1ca
         (i32.shl
          ;; code offset: 0x1c6
          (local.get $1)
          ;; code offset: 0x1c8
          (i32.const 2)
         )
        )
        ;; code offset: 0x1cc
        (local.get $10)
       )
       ;; code offset: 0x1e5
       (i32.store
        ;; code offset: 0x1d9
        (local.tee $1
         ;; code offset: 0x1d8
         (i32.add
          ;; code offset: 0x1d1
          (local.get $6)
          ;; code offset: 0x1d7
          (i32.shl
           ;; code offset: 0x1d3
           (local.get $2)
           ;; code offset: 0x1d5
           (i32.const 2)
          )
         )
        )
        ;; code offset: 0x1e4
        (i32.add
         ;; code offset: 0x1e0
         (local.tee $1
          ;; code offset: 0x1dd
          (i32.load
           ;; code offset: 0x1db
           (local.get $1)
          )
         )
         ;; code offset: 0x1e2
         (i32.const -1)
        )
       )
       ;; code offset: 0x1ed
       (br_if $label$5
        ;; code offset: 0x1ec
        (i32.gt_s
         ;; code offset: 0x1e8
         (local.get $1)
         ;; code offset: 0x1ea
         (i32.const 1)
        )
       )
       ;; code offset: 0x1f9
       (br_if $label$1
        ;; code offset: 0x1f8
        (i32.eq
         ;; code offset: 0x1f4
         (local.tee $2
          ;; code offset: 0x1f3
          (i32.add
           ;; code offset: 0x1ef
           (local.get $2)
           ;; code offset: 0x1f1
           (i32.const 1)
          )
         )
         ;; code offset: 0x1f6
         (local.get $7)
        )
       )
       ;; code offset: 0x200
       (local.set $10
        ;; code offset: 0x1fd
        (i32.load
         ;; code offset: 0x1fb
         (local.get $4)
        )
       )
       ;; code offset: 0x202
       (br $label$12)
      )
     )
    )
    ;; code offset: 0x21d
    (i32.store
     ;; code offset: 0x215
     (i32.add
      ;; code offset: 0x209
      (local.get $4)
      ;; code offset: 0x214
      (i32.shl
       ;; code offset: 0x210
       (local.tee $1
        ;; code offset: 0x20d
        (i32.load
         ;; code offset: 0x20b
         (local.get $0)
        )
       )
       ;; code offset: 0x212
       (i32.const 2)
      )
     )
     ;; code offset: 0x21b
     (local.tee $7
      ;; code offset: 0x21a
      (i32.add
       ;; code offset: 0x216
       (local.get $2)
       ;; code offset: 0x218
       (i32.const -1)
      )
     )
    )
    ;; code offset: 0x22c
    (i32.store
     ;; code offset: 0x228
     (local.tee $8
      ;; code offset: 0x227
      (i32.add
       ;; code offset: 0x220
       (local.get $4)
       ;; code offset: 0x226
       (i32.shl
        ;; code offset: 0x222
        (local.get $7)
        ;; code offset: 0x224
        (i32.const 2)
       )
      )
     )
     ;; code offset: 0x22a
     (local.get $1)
    )
   )
   ;; code offset: 0x232
   (local.set $9
    ;; code offset: 0x230
    (i32.const 0)
   )
   ;; code offset: 0x234
   (loop $label$15
    ;; code offset: 0x236
    (block $label$16
     ;; code offset: 0x23d
     (br_if $label$16
      ;; code offset: 0x23c
      (i32.lt_s
       ;; code offset: 0x238
       (local.get $2)
       ;; code offset: 0x23a
       (i32.const 2)
      )
     )
     ;; code offset: 0x23f
     (loop $label$17
      ;; code offset: 0x250
      (i32.store
       ;; code offset: 0x24d
       (i32.add
        ;; code offset: 0x241
        (local.get $6)
        ;; code offset: 0x24c
        (i32.shl
         ;; code offset: 0x248
         (local.tee $1
          ;; code offset: 0x247
          (i32.add
           ;; code offset: 0x243
           (local.get $2)
           ;; code offset: 0x245
           (i32.const -1)
          )
         )
         ;; code offset: 0x24a
         (i32.const 2)
        )
       )
       ;; code offset: 0x24e
       (local.get $2)
      )
      ;; code offset: 0x258
      (local.set $0
       ;; code offset: 0x257
       (i32.gt_s
        ;; code offset: 0x253
        (local.get $2)
        ;; code offset: 0x255
        (i32.const 2)
       )
      )
      ;; code offset: 0x25c
      (local.set $2
       ;; code offset: 0x25a
       (local.get $1)
      )
      ;; code offset: 0x260
      (br_if $label$17
       ;; code offset: 0x25e
       (local.get $0)
      )
     )
    )
    ;; code offset: 0x264
    (block $label$18
     ;; code offset: 0x26e
     (br_if $label$18
      ;; code offset: 0x26d
      (i32.eqz
       ;; code offset: 0x26b
       (local.tee $12
        ;; code offset: 0x268
        (i32.load
         ;; code offset: 0x266
         (local.get $4)
        )
       )
      )
     )
     ;; code offset: 0x278
     (br_if $label$18
      ;; code offset: 0x277
      (i32.eq
       ;; code offset: 0x272
       (i32.load
        ;; code offset: 0x270
        (local.get $8)
       )
       ;; code offset: 0x275
       (local.get $7)
      )
     )
     ;; code offset: 0x27f
     (local.set $16
      ;; code offset: 0x27c
      (i32.load
       ;; code offset: 0x27a
       (local.get $5)
      )
     )
     ;; code offset: 0x283
     (local.set $0
      ;; code offset: 0x281
      (i32.const 0)
     )
     ;; code offset: 0x285
     (loop $label$19
      ;; code offset: 0x289
      (local.set $10
       ;; code offset: 0x287
       (local.get $0)
      )
      ;; code offset: 0x28b
      (block $label$20
       ;; code offset: 0x292
       (br_if $label$20
        ;; code offset: 0x291
        (i32.lt_s
         ;; code offset: 0x28d
         (local.get $16)
         ;; code offset: 0x28f
         (i32.const 3)
        )
       )
       ;; code offset: 0x299
       (local.set $1
        ;; code offset: 0x298
        (i32.add
         ;; code offset: 0x294
         (local.get $16)
         ;; code offset: 0x296
         (i32.const -1)
        )
       )
       ;; code offset: 0x29d
       (local.set $0
        ;; code offset: 0x29b
        (i32.const 1)
       )
       ;; code offset: 0x29f
       (loop $label$21
        ;; code offset: 0x2ae
        (local.set $14
         ;; code offset: 0x2ab
         (i32.load
          ;; code offset: 0x2a9
          (local.tee $11
           ;; code offset: 0x2a8
           (i32.add
            ;; code offset: 0x2a1
            (local.get $5)
            ;; code offset: 0x2a7
            (i32.shl
             ;; code offset: 0x2a3
             (local.get $0)
             ;; code offset: 0x2a5
             (i32.const 2)
            )
           )
          )
         )
        )
        ;; code offset: 0x2bf
        (i32.store
         ;; code offset: 0x2b0
         (local.get $11)
         ;; code offset: 0x2bc
         (i32.load
          ;; code offset: 0x2ba
          (local.tee $15
           ;; code offset: 0x2b9
           (i32.add
            ;; code offset: 0x2b2
            (local.get $5)
            ;; code offset: 0x2b8
            (i32.shl
             ;; code offset: 0x2b4
             (local.get $1)
             ;; code offset: 0x2b6
             (i32.const 2)
            )
           )
          )
         )
        )
        ;; code offset: 0x2c6
        (i32.store
         ;; code offset: 0x2c2
         (local.get $15)
         ;; code offset: 0x2c4
         (local.get $14)
        )
        ;; code offset: 0x2d8
        (br_if $label$21
         ;; code offset: 0x2d7
         (i32.lt_s
          ;; code offset: 0x2ce
          (local.tee $0
           ;; code offset: 0x2cd
           (i32.add
            ;; code offset: 0x2c9
            (local.get $0)
            ;; code offset: 0x2cb
            (i32.const 1)
           )
          )
          ;; code offset: 0x2d5
          (local.tee $1
           ;; code offset: 0x2d4
           (i32.add
            ;; code offset: 0x2d0
            (local.get $1)
            ;; code offset: 0x2d2
            (i32.const -1)
           )
          )
         )
        )
       )
      )
      ;; code offset: 0x2e9
      (local.set $1
       ;; code offset: 0x2e6
       (i32.load
        ;; code offset: 0x2e4
        (local.tee $0
         ;; code offset: 0x2e3
         (i32.add
          ;; code offset: 0x2dc
          (local.get $5)
          ;; code offset: 0x2e2
          (i32.shl
           ;; code offset: 0x2de
           (local.get $16)
           ;; code offset: 0x2e0
           (i32.const 2)
          )
         )
        )
       )
      )
      ;; code offset: 0x2ef
      (i32.store
       ;; code offset: 0x2eb
       (local.get $0)
       ;; code offset: 0x2ed
       (local.get $16)
      )
      ;; code offset: 0x2f7
      (local.set $0
       ;; code offset: 0x2f6
       (i32.add
        ;; code offset: 0x2f2
        (local.get $10)
        ;; code offset: 0x2f4
        (i32.const 1)
       )
      )
      ;; code offset: 0x2fb
      (local.set $16
       ;; code offset: 0x2f9
       (local.get $1)
      )
      ;; code offset: 0x2ff
      (br_if $label$19
       ;; code offset: 0x2fd
       (local.get $1)
      )
     )
     ;; code offset: 0x30c
     (local.set $9
      ;; code offset: 0x30b
      (select
       ;; code offset: 0x302
       (local.get $9)
       ;; code offset: 0x304
       (local.get $0)
       ;; code offset: 0x30a
       (i32.gt_s
        ;; code offset: 0x306
        (local.get $9)
        ;; code offset: 0x308
        (local.get $10)
       )
      )
     )
    )
    ;; code offset: 0x314
    (br_if $label$1
     ;; code offset: 0x313
     (i32.ge_s
      ;; code offset: 0x30f
      (local.get $2)
      ;; code offset: 0x311
      (local.get $7)
     )
    )
    ;; code offset: 0x316
    (loop $label$22
     ;; code offset: 0x31a
     (local.set $1
      ;; code offset: 0x318
      (i32.const 0)
     )
     ;; code offset: 0x31c
     (block $label$23
      ;; code offset: 0x323
      (br_if $label$23
       ;; code offset: 0x322
       (i32.lt_s
        ;; code offset: 0x31e
        (local.get $2)
        ;; code offset: 0x320
        (i32.const 1)
       )
      )
      ;; code offset: 0x325
      (loop $label$24
       ;; code offset: 0x33f
       (i32.store
        ;; code offset: 0x32e
        (i32.add
         ;; code offset: 0x327
         (local.get $4)
         ;; code offset: 0x32d
         (i32.shl
          ;; code offset: 0x329
          (local.get $1)
          ;; code offset: 0x32b
          (i32.const 2)
         )
        )
        ;; code offset: 0x33c
        (i32.load
         ;; code offset: 0x33b
         (i32.add
          ;; code offset: 0x32f
          (local.get $4)
          ;; code offset: 0x33a
          (i32.shl
           ;; code offset: 0x336
           (local.tee $1
            ;; code offset: 0x335
            (i32.add
             ;; code offset: 0x331
             (local.get $1)
             ;; code offset: 0x333
             (i32.const 1)
            )
           )
           ;; code offset: 0x338
           (i32.const 2)
          )
         )
        )
       )
       ;; code offset: 0x347
       (br_if $label$24
        ;; code offset: 0x346
        (i32.ne
         ;; code offset: 0x342
         (local.get $1)
         ;; code offset: 0x344
         (local.get $2)
        )
       )
      )
      ;; code offset: 0x34c
      (local.set $1
       ;; code offset: 0x34a
       (local.get $2)
      )
     )
     ;; code offset: 0x359
     (i32.store
      ;; code offset: 0x356
      (i32.add
       ;; code offset: 0x34f
       (local.get $4)
       ;; code offset: 0x355
       (i32.shl
        ;; code offset: 0x351
        (local.get $1)
        ;; code offset: 0x353
        (i32.const 2)
       )
      )
      ;; code offset: 0x357
      (local.get $12)
     )
     ;; code offset: 0x370
     (i32.store
      ;; code offset: 0x364
      (local.tee $1
       ;; code offset: 0x363
       (i32.add
        ;; code offset: 0x35c
        (local.get $6)
        ;; code offset: 0x362
        (i32.shl
         ;; code offset: 0x35e
         (local.get $2)
         ;; code offset: 0x360
         (i32.const 2)
        )
       )
      )
      ;; code offset: 0x36f
      (i32.add
       ;; code offset: 0x36b
       (local.tee $1
        ;; code offset: 0x368
        (i32.load
         ;; code offset: 0x366
         (local.get $1)
        )
       )
       ;; code offset: 0x36d
       (i32.const -1)
      )
     )
     ;; code offset: 0x378
     (br_if $label$15
      ;; code offset: 0x377
      (i32.gt_s
       ;; code offset: 0x373
       (local.get $1)
       ;; code offset: 0x375
       (i32.const 1)
      )
     )
     ;; code offset: 0x384
     (br_if $label$1
      ;; code offset: 0x383
      (i32.eq
       ;; code offset: 0x37f
       (local.tee $2
        ;; code offset: 0x37e
        (i32.add
         ;; code offset: 0x37a
         (local.get $2)
         ;; code offset: 0x37c
         (i32.const 1)
        )
       )
       ;; code offset: 0x381
       (local.get $7)
      )
     )
     ;; code offset: 0x38b
     (local.set $12
      ;; code offset: 0x388
      (i32.load
       ;; code offset: 0x386
       (local.get $4)
      )
     )
     ;; code offset: 0x38d
     (br $label$22)
    )
   )
  )
  ;; code offset: 0x396
  (call $free
   ;; code offset: 0x394
   (local.get $4)
  )
  ;; code offset: 0x39a
  (call $free
   ;; code offset: 0x398
   (local.get $5)
  )
  ;; code offset: 0x39e
  (call $free
   ;; code offset: 0x39c
   (local.get $6)
  )
  ;; code offset: 0x3a0
  (local.get $9)
 )
 (func $main (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  ;; code offset: 0x3bb
  (global.set $global$0
   ;; code offset: 0x3b9
   (local.tee $2
    ;; code offset: 0x3b8
    (i32.sub
     ;; code offset: 0x3b4
     (global.get $global$0)
     ;; code offset: 0x3b6
     (i32.const 32)
    )
   )
  )
  ;; code offset: 0x3bd
  (block $label$1
   (block $label$2
    (block $label$3
     ;; code offset: 0x3c8
     (br_if $label$3
      ;; code offset: 0x3c7
      (i32.lt_s
       ;; code offset: 0x3c3
       (local.get $0)
       ;; code offset: 0x3c5
       (i32.const 2)
      )
     )
     ;; code offset: 0x3cc
     (local.set $3
      ;; code offset: 0x3ca
      (i32.const 0)
     )
     ;; code offset: 0x3da
     (br_if $label$2
      ;; code offset: 0x3d9
      (i32.gt_s
       ;; code offset: 0x3d5
       (local.tee $4
        ;; code offset: 0x3d3
        (call $atoi
         ;; code offset: 0x3d0
         (i32.load offset=4
          ;; code offset: 0x3ce
          (local.get $1)
         )
        )
       )
       ;; code offset: 0x3d7
       (i32.const 0)
      )
     )
    )
    ;; code offset: 0x3e2
    (drop
     ;; code offset: 0x3e0
     (call $puts
      ;; code offset: 0x3dd
      (i32.const 1050)
     )
    )
    ;; code offset: 0x3e5
    (local.set $5
     ;; code offset: 0x3e3
     (i32.const 1)
    )
    ;; code offset: 0x3e7
    (br $label$1)
   )
   ;; code offset: 0x3ea
   (block $label$4
    ;; code offset: 0x3f1
    (br_if $label$4
     ;; code offset: 0x3f0
     (i32.eq
      ;; code offset: 0x3ec
      (local.get $4)
      ;; code offset: 0x3ee
      (i32.const 1)
     )
    )
    ;; code offset: 0x3f8
    (local.set $6
     ;; code offset: 0x3f7
     (i32.add
      ;; code offset: 0x3f3
      (local.get $4)
      ;; code offset: 0x3f5
      (i32.const -1)
     )
    )
    ;; code offset: 0x3fc
    (local.set $1
     ;; code offset: 0x3fa
     (i32.const 0)
    )
    ;; code offset: 0x400
    (local.set $0
     ;; code offset: 0x3fe
     (i32.const 0)
    )
    ;; code offset: 0x402
    (loop $label$5
     ;; code offset: 0x40c
     (i32.store offset=8
      ;; code offset: 0x408
      (local.tee $3
       ;; code offset: 0x406
       (call $malloc
        ;; code offset: 0x404
        (i32.const 12)
       )
      )
      ;; code offset: 0x40a
      (local.get $1)
     )
     ;; code offset: 0x413
     (i32.store offset=4
      ;; code offset: 0x40f
      (local.get $3)
      ;; code offset: 0x411
      (local.get $4)
     )
     ;; code offset: 0x41a
     (i32.store
      ;; code offset: 0x416
      (local.get $3)
      ;; code offset: 0x418
      (local.get $0)
     )
     ;; code offset: 0x41f
     (local.set $1
      ;; code offset: 0x41d
      (local.get $3)
     )
     ;; code offset: 0x42b
     (br_if $label$5
      ;; code offset: 0x42a
      (i32.ne
       ;; code offset: 0x426
       (local.tee $0
        ;; code offset: 0x425
        (i32.add
         ;; code offset: 0x421
         (local.get $0)
         ;; code offset: 0x423
         (i32.const 1)
        )
       )
       ;; code offset: 0x428
       (local.get $6)
      )
     )
    )
   )
   ;; code offset: 0x431
   (local.set $0
    ;; code offset: 0x42f
    (i32.const 0)
   )
   ;; code offset: 0x43c
   (local.set $1
    ;; code offset: 0x43a
    (call $malloc
     ;; code offset: 0x438
     (local.tee $6
      ;; code offset: 0x437
      (i32.shl
       ;; code offset: 0x433
       (local.get $4)
       ;; code offset: 0x435
       (i32.const 2)
      )
     )
    )
   )
   ;; code offset: 0x442
   (local.set $5
    ;; code offset: 0x440
    (call $malloc
     ;; code offset: 0x43e
     (local.get $6)
    )
   )
   ;; code offset: 0x444
   (block $label$6
    (block $label$7
     (block $label$8
      (block $label$9
       ;; code offset: 0x451
       (br_if $label$9
        ;; code offset: 0x450
        (i32.le_s
         ;; code offset: 0x44c
         (local.get $4)
         ;; code offset: 0x44e
         (i32.const 0)
        )
       )
       ;; code offset: 0x453
       (loop $label$10
        ;; code offset: 0x45f
        (i32.store
         ;; code offset: 0x45c
         (i32.add
          ;; code offset: 0x455
          (local.get $1)
          ;; code offset: 0x45b
          (i32.shl
           ;; code offset: 0x457
           (local.get $0)
           ;; code offset: 0x459
           (i32.const 2)
          )
         )
         ;; code offset: 0x45d
         (local.get $0)
        )
        ;; code offset: 0x46c
        (br_if $label$10
         ;; code offset: 0x46b
         (i32.ne
          ;; code offset: 0x467
          (local.tee $0
           ;; code offset: 0x466
           (i32.add
            ;; code offset: 0x462
            (local.get $0)
            ;; code offset: 0x464
            (i32.const 1)
           )
          )
          ;; code offset: 0x469
          (local.get $4)
         )
        )
       )
       ;; code offset: 0x471
       (local.set $7
        ;; code offset: 0x46f
        (i32.const 30)
       )
       ;; code offset: 0x475
       (local.set $6
        ;; code offset: 0x473
        (local.get $4)
       )
       ;; code offset: 0x477
       (br $label$8)
      )
      ;; code offset: 0x47c
      (local.set $7
       ;; code offset: 0x47a
       (i32.const 30)
      )
      ;; code offset: 0x480
      (local.set $6
       ;; code offset: 0x47e
       (local.get $4)
      )
      ;; code offset: 0x482
      (br $label$7)
     )
     ;; code offset: 0x485
     (loop $label$11
      ;; code offset: 0x489
      (local.set $0
       ;; code offset: 0x487
       (i32.const 0)
      )
      ;; code offset: 0x48b
      (loop $label$12
       ;; code offset: 0x49d
       (i32.store offset=16
        ;; code offset: 0x48d
        (local.get $2)
        ;; code offset: 0x49c
        (i32.add
         ;; code offset: 0x497
         (i32.load
          ;; code offset: 0x496
          (i32.add
           ;; code offset: 0x48f
           (local.get $1)
           ;; code offset: 0x495
           (i32.shl
            ;; code offset: 0x491
            (local.get $0)
            ;; code offset: 0x493
            (i32.const 2)
           )
          )
         )
         ;; code offset: 0x49a
         (i32.const 1)
        )
       )
       ;; code offset: 0x4aa
       (drop
        ;; code offset: 0x4a8
        (call $iprintf
         ;; code offset: 0x4a0
         (i32.const 1047)
         ;; code offset: 0x4a7
         (i32.add
          ;; code offset: 0x4a3
          (local.get $2)
          ;; code offset: 0x4a5
          (i32.const 16)
         )
        )
       )
       ;; code offset: 0x4b5
       (br_if $label$12
        ;; code offset: 0x4b4
        (i32.ne
         ;; code offset: 0x4b0
         (local.tee $0
          ;; code offset: 0x4af
          (i32.add
           ;; code offset: 0x4ab
           (local.get $0)
           ;; code offset: 0x4ad
           (i32.const 1)
          )
         )
         ;; code offset: 0x4b2
         (local.get $4)
        )
       )
      )
      ;; code offset: 0x4bc
      (drop
       ;; code offset: 0x4ba
       (call $putchar
        ;; code offset: 0x4b8
        (i32.const 10)
       )
      )
      ;; code offset: 0x4bd
      (block $label$13
       ;; code offset: 0x4c4
       (br_if $label$13
        ;; code offset: 0x4c3
        (i32.le_s
         ;; code offset: 0x4bf
         (local.get $6)
         ;; code offset: 0x4c1
         (i32.const 1)
        )
       )
       ;; code offset: 0x4c6
       (loop $label$14
        ;; code offset: 0x4d7
        (i32.store
         ;; code offset: 0x4d4
         (i32.add
          ;; code offset: 0x4c8
          (local.get $5)
          ;; code offset: 0x4d3
          (i32.shl
           ;; code offset: 0x4cf
           (local.tee $0
            ;; code offset: 0x4ce
            (i32.add
             ;; code offset: 0x4ca
             (local.get $6)
             ;; code offset: 0x4cc
             (i32.const -1)
            )
           )
           ;; code offset: 0x4d1
           (i32.const 2)
          )
         )
         ;; code offset: 0x4d5
         (local.get $6)
        )
        ;; code offset: 0x4df
        (local.set $8
         ;; code offset: 0x4de
         (i32.gt_s
          ;; code offset: 0x4da
          (local.get $6)
          ;; code offset: 0x4dc
          (i32.const 2)
         )
        )
        ;; code offset: 0x4e3
        (local.set $6
         ;; code offset: 0x4e1
         (local.get $0)
        )
        ;; code offset: 0x4e7
        (br_if $label$14
         ;; code offset: 0x4e5
         (local.get $8)
        )
       )
      )
      ;; code offset: 0x4f0
      (br_if $label$6
       ;; code offset: 0x4ef
       (i32.eq
        ;; code offset: 0x4eb
        (local.get $6)
        ;; code offset: 0x4ed
        (local.get $4)
       )
      )
      ;; code offset: 0x4f7
      (local.set $7
       ;; code offset: 0x4f6
       (i32.add
        ;; code offset: 0x4f2
        (local.get $7)
        ;; code offset: 0x4f4
        (i32.const -1)
       )
      )
      ;; code offset: 0x4f9
      (loop $label$15
       ;; code offset: 0x4fd
       (local.set $0
        ;; code offset: 0x4fb
        (i32.const 0)
       )
       ;; code offset: 0x504
       (local.set $8
        ;; code offset: 0x501
        (i32.load
         ;; code offset: 0x4ff
         (local.get $1)
        )
       )
       ;; code offset: 0x506
       (block $label$16
        ;; code offset: 0x50d
        (br_if $label$16
         ;; code offset: 0x50c
         (i32.le_s
          ;; code offset: 0x508
          (local.get $6)
          ;; code offset: 0x50a
          (i32.const 0)
         )
        )
        ;; code offset: 0x50f
        (loop $label$17
         ;; code offset: 0x529
         (i32.store
          ;; code offset: 0x518
          (i32.add
           ;; code offset: 0x511
           (local.get $1)
           ;; code offset: 0x517
           (i32.shl
            ;; code offset: 0x513
            (local.get $0)
            ;; code offset: 0x515
            (i32.const 2)
           )
          )
          ;; code offset: 0x526
          (i32.load
           ;; code offset: 0x525
           (i32.add
            ;; code offset: 0x519
            (local.get $1)
            ;; code offset: 0x524
            (i32.shl
             ;; code offset: 0x520
             (local.tee $0
              ;; code offset: 0x51f
              (i32.add
               ;; code offset: 0x51b
               (local.get $0)
               ;; code offset: 0x51d
               (i32.const 1)
              )
             )
             ;; code offset: 0x522
             (i32.const 2)
            )
           )
          )
         )
         ;; code offset: 0x531
         (br_if $label$17
          ;; code offset: 0x530
          (i32.ne
           ;; code offset: 0x52c
           (local.get $0)
           ;; code offset: 0x52e
           (local.get $6)
          )
         )
        )
        ;; code offset: 0x536
        (local.set $0
         ;; code offset: 0x534
         (local.get $6)
        )
       )
       ;; code offset: 0x543
       (i32.store
        ;; code offset: 0x540
        (i32.add
         ;; code offset: 0x539
         (local.get $1)
         ;; code offset: 0x53f
         (i32.shl
          ;; code offset: 0x53b
          (local.get $0)
          ;; code offset: 0x53d
          (i32.const 2)
         )
        )
        ;; code offset: 0x541
        (local.get $8)
       )
       ;; code offset: 0x55a
       (i32.store
        ;; code offset: 0x54e
        (local.tee $0
         ;; code offset: 0x54d
         (i32.add
          ;; code offset: 0x546
          (local.get $5)
          ;; code offset: 0x54c
          (i32.shl
           ;; code offset: 0x548
           (local.get $6)
           ;; code offset: 0x54a
           (i32.const 2)
          )
         )
        )
        ;; code offset: 0x559
        (i32.add
         ;; code offset: 0x555
         (local.tee $0
          ;; code offset: 0x552
          (i32.load
           ;; code offset: 0x550
           (local.get $0)
          )
         )
         ;; code offset: 0x557
         (i32.const -1)
        )
       )
       ;; code offset: 0x55d
       (block $label$18
        ;; code offset: 0x564
        (br_if $label$18
         ;; code offset: 0x563
         (i32.gt_s
          ;; code offset: 0x55f
          (local.get $0)
          ;; code offset: 0x561
          (i32.const 1)
         )
        )
        ;; code offset: 0x570
        (br_if $label$15
         ;; code offset: 0x56f
         (i32.ne
          ;; code offset: 0x56b
          (local.tee $6
           ;; code offset: 0x56a
           (i32.add
            ;; code offset: 0x566
            (local.get $6)
            ;; code offset: 0x568
            (i32.const 1)
           )
          )
          ;; code offset: 0x56d
          (local.get $4)
         )
        )
        ;; code offset: 0x572
        (br $label$6)
       )
      )
      ;; code offset: 0x579
      (br_if $label$6
       ;; code offset: 0x578
       (i32.eqz
        ;; code offset: 0x576
        (local.get $7)
       )
      )
      ;; code offset: 0x57b
      (br $label$11)
     )
    )
    ;; code offset: 0x580
    (loop $label$19
     ;; code offset: 0x586
     (drop
      ;; code offset: 0x584
      (call $putchar
       ;; code offset: 0x582
       (i32.const 10)
      )
     )
     ;; code offset: 0x587
     (block $label$20
      ;; code offset: 0x58e
      (br_if $label$20
       ;; code offset: 0x58d
       (i32.le_s
        ;; code offset: 0x589
        (local.get $6)
        ;; code offset: 0x58b
        (i32.const 1)
       )
      )
      ;; code offset: 0x590
      (loop $label$21
       ;; code offset: 0x5a1
       (i32.store
        ;; code offset: 0x59e
        (i32.add
         ;; code offset: 0x592
         (local.get $5)
         ;; code offset: 0x59d
         (i32.shl
          ;; code offset: 0x599
          (local.tee $0
           ;; code offset: 0x598
           (i32.add
            ;; code offset: 0x594
            (local.get $6)
            ;; code offset: 0x596
            (i32.const -1)
           )
          )
          ;; code offset: 0x59b
          (i32.const 2)
         )
        )
        ;; code offset: 0x59f
        (local.get $6)
       )
       ;; code offset: 0x5a9
       (local.set $8
        ;; code offset: 0x5a8
        (i32.gt_s
         ;; code offset: 0x5a4
         (local.get $6)
         ;; code offset: 0x5a6
         (i32.const 2)
        )
       )
       ;; code offset: 0x5ad
       (local.set $6
        ;; code offset: 0x5ab
        (local.get $0)
       )
       ;; code offset: 0x5b1
       (br_if $label$21
        ;; code offset: 0x5af
        (local.get $8)
       )
      )
     )
     ;; code offset: 0x5ba
     (br_if $label$6
      ;; code offset: 0x5b9
      (i32.eq
       ;; code offset: 0x5b5
       (local.get $6)
       ;; code offset: 0x5b7
       (local.get $4)
      )
     )
     ;; code offset: 0x5c1
     (local.set $7
      ;; code offset: 0x5c0
      (i32.add
       ;; code offset: 0x5bc
       (local.get $7)
       ;; code offset: 0x5be
       (i32.const -1)
      )
     )
     ;; code offset: 0x5c3
     (loop $label$22
      ;; code offset: 0x5ca
      (local.set $8
       ;; code offset: 0x5c7
       (i32.load
        ;; code offset: 0x5c5
        (local.get $1)
       )
      )
      ;; code offset: 0x5ce
      (local.set $0
       ;; code offset: 0x5cc
       (i32.const 0)
      )
      ;; code offset: 0x5d0
      (block $label$23
       ;; code offset: 0x5d7
       (br_if $label$23
        ;; code offset: 0x5d6
        (i32.lt_s
         ;; code offset: 0x5d2
         (local.get $6)
         ;; code offset: 0x5d4
         (i32.const 1)
        )
       )
       ;; code offset: 0x5d9
       (loop $label$24
        ;; code offset: 0x5f3
        (i32.store
         ;; code offset: 0x5e2
         (i32.add
          ;; code offset: 0x5db
          (local.get $1)
          ;; code offset: 0x5e1
          (i32.shl
           ;; code offset: 0x5dd
           (local.get $0)
           ;; code offset: 0x5df
           (i32.const 2)
          )
         )
         ;; code offset: 0x5f0
         (i32.load
          ;; code offset: 0x5ef
          (i32.add
           ;; code offset: 0x5e3
           (local.get $1)
           ;; code offset: 0x5ee
           (i32.shl
            ;; code offset: 0x5ea
            (local.tee $0
             ;; code offset: 0x5e9
             (i32.add
              ;; code offset: 0x5e5
              (local.get $0)
              ;; code offset: 0x5e7
              (i32.const 1)
             )
            )
            ;; code offset: 0x5ec
            (i32.const 2)
           )
          )
         )
        )
        ;; code offset: 0x5fb
        (br_if $label$24
         ;; code offset: 0x5fa
         (i32.ne
          ;; code offset: 0x5f6
          (local.get $0)
          ;; code offset: 0x5f8
          (local.get $6)
         )
        )
       )
       ;; code offset: 0x600
       (local.set $0
        ;; code offset: 0x5fe
        (local.get $6)
       )
      )
      ;; code offset: 0x60d
      (i32.store
       ;; code offset: 0x60a
       (i32.add
        ;; code offset: 0x603
        (local.get $1)
        ;; code offset: 0x609
        (i32.shl
         ;; code offset: 0x605
         (local.get $0)
         ;; code offset: 0x607
         (i32.const 2)
        )
       )
       ;; code offset: 0x60b
       (local.get $8)
      )
      ;; code offset: 0x624
      (i32.store
       ;; code offset: 0x618
       (local.tee $0
        ;; code offset: 0x617
        (i32.add
         ;; code offset: 0x610
         (local.get $5)
         ;; code offset: 0x616
         (i32.shl
          ;; code offset: 0x612
          (local.get $6)
          ;; code offset: 0x614
          (i32.const 2)
         )
        )
       )
       ;; code offset: 0x623
       (i32.add
        ;; code offset: 0x61f
        (local.tee $0
         ;; code offset: 0x61c
         (i32.load
          ;; code offset: 0x61a
          (local.get $0)
         )
        )
        ;; code offset: 0x621
        (i32.const -1)
       )
      )
      ;; code offset: 0x627
      (block $label$25
       ;; code offset: 0x62e
       (br_if $label$25
        ;; code offset: 0x62d
        (i32.gt_s
         ;; code offset: 0x629
         (local.get $0)
         ;; code offset: 0x62b
         (i32.const 1)
        )
       )
       ;; code offset: 0x63a
       (br_if $label$22
        ;; code offset: 0x639
        (i32.ne
         ;; code offset: 0x635
         (local.tee $6
          ;; code offset: 0x634
          (i32.add
           ;; code offset: 0x630
           (local.get $6)
           ;; code offset: 0x632
           (i32.const 1)
          )
         )
         ;; code offset: 0x637
         (local.get $4)
        )
       )
       ;; code offset: 0x63c
       (br $label$6)
      )
     )
     ;; code offset: 0x642
     (br_if $label$19
      ;; code offset: 0x640
      (local.get $7)
     )
    )
   )
   ;; code offset: 0x648
   (call $free
    ;; code offset: 0x646
    (local.get $1)
   )
   ;; code offset: 0x64c
   (call $free
    ;; code offset: 0x64a
    (local.get $5)
   )
   ;; code offset: 0x650
   (local.set $5
    ;; code offset: 0x64e
    (i32.const 0)
   )
   ;; code offset: 0x654
   (local.set $0
    ;; code offset: 0x652
    (i32.const 0)
   )
   ;; code offset: 0x656
   (block $label$26
    ;; code offset: 0x65b
    (br_if $label$26
     ;; code offset: 0x65a
     (i32.eqz
      ;; code offset: 0x658
      (local.get $3)
     )
    )
    ;; code offset: 0x65f
    (local.set $0
     ;; code offset: 0x65d
     (i32.const 0)
    )
    ;; code offset: 0x661
    (loop $label$27
     ;; code offset: 0x667
     (local.set $1
      ;; code offset: 0x665
      (call $fannkuch_worker\28void*\29
       ;; code offset: 0x663
       (local.get $3)
      )
     )
     ;; code offset: 0x66e
     (local.set $6
      ;; code offset: 0x66b
      (i32.load offset=8
       ;; code offset: 0x669
       (local.get $3)
      )
     )
     ;; code offset: 0x672
     (call $free
      ;; code offset: 0x670
      (local.get $3)
     )
     ;; code offset: 0x67e
     (local.set $0
      ;; code offset: 0x67d
      (select
       ;; code offset: 0x674
       (local.get $1)
       ;; code offset: 0x676
       (local.get $0)
       ;; code offset: 0x67c
       (i32.lt_s
        ;; code offset: 0x678
        (local.get $0)
        ;; code offset: 0x67a
        (local.get $1)
       )
      )
     )
     ;; code offset: 0x682
     (local.set $3
      ;; code offset: 0x680
      (local.get $6)
     )
     ;; code offset: 0x686
     (br_if $label$27
      ;; code offset: 0x684
      (local.get $6)
     )
    )
   )
   ;; code offset: 0x68e
   (i32.store offset=4
    ;; code offset: 0x68a
    (local.get $2)
    ;; code offset: 0x68c
    (local.get $0)
   )
   ;; code offset: 0x695
   (i32.store
    ;; code offset: 0x691
    (local.get $2)
    ;; code offset: 0x693
    (local.get $4)
   )
   ;; code offset: 0x69f
   (drop
    ;; code offset: 0x69d
    (call $iprintf
     ;; code offset: 0x698
     (i32.const 1024)
     ;; code offset: 0x69b
     (local.get $2)
    )
   )
  )
  ;; code offset: 0x6a6
  (global.set $global$0
   ;; code offset: 0x6a5
   (i32.add
    ;; code offset: 0x6a1
    (local.get $2)
    ;; code offset: 0x6a3
    (i32.const 32)
   )
  )
  ;; code offset: 0x6a8
  (local.get $5)
 )
 ;; custom section ".debug_info", size 851
 ;; custom section ".debug_loc", size 1073
 ;; custom section ".debug_ranges", size 88
 ;; custom section ".debug_abbrev", size 333
 ;; custom section ".debug_line", size 2826
 ;; custom section ".debug_str", size 434
 ;; custom section "producers", size 135
)
