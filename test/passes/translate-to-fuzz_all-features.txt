(module
 (type $none_=>_none (func))
 (type $i64_=>_none (func (param i64)))
 (type $i32_=>_none (func (param i32)))
 (type $f32_=>_none (func (param f32)))
 (type $f64_=>_none (func (param f64)))
 (type $v128_=>_none (func (param v128)))
 (type $nullref_=>_none (func (param nullref)))
 (type $exnref_=>_none (func (param exnref)))
 (type $none_=>_i32 (func (result i32)))
 (type $none_=>_anyref (func (result anyref)))
 (type $none_=>_nullref_i64_nullref (func (result nullref i64 nullref)))
 (import "fuzzing-support" "log-i32" (func $log-i32 (param i32)))
 (import "fuzzing-support" "log-i64" (func $log-i64 (param i64)))
 (import "fuzzing-support" "log-f32" (func $log-f32 (param f32)))
 (import "fuzzing-support" "log-f64" (func $log-f64 (param f64)))
 (import "fuzzing-support" "log-v128" (func $log-v128 (param v128)))
 (import "fuzzing-support" "log-nullref" (func $log-nullref (param nullref)))
 (import "fuzzing-support" "log-exnref" (func $log-exnref (param exnref)))
 (memory $0 (shared 1 1))
 (data (i32.const 0) "N\0fN\f5\f9\b1\ff\fa\eb\e5\fe\a7\ec\fb\fc\f4\a6\e4\ea\f0\ae\e3")
 (table $0 0 0 funcref)
 (global $global$5 (mut f32) (f32.const 74))
 (global $global$4 (mut nullref) (ref.null))
 (global $global$3 (mut i32) (i32.const 1263230471))
 (global $global$2 (mut i32) (i32.const -131072))
 (global $global$1 (mut (i64 f64 exnref)) (tuple.make
  (i64.const 4294967295)
  (f64.const -nan:0xffffffffffffa)
  (ref.null)
 ))
 (global $hangLimit (mut i32) (i32.const 10))
 (event $event$0 (attr 0) (param i64))
 (event $event$1 (attr 0) (param))
 (export "hashMemory" (func $hashMemory))
 (export "memory" (memory $0))
 (export "func_8" (func $func_8))
 (export "hangLimitInitializer" (func $hangLimitInitializer))
 (func $hashMemory (result i32)
  (local $0 i32)
  (local.set $0
   (i32.const 5381)
  )
  (local.set $0
   (i32.xor
    (i32.add
     (i32.shl
      (local.get $0)
      (i32.const 5)
     )
     (local.get $0)
    )
    (i32.load8_u
     (i32.const 0)
    )
   )
  )
  (local.set $0
   (i32.xor
    (i32.add
     (i32.shl
      (local.get $0)
      (i32.const 5)
     )
     (local.get $0)
    )
    (i32.load8_u offset=1
     (i32.const 0)
    )
   )
  )
  (local.set $0
   (i32.xor
    (i32.add
     (i32.shl
      (local.get $0)
      (i32.const 5)
     )
     (local.get $0)
    )
    (i32.load8_u offset=2
     (i32.const 0)
    )
   )
  )
  (local.set $0
   (i32.xor
    (i32.add
     (i32.shl
      (local.get $0)
      (i32.const 5)
     )
     (local.get $0)
    )
    (i32.load8_u offset=3
     (i32.const 0)
    )
   )
  )
  (local.set $0
   (i32.xor
    (i32.add
     (i32.shl
      (local.get $0)
      (i32.const 5)
     )
     (local.get $0)
    )
    (i32.load8_u offset=4
     (i32.const 0)
    )
   )
  )
  (local.set $0
   (i32.xor
    (i32.add
     (i32.shl
      (local.get $0)
      (i32.const 5)
     )
     (local.get $0)
    )
    (i32.load8_u offset=5
     (i32.const 0)
    )
   )
  )
  (local.set $0
   (i32.xor
    (i32.add
     (i32.shl
      (local.get $0)
      (i32.const 5)
     )
     (local.get $0)
    )
    (i32.load8_u offset=6
     (i32.const 0)
    )
   )
  )
  (local.set $0
   (i32.xor
    (i32.add
     (i32.shl
      (local.get $0)
      (i32.const 5)
     )
     (local.get $0)
    )
    (i32.load8_u offset=7
     (i32.const 0)
    )
   )
  )
  (local.set $0
   (i32.xor
    (i32.add
     (i32.shl
      (local.get $0)
      (i32.const 5)
     )
     (local.get $0)
    )
    (i32.load8_u offset=8
     (i32.const 0)
    )
   )
  )
  (local.set $0
   (i32.xor
    (i32.add
     (i32.shl
      (local.get $0)
      (i32.const 5)
     )
     (local.get $0)
    )
    (i32.load8_u offset=9
     (i32.const 0)
    )
   )
  )
  (local.set $0
   (i32.xor
    (i32.add
     (i32.shl
      (local.get $0)
      (i32.const 5)
     )
     (local.get $0)
    )
    (i32.load8_u offset=10
     (i32.const 0)
    )
   )
  )
  (local.set $0
   (i32.xor
    (i32.add
     (i32.shl
      (local.get $0)
      (i32.const 5)
     )
     (local.get $0)
    )
    (i32.load8_u offset=11
     (i32.const 0)
    )
   )
  )
  (local.set $0
   (i32.xor
    (i32.add
     (i32.shl
      (local.get $0)
      (i32.const 5)
     )
     (local.get $0)
    )
    (i32.load8_u offset=12
     (i32.const 0)
    )
   )
  )
  (local.set $0
   (i32.xor
    (i32.add
     (i32.shl
      (local.get $0)
      (i32.const 5)
     )
     (local.get $0)
    )
    (i32.load8_u offset=13
     (i32.const 0)
    )
   )
  )
  (local.set $0
   (i32.xor
    (i32.add
     (i32.shl
      (local.get $0)
      (i32.const 5)
     )
     (local.get $0)
    )
    (i32.load8_u offset=14
     (i32.const 0)
    )
   )
  )
  (local.set $0
   (i32.xor
    (i32.add
     (i32.shl
      (local.get $0)
      (i32.const 5)
     )
     (local.get $0)
    )
    (i32.load8_u offset=15
     (i32.const 0)
    )
   )
  )
  (local.get $0)
 )
 (func $func_8 (result anyref)
  (local $0 i64)
  (local $1 exnref)
  (local $2 nullref)
  (local $3 i32)
  (local $4 anyref)
  (local $5 nullref)
  (local $6 f32)
  (block
   (if
    (i32.eqz
     (global.get $hangLimit)
    )
    (return
     (local.get $4)
    )
   )
   (global.set $hangLimit
    (i32.sub
     (global.get $hangLimit)
     (i32.const 1)
    )
   )
  )
  (block $label$0 (result anyref)
   (loop $label$1
    (block
     (if
      (i32.eqz
       (global.get $hangLimit)
      )
      (return
       (local.get $4)
      )
     )
     (global.set $hangLimit
      (i32.sub
       (global.get $hangLimit)
       (i32.const 1)
      )
     )
    )
    (block
     (block $label$2
      (nop)
      (f32.store offset=1
       (i32.and
        (local.get $3)
        (i32.const 15)
       )
       (local.get $6)
      )
     )
     (br_if $label$1
      (i32.eq
       (if (result i32)
        (i32.eqz
         (if
          (i32.eqz
           (if (result i32)
            (if
             (i32.eqz
              (if (result i32)
               (global.get $global$3)
               (local.tee $3
                (i32.reinterpret_f32
                 (f32.load offset=3 align=1
                  (global.get $global$3)
                 )
                )
               )
               (block $label$22 (result i32)
                (call $log-f64
                 (block $label$23 (result f64)
                  (if
                   (i32.eqz
                    (tuple.extract 0
                     (tuple.make
                      (i32.const 507658265)
                      (ref.func $log-f64)
                     )
                    )
                   )
                   (block $label$24
                    (local.set $3
                     (local.get $3)
                    )
                    (br_if $label$24
                     (local.get $3)
                    )
                   )
                   (call $log-i64
                    (block $label$25 (result i64)
                     (nop)
                     (i64.const -42)
                    )
                   )
                  )
                  (tuple.extract 3
                   (tuple.make
                    (i32.const 16)
                    (ref.null)
                    (v128.const i32x4 0x01008181 0xd1000402 0x7b00ff00 0xa54800ff)
                    (f64.const 1)
                    (i64.const -81)
                   )
                  )
                 )
                )
                (loop $label$26 (result i32)
                 (block
                  (if
                   (i32.eqz
                    (global.get $hangLimit)
                   )
                   (return
                    (local.get $4)
                   )
                  )
                  (global.set $hangLimit
                   (i32.sub
                    (global.get $hangLimit)
                    (i32.const 1)
                   )
                  )
                 )
                 (block (result i32)
                  (block $label$27
                   (loop $label$28
                    (block
                     (if
                      (i32.eqz
                       (global.get $hangLimit)
                      )
                      (return
                       (local.get $4)
                      )
                     )
                     (global.set $hangLimit
                      (i32.sub
                       (global.get $hangLimit)
                       (i32.const 1)
                      )
                     )
                    )
                    (block
                     (br_if $label$1
                      (local.tee $3
                       (i32.const -131072)
                      )
                     )
                     (br_if $label$28
                      (f64.gt
                       (f64.const 89)
                       (f64.const -67108864)
                      )
                     )
                     (try
                      (do
                       (block $label$29
                        (nop)
                       )
                      )
                      (catch
                       (drop
                        (exnref.pop)
                       )
                       (data.drop 0)
                       (memory.init 0
                        (i32.and
                         (local.get $3)
                         (global.get $global$3)
                        )
                        (i32.const 20)
                        (i32.const 1)
                       )
                      )
                     )
                    )
                   )
                   (nop)
                  )
                  (br_if $label$26
                   (i32.eqz
                    (i32.const 32767)
                   )
                  )
                  (global.get $global$2)
                 )
                )
               )
              )
             )
             (block $label$30
              (nop)
              (return
               (ref.null)
              )
             )
             (block $label$31
              (try
               (do
                (local.set $0
                 (local.tee $0
                  (try (result i64)
                   (do
                    (block $label$32 (result i64)
                     (nop)
                     (i64.const 1680407891607451654)
                    )
                   )
                   (catch
                    (rethrow
                     (exnref.pop)
                    )
                   )
                  )
                 )
                )
               )
               (catch
                (drop
                 (exnref.pop)
                )
                (br_if $label$1
                 (i32.eqz
                  (local.tee $3
                   (i32.const 158273137)
                  )
                 )
                )
                (try
                 (do
                  (block $label$33
                   (local.set $3
                    (i32.const 827803956)
                   )
                   (br_if $label$1
                    (local.get $3)
                   )
                  )
                 )
                 (catch
                  (drop
                   (exnref.pop)
                  )
                  (local.set $3
                   (global.get $global$3)
                  )
                  (nop)
                 )
                )
               )
              )
              (return
               (ref.null)
              )
             )
            )
            (block $label$34 (result i32)
             (block $label$35
              (block $label$36
               (block $label$37
                (nop)
                (f32.store offset=3 align=2
                 (i32.and
                  (local.tee $3
                   (i32.const -1)
                  )
                  (i32.const 15)
                 )
                 (try (result f32)
                  (do
                   (local.tee $6
                    (f32.const 22852)
                   )
                  )
                  (catch
                   (drop
                    (exnref.pop)
                   )
                   (memory.copy
                    (i32.and
                     (local.get $3)
                     (i32.const 15)
                    )
                    (atomic.notify offset=3
                     (i32.and
                      (global.get $global$2)
                      (i32.const 15)
                     )
                     (local.get $3)
                    )
                    (local.get $3)
                   )
                   (rethrow
                    (local.tee $1
                     (ref.null)
                    )
                   )
                  )
                 )
                )
               )
               (loop $label$66
                (block
                 (if
                  (i32.eqz
                   (global.get $hangLimit)
                  )
                  (return
                   (ref.null)
                  )
                 )
                 (global.set $hangLimit
                  (i32.sub
                   (global.get $hangLimit)
                   (i32.const 1)
                  )
                 )
                )
                (block
                 (nop)
                 (br_if $label$66
                  (i32.const 52)
                 )
                 (nop)
                )
               )
              )
              (drop
               (i32.const -59)
              )
             )
             (i32.const 1933278779)
            )
            (i8x16.extract_lane_u 6
             (select
              (v128.load offset=4 align=2
               (i32.and
                (call $hashMemory)
                (i32.const 15)
               )
              )
              (tuple.extract 1
               (tuple.make
                (ref.null)
                (v128.const i32x4 0x3c041804 0x4d604040 0x0801010f 0x0a0a0f32)
                (ref.null)
                (f64.const 274877906944)
                (ref.null)
                (i64.const 27)
               )
              )
              (local.get $3)
             )
            )
           )
          )
          (block $label$40
           (br_if $label$1
            (i32.eqz
             (local.get $3)
            )
           )
           (return
            (local.get $4)
           )
          )
          (block $label$41
           (block $label$42
            (f32.store offset=4 align=1
             (i32.and
              (block
               (block $label$43
                (f32.store offset=4 align=2
                 (global.get $global$3)
                 (local.get $6)
                )
                (return
                 (local.get $4)
                )
               )
               (drop
                (i32.trunc_sat_f32_s
                 (f32.const -1)
                )
               )
              )
              (i32.const 15)
             )
             (f32.const 67)
            )
            (loop $label$44
             (block
              (if
               (i32.eqz
                (global.get $hangLimit)
               )
               (return
                (ref.null)
               )
              )
              (global.set $hangLimit
               (i32.sub
                (global.get $hangLimit)
                (i32.const 1)
               )
              )
             )
             (block $label$45
              (drop
               (i32.load offset=4 align=4
                (i32.and
                 (if
                  (i32.eqz
                   (i32.const 7)
                  )
                  (block $label$46
                   (memory.copy
                    (local.get $3)
                    (i32.and
                     (global.get $global$3)
                     (i32.const 15)
                    )
                    (local.tee $3
                     (local.get $3)
                    )
                   )
                   (return
                    (local.get $4)
                   )
                  )
                  (block $label$47
                   (call $log-f32
                    (f32.const -8388608)
                   )
                   (return
                    (ref.null)
                   )
                  )
                 )
                 (i32.const 15)
                )
               )
              )
             )
            )
           )
           (return
            (local.get $4)
           )
          )
         )
        )
        (block $label$48 (result i32)
         (if
          (local.tee $3
           (local.tee $3
            (local.get $3)
           )
          )
          (drop
           (block $label$50 (result nullref i64 nullref)
            (br_if $label$1
             (local.tee $3
              (local.get $3)
             )
            )
            (tuple.make
             (ref.null)
             (i64.const 4268342811569299756)
             (ref.null)
            )
           )
          )
          (block $label$51
           (local.set $1
            (try (result exnref)
             (do
              (block $label$52 (result exnref)
               (br_if $label$1
                (i32.atomic.load16_u offset=4
                 (i32.and
                  (i32.const -2147483647)
                  (i32.const 15)
                 )
                )
               )
               (br_on_exn $label$51 $event$1
                (loop $label$53 (result nullref)
                 (block
                  (if
                   (i32.eqz
                    (global.get $hangLimit)
                   )
                   (return
                    (ref.null)
                   )
                  )
                  (global.set $hangLimit
                   (i32.sub
                    (global.get $hangLimit)
                    (i32.const 1)
                   )
                  )
                 )
                 (ref.null)
                )
               )
              )
             )
             (catch
              (drop
               (exnref.pop)
              )
              (nop)
              (loop $label$54 (result exnref)
               (block
                (if
                 (i32.eqz
                  (global.get $hangLimit)
                 )
                 (return
                  (ref.null)
                 )
                )
                (global.set $hangLimit
                 (i32.sub
                  (global.get $hangLimit)
                  (i32.const 1)
                 )
                )
               )
               (block (result exnref)
                (nop)
                (br_if $label$54
                 (atomic.notify offset=4
                  (i32.and
                   (i32.const 96)
                   (i32.const 15)
                  )
                  (call $hashMemory)
                 )
                )
                (local.tee $1
                 (local.tee $1
                  (ref.null)
                 )
                )
               )
              )
             )
            )
           )
           (block $label$74
            (if
             (i32.eqz
              (global.get $global$3)
             )
             (nop)
             (block $label$75
              (br_if $label$75
               (i32.eqz
                (local.tee $3
                 (i32.atomic.load16_u
                  (i32.and
                   (local.tee $3
                    (local.tee $3
                     (loop $label$76 (result i32)
                      (block
                       (if
                        (i32.eqz
                         (global.get $hangLimit)
                        )
                        (return
                         (ref.null)
                        )
                       )
                       (global.set $hangLimit
                        (i32.sub
                         (global.get $hangLimit)
                         (i32.const 1)
                        )
                       )
                      )
                      (local.get $3)
                     )
                    )
                   )
                   (i32.const 15)
                  )
                 )
                )
               )
              )
              (block $label$77
               (call $log-i64
                (i64.const 2097152)
               )
               (local.set $4
                (local.get $4)
               )
              )
             )
            )
            (nop)
           )
          )
         )
         (global.get $global$3)
        )
        (i32.const 437785346)
       )
       (global.get $global$3)
      )
     )
     (local.set $5
      (ref.null)
     )
    )
   )
   (local.get $4)
  )
 )
 (func $hangLimitInitializer
  (global.set $hangLimit
   (i32.const 10)
  )
 )
)
