(module
 (type $none_=>_none (func))
 (type $none_=>_f32 (func (result f32)))
 (type $externref_f64_f32_anyref_eqref_anyref_=>_externref (func (param externref f64 f32 anyref eqref anyref) (result externref)))
 (type $i32_=>_none (func (param i32)))
 (type $i64_=>_none (func (param i64)))
 (type $f32_=>_none (func (param f32)))
 (type $f64_=>_none (func (param f64)))
 (type $v128_=>_none (func (param v128)))
 (type $exnref_=>_none (func (param exnref)))
 (type $eqref_externref_v128_anyref_f64_i32_=>_none (func (param eqref externref v128 anyref f64 i32)))
 (type $none_=>_i32 (func (result i32)))
 (type $i64_f32_i64_f64_funcref_=>_funcref (func (param i64 f32 i64 f64 funcref) (result funcref)))
 (type $i32_i32_f32_exnref_=>_externref (func (param i32 i32 f32 exnref) (result externref)))
 (type $exnref_f32_eqref_externref_funcref_eqref_i64_=>_exnref (func (param exnref f32 eqref externref funcref eqref i64) (result exnref)))
 (type $none_=>_eqref (func (result eqref)))
 (import "fuzzing-support" "log-i32" (func $log-i32 (param i32)))
 (import "fuzzing-support" "log-i64" (func $log-i64 (param i64)))
 (import "fuzzing-support" "log-f32" (func $log-f32 (param f32)))
 (import "fuzzing-support" "log-f64" (func $log-f64 (param f64)))
 (import "fuzzing-support" "log-v128" (func $log-v128 (param v128)))
 (import "fuzzing-support" "log-exnref" (func $log-exnref (param exnref)))
 (memory $0 (shared 1 1))
 (data (i32.const 0) "N\0fN\f5\f9\b1\ff\fa\eb\e5\fe\a7\ec\fb\fc\f4\a6\e4\ea\f0\ae\e3")
 (table $0 5 funcref)
 (elem (i32.const 0) $func_9 $func_9 $func_9 $func_10 $func_14)
 (global $global$5 (mut anyref) (ref.null any))
 (global $global$4 (mut i32) (i32.const 470177031))
 (global $global$3 (mut f64) (f64.const 9223372036854775808))
 (global $global$2 (mut (anyref f32 anyref funcref funcref i64)) (tuple.make
  (ref.null any)
  (f32.const -9223372036854775808)
  (ref.null any)
  (ref.null func)
  (ref.null func)
  (i64.const -32)
 ))
 (global $global$1 (mut f32) (f32.const -32769))
 (global $hangLimit (mut i32) (i32.const 10))
 (export "hashMemory" (func $hashMemory))
 (export "memory" (memory $0))
 (export "func_7_invoker" (func $func_7_invoker))
 (export "func_9" (func $func_9))
 (export "func_11_invoker" (func $func_11_invoker))
 (export "func_14" (func $func_14))
 (export "func_15" (func $func_15))
 (export "hangLimitInitializer" (func $hangLimitInitializer))
 (func $hashMemory (result i32)
  (local $0 i32)
  (local.set $0
   (i32.const 5381)
  )
  (local.set $0
   (i32.xor
    (i32.add
     (i32.shl
      (local.get $0)
      (i32.const 5)
     )
     (local.get $0)
    )
    (i32.load8_u
     (i32.const 0)
    )
   )
  )
  (local.set $0
   (i32.xor
    (i32.add
     (i32.shl
      (local.get $0)
      (i32.const 5)
     )
     (local.get $0)
    )
    (i32.load8_u offset=1
     (i32.const 0)
    )
   )
  )
  (local.set $0
   (i32.xor
    (i32.add
     (i32.shl
      (local.get $0)
      (i32.const 5)
     )
     (local.get $0)
    )
    (i32.load8_u offset=2
     (i32.const 0)
    )
   )
  )
  (local.set $0
   (i32.xor
    (i32.add
     (i32.shl
      (local.get $0)
      (i32.const 5)
     )
     (local.get $0)
    )
    (i32.load8_u offset=3
     (i32.const 0)
    )
   )
  )
  (local.set $0
   (i32.xor
    (i32.add
     (i32.shl
      (local.get $0)
      (i32.const 5)
     )
     (local.get $0)
    )
    (i32.load8_u offset=4
     (i32.const 0)
    )
   )
  )
  (local.set $0
   (i32.xor
    (i32.add
     (i32.shl
      (local.get $0)
      (i32.const 5)
     )
     (local.get $0)
    )
    (i32.load8_u offset=5
     (i32.const 0)
    )
   )
  )
  (local.set $0
   (i32.xor
    (i32.add
     (i32.shl
      (local.get $0)
      (i32.const 5)
     )
     (local.get $0)
    )
    (i32.load8_u offset=6
     (i32.const 0)
    )
   )
  )
  (local.set $0
   (i32.xor
    (i32.add
     (i32.shl
      (local.get $0)
      (i32.const 5)
     )
     (local.get $0)
    )
    (i32.load8_u offset=7
     (i32.const 0)
    )
   )
  )
  (local.set $0
   (i32.xor
    (i32.add
     (i32.shl
      (local.get $0)
      (i32.const 5)
     )
     (local.get $0)
    )
    (i32.load8_u offset=8
     (i32.const 0)
    )
   )
  )
  (local.set $0
   (i32.xor
    (i32.add
     (i32.shl
      (local.get $0)
      (i32.const 5)
     )
     (local.get $0)
    )
    (i32.load8_u offset=9
     (i32.const 0)
    )
   )
  )
  (local.set $0
   (i32.xor
    (i32.add
     (i32.shl
      (local.get $0)
      (i32.const 5)
     )
     (local.get $0)
    )
    (i32.load8_u offset=10
     (i32.const 0)
    )
   )
  )
  (local.set $0
   (i32.xor
    (i32.add
     (i32.shl
      (local.get $0)
      (i32.const 5)
     )
     (local.get $0)
    )
    (i32.load8_u offset=11
     (i32.const 0)
    )
   )
  )
  (local.set $0
   (i32.xor
    (i32.add
     (i32.shl
      (local.get $0)
      (i32.const 5)
     )
     (local.get $0)
    )
    (i32.load8_u offset=12
     (i32.const 0)
    )
   )
  )
  (local.set $0
   (i32.xor
    (i32.add
     (i32.shl
      (local.get $0)
      (i32.const 5)
     )
     (local.get $0)
    )
    (i32.load8_u offset=13
     (i32.const 0)
    )
   )
  )
  (local.set $0
   (i32.xor
    (i32.add
     (i32.shl
      (local.get $0)
      (i32.const 5)
     )
     (local.get $0)
    )
    (i32.load8_u offset=14
     (i32.const 0)
    )
   )
  )
  (local.set $0
   (i32.xor
    (i32.add
     (i32.shl
      (local.get $0)
      (i32.const 5)
     )
     (local.get $0)
    )
    (i32.load8_u offset=15
     (i32.const 0)
    )
   )
  )
  (local.get $0)
 )
 (func $func_7 (param $0 i32) (param $1 i32) (param $2 f32) (param $3 exnref) (result externref)
  (local $4 i32)
  (block
   (if
    (i32.eqz
     (global.get $hangLimit)
    )
    (return
     (ref.null extern)
    )
   )
   (global.set $hangLimit
    (i32.sub
     (global.get $hangLimit)
     (i32.const 1)
    )
   )
  )
  (ref.null extern)
 )
 (func $func_7_invoker
  (drop
   (call $func_7
    (i32.const -127)
    (i32.const -268435456)
    (f32.const 1179405440)
    (ref.null exn)
   )
  )
  (call $log-i32
   (call $hashMemory)
  )
 )
 (func $func_9 (result f32)
  (local $0 anyref)
  (local $1 f64)
  (local $2 (anyref anyref))
  (local $3 anyref)
  (local $4 externref)
  (block
   (if
    (i32.eqz
     (global.get $hangLimit)
    )
    (return
     (f32.const 1.4949444621624858e-31)
    )
   )
   (global.set $hangLimit
    (i32.sub
     (global.get $hangLimit)
     (i32.const 1)
    )
   )
  )
  (block $label$0
   (nop)
   (block $label$1
    (nop)
    (return
     (f32.const 7.396028525772014e-24)
    )
   )
  )
 )
 (func $func_10 (param $0 externref) (param $1 f64) (param $2 f32) (param $3 anyref) (param $4 eqref) (param $5 anyref) (result externref)
  (local $6 i64)
  (local $7 (anyref exnref f32 f64 f64))
  (local $8 anyref)
  (local $9 exnref)
  (local $10 i64)
  (local $11 f64)
  (local $12 f32)
  (local $13 v128)
  (local $14 exnref)
  (local $15 (funcref funcref v128 eqref v128))
  (local $16 anyref)
  (block
   (if
    (i32.eqz
     (global.get $hangLimit)
    )
    (return
     (ref.null extern)
    )
   )
   (global.set $hangLimit
    (i32.sub
     (global.get $hangLimit)
     (i32.const 1)
    )
   )
  )
  (ref.null extern)
 )
 (func $func_11 (param $0 exnref) (param $1 f32) (param $2 eqref) (param $3 externref) (param $4 funcref) (param $5 eqref) (param $6 i64) (result exnref)
  (local $7 (i32 i64 anyref externref externref anyref))
  (block
   (if
    (i32.eqz
     (global.get $hangLimit)
    )
    (return
     (ref.null exn)
    )
   )
   (global.set $hangLimit
    (i32.sub
     (global.get $hangLimit)
     (i32.const 1)
    )
   )
  )
  (ref.null exn)
 )
 (func $func_11_invoker
  (drop
   (call $func_11
    (ref.null exn)
    (f32.const -1022.1400146484375)
    (ref.null eq)
    (ref.null extern)
    (ref.func $hashMemory)
    (ref.null eq)
    (i64.const 1073741824)
   )
  )
  (drop
   (call $func_11
    (ref.null exn)
    (f32.const 13123905)
    (ref.null eq)
    (ref.null extern)
    (ref.null func)
    (ref.null eq)
    (i64.const 288230376151711743)
   )
  )
  (call $log-i32
   (call $hashMemory)
  )
 )
 (func $func_13 (result eqref)
  (local $0 anyref)
  (local $1 funcref)
  (local $2 i64)
  (local $3 f64)
  (local $4 i64)
  (local $5 exnref)
  (block
   (if
    (i32.eqz
     (global.get $hangLimit)
    )
    (return
     (ref.null eq)
    )
   )
   (global.set $hangLimit
    (i32.sub
     (global.get $hangLimit)
     (i32.const 1)
    )
   )
  )
  (ref.null eq)
 )
 (func $func_14 (param $0 i64) (param $1 f32) (param $2 i64) (param $3 f64) (param $4 funcref) (result funcref)
  (local $5 (funcref i32 exnref i64))
  (local $6 exnref)
  (local $7 eqref)
  (local $8 exnref)
  (block
   (if
    (i32.eqz
     (global.get $hangLimit)
    )
    (return
     (ref.null func)
    )
   )
   (global.set $hangLimit
    (i32.sub
     (global.get $hangLimit)
     (i32.const 1)
    )
   )
  )
  (block $label$0 (result funcref)
   (call $log-f32
    (f32.demote_f64
     (f64.promote_f32
      (f32.convert_i64_u
       (i64.popcnt
        (loop $label$1 (result i64)
         (block
          (if
           (i32.eqz
            (global.get $hangLimit)
           )
           (return
            (ref.null func)
           )
          )
          (global.set $hangLimit
           (i32.sub
            (global.get $hangLimit)
            (i32.const 1)
           )
          )
         )
         (block (result i64)
          (block $label$2
           (call $log-i64
            (loop $label$3 (result i64)
             (block
              (if
               (i32.eqz
                (global.get $hangLimit)
               )
               (return
                (local.get $4)
               )
              )
              (global.set $hangLimit
               (i32.sub
                (global.get $hangLimit)
                (i32.const 1)
               )
              )
             )
             (i64.extend_i32_u
              (i32.const 6)
             )
            )
           )
           (call $log-v128
            (i8x16.ge_s
             (i16x8.ne
              (block $label$4
               (call $log-i32
                (i32.atomic.load8_u offset=3
                 (i32.and
                  (i32.const 6)
                  (i32.const 15)
                 )
                )
               )
               (return
                (local.get $4)
               )
              )
              (if
               (i32.const 1026698534)
               (block $label$5
                (br $label$1)
               )
               (block $label$6
                (call $log-f64
                 (f64.const -nan:0xfffffffffffd3)
                )
                (br $label$1)
               )
              )
             )
             (v128.const i32x4 0x0942150b 0x80000000 0x00010000 0x000000ff)
            )
           )
          )
          (br_if $label$1
           (i32.eqz
            (block $label$7
             (block $label$8
              (call $log-i32
               (call $hashMemory)
              )
              (if
               (i32.eqz
                (i32.load offset=4 align=1
                 (i32.and
                  (select
                   (i32.const -15)
                   (i32.const 14391)
                   (i32.const -87)
                  )
                  (i32.const 15)
                 )
                )
               )
               (call $log-f64
                (f64.const 36028797018963968)
               )
               (block $label$9
                (call $log-i64
                 (local.tee $2
                  (i64.const 4704083762714593088)
                 )
                )
                (call $log-exnref
                 (ref.null exn)
                )
               )
              )
             )
             (br $label$1)
            )
           )
          )
          (i64.const 796318079923131155)
         )
        )
       )
      )
     )
    )
   )
   (if (result funcref)
    (loop $label$10 (result i32)
     (block
      (if
       (i32.eqz
        (global.get $hangLimit)
       )
       (return
        (local.get $4)
       )
      )
      (global.set $hangLimit
       (i32.sub
        (global.get $hangLimit)
        (i32.const 1)
       )
      )
     )
     (block (result i32)
      (block $label$11
       (local.set $4
        (select (result funcref)
         (local.get $4)
         (local.get $4)
         (i32.const 524288)
        )
       )
       (call $log-i32
        (call $hashMemory)
       )
      )
      (br_if $label$10
       (i32.const -128)
      )
      (i32.const 1430996831)
     )
    )
    (ref.func $log-i64)
    (block $label$12 (result funcref)
     (call $log-i32
      (call $hashMemory)
     )
     (local.get $4)
    )
   )
  )
 )
 (func $func_15 (param $0 eqref) (param $1 externref) (param $2 v128) (param $3 anyref) (param $4 f64) (param $5 i32)
  (block
   (if
    (i32.eqz
     (global.get $hangLimit)
    )
    (return)
   )
   (global.set $hangLimit
    (i32.sub
     (global.get $hangLimit)
     (i32.const 1)
    )
   )
  )
  (block $label$0
   (nop)
   (call $log-i32
    (loop $label$1 (result i32)
     (block
      (if
       (i32.eqz
        (global.get $hangLimit)
       )
       (return)
      )
      (global.set $hangLimit
       (i32.sub
        (global.get $hangLimit)
        (i32.const 1)
       )
      )
     )
     (block (result i32)
      (loop $label$2
       (block
        (if
         (i32.eqz
          (global.get $hangLimit)
         )
         (return)
        )
        (global.set $hangLimit
         (i32.sub
          (global.get $hangLimit)
          (i32.const 1)
         )
        )
       )
       (block
        (memory.init 0
         (i32.and
          (local.get $5)
          (i32.const 15)
         )
         (i32.const 3)
         (i32.const 1)
        )
        (br_if $label$2
         (i32.eqz
          (local.get $5)
         )
        )
        (local.tee $1
         (loop $label$3
          (block
           (if
            (i32.eqz
             (global.get $hangLimit)
            )
            (return)
           )
           (global.set $hangLimit
            (i32.sub
             (global.get $hangLimit)
             (i32.const 1)
            )
           )
          )
          (block $label$4
           (if
            (local.get $5)
            (block $label$5
             (call $log-f32
              (f32.const -2147483648)
             )
             (loop $label$6
              (block
               (if
                (i32.eqz
                 (global.get $hangLimit)
                )
                (return)
               )
               (global.set $hangLimit
                (i32.sub
                 (global.get $hangLimit)
                 (i32.const 1)
                )
               )
              )
              (block $label$7
               (drop
                (loop $label$8 (result i32)
                 (block
                  (if
                   (i32.eqz
                    (global.get $hangLimit)
                   )
                   (return)
                  )
                  (global.set $hangLimit
                   (i32.sub
                    (global.get $hangLimit)
                    (i32.const 1)
                   )
                  )
                 )
                 (block (result i32)
                  (call $log-i64
                   (i64.xor
                    (i64.const -128)
                    (i64.load8_u offset=22
                     (local.get $5)
                    )
                   )
                  )
                  (br_if $label$8
                   (i32.eqz
                    (if (result i32)
                     (i32.eqz
                      (i32.const 1)
                     )
                     (block $label$9 (result i32)
                      (block $label$10
                       (nop)
                       (v128.store offset=22
                        (i32.and
                         (i32.const -16)
                         (i32.const 15)
                        )
                        (v128.const i32x4 0x00000008 0x00000000 0x4b430e47 0x2442415c)
                       )
                      )
                      (i32.const 127)
                     )
                     (block $label$11
                      (br $label$1)
                     )
                    )
                   )
                  )
                  (i32.load offset=3 align=2
                   (i32.and
                    (loop $label$12 (result i32)
                     (block
                      (if
                       (i32.eqz
                        (global.get $hangLimit)
                       )
                       (return)
                      )
                      (global.set $hangLimit
                       (i32.sub
                        (global.get $hangLimit)
                        (i32.const 1)
                       )
                      )
                     )
                     (local.get $5)
                    )
                    (i32.const 15)
                   )
                  )
                 )
                )
               )
              )
             )
            )
            (block $label$13
             (loop $label$14
              (block
               (if
                (i32.eqz
                 (global.get $hangLimit)
                )
                (return)
               )
               (global.set $hangLimit
                (i32.sub
                 (global.get $hangLimit)
                 (i32.const 1)
                )
               )
              )
              (block $label$15
               (br_if $label$0
                (i32.eqz
                 (i32.const -262145)
                )
               )
               (loop $label$16
                (block
                 (if
                  (i32.eqz
                   (global.get $hangLimit)
                  )
                  (return)
                 )
                 (global.set $hangLimit
                  (i32.sub
                   (global.get $hangLimit)
                   (i32.const 1)
                  )
                 )
                )
                (block
                 (block $label$17
                  (f32.store offset=3
                   (i32.and
                    (local.get $5)
                    (i32.const 15)
                   )
                   (f32.const 2147483648)
                  )
                  (nop)
                 )
                 (br_if $label$16
                  (i32.atomic.load8_u offset=4
                   (i32.and
                    (global.get $global$4)
                    (i32.const 15)
                   )
                  )
                 )
                 (data.drop 0)
                )
               )
              )
             )
             (local.set $1
              (tuple.extract 2
               (tuple.make
                (f32.const 1430538112)
                (ref.null func)
                (ref.null extern)
                (i32.const 1192431624)
                (ref.null exn)
               )
              )
             )
            )
           )
           (call_indirect (type $externref_f64_f32_anyref_eqref_anyref_=>_externref)
            (ref.null extern)
            (global.get $global$3)
            (f32.neg
             (f32.const 2450682837729280)
            )
            (local.get $3)
            (if
             (i32.const 2069575009)
             (if
              (if (result i32)
               (i32.eqz
                (global.get $global$4)
               )
               (local.tee $5
                (global.get $global$4)
               )
               (block $label$18 (result i32)
                (local.set $2
                 (i8x16.gt_s
                  (v128.const i32x4 0x40805901 0x0d8bbc50 0x0006767e 0x42fc0214)
                  (local.get $2)
                 )
                )
                (local.tee $5
                 (local.get $5)
                )
               )
              )
              (block $label$19
               (if
                (f64.ne
                 (global.get $global$3)
                 (local.get $4)
                )
                (block $label$20
                 (br_if $label$1
                  (i32.eqz
                   (f64.ge
                    (local.tee $4
                     (block $label$21
                      (loop $label$22
                       (block
                        (if
                         (i32.eqz
                          (global.get $hangLimit)
                         )
                         (return)
                        )
                        (global.set $hangLimit
                         (i32.sub
                          (global.get $hangLimit)
                          (i32.const 1)
                         )
                        )
                       )
                       (block
                        (local.set $2
                         (local.get $2)
                        )
                        (br_if $label$22
                         (local.get $5)
                        )
                        (nop)
                       )
                      )
                      (br $label$0)
                     )
                    )
                    (local.get $4)
                   )
                  )
                 )
                 (if
                  (i32.sub
                   (local.get $5)
                   (atomic.notify offset=2
                    (i32.and
                     (i32.const 255)
                     (i32.const 15)
                    )
                    (i32.const 80)
                   )
                  )
                  (block $label$23
                   (if
                    (block $label$24 (result i32)
                     (local.get $5)
                    )
                    (i32.atomic.store16 offset=4
                     (i32.and
                      (local.get $5)
                      (i32.const 15)
                     )
                     (i32.const -15)
                    )
                    (f32.store offset=22 align=2
                     (i32.and
                      (i32.trunc_sat_f32_u
                       (f32.const 65449)
                      )
                      (i32.const 15)
                     )
                     (f32.const 8)
                    )
                   )
                   (br_if $label$2
                    (local.get $5)
                   )
                  )
                  (block $label$25
                   (local.set $1
                    (local.get $1)
                   )
                   (local.set $3
                    (ref.null any)
                   )
                  )
                 )
                )
                (block $label$26
                 (if
                  (if (result i32)
                   (local.get $5)
                   (local.tee $5
                    (local.tee $5
                     (i32.const 189486145)
                    )
                   )
                   (local.get $5)
                  )
                  (br_if $label$1
                   (f32.le
                    (f32.const 18446744073709551615)
                    (f32.const -9223372036854775808)
                   )
                  )
                  (block $label$27
                   (nop)
                   (nop)
                  )
                 )
                 (br_if $label$26
                  (i32.eqz
                   (loop $label$28 (result i32)
                    (block
                     (if
                      (i32.eqz
                       (global.get $hangLimit)
                      )
                      (return)
                     )
                     (global.set $hangLimit
                      (i32.sub
                       (global.get $hangLimit)
                       (i32.const 1)
                      )
                     )
                    )
                    (block (result i32)
                     (nop)
                     (br_if $label$28
                      (i32.eqz
                       (local.get $5)
                      )
                     )
                     (local.get $5)
                    )
                   )
                  )
                 )
                )
               )
               (br $label$1)
              )
              (block $label$29
               (local.set $0
                (local.get $0)
               )
               (br $label$3)
              )
             )
             (if
              (i32.eqz
               (if (result i32)
                (i32.eqz
                 (local.get $5)
                )
                (block $label$30
                 (br_if $label$3
                  (i32.eqz
                   (local.get $5)
                  )
                 )
                 (br $label$3)
                )
                (block $label$31 (result i32)
                 (br_if $label$0
                  (i32.eqz
                   (local.get $5)
                  )
                 )
                 (local.tee $5
                  (if (result i32)
                   (i32.eqz
                    (i32.popcnt
                     (global.get $global$4)
                    )
                   )
                   (f64.lt
                    (local.get $4)
                    (f64.const 2147483648.22)
                   )
                   (i32.const 67109642)
                  )
                 )
                )
               )
              )
              (block $label$32
               (if
                (i32.eqz
                 (i32.load8_u offset=4
                  (i32.and
                   (i32.load offset=4 align=1
                    (local.get $5)
                   )
                   (i32.const 15)
                  )
                 )
                )
                (block $label$33
                 (block $label$34
                  (call $func_7_invoker)
                  (local.set $5
                   (i32.const 510027288)
                  )
                 )
                 (br_if $label$33
                  (local.tee $5
                   (i32.const 469765448)
                  )
                 )
                )
                (block $label$35
                 (v128.store offset=2
                  (i32.and
                   (i32.const 63)
                   (i32.const 15)
                  )
                  (local.get $2)
                 )
                 (drop
                  (call $func_9)
                 )
                )
               )
               (br $label$2)
              )
              (block $label$36
               (br $label$2)
              )
             )
            )
            (local.get $3)
            (i32.const 3)
           )
          )
         )
        )
       )
      )
      (br_if $label$1
       (i32.eqz
        (i32.const 32768)
       )
      )
      (global.get $global$4)
     )
    )
   )
  )
 )
 (func $func_16 (result f32)
  (local $0 exnref)
  (block
   (if
    (i32.eqz
     (global.get $hangLimit)
    )
    (return
     (f32.const -8796093022208)
    )
   )
   (global.set $hangLimit
    (i32.sub
     (global.get $hangLimit)
     (i32.const 1)
    )
   )
  )
  (block $label$0 (result f32)
   (loop $label$1
    (block
     (if
      (i32.eqz
       (global.get $hangLimit)
      )
      (return
       (f32.const 1024)
      )
     )
     (global.set $hangLimit
      (i32.sub
       (global.get $hangLimit)
       (i32.const 1)
      )
     )
    )
    (block
     (block $label$2
      (call $log-exnref
       (local.get $0)
      )
      (if
       (i64.lt_u
        (i64.const 3)
        (i64x2.extract_lane 0
         (v128.const i32x4 0x00020008 0x505effa6 0x80000601 0x6645007f)
        )
       )
       (block $label$3
        (block $label$4
         (drop
          (ref.null eq)
         )
         (atomic.fence)
         (nop)
        )
        (nop)
       )
       (block $label$5
        (nop)
        (nop)
       )
      )
     )
     (br_if $label$1
      (i32.eqz
       (i32.const 69)
      )
     )
     (nop)
    )
   )
   (f32.const 7.793762395052891e-27)
  )
 )
 (func $hangLimitInitializer
  (global.set $hangLimit
   (i32.const 10)
  )
 )
)
