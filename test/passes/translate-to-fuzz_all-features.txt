(module
 (type $FUNCSIG$i (func (result i32)))
 (type $FUNCSIG$vi (func (param i32)))
 (type $FUNCSIG$vj (func (param i64)))
 (type $FUNCSIG$vf (func (param f32)))
 (type $FUNCSIG$vd (func (param f64)))
 (type $FUNCSIG$vjVdddV (func (param i64 v128 f64 f64 f64 v128)))
 (type $FUNCSIG$ddVff (func (param f64 v128 f32 f32) (result f64)))
 (type $FUNCSIG$VdVjf (func (param f64 v128 i64 f32) (result v128)))
 (type $FUNCSIG$v (func))
 (type $FUNCSIG$jjiV (func (param i64 i32 v128) (result i64)))
 (import "fuzzing-support" "log-i32" (func $log-i32 (param i32)))
 (import "fuzzing-support" "log-i64" (func $log-i64 (param i64)))
 (import "fuzzing-support" "log-f32" (func $log-f32 (param f32)))
 (import "fuzzing-support" "log-f64" (func $log-f64 (param f64)))
 (memory $0 1 1)
 (data (i32.const 0) "N\0fN\f5\f9\b1\ff\fa\eb\e5\fe\a7\ec\fb\fc\f4\a6\e4\ea\f0\ae\e3")
 (table $0 8 funcref)
 (elem (i32.const 0) $func_6 $func_6 $func_6 $func_6 $func_9 $func_9 $func_9 $func_9)
 (global $global$0 (mut i32) (i32.const 975664160))
 (global $global$1 (mut i32) (i32.const -536870912))
 (global $global$2 (mut f32) (f32.const 2147483648))
 (global $global$3 (mut f32) (f32.const 1448959360))
 (global $hangLimit (mut i32) (i32.const 10))
 (export "hashMemory" (func $hashMemory))
 (export "func_5" (func $func_5))
 (export "func_6" (func $func_6))
 (export "func_7" (func $func_7))
 (export "func_7_invoker" (func $func_7_invoker))
 (export "func_9" (func $func_9))
 (export "hangLimitInitializer" (func $hangLimitInitializer))
 (func $hashMemory (; 4 ;) (type $FUNCSIG$i) (result i32)
  (local $0 i32)
  (local.set $0
   (i32.const 5381)
  )
  (local.set $0
   (i32.xor
    (i32.add
     (i32.shl
      (local.get $0)
      (i32.const 5)
     )
     (local.get $0)
    )
    (i32.load8_u
     (i32.const 0)
    )
   )
  )
  (local.set $0
   (i32.xor
    (i32.add
     (i32.shl
      (local.get $0)
      (i32.const 5)
     )
     (local.get $0)
    )
    (i32.load8_u offset=1
     (i32.const 0)
    )
   )
  )
  (local.set $0
   (i32.xor
    (i32.add
     (i32.shl
      (local.get $0)
      (i32.const 5)
     )
     (local.get $0)
    )
    (i32.load8_u offset=2
     (i32.const 0)
    )
   )
  )
  (local.set $0
   (i32.xor
    (i32.add
     (i32.shl
      (local.get $0)
      (i32.const 5)
     )
     (local.get $0)
    )
    (i32.load8_u offset=3
     (i32.const 0)
    )
   )
  )
  (local.set $0
   (i32.xor
    (i32.add
     (i32.shl
      (local.get $0)
      (i32.const 5)
     )
     (local.get $0)
    )
    (i32.load8_u offset=4
     (i32.const 0)
    )
   )
  )
  (local.set $0
   (i32.xor
    (i32.add
     (i32.shl
      (local.get $0)
      (i32.const 5)
     )
     (local.get $0)
    )
    (i32.load8_u offset=5
     (i32.const 0)
    )
   )
  )
  (local.set $0
   (i32.xor
    (i32.add
     (i32.shl
      (local.get $0)
      (i32.const 5)
     )
     (local.get $0)
    )
    (i32.load8_u offset=6
     (i32.const 0)
    )
   )
  )
  (local.set $0
   (i32.xor
    (i32.add
     (i32.shl
      (local.get $0)
      (i32.const 5)
     )
     (local.get $0)
    )
    (i32.load8_u offset=7
     (i32.const 0)
    )
   )
  )
  (local.set $0
   (i32.xor
    (i32.add
     (i32.shl
      (local.get $0)
      (i32.const 5)
     )
     (local.get $0)
    )
    (i32.load8_u offset=8
     (i32.const 0)
    )
   )
  )
  (local.set $0
   (i32.xor
    (i32.add
     (i32.shl
      (local.get $0)
      (i32.const 5)
     )
     (local.get $0)
    )
    (i32.load8_u offset=9
     (i32.const 0)
    )
   )
  )
  (local.set $0
   (i32.xor
    (i32.add
     (i32.shl
      (local.get $0)
      (i32.const 5)
     )
     (local.get $0)
    )
    (i32.load8_u offset=10
     (i32.const 0)
    )
   )
  )
  (local.set $0
   (i32.xor
    (i32.add
     (i32.shl
      (local.get $0)
      (i32.const 5)
     )
     (local.get $0)
    )
    (i32.load8_u offset=11
     (i32.const 0)
    )
   )
  )
  (local.set $0
   (i32.xor
    (i32.add
     (i32.shl
      (local.get $0)
      (i32.const 5)
     )
     (local.get $0)
    )
    (i32.load8_u offset=12
     (i32.const 0)
    )
   )
  )
  (local.set $0
   (i32.xor
    (i32.add
     (i32.shl
      (local.get $0)
      (i32.const 5)
     )
     (local.get $0)
    )
    (i32.load8_u offset=13
     (i32.const 0)
    )
   )
  )
  (local.set $0
   (i32.xor
    (i32.add
     (i32.shl
      (local.get $0)
      (i32.const 5)
     )
     (local.get $0)
    )
    (i32.load8_u offset=14
     (i32.const 0)
    )
   )
  )
  (local.set $0
   (i32.xor
    (i32.add
     (i32.shl
      (local.get $0)
      (i32.const 5)
     )
     (local.get $0)
    )
    (i32.load8_u offset=15
     (i32.const 0)
    )
   )
  )
  (local.get $0)
 )
 (func $func_5 (; 5 ;) (type $FUNCSIG$vjVdddV) (param $0 i64) (param $1 v128) (param $2 f64) (param $3 f64) (param $4 f64) (param $5 v128)
  (block
   (if
    (i32.eqz
     (global.get $hangLimit)
    )
    (return)
   )
   (global.set $hangLimit
    (i32.sub
     (global.get $hangLimit)
     (i32.const 1)
    )
   )
  )
  (block $label$0
   (call $log-f64
    (loop $label$1 (result f64)
     (block
      (if
       (i32.eqz
        (global.get $hangLimit)
       )
       (return)
      )
      (global.set $hangLimit
       (i32.sub
        (global.get $hangLimit)
        (i32.const 1)
       )
      )
     )
     (block $label$2 (result f64)
      (call $log-i32
       (call $hashMemory)
      )
      (local.get $2)
     )
    )
   )
   (call $log-i32
    (call $hashMemory)
   )
  )
 )
 (func $func_6 (; 6 ;) (type $FUNCSIG$ddVff) (param $0 f64) (param $1 v128) (param $2 f32) (param $3 f32) (result f64)
  (block
   (if
    (i32.eqz
     (global.get $hangLimit)
    )
    (return
     (local.get $0)
    )
   )
   (global.set $hangLimit
    (i32.sub
     (global.get $hangLimit)
     (i32.const 1)
    )
   )
  )
  (block $label$0 (result f64)
   (call $log-i32
    (i32.const 84215045)
   )
   (f64.const 8)
  )
 )
 (func $func_7 (; 7 ;) (type $FUNCSIG$VdVjf) (param $0 f64) (param $1 v128) (param $2 i64) (param $3 f32) (result v128)
  (local $4 i32)
  (local $5 f64)
  (block
   (if
    (i32.eqz
     (global.get $hangLimit)
    )
    (return
     (local.get $1)
    )
   )
   (global.set $hangLimit
    (i32.sub
     (global.get $hangLimit)
     (i32.const 1)
    )
   )
  )
  (local.tee $1
   (local.tee $1
    (v128.const i32x4 0x6d484708 0x13e740fc 0x5849037f 0xe4000000)
   )
  )
 )
 (func $func_7_invoker (; 8 ;) (type $FUNCSIG$v)
  (drop
   (call $func_7
    (f64.const 16986)
    (v128.const i32x4 0x00000000 0x00000010 0xffffe000 0xffffffff)
    (i64.const -12)
    (f32.const 7243)
   )
  )
  (drop
   (call $func_7
    (f64.const -65536)
    (v128.const i32x4 0x00007d1f 0x00000200 0xffff0000 0x7fffffff)
    (i64.const 288230376151711744)
    (f32.const 128)
   )
  )
  (call $log-i32
   (call $hashMemory)
  )
  (drop
   (call $func_7
    (f64.const -nan:0xfffffffffffb5)
    (v128.const i32x4 0x00000000 0x403a0000 0x00000000 0xb8100000)
    (i64.const 66)
    (f32.const -nan:0x7fffb0)
   )
  )
 )
 (func $func_9 (; 9 ;) (type $FUNCSIG$jjiV) (param $0 i64) (param $1 i32) (param $2 v128) (result i64)
  (block
   (if
    (i32.eqz
     (global.get $hangLimit)
    )
    (return
     (local.get $0)
    )
   )
   (global.set $hangLimit
    (i32.sub
     (global.get $hangLimit)
     (i32.const 1)
    )
   )
  )
  (i64.const 8)
 )
 (func $func_10 (; 10 ;) (param $0 v128) (param $1 i64) (param $2 i64) (result v128)
  (local $3 i64)
  (local $4 v128)
  (local $5 f64)
  (local $6 f32)
  (local $7 v128)
  (local $8 f64)
  (local $9 i64)
  (local $10 f32)
  (local $11 i32)
  (local $12 f32)
  (local $13 i32)
  (local $14 v128)
  (local $15 v128)
  (local $16 f64)
  (block
   (if
    (i32.eqz
     (global.get $hangLimit)
    )
    (return
     (v128.const i32x4 0x80000000 0x80000001 0xffffffa1 0x00000000)
    )
   )
   (global.set $hangLimit
    (i32.sub
     (global.get $hangLimit)
     (i32.const 1)
    )
   )
  )
  (block $label$0
   (local.set $8
    (f64.const 5382)
   )
   (if
    (i32.eqz
     (local.tee $11
      (loop $label$72 (result i32)
       (block
        (if
         (i32.eqz
          (global.get $hangLimit)
         )
         (return
          (local.get $15)
         )
        )
        (global.set $hangLimit
         (i32.sub
          (global.get $hangLimit)
          (i32.const 1)
         )
        )
       )
       (i32.const -127)
      )
     )
    )
    (block $label$19
     (block $label$20
      (loop $label$21
       (block
        (if
         (i32.eqz
          (global.get $hangLimit)
         )
         (return
          (v128.const i32x4 0x4598b000 0x4f000000 0x5f000000 0x4d30d0b0)
         )
        )
        (global.set $hangLimit
         (i32.sub
          (global.get $hangLimit)
          (i32.const 1)
         )
        )
       )
       (nop)
      )
      (local.set $11
       (local.tee $13
        (i32.const 3088)
       )
      )
     )
     (return
      (local.get $0)
     )
    )
    (block $label$43
     (loop $label$44
      (block
       (if
        (i32.eqz
         (global.get $hangLimit)
        )
        (return
         (local.get $4)
        )
       )
       (global.set $hangLimit
        (i32.sub
         (global.get $hangLimit)
         (i32.const 1)
        )
       )
      )
      (block
       (block $label$45
        (if
         (i32.eqz
          (i32.const 536870912)
         )
         (local.set $11
          (local.get $13)
         )
         (block $label$46
          (global.set $global$3
           (f32.const 269239296)
          )
          (local.tee $16
           (local.tee $16
            (block $label$47
             (br $label$46)
            )
           )
          )
         )
        )
        (loop $label$48
         (block
          (if
           (i32.eqz
            (global.get $hangLimit)
           )
           (return
            (local.get $4)
           )
          )
          (global.set $hangLimit
           (i32.sub
            (global.get $hangLimit)
            (i32.const 1)
           )
          )
         )
         (block
          (local.set $11
           (local.tee $13
            (i32.const 2097152)
           )
          )
          (br_if $label$48
           (i32.eqz
            (local.tee $11
             (loop $label$49 (result i32)
              (block
               (if
                (i32.eqz
                 (global.get $hangLimit)
                )
                (return
                 (local.get $0)
                )
               )
               (global.set $hangLimit
                (i32.sub
                 (global.get $hangLimit)
                 (i32.const 1)
                )
               )
              )
              (block (result i32)
               (local.set $10
                (local.tee $12
                 (local.tee $6
                  (local.tee $12
                   (local.get $12)
                  )
                 )
                )
               )
               (br_if $label$49
                (i32.const 512)
               )
               (loop $label$50 (result i32)
                (block
                 (if
                  (i32.eqz
                   (global.get $hangLimit)
                  )
                  (return
                   (v128.const i32x4 0x0000002a 0xf801141f 0xfe1c005c 0xf1f27f14)
                  )
                 )
                 (global.set $hangLimit
                  (i32.sub
                   (global.get $hangLimit)
                   (i32.const 1)
                  )
                 )
                )
                (block $label$51 (result i32)
                 (local.set $11
                  (if (result i32)
                   (i32.eqz
                    (if (result i32)
                     (if (result i32)
                      (if (result i32)
                       (i32.eqz
                        (i32.const 170)
                       )
                       (i32.const 170)
                       (i32.const 16)
                      )
                      (local.tee $11
                       (local.get $13)
                      )
                      (block $label$52
                       (local.set $13
                        (local.get $11)
                       )
                       (br $label$44)
                      )
                     )
                     (block $label$53
                      (loop $label$54
                       (block
                        (if
                         (i32.eqz
                          (global.get $hangLimit)
                         )
                         (return
                          (local.get $14)
                         )
                        )
                        (global.set $hangLimit
                         (i32.sub
                          (global.get $hangLimit)
                          (i32.const 1)
                         )
                        )
                       )
                       (block
                        (nop)
                        (br_if $label$54
                         (i32.eqz
                          (local.get $13)
                         )
                        )
                        (local.set $2
                         (i64.const 112)
                        )
                       )
                      )
                      (br $label$49)
                     )
                     (local.tee $11
                      (local.tee $13
                       (local.get $11)
                      )
                     )
                    )
                   )
                   (block $label$55 (result i32)
                    (br_if $label$48
                     (local.tee $11
                      (local.tee $13
                       (local.get $13)
                      )
                     )
                    )
                    (br_if $label$51
                     (local.tee $11
                      (local.tee $13
                       (i32.const -62)
                      )
                     )
                     (if (result i32)
                      (i32.const 86)
                      (block $label$56 (result i32)
                       (br_if $label$56
                        (local.get $13)
                        (i32.const -84)
                       )
                      )
                      (loop $label$57 (result i32)
                       (block
                        (if
                         (i32.eqz
                          (global.get $hangLimit)
                         )
                         (return
                          (local.get $14)
                         )
                        )
                        (global.set $hangLimit
                         (i32.sub
                          (global.get $hangLimit)
                          (i32.const 1)
                         )
                        )
                       )
                       (i32.const 34176355)
                      )
                     )
                    )
                   )
                   (block $label$58
                    (local.set $14
                     (v128.const i32x4 0x0f0c0d04 0x0a020d43 0x1402026d 0x47130847)
                    )
                    (br $label$49)
                   )
                  )
                 )
                 (loop $label$59
                  (block
                   (if
                    (i32.eqz
                     (global.get $hangLimit)
                    )
                    (return
                     (v128.const i32x4 0x00000000 0x43e00000 0x00000000 0xc1f00000)
                    )
                   )
                   (global.set $hangLimit
                    (i32.sub
                     (global.get $hangLimit)
                     (i32.const 1)
                    )
                   )
                  )
                  (block $label$60
                   (loop $label$61
                    (block
                     (if
                      (i32.eqz
                       (global.get $hangLimit)
                      )
                      (return
                       (v128.const i32x4 0x00007272 0x00000000 0x00000001 0x80000000)
                      )
                     )
                     (global.set $hangLimit
                      (i32.sub
                       (global.get $hangLimit)
                       (i32.const 1)
                      )
                     )
                    )
                    (block $label$62
                     (local.set $3
                      (i64.const -2048)
                     )
                     (i64.store16 offset=3 align=1
                      (i32.and
                       (local.tee $13
                        (local.tee $13
                         (local.tee $13
                          (i32.const 64)
                         )
                        )
                       )
                       (i32.const 15)
                      )
                      (local.tee $9
                       (loop $label$63 (result i64)
                        (block
                         (if
                          (i32.eqz
                           (global.get $hangLimit)
                          )
                          (return
                           (v128.const i32x4 0x80000000 0x1e1e141e 0x00008000 0x000e010b)
                          )
                         )
                         (global.set $hangLimit
                          (i32.sub
                           (global.get $hangLimit)
                           (i32.const 1)
                          )
                         )
                        )
                        (block (result i64)
                         (local.set $9
                          (local.get $3)
                         )
                         (br_if $label$63
                          (i32.const -256)
                         )
                         (block $label$64 (result i64)
                          (local.set $16
                           (f64.const 2147483648)
                          )
                          (local.get $1)
                         )
                        )
                       )
                      )
                     )
                    )
                   )
                   (return
                    (local.get $4)
                   )
                  )
                 )
                )
               )
              )
             )
            )
           )
          )
          (local.tee $13
           (local.tee $11
            (block $label$65
             (local.set $16
              (f64.const 5.487989131676445e-139)
             )
             (br $label$44)
            )
           )
          )
         )
        )
       )
       (local.set $5
        (local.get $5)
       )
       (local.set $11
        (local.get $11)
       )
      )
     )
     (unreachable)
    )
   )
  )
 )
 (func $hangLimitInitializer (; 11 ;)
  (global.set $hangLimit
   (i32.const 10)
  )
 )
)
