(module
 (type $none_=>_none (func))
 (type $i32_=>_none (func (param i32)))
 (type $i64_=>_none (func (param i64)))
 (type $f32_=>_none (func (param f32)))
 (type $f64_=>_none (func (param f64)))
 (type $v128_=>_none (func (param v128)))
 (type $funcref_=>_none (func (param funcref)))
 (type $exnref_=>_none (func (param exnref)))
 (type $eqref_=>_none (func (param eqref)))
 (type $none_=>_i32 (func (result i32)))
 (type $anyref_anyref_externref_eqref_v128_=>_i64 (func (param anyref anyref externref eqref v128) (result i64)))
 (type $i31ref_v128_=>_exnref (func (param i31ref v128) (result exnref)))
 (type $i31ref_externref_v128_f32_f32_=>_eqref (func (param i31ref externref v128 f32 f32) (result eqref)))
 (import "fuzzing-support" "log-i32" (func $log-i32 (param i32)))
 (import "fuzzing-support" "log-i64" (func $log-i64 (param i64)))
 (import "fuzzing-support" "log-f32" (func $log-f32 (param f32)))
 (import "fuzzing-support" "log-f64" (func $log-f64 (param f64)))
 (import "fuzzing-support" "log-v128" (func $log-v128 (param v128)))
 (import "fuzzing-support" "log-exnref" (func $log-exnref (param exnref)))
 (memory $0 (shared 16 17))
 (data (i32.const 0) "N\0fN\f5\f9\b1\ff\fa\eb\e5\fe\a7\ec\fb\fc\f4\a6\e4\ea\f0\ae\e3")
 (table $0 3 funcref)
 (elem (i32.const 0) $func_1 $func_1 $func_1)
 (global $global$ (mut eqref) (ref.null eq))
 (global $global$_0 (mut i32) (i32.const 470177031))
 (global $global$_1 (mut f64) (f64.const 2147483647))
 (global $global$_2 (mut (eqref f32 eqref funcref funcref i64)) (tuple.make
  (ref.null eq)
  (f32.const -2147483648)
  (ref.null eq)
  (ref.null func)
  (ref.null func)
  (i64.const -32)
 ))
 (global $global$_3 (mut f32) (f32.const -32769))
 (global $hangLimit (mut i32) (i32.const 10))
 (export "hashMemory" (func $hashMemory))
 (export "memory" (memory $0))
 (export "func" (func $func))
 (export "func_invoker" (func $func_invoker))
 (export "func_1_invoker" (func $func_1_invoker))
 (export "func_2" (func $func_2))
 (export "func_2_invoker" (func $func_2_invoker))
 (export "func_3" (func $func_3))
 (export "hangLimitInitializer" (func $hangLimitInitializer))
 (func $hashMemory (result i32)
  (local $0 i32)
  (block
   (if
    (i32.eqz
     (global.get $hangLimit)
    )
    (return
     (i32.const 69)
    )
   )
   (global.set $hangLimit
    (i32.sub
     (global.get $hangLimit)
     (i32.const 1)
    )
   )
  )
  (block (result i32)
   (local.set $0
    (i32.const 5381)
   )
   (local.set $0
    (i32.xor
     (i32.add
      (i32.shl
       (local.get $0)
       (i32.const 5)
      )
      (local.get $0)
     )
     (i32.load8_u
      (i32.const 0)
     )
    )
   )
   (local.set $0
    (i32.xor
     (i32.add
      (i32.shl
       (local.get $0)
       (i32.const 5)
      )
      (local.get $0)
     )
     (i32.load8_u offset=1
      (i32.const 0)
     )
    )
   )
   (local.set $0
    (i32.xor
     (i32.add
      (i32.shl
       (local.get $0)
       (i32.const 5)
      )
      (local.get $0)
     )
     (i32.load8_u offset=2
      (i32.const 0)
     )
    )
   )
   (local.set $0
    (i32.xor
     (i32.add
      (i32.shl
       (local.get $0)
       (i32.const 5)
      )
      (local.get $0)
     )
     (i32.load8_u offset=3
      (i32.const 0)
     )
    )
   )
   (local.set $0
    (i32.xor
     (i32.add
      (i32.shl
       (local.get $0)
       (i32.const 5)
      )
      (local.get $0)
     )
     (i32.load8_u offset=4
      (i32.const 0)
     )
    )
   )
   (local.set $0
    (i32.xor
     (i32.add
      (i32.shl
       (local.get $0)
       (i32.const 5)
      )
      (local.get $0)
     )
     (i32.load8_u offset=5
      (i32.const 0)
     )
    )
   )
   (local.set $0
    (i32.xor
     (i32.add
      (i32.shl
       (local.get $0)
       (i32.const 5)
      )
      (local.get $0)
     )
     (i32.load8_u offset=6
      (i32.const 0)
     )
    )
   )
   (local.set $0
    (i32.xor
     (i32.add
      (i32.shl
       (local.get $0)
       (i32.const 5)
      )
      (local.get $0)
     )
     (i32.load8_u offset=7
      (i32.const 0)
     )
    )
   )
   (local.set $0
    (i32.xor
     (i32.add
      (i32.shl
       (local.get $0)
       (i32.const 5)
      )
      (local.get $0)
     )
     (i32.load8_u offset=8
      (i32.const 0)
     )
    )
   )
   (local.set $0
    (i32.xor
     (i32.add
      (i32.shl
       (local.get $0)
       (i32.const 5)
      )
      (local.get $0)
     )
     (i32.load8_u offset=9
      (i32.const 0)
     )
    )
   )
   (local.set $0
    (i32.xor
     (i32.add
      (i32.shl
       (local.get $0)
       (i32.const 5)
      )
      (local.get $0)
     )
     (i32.load8_u offset=10
      (i32.const 0)
     )
    )
   )
   (local.set $0
    (i32.xor
     (i32.add
      (i32.shl
       (local.get $0)
       (i32.const 5)
      )
      (local.get $0)
     )
     (i32.load8_u offset=11
      (i32.const 0)
     )
    )
   )
   (local.set $0
    (i32.xor
     (i32.add
      (i32.shl
       (local.get $0)
       (i32.const 5)
      )
      (local.get $0)
     )
     (i32.load8_u offset=12
      (i32.const 0)
     )
    )
   )
   (local.set $0
    (i32.xor
     (i32.add
      (i32.shl
       (local.get $0)
       (i32.const 5)
      )
      (local.get $0)
     )
     (i32.load8_u offset=13
      (i32.const 0)
     )
    )
   )
   (local.set $0
    (i32.xor
     (i32.add
      (i32.shl
       (local.get $0)
       (i32.const 5)
      )
      (local.get $0)
     )
     (i32.load8_u offset=14
      (i32.const 0)
     )
    )
   )
   (local.set $0
    (i32.xor
     (i32.add
      (i32.shl
       (local.get $0)
       (i32.const 5)
      )
      (local.get $0)
     )
     (i32.load8_u offset=15
      (i32.const 0)
     )
    )
   )
   (local.get $0)
  )
 )
 (func $func (param $0 i31ref) (param $1 v128) (result exnref)
  (block
   (if
    (i32.eqz
     (global.get $hangLimit)
    )
    (return
     (ref.null exn)
    )
   )
   (global.set $hangLimit
    (i32.sub
     (global.get $hangLimit)
     (i32.const 1)
    )
   )
  )
  (ref.null exn)
 )
 (func $func_invoker
  (drop
   (call $func
    (i31.new
     (i32.const 1633240409)
    )
    (v128.const i32x4 0xcf800000 0x4c816020 0x3e1a1a1a 0x00000000)
   )
  )
 )
 (func $func_0 (param $0 anyref) (param $1 anyref) (param $2 externref) (param $3 eqref) (param $4 v128) (result i64)
  (local $5 eqref)
  (local $6 (funcref externref i32 f64 f32 i64))
  (local $7 (f32 funcref eqref i32 i31ref i32))
  (local $8 v128)
  (block
   (if
    (i32.eqz
     (global.get $hangLimit)
    )
    (return
     (i64.const 2147483647)
    )
   )
   (global.set $hangLimit
    (i32.sub
     (global.get $hangLimit)
     (i32.const 1)
    )
   )
  )
  (block $label$0 (result i64)
   (nop)
   (br_if $label$0
    (tuple.extract 1
     (tuple.make
      (f64.const -255)
      (i64.const -127)
      (ref.null func)
     )
    )
    (i32.const -24)
   )
  )
 )
 (func $func_1 (param $0 i31ref) (param $1 externref) (param $2 v128) (param $3 f32) (param $4 f32) (result eqref)
  (local $5 v128)
  (local $6 (exnref externref i64 i32 f64 funcref))
  (block
   (if
    (i32.eqz
     (global.get $hangLimit)
    )
    (return
     (ref.null eq)
    )
   )
   (global.set $hangLimit
    (i32.sub
     (global.get $hangLimit)
     (i32.const 1)
    )
   )
  )
  (ref.null eq)
 )
 (func $func_1_invoker
  (drop
   (call $func_1
    (i31.new
     (i32.const 16777216)
    )
    (ref.null extern)
    (v128.const i32x4 0x5d455846 0xcf800000 0x42aa0000 0x46b2a800)
    (f32.const -17592186044416)
    (f32.const -4294967296)
   )
  )
  (call $log-i32
   (call $hashMemory)
  )
  (drop
   (call $func_1
    (i31.new
     (i32.const 73)
    )
    (ref.null extern)
    (v128.const i32x4 0xffff8001 0xffffffff 0x184c764c 0x10105676)
    (f32.const -9223372036854775808)
    (f32.const 129)
   )
  )
  (call $log-i32
   (call $hashMemory)
  )
  (drop
   (call $func_1
    (i31.new
     (i32.const -4096)
    )
    (ref.null extern)
    (v128.const i32x4 0x00000000 0x00000020 0x00000001 0xffc00000)
    (f32.const -nan:0x7fffbd)
    (f32.const -255.8040008544922)
   )
  )
  (call $log-i32
   (call $hashMemory)
  )
  (drop
   (call $func_1
    (i31.new
     (i32.const 1936946035)
    )
    (ref.null extern)
    (v128.const i32x4 0xff010001 0x4e07ffff 0x00060002 0xff00001f)
    (f32.const 6918)
    (f32.const 4.921484278772694e-25)
   )
  )
  (call $log-i32
   (call $hashMemory)
  )
 )
 (func $func_2 (param $0 funcref)
  (local $1 exnref)
  (local $2 (f64 externref f32 f32 v128 eqref))
  (block
   (if
    (i32.eqz
     (global.get $hangLimit)
    )
    (return)
   )
   (global.set $hangLimit
    (i32.sub
     (global.get $hangLimit)
     (i32.const 1)
    )
   )
  )
  (block $label$0
   (f32.store offset=3 align=2
    (i32.and
     (i32.const 15)
     (i32.const 15)
    )
    (f32.const 66)
   )
   (return)
  )
 )
 (func $func_2_invoker
  (call $func_2
   (ref.null func)
  )
 )
 (func $func_3 (param $0 eqref)
  (local $1 eqref)
  (local $2 funcref)
  (local $3 funcref)
  (block
   (if
    (i32.eqz
     (global.get $hangLimit)
    )
    (return)
   )
   (global.set $hangLimit
    (i32.sub
     (global.get $hangLimit)
     (i32.const 1)
    )
   )
  )
  (block $label$0
   (atomic.fence)
   (if
    (i64.gt_s
     (i64.const 379)
     (i64.add
      (i32.atomic.load offset=22
       (i32.and
        (i32.atomic.load offset=22
         (i32.and
          (select
           (block $label$1 (result i32)
            (block $label$2
             (memory.init 0
              (i32.and
               (ref.eq
                (ref.null eq)
                (local.get $0)
               )
               (i32.const 15)
              )
              (i32.const 8)
              (i32.const 9)
             )
             (if
              (i32.eqz
               (i32.const -75)
              )
              (block $label$3
               (nop)
               (nop)
              )
              (nop)
             )
            )
            (i32.const 1903327608)
           )
           (select
            (loop $label$6 (result i32)
             (block
              (if
               (i32.eqz
                (global.get $hangLimit)
               )
               (return)
              )
              (global.set $hangLimit
               (i32.sub
                (global.get $hangLimit)
                (i32.const 1)
               )
              )
             )
             (block $label$7 (result i32)
              (loop $label$8
               (block
                (if
                 (i32.eqz
                  (global.get $hangLimit)
                 )
                 (return)
                )
                (global.set $hangLimit
                 (i32.sub
                  (global.get $hangLimit)
                  (i32.const 1)
                 )
                )
               )
               (block
                (nop)
                (br_if $label$8
                 (i32.eqz
                  (i32.const -2147483648)
                 )
                )
                (nop)
               )
              )
              (i32.const 76)
             )
            )
            (global.get $global$_0)
            (if
             (i32.const -96)
             (block $label$4
              (f32.store offset=3
               (i32.and
                (i32.const 4124)
                (i32.const 15)
               )
               (f32.const -8192.1474609375)
              )
              (return)
             )
             (block $label$5
              (memory.copy
               (i32.and
                (i32.const 32768)
                (i32.const 15)
               )
               (i32.and
                (i32.const 2087520520)
                (i32.const 15)
               )
               (i32.const -131072)
              )
              (return)
             )
            )
           )
           (i32.const 85)
          )
          (i32.const 15)
         )
        )
        (i32.const 15)
       )
      )
      (i64.const 125)
     )
    )
    (block $label$9
     (loop $label$10
      (block
       (if
        (i32.eqz
         (global.get $hangLimit)
        )
        (return)
       )
       (global.set $hangLimit
        (i32.sub
         (global.get $hangLimit)
         (i32.const 1)
        )
       )
      )
      (block
       (local.set $1
        (tuple.extract 2
         (tuple.make
          (f32.const 353703200)
          (f32.const 31868)
          (ref.null eq)
          (v128.const i32x4 0x56565656 0xff7fffff 0x41000000 0x41300000)
          (i32.const 135290122)
          (i31.new
           (i32.const 1396855106)
          )
         )
        )
       )
       (br_if $label$10
        (i32.eqz
         (i32.const -2147483646)
        )
       )
       (i32.atomic.store offset=22
        (i32.and
         (i32.load16_u offset=22
          (i32.and
           (i32.const 521404930)
           (i32.const 15)
          )
         )
         (i32.const 15)
        )
        (i32.atomic.load offset=3
         (i32.and
          (atomic.notify offset=4
           (i32.and
            (if (result i32)
             (i32.eqz
              (i32.const 1)
             )
             (block $label$11
              (br $label$10)
             )
             (block $label$12 (result i32)
              (i32.store16 offset=2
               (i32.and
                (i32.const 65535)
                (i32.const 15)
               )
               (select
                (i32.const -2147483648)
                (i32.const 16)
                (i32.const 8)
               )
              )
              (i64.le_u
               (if (result i64)
                (i32.const 1464489052)
                (i64.atomic.load8_u offset=2
                 (i32.and
                  (global.get $global$_0)
                  (i32.const 15)
                 )
                )
                (i64.const 942112219034230640)
               )
               (loop $label$13 (result i64)
                (block
                 (if
                  (i32.eqz
                   (global.get $hangLimit)
                  )
                  (return)
                 )
                 (global.set $hangLimit
                  (i32.sub
                   (global.get $hangLimit)
                   (i32.const 1)
                  )
                 )
                )
                (block (result i64)
                 (if
                  (i32.eqz
                   (i32.const 134217728)
                  )
                  (block $label$14
                   (nop)
                   (f64.store offset=22 align=4
                    (i32.and
                     (loop $label$15 (result i32)
                      (block
                       (if
                        (i32.eqz
                         (global.get $hangLimit)
                        )
                        (return)
                       )
                       (global.set $hangLimit
                        (i32.sub
                         (global.get $hangLimit)
                         (i32.const 1)
                        )
                       )
                      )
                      (block (result i32)
                       (nop)
                       (br_if $label$15
                        (i32.const 101189382)
                       )
                       (i32.const -127)
                      )
                     )
                     (i32.const 15)
                    )
                    (select
                     (f64.const -nan:0xfffffffffffa1)
                     (f64.const -0.394)
                     (i32.const -127)
                    )
                   )
                  )
                  (block $label$16
                   (f32.store offset=4 align=1
                    (i32.and
                     (block $label$17
                      (nop)
                      (br $label$16)
                     )
                     (i32.const 15)
                    )
                    (f32.const -2048)
                   )
                   (loop $label$18
                    (block
                     (if
                      (i32.eqz
                       (global.get $hangLimit)
                      )
                      (return)
                     )
                     (global.set $hangLimit
                      (i32.sub
                       (global.get $hangLimit)
                       (i32.const 1)
                      )
                     )
                    )
                    (block
                     (block $label$19
                      (local.set $2
                       (ref.null func)
                      )
                      (nop)
                     )
                     (br_if $label$18
                      (i32.eqz
                       (i32.const 1246300445)
                      )
                     )
                     (drop
                      (tuple.make
                       (ref.null func)
                       (ref.null extern)
                       (ref.null any)
                       (v128.const i32x4 0x6c15621e 0x74813332 0x00f8da01 0x001644ae)
                       (ref.null exn)
                      )
                     )
                    )
                   )
                  )
                 )
                 (br_if $label$13
                  (i32.eqz
                   (global.get $global$_0)
                  )
                 )
                 (i64.const -4611686018427387904)
                )
               )
              )
             )
            )
            (i32.const 15)
           )
           (i32.const 1111245614)
          )
          (i32.const 15)
         )
        )
       )
      )
     )
     (return)
    )
    (block $label$20
     (nop)
     (i64.shr_u
      (loop $label$40
       (block
        (if
         (i32.eqz
          (global.get $hangLimit)
         )
         (return)
        )
        (global.set $hangLimit
         (i32.sub
          (global.get $hangLimit)
          (i32.const 1)
         )
        )
       )
       (block
        (block $label$41
         (call $log-i32
          (i32.const -66)
         )
        )
        (br_if $label$40
         (i32.eqz
          (loop $label$42 (result i32)
           (block
            (if
             (i32.eqz
              (global.get $hangLimit)
             )
             (return)
            )
            (global.set $hangLimit
             (i32.sub
              (global.get $hangLimit)
              (i32.const 1)
             )
            )
           )
           (block (result i32)
            (block $label$43
             (nop)
             (drop
              (if (result f64)
               (i32.eqz
                (block $label$44
                 (call $log-i32
                  (call $hashMemory)
                 )
                 (br $label$40)
                )
               )
               (tuple.extract 0
                (tuple.make
                 (f64.const 18446744073709551615)
                 (i64.const 4294967222)
                 (i32.const 847216455)
                )
               )
               (block $label$45
                (br $label$40)
               )
              )
             )
            )
            (br_if $label$42
             (i32.eqz
              (if (result i32)
               (loop $label$46
                (block
                 (if
                  (i32.eqz
                   (global.get $hangLimit)
                  )
                  (return)
                 )
                 (global.set $hangLimit
                  (i32.sub
                   (global.get $hangLimit)
                   (i32.const 1)
                  )
                 )
                )
                (block $label$47
                 (nop)
                 (br $label$42)
                )
               )
               (i32.const 0)
               (i32.const 2376257)
              )
             )
            )
            (i8x16.all_true
             (v128.const i32x4 0xff7fff7f 0x00ffffff 0xfdff0c03 0xffe5fff7)
            )
           )
          )
         )
        )
        (block $label$48
         (br_if $label$40
          (i32.const -32768)
         )
         (return)
        )
       )
      )
      (loop $label$49
       (block
        (if
         (i32.eqz
          (global.get $hangLimit)
         )
         (return)
        )
        (global.set $hangLimit
         (i32.sub
          (global.get $hangLimit)
          (i32.const 1)
         )
        )
       )
       (block
        (block $label$50
         (nop)
         (block $label$51
          (drop
           (ref.func $func_2)
          )
          (br_if $label$51
           (f64.eq
            (f64.const 4398046511104)
            (global.get $global$_1)
           )
          )
         )
        )
        (br_if $label$49
         (i32.eqz
          (loop $label$52 (result i32)
           (block
            (if
             (i32.eqz
              (global.get $hangLimit)
             )
             (return)
            )
            (global.set $hangLimit
             (i32.sub
              (global.get $hangLimit)
              (i32.const 1)
             )
            )
           )
           (block (result i32)
            (block $label$53
             (if
              (i32.eqz
               (i31.get_s
                (i31.new
                 (i32.const -93)
                )
               )
              )
              (br_if $label$49
               (i32.eqz
                (i32.const 353711929)
               )
              )
              (block $label$54
               (call $log-i32
                (call $hashMemory)
               )
               (if
                (i32.eqz
                 (i32.const 511508602)
                )
                (block $label$55
                 (br_if $label$53
                  (i32.eqz
                   (i31.get_u
                    (i31.new
                     (i32.const -512)
                    )
                   )
                  )
                 )
                 (loop $label$56
                  (block
                   (if
                    (i32.eqz
                     (global.get $hangLimit)
                    )
                    (return)
                   )
                   (global.set $hangLimit
                    (i32.sub
                     (global.get $hangLimit)
                     (i32.const 1)
                    )
                   )
                  )
                  (block
                   (call $log-i32
                    (loop $label$57 (result i32)
                     (block
                      (if
                       (i32.eqz
                        (global.get $hangLimit)
                       )
                       (return)
                      )
                      (global.set $hangLimit
                       (i32.sub
                        (global.get $hangLimit)
                        (i32.const 1)
                       )
                      )
                     )
                     (block $label$58 (result i32)
                      (ref.eq
                       (i31.new
                        (i32.const -28)
                       )
                       (local.tee $1
                        (local.get $1)
                       )
                      )
                     )
                    )
                   )
                   (br_if $label$56
                    (i32.eqz
                     (loop $label$59 (result i32)
                      (block
                       (if
                        (i32.eqz
                         (global.get $hangLimit)
                        )
                        (return)
                       )
                       (global.set $hangLimit
                        (i32.sub
                         (global.get $hangLimit)
                         (i32.const 1)
                        )
                       )
                      )
                      (block (result i32)
                       (br_if $label$54
                        (i32.eqz
                         (i32.const 3)
                        )
                       )
                       (br_if $label$59
                        (i32.const -32769)
                       )
                       (i32.const 337444946)
                      )
                     )
                    )
                   )
                   (nop)
                  )
                 )
                )
                (block $label$60
                 (nop)
                )
               )
              )
             )
             (nop)
            )
            (br_if $label$52
             (i32.eqz
              (i32.const 127)
             )
            )
            (i32.const 524288)
           )
          )
         )
        )
        (return)
       )
      )
     )
    )
   )
  )
 )
 (func $hangLimitInitializer
  (global.set $hangLimit
   (i32.const 10)
  )
 )
)
