(module
 (type $0 (func (param f64 f64) (result f64)))
 (type $1 (func (param f32 f32) (result f32)))
 (type $2 (func (param i32 i32) (result i32)))
 (type $3 (func (param f64) (result f64)))
 (type $4 (func (param f32) (result f32)))
 (type $5 (func (param i32) (result i32)))
 (func $copysign64 (; 0 ;) (type $0) (param $0 f64) (param $1 f64) (result f64)
  (f64.reinterpret/i64
   (i64.or
    (i64.and
     (i64.reinterpret/f64
      (get_local $0)
     )
     (i64.const 9223372036854775807)
    )
    (i64.and
     (i64.reinterpret/f64
      (get_local $1)
     )
     (i64.const -9223372036854775808)
    )
   )
  )
 )
 (func $copysign32 (; 1 ;) (type $1) (param $0 f32) (param $1 f32) (result f32)
  (f32.reinterpret/i32
   (i32.or
    (i32.and
     (i32.reinterpret/f32
      (get_local $0)
     )
     (i32.const 2147483647)
    )
    (i32.and
     (i32.reinterpret/f32
      (get_local $1)
     )
     (i32.const -2147483648)
    )
   )
  )
 )
 (func $rotl32 (; 2 ;) (type $2) (param $0 i32) (param $1 i32) (result i32)
  (call $__wasm_rotl_i32
   (get_local $0)
   (get_local $1)
  )
 )
 (func $rotr32 (; 3 ;) (type $2) (param $0 i32) (param $1 i32) (result i32)
  (call $__wasm_rotr_i32
   (get_local $0)
   (get_local $1)
  )
 )
 (func $nearest64 (; 4 ;) (type $3) (param $0 f64) (result f64)
  (call $__wasm_nearest_f64
   (get_local $0)
  )
 )
 (func $nearest32 (; 5 ;) (type $4) (param $0 f32) (result f32)
  (call $__wasm_nearest_f32
   (get_local $0)
  )
 )
 (func $trunc64 (; 6 ;) (type $3) (param $0 f64) (result f64)
  (call $__wasm_trunc_f64
   (get_local $0)
  )
 )
 (func $trunc32 (; 7 ;) (type $4) (param $0 f32) (result f32)
  (call $__wasm_trunc_f32
   (get_local $0)
  )
 )
 (func $popcnt32 (; 8 ;) (type $5) (param $0 i32) (result i32)
  (call $__wasm_popcnt_i32
   (get_local $0)
  )
 )
 (func $ctz32 (; 9 ;) (type $5) (param $0 i32) (result i32)
  (call $__wasm_ctz_i32
   (get_local $0)
  )
 )
 (func $__wasm_ctz_i32 (; 10 ;) (param $var$0 i32) (result i32)
  (if
   (get_local $var$0)
   (return
    (i32.sub
     (i32.const 31)
     (i32.clz
      (i32.xor
       (i32.add
        (get_local $var$0)
        (i32.const -1)
       )
       (get_local $var$0)
      )
     )
    )
   )
  )
  (i32.const 32)
 )
 (func $__wasm_nearest_f32 (; 11 ;) (param $var$0 f32) (result f32)
  (local $var$1 f32)
  (local $var$2 f32)
  (if
   (i32.eqz
    (f32.lt
     (tee_local $var$2
      (f32.sub
       (get_local $var$0)
       (tee_local $var$1
        (f32.floor
         (get_local $var$0)
        )
       )
      )
     )
     (f32.const 0.5)
    )
   )
   (block $block
    (set_local $var$0
     (f32.ceil
      (get_local $var$0)
     )
    )
    (if
     (f32.gt
      (get_local $var$2)
      (f32.const 0.5)
     )
     (return
      (get_local $var$0)
     )
    )
    (set_local $var$1
     (select
      (get_local $var$1)
      (get_local $var$0)
      (f32.eq
       (f32.sub
        (tee_local $var$2
         (f32.mul
          (get_local $var$1)
          (f32.const 0.5)
         )
        )
        (f32.floor
         (get_local $var$2)
        )
       )
       (f32.const 0)
      )
     )
    )
   )
  )
  (get_local $var$1)
 )
 (func $__wasm_nearest_f64 (; 12 ;) (param $var$0 f64) (result f64)
  (local $var$1 f64)
  (local $var$2 f64)
  (if
   (i32.eqz
    (f64.lt
     (tee_local $var$2
      (f64.sub
       (get_local $var$0)
       (tee_local $var$1
        (f64.floor
         (get_local $var$0)
        )
       )
      )
     )
     (f64.const 0.5)
    )
   )
   (block $block
    (set_local $var$0
     (f64.ceil
      (get_local $var$0)
     )
    )
    (if
     (f64.gt
      (get_local $var$2)
      (f64.const 0.5)
     )
     (return
      (get_local $var$0)
     )
    )
    (set_local $var$1
     (select
      (get_local $var$1)
      (get_local $var$0)
      (f64.eq
       (f64.sub
        (tee_local $var$2
         (f64.mul
          (get_local $var$1)
          (f64.const 0.5)
         )
        )
        (f64.floor
         (get_local $var$2)
        )
       )
       (f64.const 0)
      )
     )
    )
   )
  )
  (get_local $var$1)
 )
 (func $__wasm_popcnt_i32 (; 13 ;) (param $var$0 i32) (result i32)
  (local $var$1 i32)
  (block $label$1 (result i32)
   (loop $label$2
    (drop
     (br_if $label$1
      (get_local $var$1)
      (i32.eqz
       (get_local $var$0)
      )
     )
    )
    (set_local $var$0
     (i32.and
      (get_local $var$0)
      (i32.sub
       (get_local $var$0)
       (i32.const 1)
      )
     )
    )
    (set_local $var$1
     (i32.add
      (get_local $var$1)
      (i32.const 1)
     )
    )
    (br $label$2)
   )
  )
 )
 (func $__wasm_rotl_i32 (; 14 ;) (param $var$0 i32) (param $var$1 i32) (result i32)
  (local $var$2 i32)
  (i32.or
   (i32.shl
    (i32.and
     (i32.shr_u
      (i32.const -1)
      (tee_local $var$2
       (i32.and
        (get_local $var$1)
        (i32.const 31)
       )
      )
     )
     (get_local $var$0)
    )
    (get_local $var$2)
   )
   (i32.shr_u
    (i32.and
     (i32.shl
      (i32.const -1)
      (tee_local $var$1
       (i32.and
        (i32.sub
         (i32.const 0)
         (get_local $var$1)
        )
        (i32.const 31)
       )
      )
     )
     (get_local $var$0)
    )
    (get_local $var$1)
   )
  )
 )
 (func $__wasm_rotr_i32 (; 15 ;) (param $var$0 i32) (param $var$1 i32) (result i32)
  (local $var$2 i32)
  (i32.or
   (i32.shr_u
    (i32.and
     (i32.shl
      (i32.const -1)
      (tee_local $var$2
       (i32.and
        (get_local $var$1)
        (i32.const 31)
       )
      )
     )
     (get_local $var$0)
    )
    (get_local $var$2)
   )
   (i32.shl
    (i32.and
     (i32.shr_u
      (i32.const -1)
      (tee_local $var$1
       (i32.and
        (i32.sub
         (i32.const 0)
         (get_local $var$1)
        )
        (i32.const 31)
       )
      )
     )
     (get_local $var$0)
    )
    (get_local $var$1)
   )
  )
 )
 (func $__wasm_trunc_f32 (; 16 ;) (param $var$0 f32) (result f32)
  (select
   (f32.ceil
    (get_local $var$0)
   )
   (f32.floor
    (get_local $var$0)
   )
   (f32.lt
    (get_local $var$0)
    (f32.const 0)
   )
  )
 )
 (func $__wasm_trunc_f64 (; 17 ;) (param $var$0 f64) (result f64)
  (select
   (f64.ceil
    (get_local $var$0)
   )
   (f64.floor
    (get_local $var$0)
   )
   (f64.lt
    (get_local $var$0)
    (f64.const 0)
   )
  )
 )
)
