(module
  (func $basic (param $p i32)
    (local $x i32)
    (set_local $x (i32.const 10))
    (call $basic (i32.add (get_local $x) (get_local $x)))
  )
  (func $split (param $p i32)
    (local $x i32)
    (if (i32.const 1)
      (set_local $x (i32.const 10))
    )
    (call $basic (i32.add (get_local $x) (get_local $x)))
  )
  (func $split-but-join (param $p i32)
    (local $x i32)
    (if (i32.const 1)
      (set_local $x (i32.const 10))
      (set_local $x (i32.const 10))
    )
    (call $basic (i32.add (get_local $x) (get_local $x)))
  )
  (func $split-but-join-different (param $p i32)
    (local $x i32)
    (if (i32.const 1)
      (set_local $x (i32.const 10))
      (set_local $x (i32.const 20))
    )
    (call $basic (i32.add (get_local $x) (get_local $x)))
  )
  (func $split-but-join-different-b (param $p i32)
    (local $x i32)
    (if (i32.const 1)
      (set_local $x (i32.const 10))
      (set_local $x (get_local $p))
    )
    (call $basic (i32.add (get_local $x) (get_local $x)))
  )
  (func $split-but-join-init0 (param $p i32)
    (local $x i32)
    (if (i32.const 1)
      (set_local $x (i32.const 0))
    )
    (call $basic (i32.add (get_local $x) (get_local $x)))
  )
  (func $later (param $p i32)
    (local $x i32)
    (set_local $x (i32.const 10))
    (call $basic (i32.add (get_local $x) (get_local $x)))
    (set_local $x (i32.const 22))
    (call $basic (i32.add (get_local $x) (get_local $x)))
    (set_local $x (i32.const 39))
  )
)

