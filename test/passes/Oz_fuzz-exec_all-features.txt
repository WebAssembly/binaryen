[fuzz-exec] calling structs
[LoggingExternalInterface logging 0]
[LoggingExternalInterface logging 42]
[LoggingExternalInterface logging 100]
[LoggingExternalInterface logging 100]
[fuzz-exec] calling arrays
[LoggingExternalInterface logging 50]
[LoggingExternalInterface logging 42]
[LoggingExternalInterface logging 128]
[LoggingExternalInterface logging -128]
[LoggingExternalInterface logging 42]
[fuzz-exec] calling br_on_cast
[LoggingExternalInterface logging 3]
[fuzz-exec] calling br_on_failed_cast-1
[LoggingExternalInterface logging 1]
[fuzz-exec] calling br_on_failed_cast-2
[LoggingExternalInterface logging 1]
[LoggingExternalInterface logging 999]
[fuzz-exec] calling cast-null-anyref-to-gc
[LoggingExternalInterface logging 0]
[fuzz-exec] calling br-on_non_null
[fuzz-exec] calling br-on_non_null-2
[LoggingExternalInterface logging 1]
[trap unreachable]
[fuzz-exec] calling ref-as-func-of-func
[fuzz-exec] calling cast-on-func
[LoggingExternalInterface logging 0]
[LoggingExternalInterface logging 1337]
[LoggingExternalInterface logging 1]
[trap cast error]
[fuzz-exec] calling array-alloc-failure
[host limit allocation failure]
[fuzz-exec] calling init-array-packed
[fuzz-exec] note result: init-array-packed => 213
[fuzz-exec] calling array-copy
[LoggingExternalInterface logging 10]
[LoggingExternalInterface logging 10]
[LoggingExternalInterface logging 99]
[LoggingExternalInterface logging 0]
[LoggingExternalInterface logging 10]
[fuzz-exec] calling array.new_fixed
[LoggingExternalInterface logging 2]
[LoggingExternalInterface logging 42]
[LoggingExternalInterface logging 50]
[fuzz-exec] calling array.new_fixed-packed
[LoggingExternalInterface logging 8]
[fuzz-exec] calling static-casts
[LoggingExternalInterface logging 1]
[LoggingExternalInterface logging 0]
[LoggingExternalInterface logging 0]
[LoggingExternalInterface logging 1]
[LoggingExternalInterface logging 0]
[LoggingExternalInterface logging 1]
[fuzz-exec] calling static-br_on_cast
[LoggingExternalInterface logging 3]
[fuzz-exec] calling static-br_on_cast_fail
[LoggingExternalInterface logging -2]
(module
 (type $bytes (array (mut i8)))
 (type $void_func (func))
 (type $struct (sub (struct (field (mut i32)))))
 (type $3 (func (param i32)))
 (type $extendedstruct (sub $struct (struct (field (mut i32)) (field f64))))
 (type $int_func (func (result i32)))
 (import "fuzzing-support" "log-i32" (func $log (type $3) (param i32)))
 (export "structs" (func $structs))
 (export "arrays" (func $arrays))
 (export "br_on_cast" (func $br_on_cast))
 (export "br_on_failed_cast-1" (func $br_on_failed_cast-1))
 (export "br_on_failed_cast-2" (func $br_on_failed_cast-2))
 (export "cast-null-anyref-to-gc" (func $cast-null-anyref-to-gc))
 (export "br-on_non_null" (func $br-on_non_null))
 (export "br-on_non_null-2" (func $br-on_non_null-2))
 (export "ref-as-func-of-func" (func $br-on_non_null))
 (export "cast-on-func" (func $cast-on-func))
 (export "array-alloc-failure" (func $br-on_non_null))
 (export "init-array-packed" (func $init-array-packed))
 (export "array-copy" (func $array-copy))
 (export "array.new_fixed" (func $array.new_fixed))
 (export "array.new_fixed-packed" (func $array.new_fixed-packed))
 (export "static-casts" (func $static-casts))
 (export "static-br_on_cast" (func $br_on_cast))
 (export "static-br_on_cast_fail" (func $static-br_on_cast_fail))
 (func $structs (type $void_func) (; has Stack IR ;)
  (local $0 i32)
  (call $log
   (i32.const 0)
  )
  (call $log
   (i32.const 42)
  )
  (call $log
   (local.tee $0
    (i32.const 100)
   )
  )
  (call $log
   (i32.const 100)
  )
 )
 (func $arrays (type $void_func) (; has Stack IR ;)
  (local $0 (ref $bytes))
  (local.set $0
   (array.new $bytes
    (i32.const 42)
    (i32.const 50)
   )
  )
  (call $log
   (i32.const 50)
  )
  (call $log
   (array.get_u $bytes
    (local.get $0)
    (i32.const 10)
   )
  )
  (array.set $bytes
   (local.get $0)
   (i32.const 10)
   (i32.const 128)
  )
  (call $log
   (array.get_u $bytes
    (local.get $0)
    (i32.const 10)
   )
  )
  (call $log
   (array.get_s $bytes
    (local.get $0)
    (i32.const 10)
   )
  )
  (call $log
   (array.get_s $bytes
    (local.get $0)
    (i32.const 20)
   )
  )
 )
 (func $br_on_cast (type $void_func) (; has Stack IR ;)
  (call $log
   (i32.const 3)
  )
 )
 (func $br_on_failed_cast-1 (type $void_func) (; has Stack IR ;)
  (local $0 (ref $struct))
  (local.set $0
   (struct.new_default $struct)
  )
  (drop
   (block $any (result (ref null $struct))
    (call $log
     (i32.const 1)
    )
    (drop
     (br_on_cast_fail $any (ref $struct) (ref $extendedstruct)
      (local.get $0)
     )
    )
    (call $log
     (i32.const 999)
    )
    (ref.null none)
   )
  )
 )
 (func $br_on_failed_cast-2 (type $void_func) (; has Stack IR ;)
  (call $log
   (i32.const 1)
  )
  (call $log
   (i32.const 999)
  )
 )
 (func $cast-null-anyref-to-gc (type $void_func) (; has Stack IR ;)
  (call $log
   (i32.const 0)
  )
 )
 (func $br-on_non_null (type $void_func) (; has Stack IR ;)
  (nop)
 )
 (func $br-on_non_null-2 (type $void_func) (; has Stack IR ;)
  (drop
   (block
    (call $log
     (i32.const 1)
    )
    (unreachable)
   )
  )
 )
 (func $cast-on-func (type $void_func) (; has Stack IR ;)
  (call $log
   (i32.const 0)
  )
  (call $log
   (i32.const 1337)
  )
  (call $log
   (i32.const 1)
  )
  (unreachable)
 )
 (func $init-array-packed (type $int_func) (; has Stack IR ;) (result i32)
  (array.get_u $bytes
   (array.new $bytes
    (i32.const -43)
    (i32.const 50)
   )
   (i32.const 10)
  )
 )
 (func $array-copy (type $void_func) (; has Stack IR ;)
  (local $0 (ref $bytes))
  (local $1 (ref $bytes))
  (array.set $bytes
   (local.tee $1
    (array.new_default $bytes
     (i32.const 200)
    )
   )
   (i32.const 42)
   (i32.const 99)
  )
  (call $log
   (array.get_u $bytes
    (local.tee $0
     (array.new $bytes
      (i32.const 10)
      (i32.const 100)
     )
    )
    (i32.const 10)
   )
  )
  (array.copy $bytes $bytes
   (local.get $0)
   (i32.const 10)
   (local.get $1)
   (i32.const 42)
   (i32.const 2)
  )
  (call $log
   (array.get_u $bytes
    (local.get $0)
    (i32.const 9)
   )
  )
  (call $log
   (array.get_u $bytes
    (local.get $0)
    (i32.const 10)
   )
  )
  (call $log
   (array.get_u $bytes
    (local.get $0)
    (i32.const 11)
   )
  )
  (call $log
   (array.get_u $bytes
    (local.get $0)
    (i32.const 12)
   )
  )
 )
 (func $array.new_fixed (type $void_func) (; has Stack IR ;)
  (local $0 i32)
  (local $1 i32)
  (local.set $0
   (i32.const 42)
  )
  (local.set $1
   (i32.const 50)
  )
  (call $log
   (i32.const 2)
  )
  (call $log
   (i32.const 42)
  )
  (call $log
   (i32.const 50)
  )
 )
 (func $array.new_fixed-packed (type $void_func) (; has Stack IR ;)
  (call $log
   (i32.const 8)
  )
 )
 (func $static-casts (type $void_func) (; has Stack IR ;)
  (call $log
   (i32.const 1)
  )
  (call $log
   (i32.const 0)
  )
  (call $log
   (i32.const 0)
  )
  (call $log
   (i32.const 1)
  )
  (call $log
   (i32.const 0)
  )
  (call $log
   (i32.const 1)
  )
 )
 (func $static-br_on_cast_fail (type $void_func) (; has Stack IR ;)
  (call $log
   (i32.const -2)
  )
 )
)
[fuzz-exec] calling structs
[LoggingExternalInterface logging 0]
[LoggingExternalInterface logging 42]
[LoggingExternalInterface logging 100]
[LoggingExternalInterface logging 100]
[fuzz-exec] calling arrays
[LoggingExternalInterface logging 50]
[LoggingExternalInterface logging 42]
[LoggingExternalInterface logging 128]
[LoggingExternalInterface logging -128]
[LoggingExternalInterface logging 42]
[fuzz-exec] calling br_on_cast
[LoggingExternalInterface logging 3]
[fuzz-exec] calling br_on_failed_cast-1
[LoggingExternalInterface logging 1]
[fuzz-exec] calling br_on_failed_cast-2
[LoggingExternalInterface logging 1]
[LoggingExternalInterface logging 999]
[fuzz-exec] calling cast-null-anyref-to-gc
[LoggingExternalInterface logging 0]
[fuzz-exec] calling br-on_non_null
[fuzz-exec] calling br-on_non_null-2
[LoggingExternalInterface logging 1]
[trap unreachable]
[fuzz-exec] calling ref-as-func-of-func
[fuzz-exec] calling cast-on-func
[LoggingExternalInterface logging 0]
[LoggingExternalInterface logging 1337]
[LoggingExternalInterface logging 1]
[trap unreachable]
[fuzz-exec] calling array-alloc-failure
[fuzz-exec] calling init-array-packed
[fuzz-exec] note result: init-array-packed => 213
[fuzz-exec] calling array-copy
[LoggingExternalInterface logging 10]
[LoggingExternalInterface logging 10]
[LoggingExternalInterface logging 99]
[LoggingExternalInterface logging 0]
[LoggingExternalInterface logging 10]
[fuzz-exec] calling array.new_fixed
[LoggingExternalInterface logging 2]
[LoggingExternalInterface logging 42]
[LoggingExternalInterface logging 50]
[fuzz-exec] calling array.new_fixed-packed
[LoggingExternalInterface logging 8]
[fuzz-exec] calling static-casts
[LoggingExternalInterface logging 1]
[LoggingExternalInterface logging 0]
[LoggingExternalInterface logging 0]
[LoggingExternalInterface logging 1]
[LoggingExternalInterface logging 0]
[LoggingExternalInterface logging 1]
[fuzz-exec] calling static-br_on_cast
[LoggingExternalInterface logging 3]
[fuzz-exec] calling static-br_on_cast_fail
[LoggingExternalInterface logging -2]
ignoring comparison of ExecutionResults!
[fuzz-exec] calling foo
[host limit allocation failure]
(module
 (type $0 (func (result i32)))
 (export "foo" (func $foo))
 (func $foo (type $0) (; has Stack IR ;) (result i32)
  (i32.const 0)
 )
)
[fuzz-exec] calling foo
[fuzz-exec] note result: foo => 0
ignoring comparison of ExecutionResults!
