(module
 (type $FUNCSIG$v (func))
 (type $FUNCSIG$i (func (result i32)))
 (type $FUNCSIG$vi (func (param i32)))
 (import "env" "import" (func $import))
 (import "env" "import2" (func $import2 (result i32)))
 (import "env" "import3" (func $import3 (param i32)))
 (memory $0 1 2)
 (global $__bysyncify_state (mut i32) (i32.const 0))
 (global $__bysyncify_data (mut i32) (i32.const 0))
 (export "bysyncify_start_unwind" (func $bysyncify_start_unwind))
 (export "bysyncify_stop_unwind" (func $bysyncify_stop_unwind))
 (export "bysyncify_start_rewind" (func $bysyncify_start_rewind))
 (export "bysyncify_stop_rewind" (func $bysyncify_stop_rewind))
 (func $calls-import (; 3 ;) (type $FUNCSIG$v)
  (call $import)
 )
 (func $calls-import2-drop (; 4 ;) (type $FUNCSIG$v)
  (local $0 i32)
  (local.set $0
   (call $import2)
  )
 )
 (func $calls-import2-if-else (; 5 ;) (type $FUNCSIG$vi) (param $x i32)
  (local $1 i32)
  (if
   (local.get $x)
   (call $import3
    (i32.const 1)
   )
   (call $import3
    (i32.const 2)
   )
  )
 )
 (func $bysyncify_start_unwind (; 6 ;) (param $0 i32)
  (if
   (i32.gt_u
    (i32.load
     (local.get $0)
    )
    (i32.load offset=4
     (local.get $0)
    )
   )
   (unreachable)
  )
  (global.set $__bysyncify_state
   (i32.const 1)
  )
  (global.set $__bysyncify_data
   (local.get $0)
  )
 )
 (func $bysyncify_stop_unwind (; 7 ;)
  (global.set $__bysyncify_state
   (i32.const 0)
  )
 )
 (func $bysyncify_start_rewind (; 8 ;) (param $0 i32)
  (if
   (i32.gt_u
    (i32.load
     (local.get $0)
    )
    (i32.load offset=4
     (local.get $0)
    )
   )
   (unreachable)
  )
  (global.set $__bysyncify_state
   (i32.const 2)
  )
  (global.set $__bysyncify_data
   (local.get $0)
  )
 )
 (func $bysyncify_stop_rewind (; 9 ;)
  (global.set $__bysyncify_state
   (i32.const 0)
  )
 )
)
