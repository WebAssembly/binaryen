DWARF debug info
================

Contains section .debug_info (851 bytes)
Contains section .debug_loc (1073 bytes)
Contains section .debug_ranges (88 bytes)
Contains section .debug_abbrev (333 bytes)
Contains section .debug_line (1477 bytes)
Contains section .debug_str (434 bytes)

.debug_abbrev contents:
Abbrev table for offset: 0x00000000
[1] DW_TAG_compile_unit	DW_CHILDREN_yes
	DW_AT_producer	DW_FORM_strp
	DW_AT_language	DW_FORM_data2
	DW_AT_name	DW_FORM_strp
	DW_AT_stmt_list	DW_FORM_sec_offset
	DW_AT_comp_dir	DW_FORM_strp
	DW_AT_low_pc	DW_FORM_addr
	DW_AT_ranges	DW_FORM_sec_offset

[2] DW_TAG_pointer_type	DW_CHILDREN_no
	DW_AT_type	DW_FORM_ref4

[3] DW_TAG_structure_type	DW_CHILDREN_yes
	DW_AT_calling_convention	DW_FORM_data1
	DW_AT_name	DW_FORM_strp
	DW_AT_byte_size	DW_FORM_data1
	DW_AT_decl_file	DW_FORM_data1
	DW_AT_decl_line	DW_FORM_data1

[4] DW_TAG_member	DW_CHILDREN_no
	DW_AT_name	DW_FORM_strp
	DW_AT_type	DW_FORM_ref4
	DW_AT_decl_file	DW_FORM_data1
	DW_AT_decl_line	DW_FORM_data1
	DW_AT_data_member_location	DW_FORM_data1

[5] DW_TAG_base_type	DW_CHILDREN_no
	DW_AT_name	DW_FORM_strp
	DW_AT_encoding	DW_FORM_data1
	DW_AT_byte_size	DW_FORM_data1

[6] DW_TAG_namespace	DW_CHILDREN_yes
	DW_AT_name	DW_FORM_strp

[7] DW_TAG_typedef	DW_CHILDREN_no
	DW_AT_type	DW_FORM_ref4
	DW_AT_name	DW_FORM_strp
	DW_AT_decl_file	DW_FORM_data1
	DW_AT_decl_line	DW_FORM_data1

[8] DW_TAG_unspecified_type	DW_CHILDREN_no
	DW_AT_name	DW_FORM_strp

[9] DW_TAG_imported_declaration	DW_CHILDREN_no
	DW_AT_decl_file	DW_FORM_data1
	DW_AT_decl_line	DW_FORM_data1
	DW_AT_import	DW_FORM_ref4

[10] DW_TAG_subprogram	DW_CHILDREN_yes
	DW_AT_low_pc	DW_FORM_addr
	DW_AT_high_pc	DW_FORM_data4
	DW_AT_frame_base	DW_FORM_exprloc
	DW_AT_GNU_all_call_sites	DW_FORM_flag_present
	DW_AT_linkage_name	DW_FORM_strp
	DW_AT_name	DW_FORM_strp
	DW_AT_decl_file	DW_FORM_data1
	DW_AT_decl_line	DW_FORM_data1
	DW_AT_type	DW_FORM_ref4
	DW_AT_external	DW_FORM_flag_present

[11] DW_TAG_formal_parameter	DW_CHILDREN_no
	DW_AT_name	DW_FORM_strp
	DW_AT_decl_file	DW_FORM_data1
	DW_AT_decl_line	DW_FORM_data1
	DW_AT_type	DW_FORM_ref4

[12] DW_TAG_variable	DW_CHILDREN_no
	DW_AT_name	DW_FORM_strp
	DW_AT_decl_file	DW_FORM_data1
	DW_AT_decl_line	DW_FORM_data1
	DW_AT_type	DW_FORM_ref4

[13] DW_TAG_variable	DW_CHILDREN_no
	DW_AT_location	DW_FORM_sec_offset
	DW_AT_name	DW_FORM_strp
	DW_AT_decl_file	DW_FORM_data1
	DW_AT_decl_line	DW_FORM_data1
	DW_AT_type	DW_FORM_ref4

[14] DW_TAG_lexical_block	DW_CHILDREN_yes
	DW_AT_ranges	DW_FORM_sec_offset

[15] DW_TAG_GNU_call_site	DW_CHILDREN_no
	DW_AT_low_pc	DW_FORM_addr

[16] DW_TAG_GNU_call_site	DW_CHILDREN_no
	DW_AT_abstract_origin	DW_FORM_ref4
	DW_AT_low_pc	DW_FORM_addr

[17] DW_TAG_subprogram	DW_CHILDREN_yes
	DW_AT_name	DW_FORM_strp
	DW_AT_decl_file	DW_FORM_data1
	DW_AT_decl_line	DW_FORM_data1
	DW_AT_declaration	DW_FORM_flag_present
	DW_AT_external	DW_FORM_flag_present

[18] DW_TAG_formal_parameter	DW_CHILDREN_no
	DW_AT_type	DW_FORM_ref4

[19] DW_TAG_pointer_type	DW_CHILDREN_no

[20] DW_TAG_subprogram	DW_CHILDREN_yes
	DW_AT_linkage_name	DW_FORM_strp
	DW_AT_name	DW_FORM_strp
	DW_AT_decl_file	DW_FORM_data1
	DW_AT_decl_line	DW_FORM_data1
	DW_AT_type	DW_FORM_ref4
	DW_AT_inline	DW_FORM_data1

[21] DW_TAG_label	DW_CHILDREN_no
	DW_AT_name	DW_FORM_strp
	DW_AT_decl_file	DW_FORM_data1
	DW_AT_decl_line	DW_FORM_data1

[22] DW_TAG_lexical_block	DW_CHILDREN_yes

[23] DW_TAG_subprogram	DW_CHILDREN_yes
	DW_AT_low_pc	DW_FORM_addr
	DW_AT_high_pc	DW_FORM_data4
	DW_AT_frame_base	DW_FORM_exprloc
	DW_AT_GNU_all_call_sites	DW_FORM_flag_present
	DW_AT_name	DW_FORM_strp
	DW_AT_decl_file	DW_FORM_data1
	DW_AT_decl_line	DW_FORM_data1
	DW_AT_type	DW_FORM_ref4
	DW_AT_external	DW_FORM_flag_present

[24] DW_TAG_inlined_subroutine	DW_CHILDREN_yes
	DW_AT_abstract_origin	DW_FORM_ref4
	DW_AT_low_pc	DW_FORM_addr
	DW_AT_high_pc	DW_FORM_data4
	DW_AT_call_file	DW_FORM_data1
	DW_AT_call_line	DW_FORM_data1
	DW_AT_call_column	DW_FORM_data1

[25] DW_TAG_formal_parameter	DW_CHILDREN_no
	DW_AT_abstract_origin	DW_FORM_ref4

[26] DW_TAG_variable	DW_CHILDREN_no
	DW_AT_location	DW_FORM_sec_offset
	DW_AT_abstract_origin	DW_FORM_ref4

[27] DW_TAG_variable	DW_CHILDREN_no
	DW_AT_abstract_origin	DW_FORM_ref4

[28] DW_TAG_label	DW_CHILDREN_no
	DW_AT_abstract_origin	DW_FORM_ref4
	DW_AT_low_pc	DW_FORM_addr


.debug_info contents:
0x00000000: Compile Unit: length = 0x0000034f version = 0x0004 abbr_offset = 0x0000 addr_size = 0x04 (next unit at 0x00000353)

0x0000000b: DW_TAG_compile_unit [1] *
              DW_AT_producer [DW_FORM_strp]	( .debug_str[0x00000000] = "clang version 11.0.0 (https://github.com/llvm/llvm-project.git 313d89724ce3ccf66c1c51849903e1e6d184dd85)")
              DW_AT_language [DW_FORM_data2]	(DW_LANG_C_plus_plus)
              DW_AT_name [DW_FORM_strp]	( .debug_str[0x00000069] = "/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
              DW_AT_stmt_list [DW_FORM_sec_offset]	(0x00000000)
              DW_AT_comp_dir [DW_FORM_strp]	( .debug_str[0x000000a9] = "/usr/local/google/home/azakai/Dev/2-binaryen")
              DW_AT_low_pc [DW_FORM_addr]	(0x0000000000000000)
              DW_AT_ranges [DW_FORM_sec_offset]	(0x00000040
                 [0x00000006, 0x0000039d)
                 [0x0000039f, 0x000006e1))

0x00000026:   DW_TAG_pointer_type [2]  
                DW_AT_type [DW_FORM_ref4]	(cu + 0x002b => {0x0000002b} "worker_args")

0x0000002b:   DW_TAG_structure_type [3] *
                DW_AT_calling_convention [DW_FORM_data1]	(DW_CC_pass_by_value)
                DW_AT_name [DW_FORM_strp]	( .debug_str[0x000000e3] = "worker_args")
                DW_AT_byte_size [DW_FORM_data1]	(0x0c)
                DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                DW_AT_decl_line [DW_FORM_data1]	(20)

0x00000034:     DW_TAG_member [4]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x000000d6] = "i")
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(21)
                  DW_AT_data_member_location [DW_FORM_data1]	(0x00)

0x00000040:     DW_TAG_member [4]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x000000dc] = "n")
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(21)
                  DW_AT_data_member_location [DW_FORM_data1]	(0x04)

0x0000004c:     DW_TAG_member [4]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x000000de] = "next")
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0026 => {0x00000026} "worker_args*")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(22)
                  DW_AT_data_member_location [DW_FORM_data1]	(0x08)

0x00000058:     NULL

0x00000059:   DW_TAG_base_type [5]  
                DW_AT_name [DW_FORM_strp]	( .debug_str[0x000000d8] = "int")
                DW_AT_encoding [DW_FORM_data1]	(DW_ATE_signed)
                DW_AT_byte_size [DW_FORM_data1]	(0x04)

0x00000060:   DW_TAG_pointer_type [2]  
                DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x00000065:   DW_TAG_namespace [6] *
                DW_AT_name [DW_FORM_strp]	( .debug_str[0x000000ef] = "std")

0x0000006a:     DW_TAG_typedef [7]  
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0076 => {0x00000076} "decltype(nullptr)")
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x00000105] = "nullptr_t")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/system/include/libcxx/__nullptr")
                  DW_AT_decl_line [DW_FORM_data1]	(57)

0x00000075:     NULL

0x00000076:   DW_TAG_unspecified_type [8]  
                DW_AT_name [DW_FORM_strp]	( .debug_str[0x000000f3] = "decltype(nullptr)")

0x0000007b:   DW_TAG_imported_declaration [9]  
                DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/system/include/libcxx/stddef.h")
                DW_AT_decl_line [DW_FORM_data1]	(52)
                DW_AT_import [DW_FORM_ref4]	(cu + 0x006a => {0x0000006a})

0x00000082:   DW_TAG_subprogram [10] *
                DW_AT_low_pc [DW_FORM_addr]	(0x0000000000000006)
                DW_AT_high_pc [DW_FORM_data4]	(0x00000397)
                DW_AT_frame_base [DW_FORM_exprloc]	(DW_OP_WASM_location 0x1 +0, DW_OP_stack_value)
                DW_AT_GNU_all_call_sites [DW_FORM_flag_present]	(true)
                DW_AT_linkage_name [DW_FORM_strp]	( .debug_str[0x00000166] = "_Z15fannkuch_workerPv")
                DW_AT_name [DW_FORM_strp]	( .debug_str[0x0000017c] = "fannkuch_worker")
                DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                DW_AT_decl_line [DW_FORM_data1]	(26)
                DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")
                DW_AT_external [DW_FORM_flag_present]	(true)

0x0000009e:     DW_TAG_formal_parameter [11]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x00000191] = "_arg")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(26)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x01a7 => {0x000001a7} "*")

0x000000a9:     DW_TAG_variable [12]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x00000133] = "args")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(28)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0026 => {0x00000026} "worker_args*")

0x000000b4:     DW_TAG_variable [13]  
                  DW_AT_location [DW_FORM_sec_offset]	(0x00000000: 
                     [0xffffffff,  0x00000006): 
                     [0x00000000,  0x0000003c): DW_OP_consts +0, DW_OP_stack_value)
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x0000014c] = "maxflips")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(30)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x000000c3:     DW_TAG_variable [13]  
                  DW_AT_location [DW_FORM_sec_offset]	(0x0000001d: 
                     [0xffffffff,  0x00000006): 
                     [0x00000007,  0x0000003c): DW_OP_consts +0, DW_OP_stack_value
                     [0x00000052,  0x00000057): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value
                     [0x000000ec,  0x000000f5): DW_OP_consts +1, DW_OP_stack_value
                     [0x00000131,  0x0000013b): DW_OP_WASM_location 0x0 +0, DW_OP_stack_value
                     [0x00000179,  0x00000186): DW_OP_consts +0, DW_OP_stack_value
                     [0x00000264,  0x0000026f): DW_OP_consts +0, DW_OP_stack_value
                     [0x00000275,  0x0000027e): DW_OP_consts +1, DW_OP_stack_value
                     [0x000002ba,  0x000002c4): DW_OP_WASM_location 0x0 +0, DW_OP_stack_value
                     [0x00000302,  0x0000030f): DW_OP_consts +0, DW_OP_stack_value)
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x000000d6] = "i")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(30)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x000000d2:     DW_TAG_variable [13]  
                  DW_AT_location [DW_FORM_sec_offset]	(0x000000a5: 
                     [0xffffffff,  0x00000006): 
                     [0x0000000e,  0x0000003c): DW_OP_WASM_location 0x0 +2, DW_OP_stack_value)
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x000000dc] = "n")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(30)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x000000e1:     DW_TAG_variable [13]  
                  DW_AT_location [DW_FORM_sec_offset]	(0x000000c3: 
                     [0xffffffff,  0x00000006): 
                     [0x0000001b,  0x0000003c): DW_OP_WASM_location 0x0 +4, DW_OP_stack_value)
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x0000013e] = "perm1")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(29)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0060 => {0x00000060} "int*")

0x000000f0:     DW_TAG_variable [13]  
                  DW_AT_location [DW_FORM_sec_offset]	(0x000000e1: 
                     [0xffffffff,  0x00000006): 
                     [0x00000025,  0x0000003c): DW_OP_WASM_location 0x0 +5, DW_OP_stack_value)
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x00000196] = "perm")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(29)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0060 => {0x00000060} "int*")

0x000000ff:     DW_TAG_variable [13]  
                  DW_AT_location [DW_FORM_sec_offset]	(0x000000ff: 
                     [0xffffffff,  0x00000006): 
                     [0x0000002f,  0x0000003c): DW_OP_WASM_location 0x0 +6, DW_OP_stack_value)
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x00000144] = "count")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(29)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0060 => {0x00000060} "int*")

0x0000010e:     DW_TAG_variable [13]  
                  DW_AT_location [DW_FORM_sec_offset]	(0x0000011d: 
                     [0xffffffff,  0x00000006): 
                     [0x000001e2,  0x000001e7): DW_OP_WASM_location 0x0 +2, DW_OP_stack_value
                     [0x0000036b,  0x00000370): DW_OP_WASM_location 0x0 +2, DW_OP_stack_value)
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x0000014a] = "r")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(30)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x0000011d:     DW_TAG_variable [13]  
                  DW_AT_location [DW_FORM_sec_offset]	(0x00000149: 
                     [0xffffffff,  0x00000006): 
                     [0x000000cf,  0x000000e6): DW_OP_consts +0, DW_OP_stack_value
                     [0x000000ec,  0x000000f5): DW_OP_WASM_location 0x0 +13, DW_OP_stack_value
                     [0x0000015a,  0x00000162): DW_OP_WASM_location 0x0 +0, DW_OP_stack_value
                     [0x00000264,  0x0000026f): DW_OP_consts +0, DW_OP_stack_value
                     [0x00000275,  0x0000027e): DW_OP_WASM_location 0x0 +10, DW_OP_stack_value
                     [0x000002e3,  0x000002eb): DW_OP_WASM_location 0x0 +0, DW_OP_stack_value)
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x00000155] = "flips")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(30)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x0000012c:     DW_TAG_variable [13]  
                  DW_AT_location [DW_FORM_sec_offset]	(0x000001ab: 
                     [0xffffffff,  0x00000006): 
                     [0x000000e2,  0x000000e6): DW_OP_WASM_location 0x0 +12, DW_OP_stack_value
                     [0x0000026b,  0x0000026f): DW_OP_WASM_location 0x0 +16, DW_OP_stack_value)
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x0000019b] = "k")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(30)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x0000013b:     DW_TAG_variable [13]  
                  DW_AT_location [DW_FORM_sec_offset]	(0x000001d7: 
                     [0xffffffff,  0x00000006): 
                     [0x000000fc,  0x00000100): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value
                     [0x00000138,  0x0000013b): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value
                     [0x00000285,  0x00000289): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value
                     [0x000002c1,  0x000002c4): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value)
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x0000019d] = "j")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(30)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x0000014a:     DW_TAG_variable [13]  
                  DW_AT_location [DW_FORM_sec_offset]	(0x0000021f: 
                     [0xffffffff,  0x00000006): 
                     [0x00000111,  0x0000013b): DW_OP_WASM_location 0x0 +15, DW_OP_stack_value
                     [0x0000014c,  0x00000162): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value
                     [0x0000029a,  0x000002c4): DW_OP_WASM_location 0x0 +14, DW_OP_stack_value
                     [0x000002d5,  0x000002eb): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value)
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x0000019f] = "tmp")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(30)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x00000159:     DW_TAG_lexical_block [14] *
                  DW_AT_ranges [DW_FORM_sec_offset]	(0x00000000
                     [0x00000185, 0x000001c3)
                     [0x000001ed, 0x000001f6)
                     [0x0000030e, 0x0000034c)
                     [0x00000376, 0x0000037f))

0x0000015e:       DW_TAG_variable [12]  
                    DW_AT_name [DW_FORM_strp]	( .debug_str[0x00000163] = "p0")
                    DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                    DW_AT_decl_line [DW_FORM_data1]	(74)
                    DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x00000169:       NULL

0x0000016a:     DW_TAG_GNU_call_site [15]  
                  DW_AT_low_pc [DW_FORM_addr]	(0x000000000000001f)

0x0000016f:     DW_TAG_GNU_call_site [15]  
                  DW_AT_low_pc [DW_FORM_addr]	(0x0000000000000029)

0x00000174:     DW_TAG_GNU_call_site [15]  
                  DW_AT_low_pc [DW_FORM_addr]	(0x0000000000000033)

0x00000179:     DW_TAG_GNU_call_site [15]  
                  DW_AT_low_pc [DW_FORM_addr]	(0x00000000000000e1)

0x0000017e:     DW_TAG_GNU_call_site [16]  
                  DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x019a => {0x0000019a} "free")
                  DW_AT_low_pc [DW_FORM_addr]	(0x000000000000038a)

0x00000187:     DW_TAG_GNU_call_site [16]  
                  DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x019a => {0x0000019a} "free")
                  DW_AT_low_pc [DW_FORM_addr]	(0x0000000000000392)

0x00000190:     DW_TAG_GNU_call_site [16]  
                  DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x019a => {0x0000019a} "free")
                  DW_AT_low_pc [DW_FORM_addr]	(0x000000000000039a)

0x00000199:     NULL

0x0000019a:   DW_TAG_subprogram [17] *
                DW_AT_name [DW_FORM_strp]	( .debug_str[0x0000010f] = "free")
                DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/system/include/libc/stdlib.h")
                DW_AT_decl_line [DW_FORM_data1]	(41)
                DW_AT_declaration [DW_FORM_flag_present]	(true)
                DW_AT_external [DW_FORM_flag_present]	(true)

0x000001a1:     DW_TAG_formal_parameter [18]  
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x01a7 => {0x000001a7} "*")

0x000001a6:     NULL

0x000001a7:   DW_TAG_pointer_type [19]  

0x000001a8:   DW_TAG_subprogram [20] *
                DW_AT_linkage_name [DW_FORM_strp]	( .debug_str[0x00000114] = "_ZL8fannkuchi")
                DW_AT_name [DW_FORM_strp]	( .debug_str[0x00000122] = "fannkuch")
                DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                DW_AT_decl_line [DW_FORM_data1]	(87)
                DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")
                DW_AT_inline [DW_FORM_data1]	(DW_INL_inlined)

0x000001b8:     DW_TAG_formal_parameter [11]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x000000dc] = "n")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(87)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x000001c3:     DW_TAG_variable [12]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x0000012b] = "showmax")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(90)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x000001ce:     DW_TAG_variable [12]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x00000133] = "args")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(89)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0026 => {0x00000026} "worker_args*")

0x000001d9:     DW_TAG_variable [12]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x000000d6] = "i")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(91)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x000001e4:     DW_TAG_variable [12]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x00000138] = "targs")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(89)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0026 => {0x00000026} "worker_args*")

0x000001ef:     DW_TAG_variable [12]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x0000013e] = "perm1")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(91)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0060 => {0x00000060} "int*")

0x000001fa:     DW_TAG_variable [12]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x00000144] = "count")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(91)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0060 => {0x00000060} "int*")

0x00000205:     DW_TAG_variable [12]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x0000014a] = "r")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(91)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x00000210:     DW_TAG_variable [12]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x0000014c] = "maxflips")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(91)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x0000021b:     DW_TAG_variable [12]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x00000155] = "flips")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(91)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x00000226:     DW_TAG_label [21]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x0000015b] = "cleanup")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(137)

0x0000022d:     DW_TAG_lexical_block [22] *

0x0000022e:       DW_TAG_variable [12]  
                    DW_AT_name [DW_FORM_strp]	( .debug_str[0x00000163] = "p0")
                    DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                    DW_AT_decl_line [DW_FORM_data1]	(125)
                    DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x00000239:       NULL

0x0000023a:     NULL

0x0000023b:   DW_TAG_subprogram [23] *
                DW_AT_low_pc [DW_FORM_addr]	(0x000000000000039f)
                DW_AT_high_pc [DW_FORM_data4]	(0x00000342)
                DW_AT_frame_base [DW_FORM_exprloc]	(DW_OP_WASM_location 0x0 +2, DW_OP_stack_value)
                DW_AT_GNU_all_call_sites [DW_FORM_flag_present]	(true)
                DW_AT_name [DW_FORM_strp]	( .debug_str[0x0000018c] = "main")
                DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                DW_AT_decl_line [DW_FORM_data1]	(152)
                DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")
                DW_AT_external [DW_FORM_flag_present]	(true)

0x00000253:     DW_TAG_formal_parameter [11]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x000001a3] = "argc")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(152)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x0000025e:     DW_TAG_formal_parameter [11]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x000001a8] = "argv")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(152)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0341 => {0x00000341} "char**")

0x00000269:     DW_TAG_variable [13]  
                  DW_AT_location [DW_FORM_sec_offset]	(0x00000267: 
                     [0xffffffff,  0x0000039f): 
                     [0x00000032,  0x00000037): DW_OP_WASM_location 0x0 +4, DW_OP_stack_value)
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x000000dc] = "n")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(153)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x00000278:     DW_TAG_inlined_subroutine [24] *
                  DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x01a8 => {0x000001a8} "_ZL8fannkuchi")
                  DW_AT_low_pc [DW_FORM_addr]	(0x00000000000003ed)
                  DW_AT_high_pc [DW_FORM_data4]	(0x000002c8)
                  DW_AT_call_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_call_line [DW_FORM_data1]	(159)
                  DW_AT_call_column [DW_FORM_data1]	(0x29)

0x00000288:       DW_TAG_formal_parameter [25]  
                    DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x01b8 => {0x000001b8} "n")

0x0000028d:       DW_TAG_variable [26]  
                    DW_AT_location [DW_FORM_sec_offset]	(0x00000285: 
                       [0xffffffff,  0x0000039f): 
                       [0x0000004c,  0x00000055): DW_OP_consts +30, DW_OP_stack_value)
                    DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x01c3 => {0x000001c3} "showmax")

0x00000296:       DW_TAG_variable [26]  
                    DW_AT_location [DW_FORM_sec_offset]	(0x000002a2: 
                       [0xffffffff,  0x0000039f): 
                       [0x0000004c,  0x00000055): DW_OP_lit0, DW_OP_stack_value
                       [0x000002f8,  0x00000314): DW_OP_WASM_location 0x0 +6, DW_OP_stack_value)
                    DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x01ce => {0x000001ce} "args")

0x0000029f:       DW_TAG_variable [26]  
                    DW_AT_location [DW_FORM_sec_offset]	(0x000002cc: 
                       [0xffffffff,  0x0000039f): 
                       [0x0000004c,  0x00000055): DW_OP_consts +0, DW_OP_stack_value
                       [0x0000008e,  0x00000093): DW_OP_WASM_location 0x0 +0, DW_OP_stack_value
                       [0x00000099,  0x000000c1): DW_OP_consts +0, DW_OP_stack_value
                       [0x000000d7,  0x000000dc): DW_OP_WASM_location 0x0 +0, DW_OP_stack_value
                       [0x000000f5,  0x000000f9): DW_OP_consts +0, DW_OP_stack_value
                       [0x00000127,  0x0000012c): DW_OP_WASM_location 0x0 +0, DW_OP_stack_value
                       [0x00000178,  0x00000188): DW_OP_consts +0, DW_OP_stack_value
                       [0x000001fa,  0x0000020c): DW_OP_consts +0, DW_OP_stack_value
                       [0x00000241,  0x00000255): DW_OP_consts +0, DW_OP_stack_value)
                    DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x01d9 => {0x000001d9} "i")

0x000002a8:       DW_TAG_variable [27]  
                    DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x01e4 => {0x000001e4} "targs")

0x000002ad:       DW_TAG_variable [26]  
                    DW_AT_location [DW_FORM_sec_offset]	(0x00000354: 
                       [0xffffffff,  0x0000039f): 
                       [0x000000a8,  0x000000c1): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value)
                    DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x01ef => {0x000001ef} "perm1")

0x000002b6:       DW_TAG_variable [26]  
                    DW_AT_location [DW_FORM_sec_offset]	(0x00000372: 
                       [0xffffffff,  0x0000039f): 
                       [0x000000b2,  0x000000c1): DW_OP_WASM_location 0x0 +5, DW_OP_stack_value)
                    DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x01fa => {0x000001fa} "count")

0x000002bf:       DW_TAG_variable [26]  
                    DW_AT_location [DW_FORM_sec_offset]	(0x00000390: 
                       [0xffffffff,  0x0000039f): 
                       [0x000001e6,  0x000001ed): DW_OP_WASM_location 0x0 +6, DW_OP_stack_value
                       [0x000002b3,  0x000002ba): DW_OP_WASM_location 0x0 +6, DW_OP_stack_value)
                    DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x0205 => {0x00000205} "r")

0x000002c8:       DW_TAG_variable [26]  
                    DW_AT_location [DW_FORM_sec_offset]	(0x000003e8: 
                       [0xffffffff,  0x0000039f): 
                       [0x000002d6,  0x000002e1): DW_OP_consts +0, DW_OP_stack_value
                       [0x0000030c,  0x00000314): DW_OP_WASM_location 0x0 +0, DW_OP_stack_value)
                    DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x0210 => {0x00000210} "maxflips")

0x000002d1:       DW_TAG_variable [26]  
                    DW_AT_location [DW_FORM_sec_offset]	(0x00000413: 
                       [0xffffffff,  0x0000039f): 
                       [0x000002f1,  0x00000314): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value)
                    DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x021b => {0x0000021b} "flips")

0x000002da:       DW_TAG_label [28]  
                    DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x0226 => {0x00000226} "cleanup")
                    DW_AT_low_pc [DW_FORM_addr]	(0x0000000000000661)

0x000002e3:       DW_TAG_lexical_block [14] *
                    DW_AT_ranges [DW_FORM_sec_offset]	(0x00000028
                       [0x00000517, 0x0000055e)
                       [0x000005de, 0x0000062b))

0x000002e8:         DW_TAG_variable [26]  
                      DW_AT_location [DW_FORM_sec_offset]	(0x000003bc: 
                         [0xffffffff,  0x0000039f): 
                         [0x0000017f,  0x00000188): DW_OP_WASM_location 0x0 +8, DW_OP_stack_value
                         [0x00000248,  0x00000255): DW_OP_WASM_location 0x0 +8, DW_OP_stack_value)
                      DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x022e => {0x0000022e} "p0")

0x000002f1:         NULL

0x000002f2:       NULL

0x000002f3:     DW_TAG_GNU_call_site [15]  
                  DW_AT_low_pc [DW_FORM_addr]	(0x00000000000003cf)

0x000002f8:     DW_TAG_GNU_call_site [15]  
                  DW_AT_low_pc [DW_FORM_addr]	(0x00000000000003e3)

0x000002fd:     DW_TAG_GNU_call_site [15]  
                  DW_AT_low_pc [DW_FORM_addr]	(0x000000000000040d)

0x00000302:     DW_TAG_GNU_call_site [15]  
                  DW_AT_low_pc [DW_FORM_addr]	(0x0000000000000445)

0x00000307:     DW_TAG_GNU_call_site [15]  
                  DW_AT_low_pc [DW_FORM_addr]	(0x000000000000044f)

0x0000030c:     DW_TAG_GNU_call_site [15]  
                  DW_AT_low_pc [DW_FORM_addr]	(0x00000000000004be)

0x00000311:     DW_TAG_GNU_call_site [15]  
                  DW_AT_low_pc [DW_FORM_addr]	(0x00000000000004d4)

0x00000316:     DW_TAG_GNU_call_site [15]  
                  DW_AT_low_pc [DW_FORM_addr]	(0x00000000000005a1)

0x0000031b:     DW_TAG_GNU_call_site [16]  
                  DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x019a => {0x0000019a} "free")
                  DW_AT_low_pc [DW_FORM_addr]	(0x0000000000000669)

0x00000324:     DW_TAG_GNU_call_site [16]  
                  DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x019a => {0x0000019a} "free")
                  DW_AT_low_pc [DW_FORM_addr]	(0x0000000000000671)

0x0000032d:     DW_TAG_GNU_call_site [15]  
                  DW_AT_low_pc [DW_FORM_addr]	(0x000000000000068e)

0x00000332:     DW_TAG_GNU_call_site [16]  
                  DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x019a => {0x0000019a} "free")
                  DW_AT_low_pc [DW_FORM_addr]	(0x000000000000069f)

0x0000033b:     DW_TAG_GNU_call_site [15]  
                  DW_AT_low_pc [DW_FORM_addr]	(0x00000000000006d1)

0x00000340:     NULL

0x00000341:   DW_TAG_pointer_type [2]  
                DW_AT_type [DW_FORM_ref4]	(cu + 0x0346 => {0x00000346} "char*")

0x00000346:   DW_TAG_pointer_type [2]  
                DW_AT_type [DW_FORM_ref4]	(cu + 0x034b => {0x0000034b} "char")

0x0000034b:   DW_TAG_base_type [5]  
                DW_AT_name [DW_FORM_strp]	( .debug_str[0x000001ad] = "char")
                DW_AT_encoding [DW_FORM_data1]	(DW_ATE_signed_char)
                DW_AT_byte_size [DW_FORM_data1]	(0x01)

0x00000352:   NULL

.debug_loc contents:
0x00000000: 
            [0xffffffff,  0x00000006): 
            [0x00000000,  0x0000003c): DW_OP_consts +0, DW_OP_stack_value

0x0000001d: 
            [0xffffffff,  0x00000006): 
            [0x00000007,  0x0000003c): DW_OP_consts +0, DW_OP_stack_value
            [0x00000052,  0x00000057): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value
            [0x000000ec,  0x000000f5): DW_OP_consts +1, DW_OP_stack_value
            [0x00000131,  0x0000013b): DW_OP_WASM_location 0x0 +0, DW_OP_stack_value
            [0x00000179,  0x00000186): DW_OP_consts +0, DW_OP_stack_value
            [0x00000264,  0x0000026f): DW_OP_consts +0, DW_OP_stack_value
            [0x00000275,  0x0000027e): DW_OP_consts +1, DW_OP_stack_value
            [0x000002ba,  0x000002c4): DW_OP_WASM_location 0x0 +0, DW_OP_stack_value
            [0x00000302,  0x0000030f): DW_OP_consts +0, DW_OP_stack_value

0x000000a5: 
            [0xffffffff,  0x00000006): 
            [0x0000000e,  0x0000003c): DW_OP_WASM_location 0x0 +2, DW_OP_stack_value

0x000000c3: 
            [0xffffffff,  0x00000006): 
            [0x0000001b,  0x0000003c): DW_OP_WASM_location 0x0 +4, DW_OP_stack_value

0x000000e1: 
            [0xffffffff,  0x00000006): 
            [0x00000025,  0x0000003c): DW_OP_WASM_location 0x0 +5, DW_OP_stack_value

0x000000ff: 
            [0xffffffff,  0x00000006): 
            [0x0000002f,  0x0000003c): DW_OP_WASM_location 0x0 +6, DW_OP_stack_value

0x0000011d: 
            [0xffffffff,  0x00000006): 
            [0x000001e2,  0x000001e7): DW_OP_WASM_location 0x0 +2, DW_OP_stack_value
            [0x0000036b,  0x00000370): DW_OP_WASM_location 0x0 +2, DW_OP_stack_value

0x00000149: 
            [0xffffffff,  0x00000006): 
            [0x000000cf,  0x000000e6): DW_OP_consts +0, DW_OP_stack_value
            [0x000000ec,  0x000000f5): DW_OP_WASM_location 0x0 +13, DW_OP_stack_value
            [0x0000015a,  0x00000162): DW_OP_WASM_location 0x0 +0, DW_OP_stack_value
            [0x00000264,  0x0000026f): DW_OP_consts +0, DW_OP_stack_value
            [0x00000275,  0x0000027e): DW_OP_WASM_location 0x0 +10, DW_OP_stack_value
            [0x000002e3,  0x000002eb): DW_OP_WASM_location 0x0 +0, DW_OP_stack_value

0x000001ab: 
            [0xffffffff,  0x00000006): 
            [0x000000e2,  0x000000e6): DW_OP_WASM_location 0x0 +12, DW_OP_stack_value
            [0x0000026b,  0x0000026f): DW_OP_WASM_location 0x0 +16, DW_OP_stack_value

0x000001d7: 
            [0xffffffff,  0x00000006): 
            [0x000000fc,  0x00000100): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value
            [0x00000138,  0x0000013b): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value
            [0x00000285,  0x00000289): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value
            [0x000002c1,  0x000002c4): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value

0x0000021f: 
            [0xffffffff,  0x00000006): 
            [0x00000111,  0x0000013b): DW_OP_WASM_location 0x0 +15, DW_OP_stack_value
            [0x0000014c,  0x00000162): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value
            [0x0000029a,  0x000002c4): DW_OP_WASM_location 0x0 +14, DW_OP_stack_value
            [0x000002d5,  0x000002eb): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value

0x00000267: 
            [0xffffffff,  0x0000039f): 
            [0x00000032,  0x00000037): DW_OP_WASM_location 0x0 +4, DW_OP_stack_value

0x00000285: 
            [0xffffffff,  0x0000039f): 
            [0x0000004c,  0x00000055): DW_OP_consts +30, DW_OP_stack_value

0x000002a2: 
            [0xffffffff,  0x0000039f): 
            [0x0000004c,  0x00000055): DW_OP_lit0, DW_OP_stack_value
            [0x000002f8,  0x00000314): DW_OP_WASM_location 0x0 +6, DW_OP_stack_value

0x000002cc: 
            [0xffffffff,  0x0000039f): 
            [0x0000004c,  0x00000055): DW_OP_consts +0, DW_OP_stack_value
            [0x0000008e,  0x00000093): DW_OP_WASM_location 0x0 +0, DW_OP_stack_value
            [0x00000099,  0x000000c1): DW_OP_consts +0, DW_OP_stack_value
            [0x000000d7,  0x000000dc): DW_OP_WASM_location 0x0 +0, DW_OP_stack_value
            [0x000000f5,  0x000000f9): DW_OP_consts +0, DW_OP_stack_value
            [0x00000127,  0x0000012c): DW_OP_WASM_location 0x0 +0, DW_OP_stack_value
            [0x00000178,  0x00000188): DW_OP_consts +0, DW_OP_stack_value
            [0x000001fa,  0x0000020c): DW_OP_consts +0, DW_OP_stack_value
            [0x00000241,  0x00000255): DW_OP_consts +0, DW_OP_stack_value

0x00000354: 
            [0xffffffff,  0x0000039f): 
            [0x000000a8,  0x000000c1): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value

0x00000372: 
            [0xffffffff,  0x0000039f): 
            [0x000000b2,  0x000000c1): DW_OP_WASM_location 0x0 +5, DW_OP_stack_value

0x00000390: 
            [0xffffffff,  0x0000039f): 
            [0x000001e6,  0x000001ed): DW_OP_WASM_location 0x0 +6, DW_OP_stack_value
            [0x000002b3,  0x000002ba): DW_OP_WASM_location 0x0 +6, DW_OP_stack_value

0x000003bc: 
            [0xffffffff,  0x0000039f): 
            [0x0000017f,  0x00000188): DW_OP_WASM_location 0x0 +8, DW_OP_stack_value
            [0x00000248,  0x00000255): DW_OP_WASM_location 0x0 +8, DW_OP_stack_value

0x000003e8: 
            [0xffffffff,  0x0000039f): 
            [0x000002d6,  0x000002e1): DW_OP_consts +0, DW_OP_stack_value
            [0x0000030c,  0x00000314): DW_OP_WASM_location 0x0 +0, DW_OP_stack_value

0x00000413: 
            [0xffffffff,  0x0000039f): 
            [0x000002f1,  0x00000314): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value

.debug_line contents:
debug_line[0x00000000]
Line table prologue:
    total_length: 0x000005c1
         version: 4
 prologue_length: 0x000000dd
 min_inst_length: 1
max_ops_per_inst: 1
 default_is_stmt: 1
       line_base: -5
      line_range: 14
     opcode_base: 13
standard_opcode_lengths[DW_LNS_copy] = 0
standard_opcode_lengths[DW_LNS_advance_pc] = 1
standard_opcode_lengths[DW_LNS_advance_line] = 1
standard_opcode_lengths[DW_LNS_set_file] = 1
standard_opcode_lengths[DW_LNS_set_column] = 1
standard_opcode_lengths[DW_LNS_negate_stmt] = 0
standard_opcode_lengths[DW_LNS_set_basic_block] = 0
standard_opcode_lengths[DW_LNS_const_add_pc] = 0
standard_opcode_lengths[DW_LNS_fixed_advance_pc] = 1
standard_opcode_lengths[DW_LNS_set_prologue_end] = 0
standard_opcode_lengths[DW_LNS_set_epilogue_begin] = 0
standard_opcode_lengths[DW_LNS_set_isa] = 1
include_directories[  1] = "/usr/local/google/home/azakai/Dev"
file_names[  1]:
           name: "emscripten/tests/fannkuch.cpp"
      dir_index: 1
       mod_time: 0x00000000
         length: 0x00000000
file_names[  2]:
           name: "emscripten/system/include/libcxx/__nullptr"
      dir_index: 1
       mod_time: 0x00000000
         length: 0x00000000
file_names[  3]:
           name: "emscripten/system/include/libcxx/stddef.h"
      dir_index: 1
       mod_time: 0x00000000
         length: 0x00000000
file_names[  4]:
           name: "emscripten/system/include/libc/stdlib.h"
      dir_index: 1
       mod_time: 0x00000000
         length: 0x00000000
0x000000e7: 00 DW_LNE_set_address (0x0000000000000006)
0x000000ee: 03 DW_LNS_advance_line (27)
0x000000f0: 01 DW_LNS_copy
            0x0000000000000006     27      0      1   0             0  is_stmt


0x000000f1: 05 DW_LNS_set_column (14)
0x000000f3: 0a DW_LNS_set_prologue_end
0x000000f4: 7a address += 7,  line += 6
            0x000000000000000d     33     14      1   0             0  is_stmt prologue_end

0x000000f5: 06 DW_LNS_negate_stmt
0x000000f6: 03 DW_LNS_advance_line (0)
0x000000f8: 58 address += 5,  line += 0
            0x0000000000000012      0     14      1   0             0 

0x000000f9: 05 DW_LNS_set_column (27)
0x000000fb: 06 DW_LNS_negate_stmt
0x000000fc: 03 DW_LNS_advance_line (34)
0x000000fe: 4a address += 4,  line += 0
            0x0000000000000016     34     27      1   0             0  is_stmt

0x000000ff: 05 DW_LNS_set_column (18)
0x00000101: 06 DW_LNS_negate_stmt
0x00000102: 20 address += 1,  line += 0
            0x0000000000000017     34     18      1   0             0 

0x00000103: 05 DW_LNS_set_column (17)
0x00000105: 06 DW_LNS_negate_stmt
0x00000106: 9f address += 10,  line += 1
            0x0000000000000021     35     17      1   0             0  is_stmt

0x00000107: 05 DW_LNS_set_column (18)
0x00000109: 9f address += 10,  line += 1
            0x000000000000002b     36     18      1   0             0  is_stmt

0x0000010a: 06 DW_LNS_negate_stmt
0x0000010b: 03 DW_LNS_advance_line (0)
0x0000010d: 9e address += 10,  line += 0
            0x0000000000000035      0     18      1   0             0 

0x0000010e: 06 DW_LNS_negate_stmt
0x0000010f: 03 DW_LNS_advance_line (37)
0x00000111: 66 address += 6,  line += 0
            0x000000000000003b     37     18      1   0             0  is_stmt

0x00000112: 05 DW_LNS_set_column (4)
0x00000114: 06 DW_LNS_negate_stmt
0x00000115: 58 address += 5,  line += 0
            0x0000000000000040     37      4      1   0             0 

0x00000116: 03 DW_LNS_advance_line (0)
0x00000118: 2e address += 2,  line += 0
            0x0000000000000042      0      4      1   0             0 

0x00000119: 05 DW_LNS_set_column (7)
0x0000011b: 06 DW_LNS_negate_stmt
0x0000011c: 03 DW_LNS_advance_line (38)
0x0000011e: 2e address += 2,  line += 0
            0x0000000000000044     38      7      1   0             0  is_stmt

0x0000011f: 05 DW_LNS_set_column (16)
0x00000121: 06 DW_LNS_negate_stmt
0x00000122: 82 address += 8,  line += 0
            0x000000000000004c     38     16      1   0             0 

0x00000123: 05 DW_LNS_set_column (24)
0x00000125: 06 DW_LNS_negate_stmt
0x00000126: 57 address += 5,  line += -1
            0x0000000000000051     37     24      1   0             0  is_stmt

0x00000127: 05 DW_LNS_set_column (18)
0x00000129: 06 DW_LNS_negate_stmt
0x0000012a: 58 address += 5,  line += 0
            0x0000000000000056     37     18      1   0             0 

0x0000012b: 05 DW_LNS_set_column (4)
0x0000012d: 58 address += 5,  line += 0
            0x000000000000005b     37      4      1   0             0 

0x0000012e: 06 DW_LNS_negate_stmt
0x0000012f: 3e address += 3,  line += 2
            0x000000000000005e     39      4      1   0             0  is_stmt

0x00000130: 05 DW_LNS_set_column (16)
0x00000132: 06 DW_LNS_negate_stmt
0x00000133: 2e address += 2,  line += 0
            0x0000000000000060     39     16      1   0             0 

0x00000134: 05 DW_LNS_set_column (4)
0x00000136: 90 address += 9,  line += 0
            0x0000000000000069     39      4      1   0             0 

0x00000137: 05 DW_LNS_set_column (23)
0x00000139: 2e address += 2,  line += 0
            0x000000000000006b     39     23      1   0             0 

0x0000013a: 05 DW_LNS_set_column (19)
0x0000013c: 58 address += 5,  line += 0
            0x0000000000000070     39     19      1   0             0 

0x0000013d: 05 DW_LNS_set_column (4)
0x0000013f: 06 DW_LNS_negate_stmt
0x00000140: 59 address += 5,  line += 1
            0x0000000000000075     40      4      1   0             0  is_stmt

0x00000141: 05 DW_LNS_set_column (17)
0x00000143: 06 DW_LNS_negate_stmt
0x00000144: 82 address += 8,  line += 0
            0x000000000000007d     40     17      1   0             0 

0x00000145: 05 DW_LNS_set_column (18)
0x00000147: 06 DW_LNS_negate_stmt
0x00000148: a9 address += 11,  line += -3
            0x0000000000000088     37     18      1   0             0  is_stmt

0x00000149: 05 DW_LNS_set_column (4)
0x0000014b: 5e address += 5,  line += 6
            0x000000000000008d     43      4      1   0             0  is_stmt

0x0000014c: 06 DW_LNS_negate_stmt
0x0000014d: 03 DW_LNS_advance_line (0)
0x0000014f: 2e address += 2,  line += 0
            0x000000000000008f      0      4      1   0             0 

0x00000150: 05 DW_LNS_set_column (16)
0x00000152: 06 DW_LNS_negate_stmt
0x00000153: 03 DW_LNS_advance_line (44)
0x00000155: 4a address += 4,  line += 0
            0x0000000000000093     44     16      1   0             0  is_stmt

0x00000156: 06 DW_LNS_negate_stmt
0x00000157: 03 DW_LNS_advance_line (0)
0x00000159: 74 address += 7,  line += 0
            0x000000000000009a      0     16      1   0             0 

0x0000015a: 05 DW_LNS_set_column (10)
0x0000015c: 06 DW_LNS_negate_stmt
0x0000015d: 03 DW_LNS_advance_line (45)
0x0000015f: 2e address += 2,  line += 0
            0x000000000000009c     45     10      1   0             0  is_stmt

0x00000160: 05 DW_LNS_set_column (18)
0x00000162: 06 DW_LNS_negate_stmt
0x00000163: 2e address += 2,  line += 0
            0x000000000000009e     45     18      1   0             0 

0x00000164: 05 DW_LNS_set_column (10)
0x00000166: 90 address += 9,  line += 0
            0x00000000000000a7     45     10      1   0             0 

0x00000167: 05 DW_LNS_set_column (23)
0x00000169: 2e address += 2,  line += 0
            0x00000000000000a9     45     23      1   0             0 

0x0000016a: 05 DW_LNS_set_column (16)
0x0000016c: 06 DW_LNS_negate_stmt
0x0000016d: 57 address += 5,  line += -1
            0x00000000000000ae     44     16      1   0             0  is_stmt

0x0000016e: 05 DW_LNS_set_column (0)
0x00000170: 06 DW_LNS_negate_stmt
0x00000171: 03 DW_LNS_advance_line (0)
0x00000173: 74 address += 7,  line += 0
            0x00000000000000b5      0      0      1   0             0 

0x00000174: 05 DW_LNS_set_column (7)
0x00000176: 03 DW_LNS_advance_line (44)
0x00000178: 4a address += 4,  line += 0
            0x00000000000000b9     44      7      1   0             0 

0x00000179: 05 DW_LNS_set_column (11)
0x0000017b: 06 DW_LNS_negate_stmt
0x0000017c: 68 address += 6,  line += 2
            0x00000000000000bf     46     11      1   0             0  is_stmt

0x0000017d: 05 DW_LNS_set_column (28)
0x0000017f: 06 DW_LNS_negate_stmt
0x00000180: ba address += 12,  line += 0
            0x00000000000000cb     46     28      1   0             0 

0x00000181: 05 DW_LNS_set_column (41)
0x00000183: 58 address += 5,  line += 0
            0x00000000000000d0     46     41      1   0             0 

0x00000184: 05 DW_LNS_set_column (21)
0x00000186: 06 DW_LNS_negate_stmt
0x00000187: 5a address += 5,  line += 2
            0x00000000000000d5     48     21      1   0             0  is_stmt

0x00000188: 05 DW_LNS_set_column (14)
0x0000018a: bc address += 12,  line += 2
            0x00000000000000e1     50     14      1   0             0  is_stmt

0x0000018b: 06 DW_LNS_negate_stmt
0x0000018c: 03 DW_LNS_advance_line (0)
0x0000018e: 74 address += 7,  line += 0
            0x00000000000000e8      0     14      1   0             0 

0x0000018f: 05 DW_LNS_set_column (38)
0x00000191: 06 DW_LNS_negate_stmt
0x00000192: 03 DW_LNS_advance_line (52)
0x00000194: ba address += 12,  line += 0
            0x00000000000000f4     52     38      1   0             0  is_stmt

0x00000195: 05 DW_LNS_set_column (0)
0x00000197: 06 DW_LNS_negate_stmt
0x00000198: 03 DW_LNS_advance_line (0)
0x0000019a: 74 address += 7,  line += 0
            0x00000000000000fb      0      0      1   0             0 

0x0000019b: 05 DW_LNS_set_column (22)
0x0000019d: 06 DW_LNS_negate_stmt
0x0000019e: 03 DW_LNS_advance_line (53)
0x000001a0: c8 address += 13,  line += 0
            0x0000000000000108     53     22      1   0             0  is_stmt

0x000001a1: 05 DW_LNS_set_column (24)
0x000001a3: e5 address += 15,  line += 1
            0x0000000000000117     54     24      1   0             0  is_stmt

0x000001a4: 05 DW_LNS_set_column (26)
0x000001a6: 06 DW_LNS_negate_stmt
0x000001a7: 2e address += 2,  line += 0
            0x0000000000000119     54     26      1   0             0 

0x000001a8: 05 DW_LNS_set_column (24)
0x000001aa: c8 address += 13,  line += 0
            0x0000000000000126     54     24      1   0             0 

0x000001ab: 06 DW_LNS_negate_stmt
0x000001ac: 3d address += 3,  line += 1
            0x0000000000000129     55     24      1   0             0  is_stmt

0x000001ad: 05 DW_LNS_set_column (44)
0x000001af: 71 address += 7,  line += -3
            0x0000000000000130     52     44      1   0             0  is_stmt

0x000001b0: 06 DW_LNS_negate_stmt
0x000001b1: 03 DW_LNS_advance_line (0)
0x000001b3: 58 address += 5,  line += 0
            0x0000000000000135      0     44      1   0             0 

0x000001b4: 05 DW_LNS_set_column (38)
0x000001b6: 03 DW_LNS_advance_line (52)
0x000001b8: 74 address += 7,  line += 0
            0x000000000000013c     52     38      1   0             0 

0x000001b9: 05 DW_LNS_set_column (13)
0x000001bb: 3c address += 3,  line += 0
            0x000000000000013f     52     13      1   0             0 

0x000001bc: 05 DW_LNS_set_column (19)
0x000001be: 06 DW_LNS_negate_stmt
0x000001bf: 50 address += 4,  line += 6
            0x0000000000000143     58     19      1   0             0  is_stmt

0x000001c0: 05 DW_LNS_set_column (21)
0x000001c2: e5 address += 15,  line += 1
            0x0000000000000152     59     21      1   0             0  is_stmt

0x000001c3: 05 DW_LNS_set_column (18)
0x000001c5: 72 address += 7,  line += -2
            0x0000000000000159     57     18      1   0             0  is_stmt

0x000001c6: 05 DW_LNS_set_column (0)
0x000001c8: 06 DW_LNS_negate_stmt
0x000001c9: 03 DW_LNS_advance_line (0)
0x000001cb: 74 address += 7,  line += 0
            0x0000000000000160      0      0      1   0             0 

0x000001cc: 05 DW_LNS_set_column (14)
0x000001ce: 06 DW_LNS_negate_stmt
0x000001cf: 03 DW_LNS_advance_line (62)
0x000001d1: 90 address += 9,  line += 0
            0x0000000000000169     62     14      1   0             0  is_stmt

0x000001d2: 05 DW_LNS_set_column (23)
0x000001d4: 06 DW_LNS_negate_stmt
0x000001d5: 4a address += 4,  line += 0
            0x000000000000016d     62     23      1   0             0 

0x000001d6: 05 DW_LNS_set_column (14)
0x000001d8: 58 address += 5,  line += 0
            0x0000000000000172     62     14      1   0             0 

0x000001d9: 03 DW_LNS_advance_line (0)
0x000001db: 3c address += 3,  line += 0
            0x0000000000000175      0     14      1   0             0 

0x000001dc: 05 DW_LNS_set_column (16)
0x000001de: 06 DW_LNS_negate_stmt
0x000001df: 03 DW_LNS_advance_line (66)
0x000001e2: 20 address += 1,  line += 0
            0x0000000000000176     66     16      1   0             0  is_stmt

0x000001e3: 06 DW_LNS_negate_stmt
0x000001e4: 03 DW_LNS_advance_line (0)
0x000001e7: 74 address += 7,  line += 0
            0x000000000000017d      0     16      1   0             0 

0x000001e8: 05 DW_LNS_set_column (27)
0x000001ea: 06 DW_LNS_negate_stmt
0x000001eb: 03 DW_LNS_advance_line (75)
0x000001ee: 82 address += 8,  line += 0
            0x0000000000000185     75     27      1   0             0  is_stmt

0x000001ef: 06 DW_LNS_negate_stmt
0x000001f0: 03 DW_LNS_advance_line (0)
0x000001f3: 74 address += 7,  line += 0
            0x000000000000018c      0     27      1   0             0 

0x000001f4: 05 DW_LNS_set_column (16)
0x000001f6: 06 DW_LNS_negate_stmt
0x000001f7: 03 DW_LNS_advance_line (76)
0x000001fa: 2e address += 2,  line += 0
            0x000000000000018e     76     16      1   0             0  is_stmt

0x000001fb: 05 DW_LNS_set_column (27)
0x000001fd: 06 DW_LNS_negate_stmt
0x000001fe: 82 address += 8,  line += 0
            0x0000000000000196     76     27      1   0             0 

0x000001ff: 05 DW_LNS_set_column (35)
0x00000201: 2e address += 2,  line += 0
            0x0000000000000198     76     35      1   0             0 

0x00000202: 05 DW_LNS_set_column (27)
0x00000204: 90 address += 9,  line += 0
            0x00000000000001a1     76     27      1   0             0 

0x00000205: 05 DW_LNS_set_column (25)
0x00000207: 58 address += 5,  line += 0
            0x00000000000001a6     76     25      1   0             0 

0x00000208: 05 DW_LNS_set_column (27)
0x0000020a: 06 DW_LNS_negate_stmt
0x0000020b: 3b address += 3,  line += -1
            0x00000000000001a9     75     27      1   0             0  is_stmt

0x0000020c: 05 DW_LNS_set_column (13)
0x0000020e: 06 DW_LNS_negate_stmt
0x0000020f: 58 address += 5,  line += 0
            0x00000000000001ae     75     13      1   0             0 

0x00000210: 05 DW_LNS_set_column (0)
0x00000212: 03 DW_LNS_advance_line (0)
0x00000215: 3c address += 3,  line += 0
            0x00000000000001b1      0      0      1   0             0 

0x00000216: 05 DW_LNS_set_column (13)
0x00000218: 06 DW_LNS_negate_stmt
0x00000219: 03 DW_LNS_advance_line (77)
0x0000021c: 58 address += 5,  line += 0
            0x00000000000001b6     77     13      1   0             0  is_stmt

0x0000021d: 05 DW_LNS_set_column (22)
0x0000021f: 06 DW_LNS_negate_stmt
0x00000220: 82 address += 8,  line += 0
            0x00000000000001be     77     22      1   0             0 

0x00000221: 05 DW_LNS_set_column (16)
0x00000223: 06 DW_LNS_negate_stmt
0x00000224: 5a address += 5,  line += 2
            0x00000000000001c3     79     16      1   0             0  is_stmt

0x00000225: 05 DW_LNS_set_column (14)
0x00000227: 06 DW_LNS_negate_stmt
0x00000228: 82 address += 8,  line += 0
            0x00000000000001cb     79     14      1   0             0 

0x00000229: 05 DW_LNS_set_column (25)
0x0000022b: e4 address += 15,  line += 0
            0x00000000000001da     79     25      1   0             0 

0x0000022c: 05 DW_LNS_set_column (11)
0x0000022e: 06 DW_LNS_negate_stmt
0x0000022f: 76 address += 7,  line += 2
            0x00000000000001e1     81     11      1   0             0  is_stmt

0x00000230: 05 DW_LNS_set_column (16)
0x00000232: 03 DW_LNS_advance_line (66)
0x00000234: 58 address += 5,  line += 0
            0x00000000000001e6     66     16      1   0             0  is_stmt

0x00000235: 05 DW_LNS_set_column (22)
0x00000237: 7c address += 7,  line += 8
            0x00000000000001ed     74     22      1   0             0  is_stmt

0x00000238: 05 DW_LNS_set_column (4)
0x0000023a: 03 DW_LNS_advance_line (37)
0x0000023c: 90 address += 9,  line += 0
            0x00000000000001f6     37      4      1   0             0  is_stmt

0x0000023d: 3e address += 3,  line += 2
            0x00000000000001f9     39      4      1   0             0  is_stmt

0x0000023e: 05 DW_LNS_set_column (16)
0x00000240: 06 DW_LNS_negate_stmt
0x00000241: 2e address += 2,  line += 0
            0x00000000000001fb     39     16      1   0             0 

0x00000242: 05 DW_LNS_set_column (4)
0x00000244: 90 address += 9,  line += 0
            0x0000000000000204     39      4      1   0             0 

0x00000245: 05 DW_LNS_set_column (23)
0x00000247: 2e address += 2,  line += 0
            0x0000000000000206     39     23      1   0             0 

0x00000248: 05 DW_LNS_set_column (19)
0x0000024a: 58 address += 5,  line += 0
            0x000000000000020b     39     19      1   0             0 

0x0000024b: 05 DW_LNS_set_column (4)
0x0000024d: 06 DW_LNS_negate_stmt
0x0000024e: 59 address += 5,  line += 1
            0x0000000000000210     40      4      1   0             0  is_stmt

0x0000024f: 05 DW_LNS_set_column (17)
0x00000251: 06 DW_LNS_negate_stmt
0x00000252: 82 address += 8,  line += 0
            0x0000000000000218     40     17      1   0             0 

0x00000253: 03 DW_LNS_advance_line (0)
0x00000255: 74 address += 7,  line += 0
            0x000000000000021f      0     17      1   0             0 

0x00000256: 05 DW_LNS_set_column (16)
0x00000258: 06 DW_LNS_negate_stmt
0x00000259: 03 DW_LNS_advance_line (44)
0x0000025b: 90 address += 9,  line += 0
            0x0000000000000228     44     16      1   0             0  is_stmt

0x0000025c: 06 DW_LNS_negate_stmt
0x0000025d: 03 DW_LNS_advance_line (0)
0x0000025f: 74 address += 7,  line += 0
            0x000000000000022f      0     16      1   0             0 

0x00000260: 05 DW_LNS_set_column (10)
0x00000262: 06 DW_LNS_negate_stmt
0x00000263: 03 DW_LNS_advance_line (45)
0x00000265: 2e address += 2,  line += 0
            0x0000000000000231     45     10      1   0             0  is_stmt

0x00000266: 05 DW_LNS_set_column (18)
0x00000268: 06 DW_LNS_negate_stmt
0x00000269: 2e address += 2,  line += 0
            0x0000000000000233     45     18      1   0             0 

0x0000026a: 05 DW_LNS_set_column (10)
0x0000026c: 90 address += 9,  line += 0
            0x000000000000023c     45     10      1   0             0 

0x0000026d: 05 DW_LNS_set_column (23)
0x0000026f: 2e address += 2,  line += 0
            0x000000000000023e     45     23      1   0             0 

0x00000270: 05 DW_LNS_set_column (16)
0x00000272: 06 DW_LNS_negate_stmt
0x00000273: 57 address += 5,  line += -1
            0x0000000000000243     44     16      1   0             0  is_stmt

0x00000274: 06 DW_LNS_negate_stmt
0x00000275: 03 DW_LNS_advance_line (0)
0x00000277: e4 address += 15,  line += 0
            0x0000000000000252      0     16      1   0             0 

0x00000278: 05 DW_LNS_set_column (11)
0x0000027a: 06 DW_LNS_negate_stmt
0x0000027b: 03 DW_LNS_advance_line (46)
0x0000027d: 2e address += 2,  line += 0
            0x0000000000000254     46     11      1   0             0  is_stmt

0x0000027e: 05 DW_LNS_set_column (28)
0x00000280: 06 DW_LNS_negate_stmt
0x00000281: ba address += 12,  line += 0
            0x0000000000000260     46     28      1   0             0 

0x00000282: 05 DW_LNS_set_column (41)
0x00000284: 58 address += 5,  line += 0
            0x0000000000000265     46     41      1   0             0 

0x00000285: 05 DW_LNS_set_column (14)
0x00000287: 06 DW_LNS_negate_stmt
0x00000288: 5c address += 5,  line += 4
            0x000000000000026a     50     14      1   0             0  is_stmt

0x00000289: 06 DW_LNS_negate_stmt
0x0000028a: 03 DW_LNS_advance_line (0)
0x0000028c: 74 address += 7,  line += 0
            0x0000000000000271      0     14      1   0             0 

0x0000028d: 05 DW_LNS_set_column (38)
0x0000028f: 06 DW_LNS_negate_stmt
0x00000290: 03 DW_LNS_advance_line (52)
0x00000292: ba address += 12,  line += 0
            0x000000000000027d     52     38      1   0             0  is_stmt

0x00000293: 05 DW_LNS_set_column (0)
0x00000295: 06 DW_LNS_negate_stmt
0x00000296: 03 DW_LNS_advance_line (0)
0x00000298: 74 address += 7,  line += 0
            0x0000000000000284      0      0      1   0             0 

0x00000299: 05 DW_LNS_set_column (22)
0x0000029b: 06 DW_LNS_negate_stmt
0x0000029c: 03 DW_LNS_advance_line (53)
0x0000029e: c8 address += 13,  line += 0
            0x0000000000000291     53     22      1   0             0  is_stmt

0x0000029f: 05 DW_LNS_set_column (24)
0x000002a1: e5 address += 15,  line += 1
            0x00000000000002a0     54     24      1   0             0  is_stmt

0x000002a2: 05 DW_LNS_set_column (26)
0x000002a4: 06 DW_LNS_negate_stmt
0x000002a5: 2e address += 2,  line += 0
            0x00000000000002a2     54     26      1   0             0 

0x000002a6: 05 DW_LNS_set_column (24)
0x000002a8: c8 address += 13,  line += 0
            0x00000000000002af     54     24      1   0             0 

0x000002a9: 06 DW_LNS_negate_stmt
0x000002aa: 3d address += 3,  line += 1
            0x00000000000002b2     55     24      1   0             0  is_stmt

0x000002ab: 05 DW_LNS_set_column (44)
0x000002ad: 71 address += 7,  line += -3
            0x00000000000002b9     52     44      1   0             0  is_stmt

0x000002ae: 06 DW_LNS_negate_stmt
0x000002af: 03 DW_LNS_advance_line (0)
0x000002b1: 58 address += 5,  line += 0
            0x00000000000002be      0     44      1   0             0 

0x000002b2: 05 DW_LNS_set_column (38)
0x000002b4: 03 DW_LNS_advance_line (52)
0x000002b6: 74 address += 7,  line += 0
            0x00000000000002c5     52     38      1   0             0 

0x000002b7: 03 DW_LNS_advance_line (0)
0x000002b9: 58 address += 5,  line += 0
            0x00000000000002ca      0     38      1   0             0 

0x000002ba: 05 DW_LNS_set_column (19)
0x000002bc: 06 DW_LNS_negate_stmt
0x000002bd: 03 DW_LNS_advance_line (58)
0x000002bf: 2e address += 2,  line += 0
            0x00000000000002cc     58     19      1   0             0  is_stmt

0x000002c0: 05 DW_LNS_set_column (21)
0x000002c2: e5 address += 15,  line += 1
            0x00000000000002db     59     21      1   0             0  is_stmt

0x000002c3: 05 DW_LNS_set_column (18)
0x000002c5: 72 address += 7,  line += -2
            0x00000000000002e2     57     18      1   0             0  is_stmt

0x000002c6: 05 DW_LNS_set_column (0)
0x000002c8: 06 DW_LNS_negate_stmt
0x000002c9: 03 DW_LNS_advance_line (0)
0x000002cb: 74 address += 7,  line += 0
            0x00000000000002e9      0      0      1   0             0 

0x000002cc: 05 DW_LNS_set_column (14)
0x000002ce: 06 DW_LNS_negate_stmt
0x000002cf: 03 DW_LNS_advance_line (62)
0x000002d1: 90 address += 9,  line += 0
            0x00000000000002f2     62     14      1   0             0  is_stmt

0x000002d2: 05 DW_LNS_set_column (23)
0x000002d4: 06 DW_LNS_negate_stmt
0x000002d5: 4a address += 4,  line += 0
            0x00000000000002f6     62     23      1   0             0 

0x000002d6: 05 DW_LNS_set_column (14)
0x000002d8: 58 address += 5,  line += 0
            0x00000000000002fb     62     14      1   0             0 

0x000002d9: 03 DW_LNS_advance_line (0)
0x000002db: 3c address += 3,  line += 0
            0x00000000000002fe      0     14      1   0             0 

0x000002dc: 05 DW_LNS_set_column (16)
0x000002de: 06 DW_LNS_negate_stmt
0x000002df: 03 DW_LNS_advance_line (66)
0x000002e2: 20 address += 1,  line += 0
            0x00000000000002ff     66     16      1   0             0  is_stmt

0x000002e3: 06 DW_LNS_negate_stmt
0x000002e4: 03 DW_LNS_advance_line (0)
0x000002e7: 74 address += 7,  line += 0
            0x0000000000000306      0     16      1   0             0 

0x000002e8: 05 DW_LNS_set_column (27)
0x000002ea: 06 DW_LNS_negate_stmt
0x000002eb: 03 DW_LNS_advance_line (75)
0x000002ee: 82 address += 8,  line += 0
            0x000000000000030e     75     27      1   0             0  is_stmt

0x000002ef: 06 DW_LNS_negate_stmt
0x000002f0: 03 DW_LNS_advance_line (0)
0x000002f3: 74 address += 7,  line += 0
            0x0000000000000315      0     27      1   0             0 

0x000002f4: 05 DW_LNS_set_column (16)
0x000002f6: 06 DW_LNS_negate_stmt
0x000002f7: 03 DW_LNS_advance_line (76)
0x000002fa: 2e address += 2,  line += 0
            0x0000000000000317     76     16      1   0             0  is_stmt

0x000002fb: 05 DW_LNS_set_column (27)
0x000002fd: 06 DW_LNS_negate_stmt
0x000002fe: 82 address += 8,  line += 0
            0x000000000000031f     76     27      1   0             0 

0x000002ff: 05 DW_LNS_set_column (35)
0x00000301: 2e address += 2,  line += 0
            0x0000000000000321     76     35      1   0             0 

0x00000302: 05 DW_LNS_set_column (27)
0x00000304: 90 address += 9,  line += 0
            0x000000000000032a     76     27      1   0             0 

0x00000305: 05 DW_LNS_set_column (25)
0x00000307: 58 address += 5,  line += 0
            0x000000000000032f     76     25      1   0             0 

0x00000308: 05 DW_LNS_set_column (27)
0x0000030a: 06 DW_LNS_negate_stmt
0x0000030b: 3b address += 3,  line += -1
            0x0000000000000332     75     27      1   0             0  is_stmt

0x0000030c: 06 DW_LNS_negate_stmt
0x0000030d: 03 DW_LNS_advance_line (0)
0x00000310: 74 address += 7,  line += 0
            0x0000000000000339      0     27      1   0             0 

0x00000311: 05 DW_LNS_set_column (13)
0x00000313: 06 DW_LNS_negate_stmt
0x00000314: 03 DW_LNS_advance_line (77)
0x00000317: 66 address += 6,  line += 0
            0x000000000000033f     77     13      1   0             0  is_stmt

0x00000318: 05 DW_LNS_set_column (22)
0x0000031a: 06 DW_LNS_negate_stmt
0x0000031b: 82 address += 8,  line += 0
            0x0000000000000347     77     22      1   0             0 

0x0000031c: 05 DW_LNS_set_column (16)
0x0000031e: 06 DW_LNS_negate_stmt
0x0000031f: 5a address += 5,  line += 2
            0x000000000000034c     79     16      1   0             0  is_stmt

0x00000320: 05 DW_LNS_set_column (14)
0x00000322: 06 DW_LNS_negate_stmt
0x00000323: 82 address += 8,  line += 0
            0x0000000000000354     79     14      1   0             0 

0x00000324: 05 DW_LNS_set_column (25)
0x00000326: e4 address += 15,  line += 0
            0x0000000000000363     79     25      1   0             0 

0x00000327: 05 DW_LNS_set_column (11)
0x00000329: 06 DW_LNS_negate_stmt
0x0000032a: 76 address += 7,  line += 2
            0x000000000000036a     81     11      1   0             0  is_stmt

0x0000032b: 05 DW_LNS_set_column (16)
0x0000032d: 03 DW_LNS_advance_line (66)
0x0000032f: 58 address += 5,  line += 0
            0x000000000000036f     66     16      1   0             0  is_stmt

0x00000330: 05 DW_LNS_set_column (22)
0x00000332: 7c address += 7,  line += 8
            0x0000000000000376     74     22      1   0             0  is_stmt

0x00000333: 06 DW_LNS_negate_stmt
0x00000334: 03 DW_LNS_advance_line (0)
0x00000337: 90 address += 9,  line += 0
            0x000000000000037f      0     22      1   0             0 

0x00000338: 05 DW_LNS_set_column (13)
0x0000033a: 06 DW_LNS_negate_stmt
0x0000033b: 03 DW_LNS_advance_line (67)
0x0000033e: 3c address += 3,  line += 0
            0x0000000000000382     67     13      1   0             0  is_stmt

0x0000033f: 83 address += 8,  line += 1
            0x000000000000038a     68     13      1   0             0  is_stmt

0x00000340: 83 address += 8,  line += 1
            0x0000000000000392     69     13      1   0             0  is_stmt

0x00000341: 83 address += 8,  line += 1
            0x000000000000039a     70     13      1   0             0  is_stmt

0x00000342: 02 DW_LNS_advance_pc (3)
0x00000344: 00 DW_LNE_end_sequence
            0x000000000000039d     70     13      1   0             0  is_stmt end_sequence

0x00000347: 00 DW_LNE_set_address (0x000000000000039f)
0x0000034e: 03 DW_LNS_advance_line (152)
0x00000351: 01 DW_LNS_copy
            0x000000000000039f    152      0      1   0             0  is_stmt


0x00000352: 05 DW_LNS_set_column (17)
0x00000354: 0a DW_LNS_set_prologue_end
0x00000355: 08 DW_LNS_const_add_pc (0x0000000000000011)
0x00000356: 91 address += 9,  line += 1
            0x00000000000003b9    153     17      1   0             0  is_stmt prologue_end

0x00000357: 05 DW_LNS_set_column (12)
0x00000359: 06 DW_LNS_negate_stmt
0x0000035a: 58 address += 5,  line += 0
            0x00000000000003be    153     12      1   0             0 

0x0000035b: 03 DW_LNS_advance_line (0)
0x0000035e: 2e address += 2,  line += 0
            0x00000000000003c0      0     12      1   0             0 

0x0000035f: 05 DW_LNS_set_column (28)
0x00000361: 03 DW_LNS_advance_line (153)
0x00000364: 4a address += 4,  line += 0
            0x00000000000003c4    153     28      1   0             0 

0x00000365: 05 DW_LNS_set_column (23)
0x00000367: 58 address += 5,  line += 0
            0x00000000000003c9    153     23      1   0             0 

0x00000368: 03 DW_LNS_advance_line (0)
0x0000036b: 66 address += 6,  line += 0
            0x00000000000003cf      0     23      1   0             0 

0x0000036c: 05 DW_LNS_set_column (10)
0x0000036e: 06 DW_LNS_negate_stmt
0x0000036f: 03 DW_LNS_advance_line (155)
0x00000372: 4a address += 4,  line += 0
            0x00000000000003d3    155     10      1   0             0  is_stmt

0x00000373: 05 DW_LNS_set_column (8)
0x00000375: 06 DW_LNS_negate_stmt
0x00000376: 20 address += 1,  line += 0
            0x00000000000003d4    155      8      1   0             0 

0x00000377: 03 DW_LNS_advance_line (0)
0x0000037a: 2e address += 2,  line += 0
            0x00000000000003d6      0      8      1   0             0 

0x0000037b: 05 DW_LNS_set_column (7)
0x0000037d: 06 DW_LNS_negate_stmt
0x0000037e: 03 DW_LNS_advance_line (156)
0x00000381: 20 address += 1,  line += 0
            0x00000000000003d7    156      7      1   0             0  is_stmt

0x00000382: 06 DW_LNS_negate_stmt
0x00000383: 03 DW_LNS_advance_line (0)
0x00000386: 08 DW_LNS_const_add_pc (0x0000000000000011)
0x00000387: 2e address += 2,  line += 0
            0x00000000000003ea      0      7      1   0             0 

0x00000388: 05 DW_LNS_set_column (18)
0x0000038a: 06 DW_LNS_negate_stmt
0x0000038b: 03 DW_LNS_advance_line (94)
0x0000038e: 3c address += 3,  line += 0
            0x00000000000003ed     94     18      1   0             0  is_stmt

0x0000038f: 05 DW_LNS_set_column (4)
0x00000391: 06 DW_LNS_negate_stmt
0x00000392: 58 address += 5,  line += 0
            0x00000000000003f2     94      4      1   0             0 

0x00000393: 03 DW_LNS_advance_line (0)
0x00000396: 08 DW_LNS_const_add_pc (0x0000000000000011)
0x00000397: 12 address += 0,  line += 0
            0x0000000000000403      0      4      1   0             0 

0x00000398: 05 DW_LNS_set_column (29)
0x0000039a: 06 DW_LNS_negate_stmt
0x0000039b: 03 DW_LNS_advance_line (95)
0x0000039e: 4a address += 4,  line += 0
            0x0000000000000407     95     29      1   0             0  is_stmt

0x0000039f: 05 DW_LNS_set_column (19)
0x000003a1: 69 address += 6,  line += 3
            0x000000000000040d     98     19      1   0             0  is_stmt

0x000003a2: 05 DW_LNS_set_column (16)
0x000003a4: 73 address += 7,  line += -1
            0x0000000000000414     97     16      1   0             0  is_stmt

0x000003a5: 73 address += 7,  line += -1
            0x000000000000041b     96     16      1   0             0  is_stmt

0x000003a6: 06 DW_LNS_negate_stmt
0x000003a7: 03 DW_LNS_advance_line (0)
0x000003aa: 74 address += 7,  line += 0
            0x0000000000000422      0     16      1   0             0 

0x000003ab: 05 DW_LNS_set_column (28)
0x000003ad: 06 DW_LNS_negate_stmt
0x000003ae: 03 DW_LNS_advance_line (94)
0x000003b1: 4a address += 4,  line += 0
            0x0000000000000426     94     28      1   0             0  is_stmt

0x000003b2: 05 DW_LNS_set_column (18)
0x000003b4: 06 DW_LNS_negate_stmt
0x000003b5: 58 address += 5,  line += 0
            0x000000000000042b     94     18      1   0             0 

0x000003b6: 05 DW_LNS_set_column (4)
0x000003b8: 58 address += 5,  line += 0
            0x0000000000000430     94      4      1   0             0 

0x000003b9: 03 DW_LNS_advance_line (0)
0x000003bc: 4a address += 4,  line += 0
            0x0000000000000434      0      4      1   0             0 

0x000003bd: 05 DW_LNS_set_column (27)
0x000003bf: 06 DW_LNS_negate_stmt
0x000003c0: 03 DW_LNS_advance_line (102)
0x000003c3: 4a address += 4,  line += 0
            0x0000000000000438    102     27      1   0             0  is_stmt

0x000003c4: 05 DW_LNS_set_column (18)
0x000003c6: 06 DW_LNS_negate_stmt
0x000003c7: 58 address += 5,  line += 0
            0x000000000000043d    102     18      1   0             0 

0x000003c8: 06 DW_LNS_negate_stmt
0x000003c9: 9f address += 10,  line += 1
            0x0000000000000447    103     18      1   0             0  is_stmt

0x000003ca: 06 DW_LNS_negate_stmt
0x000003cb: 03 DW_LNS_advance_line (0)
0x000003ce: 9e address += 10,  line += 0
            0x0000000000000451      0     18      1   0             0 

0x000003cf: 06 DW_LNS_negate_stmt
0x000003d0: 03 DW_LNS_advance_line (105)
0x000003d3: 82 address += 8,  line += 0
            0x0000000000000459    105     18      1   0             0  is_stmt

0x000003d4: 05 DW_LNS_set_column (4)
0x000003d6: 06 DW_LNS_negate_stmt
0x000003d7: 58 address += 5,  line += 0
            0x000000000000045e    105      4      1   0             0 

0x000003d8: 03 DW_LNS_advance_line (0)
0x000003db: 2e address += 2,  line += 0
            0x0000000000000460      0      4      1   0             0 

0x000003dc: 05 DW_LNS_set_column (7)
0x000003de: 06 DW_LNS_negate_stmt
0x000003df: 03 DW_LNS_advance_line (106)
0x000003e2: 2e address += 2,  line += 0
            0x0000000000000462    106      7      1   0             0  is_stmt

0x000003e3: 05 DW_LNS_set_column (16)
0x000003e5: 06 DW_LNS_negate_stmt
0x000003e6: 82 address += 8,  line += 0
            0x000000000000046a    106     16      1   0             0 

0x000003e7: 05 DW_LNS_set_column (24)
0x000003e9: 06 DW_LNS_negate_stmt
0x000003ea: 57 address += 5,  line += -1
            0x000000000000046f    105     24      1   0             0  is_stmt

0x000003eb: 05 DW_LNS_set_column (18)
0x000003ed: 06 DW_LNS_negate_stmt
0x000003ee: 58 address += 5,  line += 0
            0x0000000000000474    105     18      1   0             0 

0x000003ef: 03 DW_LNS_advance_line (0)
0x000003f2: 74 address += 7,  line += 0
            0x000000000000047b      0     18      1   0             0 

0x000003f3: 05 DW_LNS_set_column (13)
0x000003f5: 06 DW_LNS_negate_stmt
0x000003f6: 03 DW_LNS_advance_line (112)
0x000003f9: 08 DW_LNS_const_add_pc (0x0000000000000011)
0x000003fa: d6 address += 14,  line += 0
            0x000000000000049a    112     13      1   0             0  is_stmt

0x000003fb: 05 DW_LNS_set_column (26)
0x000003fd: 06 DW_LNS_negate_stmt
0x000003fe: 2e address += 2,  line += 0
            0x000000000000049c    112     26      1   0             0 

0x000003ff: 05 DW_LNS_set_column (35)
0x00000401: c8 address += 13,  line += 0
            0x00000000000004a9    112     35      1   0             0 

0x00000402: 05 DW_LNS_set_column (13)
0x00000404: 20 address += 1,  line += 0
            0x00000000000004aa    112     13      1   0             0 

0x00000405: 05 DW_LNS_set_column (30)
0x00000407: 06 DW_LNS_negate_stmt
0x00000408: 08 DW_LNS_const_add_pc (0x0000000000000011)
0x00000409: 49 address += 4,  line += -1
            0x00000000000004bf    111     30      1   0             0  is_stmt

0x0000040a: 05 DW_LNS_set_column (24)
0x0000040c: 06 DW_LNS_negate_stmt
0x0000040d: 58 address += 5,  line += 0
            0x00000000000004c4    111     24      1   0             0 

0x0000040e: 05 DW_LNS_set_column (10)
0x00000410: 58 address += 5,  line += 0
            0x00000000000004c9    111     10      1   0             0 

0x00000411: 06 DW_LNS_negate_stmt
0x00000412: 5a address += 5,  line += 2
            0x00000000000004ce    113     10      1   0             0  is_stmt

0x00000413: 06 DW_LNS_negate_stmt
0x00000414: 03 DW_LNS_advance_line (0)
0x00000417: 74 address += 7,  line += 0
            0x00000000000004d5      0     10      1   0             0 

0x00000418: 05 DW_LNS_set_column (16)
0x0000041a: 06 DW_LNS_negate_stmt
0x0000041b: 03 DW_LNS_advance_line (118)
0x0000041e: 2e address += 2,  line += 0
            0x00000000000004d7    118     16      1   0             0  is_stmt

0x0000041f: 05 DW_LNS_set_column (7)
0x00000421: 06 DW_LNS_negate_stmt
0x00000422: 58 address += 5,  line += 0
            0x00000000000004dc    118      7      1   0             0 

0x00000423: 03 DW_LNS_advance_line (0)
0x00000426: 2e address += 2,  line += 0
            0x00000000000004de      0      7      1   0             0 

0x00000427: 05 DW_LNS_set_column (10)
0x00000429: 06 DW_LNS_negate_stmt
0x0000042a: 03 DW_LNS_advance_line (119)
0x0000042d: 2e address += 2,  line += 0
            0x00000000000004e0    119     10      1   0             0  is_stmt

0x0000042e: 05 DW_LNS_set_column (18)
0x00000430: 06 DW_LNS_negate_stmt
0x00000431: 2e address += 2,  line += 0
            0x00000000000004e2    119     18      1   0             0 

0x00000432: 05 DW_LNS_set_column (10)
0x00000434: 90 address += 9,  line += 0
            0x00000000000004eb    119     10      1   0             0 

0x00000435: 05 DW_LNS_set_column (23)
0x00000437: 2e address += 2,  line += 0
            0x00000000000004ed    119     23      1   0             0 

0x00000438: 05 DW_LNS_set_column (16)
0x0000043a: 06 DW_LNS_negate_stmt
0x0000043b: 57 address += 5,  line += -1
            0x00000000000004f2    118     16      1   0             0  is_stmt

0x0000043c: 05 DW_LNS_set_column (7)
0x0000043e: 06 DW_LNS_negate_stmt
0x0000043f: ac address += 11,  line += 0
            0x00000000000004fd    118      7      1   0             0 

0x00000440: 05 DW_LNS_set_column (16)
0x00000442: 06 DW_LNS_negate_stmt
0x00000443: 6a address += 6,  line += 4
            0x0000000000000503    122     16      1   0             0  is_stmt

0x00000444: 06 DW_LNS_negate_stmt
0x00000445: 03 DW_LNS_advance_line (0)
0x00000448: 74 address += 7,  line += 0
            0x000000000000050a      0     16      1   0             0 

0x00000449: 05 DW_LNS_set_column (22)
0x0000044b: 06 DW_LNS_negate_stmt
0x0000044c: 03 DW_LNS_advance_line (125)
0x0000044f: c8 address += 13,  line += 0
            0x0000000000000517    125     22      1   0             0  is_stmt

0x00000450: 06 DW_LNS_negate_stmt
0x00000451: 03 DW_LNS_advance_line (0)
0x00000454: 74 address += 7,  line += 0
            0x000000000000051e      0     22      1   0             0 

0x00000455: 05 DW_LNS_set_column (27)
0x00000457: 06 DW_LNS_negate_stmt
0x00000458: 03 DW_LNS_advance_line (126)
0x0000045b: 2e address += 2,  line += 0
            0x0000000000000520    126     27      1   0             0  is_stmt

0x0000045c: 05 DW_LNS_set_column (13)
0x0000045e: 06 DW_LNS_negate_stmt
0x0000045f: 58 address += 5,  line += 0
            0x0000000000000525    126     13      1   0             0 

0x00000460: 03 DW_LNS_advance_line (0)
0x00000463: 2e address += 2,  line += 0
            0x0000000000000527      0     13      1   0             0 

0x00000464: 05 DW_LNS_set_column (16)
0x00000466: 06 DW_LNS_negate_stmt
0x00000467: 03 DW_LNS_advance_line (127)
0x0000046a: 2e address += 2,  line += 0
            0x0000000000000529    127     16      1   0             0  is_stmt

0x0000046b: 05 DW_LNS_set_column (27)
0x0000046d: 06 DW_LNS_negate_stmt
0x0000046e: 82 address += 8,  line += 0
            0x0000000000000531    127     27      1   0             0 

0x0000046f: 05 DW_LNS_set_column (35)
0x00000471: 2e address += 2,  line += 0
            0x0000000000000533    127     35      1   0             0 

0x00000472: 05 DW_LNS_set_column (27)
0x00000474: 90 address += 9,  line += 0
            0x000000000000053c    127     27      1   0             0 

0x00000475: 05 DW_LNS_set_column (25)
0x00000477: 58 address += 5,  line += 0
            0x0000000000000541    127     25      1   0             0 

0x00000478: 05 DW_LNS_set_column (27)
0x0000047a: 06 DW_LNS_negate_stmt
0x0000047b: 3b address += 3,  line += -1
            0x0000000000000544    126     27      1   0             0  is_stmt

0x0000047c: 05 DW_LNS_set_column (13)
0x0000047e: 06 DW_LNS_negate_stmt
0x0000047f: 58 address += 5,  line += 0
            0x0000000000000549    126     13      1   0             0 

0x00000480: 05 DW_LNS_set_column (0)
0x00000482: 03 DW_LNS_advance_line (0)
0x00000485: 3c address += 3,  line += 0
            0x000000000000054c      0      0      1   0             0 

0x00000486: 05 DW_LNS_set_column (13)
0x00000488: 06 DW_LNS_negate_stmt
0x00000489: 03 DW_LNS_advance_line (128)
0x0000048c: 58 address += 5,  line += 0
            0x0000000000000551    128     13      1   0             0  is_stmt

0x0000048d: 05 DW_LNS_set_column (22)
0x0000048f: 06 DW_LNS_negate_stmt
0x00000490: 82 address += 8,  line += 0
            0x0000000000000559    128     22      1   0             0 

0x00000491: 05 DW_LNS_set_column (16)
0x00000493: 06 DW_LNS_negate_stmt
0x00000494: 5a address += 5,  line += 2
            0x000000000000055e    130     16      1   0             0  is_stmt

0x00000495: 05 DW_LNS_set_column (14)
0x00000497: 06 DW_LNS_negate_stmt
0x00000498: 82 address += 8,  line += 0
            0x0000000000000566    130     14      1   0             0 

0x00000499: 05 DW_LNS_set_column (25)
0x0000049b: 08 DW_LNS_const_add_pc (0x0000000000000011)
0x0000049c: 12 address += 0,  line += 0
            0x0000000000000577    130     25      1   0             0 

0x0000049d: 05 DW_LNS_set_column (14)
0x0000049f: 58 address += 5,  line += 0
            0x000000000000057c    130     14      1   0             0 

0x000004a0: 05 DW_LNS_set_column (11)
0x000004a2: 06 DW_LNS_negate_stmt
0x000004a3: 31 address += 2,  line += 3
            0x000000000000057e    133     11      1   0             0  is_stmt

0x000004a4: 05 DW_LNS_set_column (16)
0x000004a6: 03 DW_LNS_advance_line (122)
0x000004a8: 58 address += 5,  line += 0
            0x0000000000000583    122     16      1   0             0  is_stmt

0x000004a9: 05 DW_LNS_set_column (14)
0x000004ab: 06 DW_LNS_negate_stmt
0x000004ac: 58 address += 5,  line += 0
            0x0000000000000588    122     14      1   0             0 

0x000004ad: 03 DW_LNS_advance_line (0)
0x000004b0: 4a address += 4,  line += 0
            0x000000000000058c      0     14      1   0             0 

0x000004b1: 06 DW_LNS_negate_stmt
0x000004b2: 03 DW_LNS_advance_line (130)
0x000004b5: 20 address += 1,  line += 0
            0x000000000000058d    130     14      1   0             0  is_stmt

0x000004b6: 05 DW_LNS_set_column (11)
0x000004b8: 03 DW_LNS_advance_line (110)
0x000004ba: 20 address += 1,  line += 0
            0x000000000000058e    110     11      1   0             0  is_stmt

0x000004bb: 06 DW_LNS_negate_stmt
0x000004bc: 03 DW_LNS_advance_line (0)
0x000004bf: 74 address += 7,  line += 0
            0x0000000000000595      0     11      1   0             0 

0x000004c0: 05 DW_LNS_set_column (10)
0x000004c2: 06 DW_LNS_negate_stmt
0x000004c3: 03 DW_LNS_advance_line (113)
0x000004c6: 66 address += 6,  line += 0
            0x000000000000059b    113     10      1   0             0  is_stmt

0x000004c7: 06 DW_LNS_negate_stmt
0x000004c8: 03 DW_LNS_advance_line (0)
0x000004cb: 74 address += 7,  line += 0
            0x00000000000005a2      0     10      1   0             0 

0x000004cc: 05 DW_LNS_set_column (16)
0x000004ce: 06 DW_LNS_negate_stmt
0x000004cf: 03 DW_LNS_advance_line (118)
0x000004d2: 2e address += 2,  line += 0
            0x00000000000005a4    118     16      1   0             0  is_stmt

0x000004d3: 05 DW_LNS_set_column (7)
0x000004d5: 06 DW_LNS_negate_stmt
0x000004d6: 58 address += 5,  line += 0
            0x00000000000005a9    118      7      1   0             0 

0x000004d7: 03 DW_LNS_advance_line (0)
0x000004da: 2e address += 2,  line += 0
            0x00000000000005ab      0      7      1   0             0 

0x000004db: 05 DW_LNS_set_column (10)
0x000004dd: 06 DW_LNS_negate_stmt
0x000004de: 03 DW_LNS_advance_line (119)
0x000004e1: 2e address += 2,  line += 0
            0x00000000000005ad    119     10      1   0             0  is_stmt

0x000004e2: 05 DW_LNS_set_column (18)
0x000004e4: 06 DW_LNS_negate_stmt
0x000004e5: 2e address += 2,  line += 0
            0x00000000000005af    119     18      1   0             0 

0x000004e6: 05 DW_LNS_set_column (10)
0x000004e8: 90 address += 9,  line += 0
            0x00000000000005b8    119     10      1   0             0 

0x000004e9: 05 DW_LNS_set_column (23)
0x000004eb: 2e address += 2,  line += 0
            0x00000000000005ba    119     23      1   0             0 

0x000004ec: 05 DW_LNS_set_column (16)
0x000004ee: 06 DW_LNS_negate_stmt
0x000004ef: 57 address += 5,  line += -1
            0x00000000000005bf    118     16      1   0             0  is_stmt

0x000004f0: 05 DW_LNS_set_column (0)
0x000004f2: 06 DW_LNS_negate_stmt
0x000004f3: 03 DW_LNS_advance_line (0)
0x000004f6: 74 address += 7,  line += 0
            0x00000000000005c6      0      0      1   0             0 

0x000004f7: 05 DW_LNS_set_column (7)
0x000004f9: 03 DW_LNS_advance_line (118)
0x000004fc: 4a address += 4,  line += 0
            0x00000000000005ca    118      7      1   0             0 

0x000004fd: 05 DW_LNS_set_column (16)
0x000004ff: 06 DW_LNS_negate_stmt
0x00000500: 6a address += 6,  line += 4
            0x00000000000005d0    122     16      1   0             0  is_stmt

0x00000501: 05 DW_LNS_set_column (14)
0x00000503: 06 DW_LNS_negate_stmt
0x00000504: 58 address += 5,  line += 0
            0x00000000000005d5    122     14      1   0             0 

0x00000505: 03 DW_LNS_advance_line (0)
0x00000508: 2e address += 2,  line += 0
            0x00000000000005d7      0     14      1   0             0 

0x00000509: 05 DW_LNS_set_column (22)
0x0000050b: 06 DW_LNS_negate_stmt
0x0000050c: 03 DW_LNS_advance_line (125)
0x0000050f: 74 address += 7,  line += 0
            0x00000000000005de    125     22      1   0             0  is_stmt

0x00000510: 06 DW_LNS_negate_stmt
0x00000511: 03 DW_LNS_advance_line (0)
0x00000514: 90 address += 9,  line += 0
            0x00000000000005e7      0     22      1   0             0 

0x00000515: 05 DW_LNS_set_column (27)
0x00000517: 06 DW_LNS_negate_stmt
0x00000518: 03 DW_LNS_advance_line (126)
0x0000051b: 66 address += 6,  line += 0
            0x00000000000005ed    126     27      1   0             0  is_stmt

0x0000051c: 05 DW_LNS_set_column (13)
0x0000051e: 06 DW_LNS_negate_stmt
0x0000051f: 58 address += 5,  line += 0
            0x00000000000005f2    126     13      1   0             0 

0x00000520: 03 DW_LNS_advance_line (0)
0x00000523: 2e address += 2,  line += 0
            0x00000000000005f4      0     13      1   0             0 

0x00000524: 05 DW_LNS_set_column (16)
0x00000526: 06 DW_LNS_negate_stmt
0x00000527: 03 DW_LNS_advance_line (127)
0x0000052a: 2e address += 2,  line += 0
            0x00000000000005f6    127     16      1   0             0  is_stmt

0x0000052b: 05 DW_LNS_set_column (27)
0x0000052d: 06 DW_LNS_negate_stmt
0x0000052e: 82 address += 8,  line += 0
            0x00000000000005fe    127     27      1   0             0 

0x0000052f: 05 DW_LNS_set_column (35)
0x00000531: 2e address += 2,  line += 0
            0x0000000000000600    127     35      1   0             0 

0x00000532: 05 DW_LNS_set_column (27)
0x00000534: 90 address += 9,  line += 0
            0x0000000000000609    127     27      1   0             0 

0x00000535: 05 DW_LNS_set_column (25)
0x00000537: 58 address += 5,  line += 0
            0x000000000000060e    127     25      1   0             0 

0x00000538: 05 DW_LNS_set_column (27)
0x0000053a: 06 DW_LNS_negate_stmt
0x0000053b: 3b address += 3,  line += -1
            0x0000000000000611    126     27      1   0             0  is_stmt

0x0000053c: 05 DW_LNS_set_column (13)
0x0000053e: 06 DW_LNS_negate_stmt
0x0000053f: 58 address += 5,  line += 0
            0x0000000000000616    126     13      1   0             0 

0x00000540: 05 DW_LNS_set_column (0)
0x00000542: 03 DW_LNS_advance_line (0)
0x00000545: 3c address += 3,  line += 0
            0x0000000000000619      0      0      1   0             0 

0x00000546: 05 DW_LNS_set_column (13)
0x00000548: 06 DW_LNS_negate_stmt
0x00000549: 03 DW_LNS_advance_line (128)
0x0000054c: 58 address += 5,  line += 0
            0x000000000000061e    128     13      1   0             0  is_stmt

0x0000054d: 05 DW_LNS_set_column (22)
0x0000054f: 06 DW_LNS_negate_stmt
0x00000550: 82 address += 8,  line += 0
            0x0000000000000626    128     22      1   0             0 

0x00000551: 05 DW_LNS_set_column (16)
0x00000553: 06 DW_LNS_negate_stmt
0x00000554: 5a address += 5,  line += 2
            0x000000000000062b    130     16      1   0             0  is_stmt

0x00000555: 05 DW_LNS_set_column (14)
0x00000557: 06 DW_LNS_negate_stmt
0x00000558: 82 address += 8,  line += 0
            0x0000000000000633    130     14      1   0             0 

0x00000559: 05 DW_LNS_set_column (25)
0x0000055b: 08 DW_LNS_const_add_pc (0x0000000000000011)
0x0000055c: 12 address += 0,  line += 0
            0x0000000000000644    130     25      1   0             0 

0x0000055d: 05 DW_LNS_set_column (14)
0x0000055f: 58 address += 5,  line += 0
            0x0000000000000649    130     14      1   0             0 

0x00000560: 05 DW_LNS_set_column (11)
0x00000562: 06 DW_LNS_negate_stmt
0x00000563: 31 address += 2,  line += 3
            0x000000000000064b    133     11      1   0             0  is_stmt

0x00000564: 05 DW_LNS_set_column (16)
0x00000566: 03 DW_LNS_advance_line (122)
0x00000568: 58 address += 5,  line += 0
            0x0000000000000650    122     16      1   0             0  is_stmt

0x00000569: 05 DW_LNS_set_column (14)
0x0000056b: 06 DW_LNS_negate_stmt
0x0000056c: 58 address += 5,  line += 0
            0x0000000000000655    122     14      1   0             0 

0x0000056d: 03 DW_LNS_advance_line (0)
0x00000570: 4a address += 4,  line += 0
            0x0000000000000659      0     14      1   0             0 

0x00000571: 06 DW_LNS_negate_stmt
0x00000572: 03 DW_LNS_advance_line (130)
0x00000575: 20 address += 1,  line += 0
            0x000000000000065a    130     14      1   0             0  is_stmt

0x00000576: 05 DW_LNS_set_column (11)
0x00000578: 03 DW_LNS_advance_line (110)
0x0000057a: 20 address += 1,  line += 0
            0x000000000000065b    110     11      1   0             0  is_stmt

0x0000057b: 05 DW_LNS_set_column (4)
0x0000057d: 03 DW_LNS_advance_line (138)
0x0000057f: 66 address += 6,  line += 0
            0x0000000000000661    138      4      1   0             0  is_stmt

0x00000580: 83 address += 8,  line += 1
            0x0000000000000669    139      4      1   0             0  is_stmt

0x00000581: 06 DW_LNS_negate_stmt
0x00000582: 03 DW_LNS_advance_line (0)
0x00000585: 82 address += 8,  line += 0
            0x0000000000000671      0      4      1   0             0 

0x00000586: 06 DW_LNS_negate_stmt
0x00000587: 03 DW_LNS_advance_line (141)
0x0000058a: 82 address += 8,  line += 0
            0x0000000000000679    141      4      1   0             0  is_stmt

0x0000058b: 06 DW_LNS_negate_stmt
0x0000058c: 03 DW_LNS_advance_line (0)
0x0000058f: 74 address += 7,  line += 0
            0x0000000000000680      0      4      1   0             0 

0x00000590: 05 DW_LNS_set_column (20)
0x00000592: 06 DW_LNS_negate_stmt
0x00000593: 03 DW_LNS_advance_line (142)
0x00000596: 4a address += 4,  line += 0
            0x0000000000000684    142     20      1   0             0  is_stmt

0x00000597: be address += 12,  line += 4
            0x0000000000000690    146     20      1   0             0  is_stmt

0x00000598: 05 DW_LNS_set_column (7)
0x0000059a: 75 address += 7,  line += 1
            0x0000000000000697    147      7      1   0             0  is_stmt

0x0000059b: 05 DW_LNS_set_column (11)
0x0000059d: 7e address += 8,  line += -4
            0x000000000000069f    143     11      1   0             0  is_stmt

0x0000059e: 05 DW_LNS_set_column (20)
0x000005a0: 06 DW_LNS_negate_stmt
0x000005a1: 4a address += 4,  line += 0
            0x00000000000006a3    143     20      1   0             0 

0x000005a2: 05 DW_LNS_set_column (11)
0x000005a4: 58 address += 5,  line += 0
            0x00000000000006a8    143     11      1   0             0 

0x000005a5: 03 DW_LNS_advance_line (0)
0x000005a8: 3c address += 3,  line += 0
            0x00000000000006ab      0     11      1   0             0 

0x000005a9: 05 DW_LNS_set_column (4)
0x000005ab: 06 DW_LNS_negate_stmt
0x000005ac: 03 DW_LNS_advance_line (141)
0x000005af: 4a address += 4,  line += 0
            0x00000000000006af    141      4      1   0             0  is_stmt

0x000005b0: 03 DW_LNS_advance_line (159)
0x000005b2: 66 address += 6,  line += 0
            0x00000000000006b5    159      4      1   0             0  is_stmt

0x000005b3: 06 DW_LNS_negate_stmt
0x000005b4: 03 DW_LNS_advance_line (0)
0x000005b7: 08 DW_LNS_const_add_pc (0x0000000000000011)
0x000005b8: ba address += 12,  line += 0
            0x00000000000006d2      0      4      1   0             0 

0x000005b9: 05 DW_LNS_set_column (1)
0x000005bb: 06 DW_LNS_negate_stmt
0x000005bc: 03 DW_LNS_advance_line (161)
0x000005bf: 20 address += 1,  line += 0
            0x00000000000006d3    161      1      1   0             0  is_stmt

0x000005c0: 02 DW_LNS_advance_pc (14)
0x000005c2: 00 DW_LNE_end_sequence
            0x00000000000006e1    161      1      1   0             0  is_stmt end_sequence


.debug_str contents:
0x00000000: "clang version 11.0.0 (https://github.com/llvm/llvm-project.git 313d89724ce3ccf66c1c51849903e1e6d184dd85)"
0x00000069: "/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp"
0x000000a9: "/usr/local/google/home/azakai/Dev/2-binaryen"
0x000000d6: "i"
0x000000d8: "int"
0x000000dc: "n"
0x000000de: "next"
0x000000e3: "worker_args"
0x000000ef: "std"
0x000000f3: "decltype(nullptr)"
0x00000105: "nullptr_t"
0x0000010f: "free"
0x00000114: "_ZL8fannkuchi"
0x00000122: "fannkuch"
0x0000012b: "showmax"
0x00000133: "args"
0x00000138: "targs"
0x0000013e: "perm1"
0x00000144: "count"
0x0000014a: "r"
0x0000014c: "maxflips"
0x00000155: "flips"
0x0000015b: "cleanup"
0x00000163: "p0"
0x00000166: "_Z15fannkuch_workerPv"
0x0000017c: "fannkuch_worker"
0x0000018c: "main"
0x00000191: "_arg"
0x00000196: "perm"
0x0000019b: "k"
0x0000019d: "j"
0x0000019f: "tmp"
0x000001a3: "argc"
0x000001a8: "argv"
0x000001ad: "char"

.debug_ranges contents:
00000000 00000185 000001c3
00000000 000001ed 000001f6
00000000 0000030e 0000034c
00000000 00000376 0000037f
00000000 <End of list>
00000028 00000517 0000055e
00000028 000005de 0000062b
00000028 <End of list>
00000040 00000006 0000039d
00000040 0000039f 000006e1
00000040 <End of list>
DWARF debug info
================

Contains section .debug_info (851 bytes)
Contains section .debug_loc (1073 bytes)
Contains section .debug_ranges (88 bytes)
Contains section .debug_abbrev (333 bytes)
Contains section .debug_line (2826 bytes)
Contains section .debug_str (434 bytes)

.debug_abbrev contents:
Abbrev table for offset: 0x00000000
[1] DW_TAG_compile_unit	DW_CHILDREN_yes
	DW_AT_producer	DW_FORM_strp
	DW_AT_language	DW_FORM_data2
	DW_AT_name	DW_FORM_strp
	DW_AT_stmt_list	DW_FORM_sec_offset
	DW_AT_comp_dir	DW_FORM_strp
	DW_AT_low_pc	DW_FORM_addr
	DW_AT_ranges	DW_FORM_sec_offset

[2] DW_TAG_pointer_type	DW_CHILDREN_no
	DW_AT_type	DW_FORM_ref4

[3] DW_TAG_structure_type	DW_CHILDREN_yes
	DW_AT_calling_convention	DW_FORM_data1
	DW_AT_name	DW_FORM_strp
	DW_AT_byte_size	DW_FORM_data1
	DW_AT_decl_file	DW_FORM_data1
	DW_AT_decl_line	DW_FORM_data1

[4] DW_TAG_member	DW_CHILDREN_no
	DW_AT_name	DW_FORM_strp
	DW_AT_type	DW_FORM_ref4
	DW_AT_decl_file	DW_FORM_data1
	DW_AT_decl_line	DW_FORM_data1
	DW_AT_data_member_location	DW_FORM_data1

[5] DW_TAG_base_type	DW_CHILDREN_no
	DW_AT_name	DW_FORM_strp
	DW_AT_encoding	DW_FORM_data1
	DW_AT_byte_size	DW_FORM_data1

[6] DW_TAG_namespace	DW_CHILDREN_yes
	DW_AT_name	DW_FORM_strp

[7] DW_TAG_typedef	DW_CHILDREN_no
	DW_AT_type	DW_FORM_ref4
	DW_AT_name	DW_FORM_strp
	DW_AT_decl_file	DW_FORM_data1
	DW_AT_decl_line	DW_FORM_data1

[8] DW_TAG_unspecified_type	DW_CHILDREN_no
	DW_AT_name	DW_FORM_strp

[9] DW_TAG_imported_declaration	DW_CHILDREN_no
	DW_AT_decl_file	DW_FORM_data1
	DW_AT_decl_line	DW_FORM_data1
	DW_AT_import	DW_FORM_ref4

[10] DW_TAG_subprogram	DW_CHILDREN_yes
	DW_AT_low_pc	DW_FORM_addr
	DW_AT_high_pc	DW_FORM_data4
	DW_AT_frame_base	DW_FORM_exprloc
	DW_AT_GNU_all_call_sites	DW_FORM_flag_present
	DW_AT_linkage_name	DW_FORM_strp
	DW_AT_name	DW_FORM_strp
	DW_AT_decl_file	DW_FORM_data1
	DW_AT_decl_line	DW_FORM_data1
	DW_AT_type	DW_FORM_ref4
	DW_AT_external	DW_FORM_flag_present

[11] DW_TAG_formal_parameter	DW_CHILDREN_no
	DW_AT_name	DW_FORM_strp
	DW_AT_decl_file	DW_FORM_data1
	DW_AT_decl_line	DW_FORM_data1
	DW_AT_type	DW_FORM_ref4

[12] DW_TAG_variable	DW_CHILDREN_no
	DW_AT_name	DW_FORM_strp
	DW_AT_decl_file	DW_FORM_data1
	DW_AT_decl_line	DW_FORM_data1
	DW_AT_type	DW_FORM_ref4

[13] DW_TAG_variable	DW_CHILDREN_no
	DW_AT_location	DW_FORM_sec_offset
	DW_AT_name	DW_FORM_strp
	DW_AT_decl_file	DW_FORM_data1
	DW_AT_decl_line	DW_FORM_data1
	DW_AT_type	DW_FORM_ref4

[14] DW_TAG_lexical_block	DW_CHILDREN_yes
	DW_AT_ranges	DW_FORM_sec_offset

[15] DW_TAG_GNU_call_site	DW_CHILDREN_no
	DW_AT_low_pc	DW_FORM_addr

[16] DW_TAG_GNU_call_site	DW_CHILDREN_no
	DW_AT_abstract_origin	DW_FORM_ref4
	DW_AT_low_pc	DW_FORM_addr

[17] DW_TAG_subprogram	DW_CHILDREN_yes
	DW_AT_name	DW_FORM_strp
	DW_AT_decl_file	DW_FORM_data1
	DW_AT_decl_line	DW_FORM_data1
	DW_AT_declaration	DW_FORM_flag_present
	DW_AT_external	DW_FORM_flag_present

[18] DW_TAG_formal_parameter	DW_CHILDREN_no
	DW_AT_type	DW_FORM_ref4

[19] DW_TAG_pointer_type	DW_CHILDREN_no

[20] DW_TAG_subprogram	DW_CHILDREN_yes
	DW_AT_linkage_name	DW_FORM_strp
	DW_AT_name	DW_FORM_strp
	DW_AT_decl_file	DW_FORM_data1
	DW_AT_decl_line	DW_FORM_data1
	DW_AT_type	DW_FORM_ref4
	DW_AT_inline	DW_FORM_data1

[21] DW_TAG_label	DW_CHILDREN_no
	DW_AT_name	DW_FORM_strp
	DW_AT_decl_file	DW_FORM_data1
	DW_AT_decl_line	DW_FORM_data1

[22] DW_TAG_lexical_block	DW_CHILDREN_yes

[23] DW_TAG_subprogram	DW_CHILDREN_yes
	DW_AT_low_pc	DW_FORM_addr
	DW_AT_high_pc	DW_FORM_data4
	DW_AT_frame_base	DW_FORM_exprloc
	DW_AT_GNU_all_call_sites	DW_FORM_flag_present
	DW_AT_name	DW_FORM_strp
	DW_AT_decl_file	DW_FORM_data1
	DW_AT_decl_line	DW_FORM_data1
	DW_AT_type	DW_FORM_ref4
	DW_AT_external	DW_FORM_flag_present

[24] DW_TAG_inlined_subroutine	DW_CHILDREN_yes
	DW_AT_abstract_origin	DW_FORM_ref4
	DW_AT_low_pc	DW_FORM_addr
	DW_AT_high_pc	DW_FORM_data4
	DW_AT_call_file	DW_FORM_data1
	DW_AT_call_line	DW_FORM_data1
	DW_AT_call_column	DW_FORM_data1

[25] DW_TAG_formal_parameter	DW_CHILDREN_no
	DW_AT_abstract_origin	DW_FORM_ref4

[26] DW_TAG_variable	DW_CHILDREN_no
	DW_AT_location	DW_FORM_sec_offset
	DW_AT_abstract_origin	DW_FORM_ref4

[27] DW_TAG_variable	DW_CHILDREN_no
	DW_AT_abstract_origin	DW_FORM_ref4

[28] DW_TAG_label	DW_CHILDREN_no
	DW_AT_abstract_origin	DW_FORM_ref4
	DW_AT_low_pc	DW_FORM_addr


.debug_info contents:
0x00000000: Compile Unit: length = 0x0000034f version = 0x0004 abbr_offset = 0x0000 addr_size = 0x04 (next unit at 0x00000353)

0x0000000b: DW_TAG_compile_unit [1] *
              DW_AT_producer [DW_FORM_strp]	( .debug_str[0x00000000] = "clang version 11.0.0 (https://github.com/llvm/llvm-project.git 313d89724ce3ccf66c1c51849903e1e6d184dd85)")
              DW_AT_language [DW_FORM_data2]	(DW_LANG_C_plus_plus)
              DW_AT_name [DW_FORM_strp]	( .debug_str[0x00000069] = "/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
              DW_AT_stmt_list [DW_FORM_sec_offset]	(0x00000000)
              DW_AT_comp_dir [DW_FORM_strp]	( .debug_str[0x000000a9] = "/usr/local/google/home/azakai/Dev/2-binaryen")
              DW_AT_low_pc [DW_FORM_addr]	(0x0000000000000000)
              DW_AT_ranges [DW_FORM_sec_offset]	(0x00000040
                 [0x00000006, 0x00000389)
                 [0x0000038b, 0x00000686))

0x00000026:   DW_TAG_pointer_type [2]  
                DW_AT_type [DW_FORM_ref4]	(cu + 0x002b => {0x0000002b} "worker_args")

0x0000002b:   DW_TAG_structure_type [3] *
                DW_AT_calling_convention [DW_FORM_data1]	(DW_CC_pass_by_value)
                DW_AT_name [DW_FORM_strp]	( .debug_str[0x000000e3] = "worker_args")
                DW_AT_byte_size [DW_FORM_data1]	(0x0c)
                DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                DW_AT_decl_line [DW_FORM_data1]	(20)

0x00000034:     DW_TAG_member [4]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x000000d6] = "i")
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(21)
                  DW_AT_data_member_location [DW_FORM_data1]	(0x00)

0x00000040:     DW_TAG_member [4]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x000000dc] = "n")
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(21)
                  DW_AT_data_member_location [DW_FORM_data1]	(0x04)

0x0000004c:     DW_TAG_member [4]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x000000de] = "next")
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0026 => {0x00000026} "worker_args*")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(22)
                  DW_AT_data_member_location [DW_FORM_data1]	(0x08)

0x00000058:     NULL

0x00000059:   DW_TAG_base_type [5]  
                DW_AT_name [DW_FORM_strp]	( .debug_str[0x000000d8] = "int")
                DW_AT_encoding [DW_FORM_data1]	(DW_ATE_signed)
                DW_AT_byte_size [DW_FORM_data1]	(0x04)

0x00000060:   DW_TAG_pointer_type [2]  
                DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x00000065:   DW_TAG_namespace [6] *
                DW_AT_name [DW_FORM_strp]	( .debug_str[0x000000ef] = "std")

0x0000006a:     DW_TAG_typedef [7]  
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0076 => {0x00000076} "decltype(nullptr)")
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x00000105] = "nullptr_t")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/system/include/libcxx/__nullptr")
                  DW_AT_decl_line [DW_FORM_data1]	(57)

0x00000075:     NULL

0x00000076:   DW_TAG_unspecified_type [8]  
                DW_AT_name [DW_FORM_strp]	( .debug_str[0x000000f3] = "decltype(nullptr)")

0x0000007b:   DW_TAG_imported_declaration [9]  
                DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/system/include/libcxx/stddef.h")
                DW_AT_decl_line [DW_FORM_data1]	(52)
                DW_AT_import [DW_FORM_ref4]	(cu + 0x006a => {0x0000006a})

0x00000082:   DW_TAG_subprogram [10] *
                DW_AT_low_pc [DW_FORM_addr]	(0x0000000000000006)
                DW_AT_high_pc [DW_FORM_data4]	(0x00000383)
                DW_AT_frame_base [DW_FORM_exprloc]	(DW_OP_WASM_location 0x1 +0, DW_OP_stack_value)
                DW_AT_GNU_all_call_sites [DW_FORM_flag_present]	(true)
                DW_AT_linkage_name [DW_FORM_strp]	( .debug_str[0x00000166] = "_Z15fannkuch_workerPv")
                DW_AT_name [DW_FORM_strp]	( .debug_str[0x0000017c] = "fannkuch_worker")
                DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                DW_AT_decl_line [DW_FORM_data1]	(26)
                DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")
                DW_AT_external [DW_FORM_flag_present]	(true)

0x0000009e:     DW_TAG_formal_parameter [11]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x00000191] = "_arg")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(26)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x01a7 => {0x000001a7} "*")

0x000000a9:     DW_TAG_variable [12]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x00000133] = "args")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(28)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0026 => {0x00000026} "worker_args*")

0x000000b4:     DW_TAG_variable [13]  
                  DW_AT_location [DW_FORM_sec_offset]	(0x00000000: 
                     [0xffffffff,  0x00000006): 
                     [0x00000000,  0x00000030): DW_OP_consts +0, DW_OP_stack_value)
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x0000014c] = "maxflips")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(30)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x000000c3:     DW_TAG_variable [13]  
                  DW_AT_location [DW_FORM_sec_offset]	(0x0000001d: 
                     [0xffffffff,  0x00000006): 
                     [0x00000007,  0x00000030): DW_OP_consts +0, DW_OP_stack_value
                     [0x00000046,  0x0000004b): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value
                     [0x000000dc,  0x000000e5): DW_OP_consts +1, DW_OP_stack_value
                     [0x00000121,  0x0000012b): DW_OP_WASM_location 0x0 +0, DW_OP_stack_value
                     [0x00000169,  0x00000176): DW_OP_consts +0, DW_OP_stack_value
                     [0x00000258,  0x00000263): DW_OP_consts +0, DW_OP_stack_value
                     [0x00000269,  0x00000272): DW_OP_consts +1, DW_OP_stack_value
                     [0x000002ae,  0x000002b8): DW_OP_WASM_location 0x0 +0, DW_OP_stack_value
                     [0x000002f6,  0x00000303): DW_OP_consts +0, DW_OP_stack_value)
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x000000d6] = "i")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(30)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x000000d2:     DW_TAG_variable [13]  
                  DW_AT_location [DW_FORM_sec_offset]	(0x000000a5: 
                     [0xffffffff,  0x00000006): 
                     [0x0000000e,  0x00000030): DW_OP_WASM_location 0x0 +2, DW_OP_stack_value)
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x000000dc] = "n")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(30)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x000000e1:     DW_TAG_variable [13]  
                  DW_AT_location [DW_FORM_sec_offset]	(0x000000c3: 
                     [0xffffffff,  0x00000006): 
                     [0x00000017,  0x00000030): DW_OP_WASM_location 0x0 +4, DW_OP_stack_value)
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x0000013e] = "perm1")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(29)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0060 => {0x00000060} "int*")

0x000000f0:     DW_TAG_variable [13]  
                  DW_AT_location [DW_FORM_sec_offset]	(0x000000e1: 
                     [0xffffffff,  0x00000006): 
                     [0x0000001d,  0x00000030): DW_OP_WASM_location 0x0 +5, DW_OP_stack_value)
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x00000196] = "perm")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(29)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0060 => {0x00000060} "int*")

0x000000ff:     DW_TAG_variable [13]  
                  DW_AT_location [DW_FORM_sec_offset]	(0x000000ff: 
                     [0xffffffff,  0x00000006): 
                     [0x00000023,  0x00000030): DW_OP_WASM_location 0x0 +6, DW_OP_stack_value)
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x00000144] = "count")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(29)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0060 => {0x00000060} "int*")

0x0000010e:     DW_TAG_variable [13]  
                  DW_AT_location [DW_FORM_sec_offset]	(0x0000011d: 
                     [0xffffffff,  0x00000006): 
                     [0x000001d2,  0x000001d7): DW_OP_WASM_location 0x0 +2, DW_OP_stack_value
                     [0x0000035f,  0x00000364): DW_OP_WASM_location 0x0 +2, DW_OP_stack_value)
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x0000014a] = "r")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(30)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x0000011d:     DW_TAG_variable [13]  
                  DW_AT_location [DW_FORM_sec_offset]	(0x00000149: 
                     [0xffffffff,  0x00000006): 
                     [0x000000c3,  0x000000d6): DW_OP_consts +0, DW_OP_stack_value
                     [0x000000dc,  0x000000e5): DW_OP_WASM_location 0x0 +13, DW_OP_stack_value
                     [0x0000014a,  0x00000152): DW_OP_WASM_location 0x0 +0, DW_OP_stack_value
                     [0x00000258,  0x00000263): DW_OP_consts +0, DW_OP_stack_value
                     [0x00000269,  0x00000272): DW_OP_WASM_location 0x0 +10, DW_OP_stack_value
                     [0x000002d7,  0x000002df): DW_OP_WASM_location 0x0 +0, DW_OP_stack_value)
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x00000155] = "flips")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(30)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x0000012c:     DW_TAG_variable [13]  
                  DW_AT_location [DW_FORM_sec_offset]	(0x000001ab: 
                     [0xffffffff,  0x00000006): 
                     [0x000000d2,  0x000000d6): DW_OP_WASM_location 0x0 +12, DW_OP_stack_value
                     [0x0000025f,  0x00000263): DW_OP_WASM_location 0x0 +16, DW_OP_stack_value)
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x0000019b] = "k")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(30)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x0000013b:     DW_TAG_variable [13]  
                  DW_AT_location [DW_FORM_sec_offset]	(0x000001d7: 
                     [0xffffffff,  0x00000006): 
                     [0x000000ec,  0x000000f0): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value
                     [0x00000128,  0x0000012b): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value
                     [0x00000279,  0x0000027d): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value
                     [0x000002b5,  0x000002b8): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value)
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x0000019d] = "j")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(30)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x0000014a:     DW_TAG_variable [13]  
                  DW_AT_location [DW_FORM_sec_offset]	(0x0000021f: 
                     [0xffffffff,  0x00000006): 
                     [0x00000101,  0x0000012b): DW_OP_WASM_location 0x0 +15, DW_OP_stack_value
                     [0x0000013c,  0x00000152): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value
                     [0x0000028e,  0x000002b8): DW_OP_WASM_location 0x0 +14, DW_OP_stack_value
                     [0x000002c9,  0x000002df): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value)
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x0000019f] = "tmp")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(30)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x00000159:     DW_TAG_lexical_block [14] *
                  DW_AT_ranges [DW_FORM_sec_offset]	(0x00000000
                     [0x00000175, 0x000001b3)
                     [0x000001dd, 0x000001e6)
                     [0x00000302, 0x00000340)
                     [0x0000036a, 0x00000373))

0x0000015e:       DW_TAG_variable [12]  
                    DW_AT_name [DW_FORM_strp]	( .debug_str[0x00000163] = "p0")
                    DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                    DW_AT_decl_line [DW_FORM_data1]	(74)
                    DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x00000169:       NULL

0x0000016a:     DW_TAG_GNU_call_site [15]  
                  DW_AT_low_pc [DW_FORM_addr]	(0x000000000000001b)

0x0000016f:     DW_TAG_GNU_call_site [15]  
                  DW_AT_low_pc [DW_FORM_addr]	(0x0000000000000021)

0x00000174:     DW_TAG_GNU_call_site [15]  
                  DW_AT_low_pc [DW_FORM_addr]	(0x0000000000000027)

0x00000179:     DW_TAG_GNU_call_site [15]  
                  DW_AT_low_pc [DW_FORM_addr]	(0x00000000000000d1)

0x0000017e:     DW_TAG_GNU_call_site [16]  
                  DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x019a => {0x0000019a} "free")
                  DW_AT_low_pc [DW_FORM_addr]	(0x000000000000037e)

0x00000187:     DW_TAG_GNU_call_site [16]  
                  DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x019a => {0x0000019a} "free")
                  DW_AT_low_pc [DW_FORM_addr]	(0x0000000000000382)

0x00000190:     DW_TAG_GNU_call_site [16]  
                  DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x019a => {0x0000019a} "free")
                  DW_AT_low_pc [DW_FORM_addr]	(0x0000000000000386)

0x00000199:     NULL

0x0000019a:   DW_TAG_subprogram [17] *
                DW_AT_name [DW_FORM_strp]	( .debug_str[0x0000010f] = "free")
                DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/system/include/libc/stdlib.h")
                DW_AT_decl_line [DW_FORM_data1]	(41)
                DW_AT_declaration [DW_FORM_flag_present]	(true)
                DW_AT_external [DW_FORM_flag_present]	(true)

0x000001a1:     DW_TAG_formal_parameter [18]  
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x01a7 => {0x000001a7} "*")

0x000001a6:     NULL

0x000001a7:   DW_TAG_pointer_type [19]  

0x000001a8:   DW_TAG_subprogram [20] *
                DW_AT_linkage_name [DW_FORM_strp]	( .debug_str[0x00000114] = "_ZL8fannkuchi")
                DW_AT_name [DW_FORM_strp]	( .debug_str[0x00000122] = "fannkuch")
                DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                DW_AT_decl_line [DW_FORM_data1]	(87)
                DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")
                DW_AT_inline [DW_FORM_data1]	(DW_INL_inlined)

0x000001b8:     DW_TAG_formal_parameter [11]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x000000dc] = "n")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(87)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x000001c3:     DW_TAG_variable [12]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x0000012b] = "showmax")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(90)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x000001ce:     DW_TAG_variable [12]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x00000133] = "args")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(89)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0026 => {0x00000026} "worker_args*")

0x000001d9:     DW_TAG_variable [12]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x000000d6] = "i")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(91)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x000001e4:     DW_TAG_variable [12]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x00000138] = "targs")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(89)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0026 => {0x00000026} "worker_args*")

0x000001ef:     DW_TAG_variable [12]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x0000013e] = "perm1")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(91)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0060 => {0x00000060} "int*")

0x000001fa:     DW_TAG_variable [12]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x00000144] = "count")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(91)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0060 => {0x00000060} "int*")

0x00000205:     DW_TAG_variable [12]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x0000014a] = "r")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(91)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x00000210:     DW_TAG_variable [12]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x0000014c] = "maxflips")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(91)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x0000021b:     DW_TAG_variable [12]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x00000155] = "flips")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(91)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x00000226:     DW_TAG_label [21]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x0000015b] = "cleanup")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(137)

0x0000022d:     DW_TAG_lexical_block [22] *

0x0000022e:       DW_TAG_variable [12]  
                    DW_AT_name [DW_FORM_strp]	( .debug_str[0x00000163] = "p0")
                    DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                    DW_AT_decl_line [DW_FORM_data1]	(125)
                    DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x00000239:       NULL

0x0000023a:     NULL

0x0000023b:   DW_TAG_subprogram [23] *
                DW_AT_low_pc [DW_FORM_addr]	(0x000000000000038b)
                DW_AT_high_pc [DW_FORM_data4]	(0x000002fb)
                DW_AT_frame_base [DW_FORM_exprloc]	(DW_OP_WASM_location 0x0 +2, DW_OP_stack_value)
                DW_AT_GNU_all_call_sites [DW_FORM_flag_present]	(true)
                DW_AT_name [DW_FORM_strp]	( .debug_str[0x0000018c] = "main")
                DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                DW_AT_decl_line [DW_FORM_data1]	(152)
                DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")
                DW_AT_external [DW_FORM_flag_present]	(true)

0x00000253:     DW_TAG_formal_parameter [11]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x000001a3] = "argc")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(152)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x0000025e:     DW_TAG_formal_parameter [11]  
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x000001a8] = "argv")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(152)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0341 => {0x00000341} "char**")

0x00000269:     DW_TAG_variable [13]  
                  DW_AT_location [DW_FORM_sec_offset]	(0x00000267: 
                     [0xffffffff,  0x0000039f): 
                     [0x00000012,  0x00000017): DW_OP_WASM_location 0x0 +4, DW_OP_stack_value)
                  DW_AT_name [DW_FORM_strp]	( .debug_str[0x000000dc] = "n")
                  DW_AT_decl_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_decl_line [DW_FORM_data1]	(153)
                  DW_AT_type [DW_FORM_ref4]	(cu + 0x0059 => {0x00000059} "int")

0x00000278:     DW_TAG_inlined_subroutine [24] *
                  DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x01a8 => {0x000001a8} "_ZL8fannkuchi")
                  DW_AT_low_pc [DW_FORM_addr]	(0x00000000000003c6)
                  DW_AT_high_pc [DW_FORM_data4]	(0x0000026d)
                  DW_AT_call_file [DW_FORM_data1]	("/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp")
                  DW_AT_call_line [DW_FORM_data1]	(159)
                  DW_AT_call_column [DW_FORM_data1]	(0x29)

0x00000288:       DW_TAG_formal_parameter [25]  
                    DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x01b8 => {0x000001b8} "n")

0x0000028d:       DW_TAG_variable [26]  
                    DW_AT_location [DW_FORM_sec_offset]	(0x00000285: 
                       [0xffffffff,  0x0000039f): 
                       [0x00000025,  0x0000002e): DW_OP_consts +30, DW_OP_stack_value)
                    DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x01c3 => {0x000001c3} "showmax")

0x00000296:       DW_TAG_variable [26]  
                    DW_AT_location [DW_FORM_sec_offset]	(0x000002a2: 
                       [0xffffffff,  0x0000039f): 
                       [0x00000025,  0x0000002e): DW_OP_lit0, DW_OP_stack_value
                       [0x000002ac,  0x000002c4): DW_OP_WASM_location 0x0 +6, DW_OP_stack_value)
                    DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x01ce => {0x000001ce} "args")

0x0000029f:       DW_TAG_variable [26]  
                    DW_AT_location [DW_FORM_sec_offset]	(0x000002cc: 
                       [0xffffffff,  0x0000039f): 
                       [0x00000025,  0x0000002e): DW_OP_consts +0, DW_OP_stack_value
                       [0x00000063,  0x00000068): DW_OP_WASM_location 0x0 +0, DW_OP_stack_value
                       [0x0000006e,  0x0000008e): DW_OP_consts +0, DW_OP_stack_value
                       [0x000000a4,  0x000000a9): DW_OP_WASM_location 0x0 +0, DW_OP_stack_value
                       [0x000000c2,  0x000000c6): DW_OP_consts +0, DW_OP_stack_value
                       [0x000000ed,  0x000000f2): DW_OP_WASM_location 0x0 +0, DW_OP_stack_value
                       [0x0000013a,  0x0000014a): DW_OP_consts +0, DW_OP_stack_value
                       [0x000001be,  0x000001cc): DW_OP_consts +0, DW_OP_stack_value
                       [0x00000201,  0x00000215): DW_OP_consts +0, DW_OP_stack_value)
                    DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x01d9 => {0x000001d9} "i")

0x000002a8:       DW_TAG_variable [27]  
                    DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x01e4 => {0x000001e4} "targs")

0x000002ad:       DW_TAG_variable [26]  
                    DW_AT_location [DW_FORM_sec_offset]	(0x00000354: 
                       [0xffffffff,  0x0000039f): 
                       [0x00000079,  0x0000008e): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value)
                    DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x01ef => {0x000001ef} "perm1")

0x000002b6:       DW_TAG_variable [26]  
                    DW_AT_location [DW_FORM_sec_offset]	(0x00000372: 
                       [0xffffffff,  0x0000039f): 
                       [0x0000007f,  0x0000008e): DW_OP_WASM_location 0x0 +5, DW_OP_stack_value)
                    DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x01fa => {0x000001fa} "count")

0x000002bf:       DW_TAG_variable [26]  
                    DW_AT_location [DW_FORM_sec_offset]	(0x00000390: 
                       [0xffffffff,  0x0000039f): 
                       [0x000001a8,  0x000001af): DW_OP_WASM_location 0x0 +6, DW_OP_stack_value
                       [0x00000273,  0x0000027a): DW_OP_WASM_location 0x0 +6, DW_OP_stack_value)
                    DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x0205 => {0x00000205} "r")

0x000002c8:       DW_TAG_variable [26]  
                    DW_AT_location [DW_FORM_sec_offset]	(0x000003e8: 
                       [0xffffffff,  0x0000039f): 
                       [0x0000028e,  0x00000299): DW_OP_consts +0, DW_OP_stack_value
                       [0x000002bc,  0x000002c4): DW_OP_WASM_location 0x0 +0, DW_OP_stack_value)
                    DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x0210 => {0x00000210} "maxflips")

0x000002d1:       DW_TAG_variable [26]  
                    DW_AT_location [DW_FORM_sec_offset]	(0x00000413: 
                       [0xffffffff,  0x0000039f): 
                       [0x000002a5,  0x000002c4): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value)
                    DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x021b => {0x0000021b} "flips")

0x000002da:       DW_TAG_label [28]  
                    DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x0226 => {0x00000226} "cleanup")
                    DW_AT_low_pc [DW_FORM_addr]	(0x0000000000000621)

0x000002e3:       DW_TAG_lexical_block [14] *
                    DW_AT_ranges [DW_FORM_sec_offset]	(0x00000028
                       [0x000004d9, 0x00000520)
                       [0x0000059e, 0x000005eb))

0x000002e8:         DW_TAG_variable [26]  
                      DW_AT_location [DW_FORM_sec_offset]	(0x000003bc: 
                         [0xffffffff,  0x0000039f): 
                         [0x00000141,  0x0000014a): DW_OP_WASM_location 0x0 +8, DW_OP_stack_value
                         [0x00000208,  0x00000215): DW_OP_WASM_location 0x0 +8, DW_OP_stack_value)
                      DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x022e => {0x0000022e} "p0")

0x000002f1:         NULL

0x000002f2:       NULL

0x000002f3:     DW_TAG_GNU_call_site [15]  
                  DW_AT_low_pc [DW_FORM_addr]	(0x00000000000003af)

0x000002f8:     DW_TAG_GNU_call_site [15]  
                  DW_AT_low_pc [DW_FORM_addr]	(0x00000000000003bc)

0x000002fd:     DW_TAG_GNU_call_site [15]  
                  DW_AT_low_pc [DW_FORM_addr]	(0x00000000000003e2)

0x00000302:     DW_TAG_GNU_call_site [15]  
                  DW_AT_low_pc [DW_FORM_addr]	(0x0000000000000416)

0x00000307:     DW_TAG_GNU_call_site [15]  
                  DW_AT_low_pc [DW_FORM_addr]	(0x000000000000041c)

0x0000030c:     DW_TAG_GNU_call_site [15]  
                  DW_AT_low_pc [DW_FORM_addr]	(0x0000000000000484)

0x00000311:     DW_TAG_GNU_call_site [15]  
                  DW_AT_low_pc [DW_FORM_addr]	(0x0000000000000496)

0x00000316:     DW_TAG_GNU_call_site [15]  
                  DW_AT_low_pc [DW_FORM_addr]	(0x0000000000000561)

0x0000031b:     DW_TAG_GNU_call_site [16]  
                  DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x019a => {0x0000019a} "free")
                  DW_AT_low_pc [DW_FORM_addr]	(0x0000000000000625)

0x00000324:     DW_TAG_GNU_call_site [16]  
                  DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x019a => {0x0000019a} "free")
                  DW_AT_low_pc [DW_FORM_addr]	(0x0000000000000629)

0x0000032d:     DW_TAG_GNU_call_site [15]  
                  DW_AT_low_pc [DW_FORM_addr]	(0x0000000000000642)

0x00000332:     DW_TAG_GNU_call_site [16]  
                  DW_AT_abstract_origin [DW_FORM_ref4]	(cu + 0x019a => {0x0000019a} "free")
                  DW_AT_low_pc [DW_FORM_addr]	(0x000000000000064f)

0x0000033b:     DW_TAG_GNU_call_site [15]  
                  DW_AT_low_pc [DW_FORM_addr]	(0x000000000000067a)

0x00000340:     NULL

0x00000341:   DW_TAG_pointer_type [2]  
                DW_AT_type [DW_FORM_ref4]	(cu + 0x0346 => {0x00000346} "char*")

0x00000346:   DW_TAG_pointer_type [2]  
                DW_AT_type [DW_FORM_ref4]	(cu + 0x034b => {0x0000034b} "char")

0x0000034b:   DW_TAG_base_type [5]  
                DW_AT_name [DW_FORM_strp]	( .debug_str[0x000001ad] = "char")
                DW_AT_encoding [DW_FORM_data1]	(DW_ATE_signed_char)
                DW_AT_byte_size [DW_FORM_data1]	(0x01)

0x00000352:   NULL

.debug_loc contents:
0x00000000: 
            [0xffffffff,  0x00000006): 
            [0x00000000,  0x00000030): DW_OP_consts +0, DW_OP_stack_value

0x0000001d: 
            [0xffffffff,  0x00000006): 
            [0x00000007,  0x00000030): DW_OP_consts +0, DW_OP_stack_value
            [0x00000046,  0x0000004b): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value
            [0x000000dc,  0x000000e5): DW_OP_consts +1, DW_OP_stack_value
            [0x00000121,  0x0000012b): DW_OP_WASM_location 0x0 +0, DW_OP_stack_value
            [0x00000169,  0x00000176): DW_OP_consts +0, DW_OP_stack_value
            [0x00000258,  0x00000263): DW_OP_consts +0, DW_OP_stack_value
            [0x00000269,  0x00000272): DW_OP_consts +1, DW_OP_stack_value
            [0x000002ae,  0x000002b8): DW_OP_WASM_location 0x0 +0, DW_OP_stack_value
            [0x000002f6,  0x00000303): DW_OP_consts +0, DW_OP_stack_value

0x000000a5: 
            [0xffffffff,  0x00000006): 
            [0x0000000e,  0x00000030): DW_OP_WASM_location 0x0 +2, DW_OP_stack_value

0x000000c3: 
            [0xffffffff,  0x00000006): 
            [0x00000017,  0x00000030): DW_OP_WASM_location 0x0 +4, DW_OP_stack_value

0x000000e1: 
            [0xffffffff,  0x00000006): 
            [0x0000001d,  0x00000030): DW_OP_WASM_location 0x0 +5, DW_OP_stack_value

0x000000ff: 
            [0xffffffff,  0x00000006): 
            [0x00000023,  0x00000030): DW_OP_WASM_location 0x0 +6, DW_OP_stack_value

0x0000011d: 
            [0xffffffff,  0x00000006): 
            [0x000001d2,  0x000001d7): DW_OP_WASM_location 0x0 +2, DW_OP_stack_value
            [0x0000035f,  0x00000364): DW_OP_WASM_location 0x0 +2, DW_OP_stack_value

0x00000149: 
            [0xffffffff,  0x00000006): 
            [0x000000c3,  0x000000d6): DW_OP_consts +0, DW_OP_stack_value
            [0x000000dc,  0x000000e5): DW_OP_WASM_location 0x0 +13, DW_OP_stack_value
            [0x0000014a,  0x00000152): DW_OP_WASM_location 0x0 +0, DW_OP_stack_value
            [0x00000258,  0x00000263): DW_OP_consts +0, DW_OP_stack_value
            [0x00000269,  0x00000272): DW_OP_WASM_location 0x0 +10, DW_OP_stack_value
            [0x000002d7,  0x000002df): DW_OP_WASM_location 0x0 +0, DW_OP_stack_value

0x000001ab: 
            [0xffffffff,  0x00000006): 
            [0x000000d2,  0x000000d6): DW_OP_WASM_location 0x0 +12, DW_OP_stack_value
            [0x0000025f,  0x00000263): DW_OP_WASM_location 0x0 +16, DW_OP_stack_value

0x000001d7: 
            [0xffffffff,  0x00000006): 
            [0x000000ec,  0x000000f0): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value
            [0x00000128,  0x0000012b): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value
            [0x00000279,  0x0000027d): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value
            [0x000002b5,  0x000002b8): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value

0x0000021f: 
            [0xffffffff,  0x00000006): 
            [0x00000101,  0x0000012b): DW_OP_WASM_location 0x0 +15, DW_OP_stack_value
            [0x0000013c,  0x00000152): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value
            [0x0000028e,  0x000002b8): DW_OP_WASM_location 0x0 +14, DW_OP_stack_value
            [0x000002c9,  0x000002df): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value

0x00000267: 
            [0xffffffff,  0x0000039f): 
            [0x00000012,  0x00000017): DW_OP_WASM_location 0x0 +4, DW_OP_stack_value

0x00000285: 
            [0xffffffff,  0x0000039f): 
            [0x00000025,  0x0000002e): DW_OP_consts +30, DW_OP_stack_value

0x000002a2: 
            [0xffffffff,  0x0000039f): 
            [0x00000025,  0x0000002e): DW_OP_lit0, DW_OP_stack_value
            [0x000002ac,  0x000002c4): DW_OP_WASM_location 0x0 +6, DW_OP_stack_value

0x000002cc: 
            [0xffffffff,  0x0000039f): 
            [0x00000025,  0x0000002e): DW_OP_consts +0, DW_OP_stack_value
            [0x00000063,  0x00000068): DW_OP_WASM_location 0x0 +0, DW_OP_stack_value
            [0x0000006e,  0x0000008e): DW_OP_consts +0, DW_OP_stack_value
            [0x000000a4,  0x000000a9): DW_OP_WASM_location 0x0 +0, DW_OP_stack_value
            [0x000000c2,  0x000000c6): DW_OP_consts +0, DW_OP_stack_value
            [0x000000ed,  0x000000f2): DW_OP_WASM_location 0x0 +0, DW_OP_stack_value
            [0x0000013a,  0x0000014a): DW_OP_consts +0, DW_OP_stack_value
            [0x000001be,  0x000001cc): DW_OP_consts +0, DW_OP_stack_value
            [0x00000201,  0x00000215): DW_OP_consts +0, DW_OP_stack_value

0x00000354: 
            [0xffffffff,  0x0000039f): 
            [0x00000079,  0x0000008e): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value

0x00000372: 
            [0xffffffff,  0x0000039f): 
            [0x0000007f,  0x0000008e): DW_OP_WASM_location 0x0 +5, DW_OP_stack_value

0x00000390: 
            [0xffffffff,  0x0000039f): 
            [0x000001a8,  0x000001af): DW_OP_WASM_location 0x0 +6, DW_OP_stack_value
            [0x00000273,  0x0000027a): DW_OP_WASM_location 0x0 +6, DW_OP_stack_value

0x000003bc: 
            [0xffffffff,  0x0000039f): 
            [0x00000141,  0x0000014a): DW_OP_WASM_location 0x0 +8, DW_OP_stack_value
            [0x00000208,  0x00000215): DW_OP_WASM_location 0x0 +8, DW_OP_stack_value

0x000003e8: 
            [0xffffffff,  0x0000039f): 
            [0x0000028e,  0x00000299): DW_OP_consts +0, DW_OP_stack_value
            [0x000002bc,  0x000002c4): DW_OP_WASM_location 0x0 +0, DW_OP_stack_value

0x00000413: 
            [0xffffffff,  0x0000039f): 
            [0x000002a5,  0x000002c4): DW_OP_WASM_location 0x0 +1, DW_OP_stack_value

.debug_line contents:
debug_line[0x00000000]
Line table prologue:
    total_length: 0x00000b06
         version: 4
 prologue_length: 0x000000dd
 min_inst_length: 1
max_ops_per_inst: 1
 default_is_stmt: 1
       line_base: -5
      line_range: 14
     opcode_base: 13
standard_opcode_lengths[DW_LNS_copy] = 0
standard_opcode_lengths[DW_LNS_advance_pc] = 1
standard_opcode_lengths[DW_LNS_advance_line] = 1
standard_opcode_lengths[DW_LNS_set_file] = 1
standard_opcode_lengths[DW_LNS_set_column] = 1
standard_opcode_lengths[DW_LNS_negate_stmt] = 0
standard_opcode_lengths[DW_LNS_set_basic_block] = 0
standard_opcode_lengths[DW_LNS_const_add_pc] = 0
standard_opcode_lengths[DW_LNS_fixed_advance_pc] = 1
standard_opcode_lengths[DW_LNS_set_prologue_end] = 0
standard_opcode_lengths[DW_LNS_set_epilogue_begin] = 0
standard_opcode_lengths[DW_LNS_set_isa] = 1
include_directories[  1] = "/usr/local/google/home/azakai/Dev"
file_names[  1]:
           name: "emscripten/tests/fannkuch.cpp"
      dir_index: 1
       mod_time: 0x00000000
         length: 0x00000000
file_names[  2]:
           name: "emscripten/system/include/libcxx/__nullptr"
      dir_index: 1
       mod_time: 0x00000000
         length: 0x00000000
file_names[  3]:
           name: "emscripten/system/include/libcxx/stddef.h"
      dir_index: 1
       mod_time: 0x00000000
         length: 0x00000000
file_names[  4]:
           name: "emscripten/system/include/libc/stdlib.h"
      dir_index: 1
       mod_time: 0x00000000
         length: 0x00000000
0x000000e7: 00 DW_LNE_set_address (0x0000000000000006)
0x000000ee: 03 DW_LNS_advance_line (27)
0x000000f0: 01 DW_LNS_copy
            0x0000000000000006     27      0      1   0             0  is_stmt


0x000000f1: 00 DW_LNE_set_address (0x000000000000000d)
0x000000f8: 03 DW_LNS_advance_line (33)
0x000000fa: 05 DW_LNS_set_column (14)
0x000000fc: 0a DW_LNS_set_prologue_end
0x000000fd: 01 DW_LNS_copy
            0x000000000000000d     33     14      1   0             0  is_stmt prologue_end


0x000000fe: 00 DW_LNE_set_address (0x0000000000000016)
0x00000105: 03 DW_LNS_advance_line (34)
0x00000107: 05 DW_LNS_set_column (27)
0x00000109: 01 DW_LNS_copy
            0x0000000000000016     34     27      1   0             0  is_stmt


0x0000010a: 00 DW_LNE_set_address (0x0000000000000017)
0x00000111: 05 DW_LNS_set_column (18)
0x00000113: 06 DW_LNS_negate_stmt
0x00000114: 01 DW_LNS_copy
            0x0000000000000017     34     18      1   0             0 


0x00000115: 00 DW_LNE_set_address (0x000000000000001d)
0x0000011c: 03 DW_LNS_advance_line (35)
0x0000011e: 05 DW_LNS_set_column (17)
0x00000120: 06 DW_LNS_negate_stmt
0x00000121: 01 DW_LNS_copy
            0x000000000000001d     35     17      1   0             0  is_stmt


0x00000122: 00 DW_LNE_set_address (0x0000000000000023)
0x00000129: 03 DW_LNS_advance_line (36)
0x0000012b: 05 DW_LNS_set_column (18)
0x0000012d: 01 DW_LNS_copy
            0x0000000000000023     36     18      1   0             0  is_stmt


0x0000012e: 00 DW_LNE_set_address (0x000000000000002f)
0x00000135: 03 DW_LNS_advance_line (37)
0x00000137: 01 DW_LNS_copy
            0x000000000000002f     37     18      1   0             0  is_stmt


0x00000138: 00 DW_LNE_set_address (0x0000000000000034)
0x0000013f: 05 DW_LNS_set_column (4)
0x00000141: 06 DW_LNS_negate_stmt
0x00000142: 01 DW_LNS_copy
            0x0000000000000034     37      4      1   0             0 


0x00000143: 00 DW_LNE_set_address (0x0000000000000038)
0x0000014a: 03 DW_LNS_advance_line (38)
0x0000014c: 05 DW_LNS_set_column (7)
0x0000014e: 06 DW_LNS_negate_stmt
0x0000014f: 01 DW_LNS_copy
            0x0000000000000038     38      7      1   0             0  is_stmt


0x00000150: 00 DW_LNE_set_address (0x0000000000000040)
0x00000157: 05 DW_LNS_set_column (16)
0x00000159: 06 DW_LNS_negate_stmt
0x0000015a: 01 DW_LNS_copy
            0x0000000000000040     38     16      1   0             0 


0x0000015b: 00 DW_LNE_set_address (0x0000000000000045)
0x00000162: 03 DW_LNS_advance_line (37)
0x00000164: 05 DW_LNS_set_column (24)
0x00000166: 06 DW_LNS_negate_stmt
0x00000167: 01 DW_LNS_copy
            0x0000000000000045     37     24      1   0             0  is_stmt


0x00000168: 00 DW_LNE_set_address (0x000000000000004a)
0x0000016f: 05 DW_LNS_set_column (18)
0x00000171: 06 DW_LNS_negate_stmt
0x00000172: 01 DW_LNS_copy
            0x000000000000004a     37     18      1   0             0 


0x00000173: 00 DW_LNE_set_address (0x000000000000004f)
0x0000017a: 05 DW_LNS_set_column (4)
0x0000017c: 01 DW_LNS_copy
            0x000000000000004f     37      4      1   0             0 


0x0000017d: 00 DW_LNE_set_address (0x0000000000000052)
0x00000184: 03 DW_LNS_advance_line (39)
0x00000186: 06 DW_LNS_negate_stmt
0x00000187: 01 DW_LNS_copy
            0x0000000000000052     39      4      1   0             0  is_stmt


0x00000188: 00 DW_LNE_set_address (0x0000000000000054)
0x0000018f: 05 DW_LNS_set_column (16)
0x00000191: 06 DW_LNS_negate_stmt
0x00000192: 01 DW_LNS_copy
            0x0000000000000054     39     16      1   0             0 


0x00000193: 00 DW_LNE_set_address (0x000000000000005d)
0x0000019a: 05 DW_LNS_set_column (4)
0x0000019c: 01 DW_LNS_copy
            0x000000000000005d     39      4      1   0             0 


0x0000019d: 00 DW_LNE_set_address (0x000000000000005f)
0x000001a4: 05 DW_LNS_set_column (23)
0x000001a6: 01 DW_LNS_copy
            0x000000000000005f     39     23      1   0             0 


0x000001a7: 00 DW_LNE_set_address (0x0000000000000064)
0x000001ae: 05 DW_LNS_set_column (19)
0x000001b0: 01 DW_LNS_copy
            0x0000000000000064     39     19      1   0             0 


0x000001b1: 00 DW_LNE_set_address (0x0000000000000069)
0x000001b8: 03 DW_LNS_advance_line (40)
0x000001ba: 05 DW_LNS_set_column (4)
0x000001bc: 06 DW_LNS_negate_stmt
0x000001bd: 01 DW_LNS_copy
            0x0000000000000069     40      4      1   0             0  is_stmt


0x000001be: 00 DW_LNE_set_address (0x0000000000000071)
0x000001c5: 05 DW_LNS_set_column (17)
0x000001c7: 06 DW_LNS_negate_stmt
0x000001c8: 01 DW_LNS_copy
            0x0000000000000071     40     17      1   0             0 


0x000001c9: 00 DW_LNE_set_address (0x000000000000007c)
0x000001d0: 03 DW_LNS_advance_line (37)
0x000001d2: 05 DW_LNS_set_column (18)
0x000001d4: 06 DW_LNS_negate_stmt
0x000001d5: 01 DW_LNS_copy
            0x000000000000007c     37     18      1   0             0  is_stmt


0x000001d6: 00 DW_LNE_set_address (0x0000000000000081)
0x000001dd: 03 DW_LNS_advance_line (43)
0x000001df: 05 DW_LNS_set_column (4)
0x000001e1: 01 DW_LNS_copy
            0x0000000000000081     43      4      1   0             0  is_stmt


0x000001e2: 00 DW_LNE_set_address (0x0000000000000087)
0x000001e9: 03 DW_LNS_advance_line (44)
0x000001eb: 05 DW_LNS_set_column (16)
0x000001ed: 01 DW_LNS_copy
            0x0000000000000087     44     16      1   0             0  is_stmt


0x000001ee: 00 DW_LNE_set_address (0x0000000000000090)
0x000001f5: 03 DW_LNS_advance_line (45)
0x000001f7: 05 DW_LNS_set_column (10)
0x000001f9: 01 DW_LNS_copy
            0x0000000000000090     45     10      1   0             0  is_stmt


0x000001fa: 00 DW_LNE_set_address (0x0000000000000092)
0x00000201: 05 DW_LNS_set_column (18)
0x00000203: 06 DW_LNS_negate_stmt
0x00000204: 01 DW_LNS_copy
            0x0000000000000092     45     18      1   0             0 


0x00000205: 00 DW_LNE_set_address (0x000000000000009b)
0x0000020c: 05 DW_LNS_set_column (10)
0x0000020e: 01 DW_LNS_copy
            0x000000000000009b     45     10      1   0             0 


0x0000020f: 00 DW_LNE_set_address (0x000000000000009d)
0x00000216: 05 DW_LNS_set_column (23)
0x00000218: 01 DW_LNS_copy
            0x000000000000009d     45     23      1   0             0 


0x00000219: 00 DW_LNE_set_address (0x00000000000000a2)
0x00000220: 03 DW_LNS_advance_line (44)
0x00000222: 05 DW_LNS_set_column (16)
0x00000224: 06 DW_LNS_negate_stmt
0x00000225: 01 DW_LNS_copy
            0x00000000000000a2     44     16      1   0             0  is_stmt


0x00000226: 00 DW_LNE_set_address (0x00000000000000ad)
0x0000022d: 05 DW_LNS_set_column (7)
0x0000022f: 06 DW_LNS_negate_stmt
0x00000230: 01 DW_LNS_copy
            0x00000000000000ad     44      7      1   0             0 


0x00000231: 00 DW_LNE_set_address (0x00000000000000b3)
0x00000238: 03 DW_LNS_advance_line (46)
0x0000023a: 05 DW_LNS_set_column (11)
0x0000023c: 06 DW_LNS_negate_stmt
0x0000023d: 01 DW_LNS_copy
            0x00000000000000b3     46     11      1   0             0  is_stmt


0x0000023e: 00 DW_LNE_set_address (0x00000000000000bf)
0x00000245: 05 DW_LNS_set_column (28)
0x00000247: 06 DW_LNS_negate_stmt
0x00000248: 01 DW_LNS_copy
            0x00000000000000bf     46     28      1   0             0 


0x00000249: 00 DW_LNE_set_address (0x00000000000000c4)
0x00000250: 05 DW_LNS_set_column (41)
0x00000252: 01 DW_LNS_copy
            0x00000000000000c4     46     41      1   0             0 


0x00000253: 00 DW_LNE_set_address (0x00000000000000c9)
0x0000025a: 03 DW_LNS_advance_line (48)
0x0000025c: 05 DW_LNS_set_column (21)
0x0000025e: 06 DW_LNS_negate_stmt
0x0000025f: 01 DW_LNS_copy
            0x00000000000000c9     48     21      1   0             0  is_stmt


0x00000260: 00 DW_LNE_set_address (0x00000000000000d1)
0x00000267: 03 DW_LNS_advance_line (50)
0x00000269: 05 DW_LNS_set_column (14)
0x0000026b: 01 DW_LNS_copy
            0x00000000000000d1     50     14      1   0             0  is_stmt


0x0000026c: 00 DW_LNE_set_address (0x00000000000000e4)
0x00000273: 03 DW_LNS_advance_line (52)
0x00000275: 05 DW_LNS_set_column (38)
0x00000277: 01 DW_LNS_copy
            0x00000000000000e4     52     38      1   0             0  is_stmt


0x00000278: 00 DW_LNE_set_address (0x00000000000000f8)
0x0000027f: 03 DW_LNS_advance_line (53)
0x00000281: 05 DW_LNS_set_column (22)
0x00000283: 01 DW_LNS_copy
            0x00000000000000f8     53     22      1   0             0  is_stmt


0x00000284: 00 DW_LNE_set_address (0x0000000000000107)
0x0000028b: 03 DW_LNS_advance_line (54)
0x0000028d: 05 DW_LNS_set_column (24)
0x0000028f: 01 DW_LNS_copy
            0x0000000000000107     54     24      1   0             0  is_stmt


0x00000290: 00 DW_LNE_set_address (0x0000000000000109)
0x00000297: 05 DW_LNS_set_column (26)
0x00000299: 06 DW_LNS_negate_stmt
0x0000029a: 01 DW_LNS_copy
            0x0000000000000109     54     26      1   0             0 


0x0000029b: 00 DW_LNE_set_address (0x0000000000000116)
0x000002a2: 05 DW_LNS_set_column (24)
0x000002a4: 01 DW_LNS_copy
            0x0000000000000116     54     24      1   0             0 


0x000002a5: 00 DW_LNE_set_address (0x0000000000000119)
0x000002ac: 03 DW_LNS_advance_line (55)
0x000002ae: 06 DW_LNS_negate_stmt
0x000002af: 01 DW_LNS_copy
            0x0000000000000119     55     24      1   0             0  is_stmt


0x000002b0: 00 DW_LNE_set_address (0x0000000000000120)
0x000002b7: 03 DW_LNS_advance_line (52)
0x000002b9: 05 DW_LNS_set_column (44)
0x000002bb: 01 DW_LNS_copy
            0x0000000000000120     52     44      1   0             0  is_stmt


0x000002bc: 00 DW_LNE_set_address (0x000000000000012c)
0x000002c3: 05 DW_LNS_set_column (38)
0x000002c5: 06 DW_LNS_negate_stmt
0x000002c6: 01 DW_LNS_copy
            0x000000000000012c     52     38      1   0             0 


0x000002c7: 00 DW_LNE_set_address (0x000000000000012f)
0x000002ce: 05 DW_LNS_set_column (13)
0x000002d0: 01 DW_LNS_copy
            0x000000000000012f     52     13      1   0             0 


0x000002d1: 00 DW_LNE_set_address (0x0000000000000133)
0x000002d8: 03 DW_LNS_advance_line (58)
0x000002da: 05 DW_LNS_set_column (19)
0x000002dc: 06 DW_LNS_negate_stmt
0x000002dd: 01 DW_LNS_copy
            0x0000000000000133     58     19      1   0             0  is_stmt


0x000002de: 00 DW_LNE_set_address (0x0000000000000142)
0x000002e5: 03 DW_LNS_advance_line (59)
0x000002e7: 05 DW_LNS_set_column (21)
0x000002e9: 01 DW_LNS_copy
            0x0000000000000142     59     21      1   0             0  is_stmt


0x000002ea: 00 DW_LNE_set_address (0x0000000000000149)
0x000002f1: 03 DW_LNS_advance_line (57)
0x000002f3: 05 DW_LNS_set_column (18)
0x000002f5: 01 DW_LNS_copy
            0x0000000000000149     57     18      1   0             0  is_stmt


0x000002f6: 00 DW_LNE_set_address (0x0000000000000159)
0x000002fd: 03 DW_LNS_advance_line (62)
0x000002ff: 05 DW_LNS_set_column (14)
0x00000301: 01 DW_LNS_copy
            0x0000000000000159     62     14      1   0             0  is_stmt


0x00000302: 00 DW_LNE_set_address (0x000000000000015d)
0x00000309: 05 DW_LNS_set_column (23)
0x0000030b: 06 DW_LNS_negate_stmt
0x0000030c: 01 DW_LNS_copy
            0x000000000000015d     62     23      1   0             0 


0x0000030d: 00 DW_LNE_set_address (0x0000000000000162)
0x00000314: 05 DW_LNS_set_column (14)
0x00000316: 01 DW_LNS_copy
            0x0000000000000162     62     14      1   0             0 


0x00000317: 00 DW_LNE_set_address (0x0000000000000166)
0x0000031e: 03 DW_LNS_advance_line (66)
0x00000320: 05 DW_LNS_set_column (16)
0x00000322: 06 DW_LNS_negate_stmt
0x00000323: 01 DW_LNS_copy
            0x0000000000000166     66     16      1   0             0  is_stmt


0x00000324: 00 DW_LNE_set_address (0x0000000000000175)
0x0000032b: 03 DW_LNS_advance_line (75)
0x0000032d: 05 DW_LNS_set_column (27)
0x0000032f: 01 DW_LNS_copy
            0x0000000000000175     75     27      1   0             0  is_stmt


0x00000330: 00 DW_LNE_set_address (0x000000000000017e)
0x00000337: 03 DW_LNS_advance_line (76)
0x00000339: 05 DW_LNS_set_column (16)
0x0000033b: 01 DW_LNS_copy
            0x000000000000017e     76     16      1   0             0  is_stmt


0x0000033c: 00 DW_LNE_set_address (0x0000000000000186)
0x00000343: 05 DW_LNS_set_column (27)
0x00000345: 06 DW_LNS_negate_stmt
0x00000346: 01 DW_LNS_copy
            0x0000000000000186     76     27      1   0             0 


0x00000347: 00 DW_LNE_set_address (0x0000000000000188)
0x0000034e: 05 DW_LNS_set_column (35)
0x00000350: 01 DW_LNS_copy
            0x0000000000000188     76     35      1   0             0 


0x00000351: 00 DW_LNE_set_address (0x0000000000000191)
0x00000358: 05 DW_LNS_set_column (27)
0x0000035a: 01 DW_LNS_copy
            0x0000000000000191     76     27      1   0             0 


0x0000035b: 00 DW_LNE_set_address (0x0000000000000196)
0x00000362: 05 DW_LNS_set_column (25)
0x00000364: 01 DW_LNS_copy
            0x0000000000000196     76     25      1   0             0 


0x00000365: 00 DW_LNE_set_address (0x0000000000000199)
0x0000036c: 03 DW_LNS_advance_line (75)
0x0000036e: 05 DW_LNS_set_column (27)
0x00000370: 06 DW_LNS_negate_stmt
0x00000371: 01 DW_LNS_copy
            0x0000000000000199     75     27      1   0             0  is_stmt


0x00000372: 00 DW_LNE_set_address (0x000000000000019e)
0x00000379: 05 DW_LNS_set_column (13)
0x0000037b: 06 DW_LNS_negate_stmt
0x0000037c: 01 DW_LNS_copy
            0x000000000000019e     75     13      1   0             0 


0x0000037d: 00 DW_LNE_set_address (0x00000000000001a6)
0x00000384: 03 DW_LNS_advance_line (77)
0x00000386: 06 DW_LNS_negate_stmt
0x00000387: 01 DW_LNS_copy
            0x00000000000001a6     77     13      1   0             0  is_stmt


0x00000388: 00 DW_LNE_set_address (0x00000000000001ae)
0x0000038f: 05 DW_LNS_set_column (22)
0x00000391: 06 DW_LNS_negate_stmt
0x00000392: 01 DW_LNS_copy
            0x00000000000001ae     77     22      1   0             0 


0x00000393: 00 DW_LNE_set_address (0x00000000000001b3)
0x0000039a: 03 DW_LNS_advance_line (79)
0x0000039c: 05 DW_LNS_set_column (16)
0x0000039e: 06 DW_LNS_negate_stmt
0x0000039f: 01 DW_LNS_copy
            0x00000000000001b3     79     16      1   0             0  is_stmt


0x000003a0: 00 DW_LNE_set_address (0x00000000000001bb)
0x000003a7: 05 DW_LNS_set_column (14)
0x000003a9: 06 DW_LNS_negate_stmt
0x000003aa: 01 DW_LNS_copy
            0x00000000000001bb     79     14      1   0             0 


0x000003ab: 00 DW_LNE_set_address (0x00000000000001ca)
0x000003b2: 05 DW_LNS_set_column (25)
0x000003b4: 01 DW_LNS_copy
            0x00000000000001ca     79     25      1   0             0 


0x000003b5: 00 DW_LNE_set_address (0x00000000000001d1)
0x000003bc: 03 DW_LNS_advance_line (81)
0x000003be: 05 DW_LNS_set_column (11)
0x000003c0: 06 DW_LNS_negate_stmt
0x000003c1: 01 DW_LNS_copy
            0x00000000000001d1     81     11      1   0             0  is_stmt


0x000003c2: 00 DW_LNE_set_address (0x00000000000001d6)
0x000003c9: 03 DW_LNS_advance_line (66)
0x000003cb: 05 DW_LNS_set_column (16)
0x000003cd: 01 DW_LNS_copy
            0x00000000000001d6     66     16      1   0             0  is_stmt


0x000003ce: 00 DW_LNE_set_address (0x00000000000001dd)
0x000003d5: 03 DW_LNS_advance_line (74)
0x000003d7: 05 DW_LNS_set_column (22)
0x000003d9: 01 DW_LNS_copy
            0x00000000000001dd     74     22      1   0             0  is_stmt


0x000003da: 00 DW_LNE_set_address (0x00000000000001e7)
0x000003e1: 03 DW_LNS_advance_line (37)
0x000003e3: 05 DW_LNS_set_column (4)
0x000003e5: 01 DW_LNS_copy
            0x00000000000001e7     37      4      1   0             0  is_stmt


0x000003e6: 00 DW_LNE_set_address (0x00000000000001ed)
0x000003ed: 03 DW_LNS_advance_line (39)
0x000003ef: 01 DW_LNS_copy
            0x00000000000001ed     39      4      1   0             0  is_stmt


0x000003f0: 00 DW_LNE_set_address (0x00000000000001ef)
0x000003f7: 05 DW_LNS_set_column (16)
0x000003f9: 06 DW_LNS_negate_stmt
0x000003fa: 01 DW_LNS_copy
            0x00000000000001ef     39     16      1   0             0 


0x000003fb: 00 DW_LNE_set_address (0x00000000000001f8)
0x00000402: 05 DW_LNS_set_column (4)
0x00000404: 01 DW_LNS_copy
            0x00000000000001f8     39      4      1   0             0 


0x00000405: 00 DW_LNE_set_address (0x00000000000001fa)
0x0000040c: 05 DW_LNS_set_column (23)
0x0000040e: 01 DW_LNS_copy
            0x00000000000001fa     39     23      1   0             0 


0x0000040f: 00 DW_LNE_set_address (0x00000000000001ff)
0x00000416: 05 DW_LNS_set_column (19)
0x00000418: 01 DW_LNS_copy
            0x00000000000001ff     39     19      1   0             0 


0x00000419: 00 DW_LNE_set_address (0x0000000000000204)
0x00000420: 03 DW_LNS_advance_line (40)
0x00000422: 05 DW_LNS_set_column (4)
0x00000424: 06 DW_LNS_negate_stmt
0x00000425: 01 DW_LNS_copy
            0x0000000000000204     40      4      1   0             0  is_stmt


0x00000426: 00 DW_LNE_set_address (0x000000000000020c)
0x0000042d: 05 DW_LNS_set_column (17)
0x0000042f: 06 DW_LNS_negate_stmt
0x00000430: 01 DW_LNS_copy
            0x000000000000020c     40     17      1   0             0 


0x00000431: 00 DW_LNE_set_address (0x000000000000021c)
0x00000438: 03 DW_LNS_advance_line (44)
0x0000043a: 05 DW_LNS_set_column (16)
0x0000043c: 06 DW_LNS_negate_stmt
0x0000043d: 01 DW_LNS_copy
            0x000000000000021c     44     16      1   0             0  is_stmt


0x0000043e: 00 DW_LNE_set_address (0x0000000000000225)
0x00000445: 03 DW_LNS_advance_line (45)
0x00000447: 05 DW_LNS_set_column (10)
0x00000449: 01 DW_LNS_copy
            0x0000000000000225     45     10      1   0             0  is_stmt


0x0000044a: 00 DW_LNE_set_address (0x0000000000000227)
0x00000451: 05 DW_LNS_set_column (18)
0x00000453: 06 DW_LNS_negate_stmt
0x00000454: 01 DW_LNS_copy
            0x0000000000000227     45     18      1   0             0 


0x00000455: 00 DW_LNE_set_address (0x0000000000000230)
0x0000045c: 05 DW_LNS_set_column (10)
0x0000045e: 01 DW_LNS_copy
            0x0000000000000230     45     10      1   0             0 


0x0000045f: 00 DW_LNE_set_address (0x0000000000000232)
0x00000466: 05 DW_LNS_set_column (23)
0x00000468: 01 DW_LNS_copy
            0x0000000000000232     45     23      1   0             0 


0x00000469: 00 DW_LNE_set_address (0x0000000000000237)
0x00000470: 03 DW_LNS_advance_line (44)
0x00000472: 05 DW_LNS_set_column (16)
0x00000474: 06 DW_LNS_negate_stmt
0x00000475: 01 DW_LNS_copy
            0x0000000000000237     44     16      1   0             0  is_stmt


0x00000476: 00 DW_LNE_set_address (0x0000000000000248)
0x0000047d: 03 DW_LNS_advance_line (46)
0x0000047f: 05 DW_LNS_set_column (11)
0x00000481: 01 DW_LNS_copy
            0x0000000000000248     46     11      1   0             0  is_stmt


0x00000482: 00 DW_LNE_set_address (0x0000000000000254)
0x00000489: 05 DW_LNS_set_column (28)
0x0000048b: 06 DW_LNS_negate_stmt
0x0000048c: 01 DW_LNS_copy
            0x0000000000000254     46     28      1   0             0 


0x0000048d: 00 DW_LNE_set_address (0x0000000000000259)
0x00000494: 05 DW_LNS_set_column (41)
0x00000496: 01 DW_LNS_copy
            0x0000000000000259     46     41      1   0             0 


0x00000497: 00 DW_LNE_set_address (0x000000000000025e)
0x0000049e: 03 DW_LNS_advance_line (50)
0x000004a0: 05 DW_LNS_set_column (14)
0x000004a2: 06 DW_LNS_negate_stmt
0x000004a3: 01 DW_LNS_copy
            0x000000000000025e     50     14      1   0             0  is_stmt


0x000004a4: 00 DW_LNE_set_address (0x0000000000000271)
0x000004ab: 03 DW_LNS_advance_line (52)
0x000004ad: 05 DW_LNS_set_column (38)
0x000004af: 01 DW_LNS_copy
            0x0000000000000271     52     38      1   0             0  is_stmt


0x000004b0: 00 DW_LNE_set_address (0x0000000000000285)
0x000004b7: 03 DW_LNS_advance_line (53)
0x000004b9: 05 DW_LNS_set_column (22)
0x000004bb: 01 DW_LNS_copy
            0x0000000000000285     53     22      1   0             0  is_stmt


0x000004bc: 00 DW_LNE_set_address (0x0000000000000294)
0x000004c3: 03 DW_LNS_advance_line (54)
0x000004c5: 05 DW_LNS_set_column (24)
0x000004c7: 01 DW_LNS_copy
            0x0000000000000294     54     24      1   0             0  is_stmt


0x000004c8: 00 DW_LNE_set_address (0x0000000000000296)
0x000004cf: 05 DW_LNS_set_column (26)
0x000004d1: 06 DW_LNS_negate_stmt
0x000004d2: 01 DW_LNS_copy
            0x0000000000000296     54     26      1   0             0 


0x000004d3: 00 DW_LNE_set_address (0x00000000000002a3)
0x000004da: 05 DW_LNS_set_column (24)
0x000004dc: 01 DW_LNS_copy
            0x00000000000002a3     54     24      1   0             0 


0x000004dd: 00 DW_LNE_set_address (0x00000000000002a6)
0x000004e4: 03 DW_LNS_advance_line (55)
0x000004e6: 06 DW_LNS_negate_stmt
0x000004e7: 01 DW_LNS_copy
            0x00000000000002a6     55     24      1   0             0  is_stmt


0x000004e8: 00 DW_LNE_set_address (0x00000000000002ad)
0x000004ef: 03 DW_LNS_advance_line (52)
0x000004f1: 05 DW_LNS_set_column (44)
0x000004f3: 01 DW_LNS_copy
            0x00000000000002ad     52     44      1   0             0  is_stmt


0x000004f4: 00 DW_LNE_set_address (0x00000000000002b9)
0x000004fb: 05 DW_LNS_set_column (38)
0x000004fd: 06 DW_LNS_negate_stmt
0x000004fe: 01 DW_LNS_copy
            0x00000000000002b9     52     38      1   0             0 


0x000004ff: 00 DW_LNE_set_address (0x00000000000002c0)
0x00000506: 03 DW_LNS_advance_line (58)
0x00000508: 05 DW_LNS_set_column (19)
0x0000050a: 06 DW_LNS_negate_stmt
0x0000050b: 01 DW_LNS_copy
            0x00000000000002c0     58     19      1   0             0  is_stmt


0x0000050c: 00 DW_LNE_set_address (0x00000000000002cf)
0x00000513: 03 DW_LNS_advance_line (59)
0x00000515: 05 DW_LNS_set_column (21)
0x00000517: 01 DW_LNS_copy
            0x00000000000002cf     59     21      1   0             0  is_stmt


0x00000518: 00 DW_LNE_set_address (0x00000000000002d6)
0x0000051f: 03 DW_LNS_advance_line (57)
0x00000521: 05 DW_LNS_set_column (18)
0x00000523: 01 DW_LNS_copy
            0x00000000000002d6     57     18      1   0             0  is_stmt


0x00000524: 00 DW_LNE_set_address (0x00000000000002e6)
0x0000052b: 03 DW_LNS_advance_line (62)
0x0000052d: 05 DW_LNS_set_column (14)
0x0000052f: 01 DW_LNS_copy
            0x00000000000002e6     62     14      1   0             0  is_stmt


0x00000530: 00 DW_LNE_set_address (0x00000000000002ea)
0x00000537: 05 DW_LNS_set_column (23)
0x00000539: 06 DW_LNS_negate_stmt
0x0000053a: 01 DW_LNS_copy
            0x00000000000002ea     62     23      1   0             0 


0x0000053b: 00 DW_LNE_set_address (0x00000000000002ef)
0x00000542: 05 DW_LNS_set_column (14)
0x00000544: 01 DW_LNS_copy
            0x00000000000002ef     62     14      1   0             0 


0x00000545: 00 DW_LNE_set_address (0x00000000000002f3)
0x0000054c: 03 DW_LNS_advance_line (66)
0x0000054e: 05 DW_LNS_set_column (16)
0x00000550: 06 DW_LNS_negate_stmt
0x00000551: 01 DW_LNS_copy
            0x00000000000002f3     66     16      1   0             0  is_stmt


0x00000552: 00 DW_LNE_set_address (0x0000000000000302)
0x00000559: 03 DW_LNS_advance_line (75)
0x0000055b: 05 DW_LNS_set_column (27)
0x0000055d: 01 DW_LNS_copy
            0x0000000000000302     75     27      1   0             0  is_stmt


0x0000055e: 00 DW_LNE_set_address (0x000000000000030b)
0x00000565: 03 DW_LNS_advance_line (76)
0x00000567: 05 DW_LNS_set_column (16)
0x00000569: 01 DW_LNS_copy
            0x000000000000030b     76     16      1   0             0  is_stmt


0x0000056a: 00 DW_LNE_set_address (0x0000000000000313)
0x00000571: 05 DW_LNS_set_column (27)
0x00000573: 06 DW_LNS_negate_stmt
0x00000574: 01 DW_LNS_copy
            0x0000000000000313     76     27      1   0             0 


0x00000575: 00 DW_LNE_set_address (0x0000000000000315)
0x0000057c: 05 DW_LNS_set_column (35)
0x0000057e: 01 DW_LNS_copy
            0x0000000000000315     76     35      1   0             0 


0x0000057f: 00 DW_LNE_set_address (0x000000000000031e)
0x00000586: 05 DW_LNS_set_column (27)
0x00000588: 01 DW_LNS_copy
            0x000000000000031e     76     27      1   0             0 


0x00000589: 00 DW_LNE_set_address (0x0000000000000323)
0x00000590: 05 DW_LNS_set_column (25)
0x00000592: 01 DW_LNS_copy
            0x0000000000000323     76     25      1   0             0 


0x00000593: 00 DW_LNE_set_address (0x0000000000000326)
0x0000059a: 03 DW_LNS_advance_line (75)
0x0000059c: 05 DW_LNS_set_column (27)
0x0000059e: 06 DW_LNS_negate_stmt
0x0000059f: 01 DW_LNS_copy
            0x0000000000000326     75     27      1   0             0  is_stmt


0x000005a0: 00 DW_LNE_set_address (0x0000000000000333)
0x000005a7: 03 DW_LNS_advance_line (77)
0x000005a9: 05 DW_LNS_set_column (13)
0x000005ab: 01 DW_LNS_copy
            0x0000000000000333     77     13      1   0             0  is_stmt


0x000005ac: 00 DW_LNE_set_address (0x000000000000033b)
0x000005b3: 05 DW_LNS_set_column (22)
0x000005b5: 06 DW_LNS_negate_stmt
0x000005b6: 01 DW_LNS_copy
            0x000000000000033b     77     22      1   0             0 


0x000005b7: 00 DW_LNE_set_address (0x0000000000000340)
0x000005be: 03 DW_LNS_advance_line (79)
0x000005c0: 05 DW_LNS_set_column (16)
0x000005c2: 06 DW_LNS_negate_stmt
0x000005c3: 01 DW_LNS_copy
            0x0000000000000340     79     16      1   0             0  is_stmt


0x000005c4: 00 DW_LNE_set_address (0x0000000000000348)
0x000005cb: 05 DW_LNS_set_column (14)
0x000005cd: 06 DW_LNS_negate_stmt
0x000005ce: 01 DW_LNS_copy
            0x0000000000000348     79     14      1   0             0 


0x000005cf: 00 DW_LNE_set_address (0x0000000000000357)
0x000005d6: 05 DW_LNS_set_column (25)
0x000005d8: 01 DW_LNS_copy
            0x0000000000000357     79     25      1   0             0 


0x000005d9: 00 DW_LNE_set_address (0x000000000000035e)
0x000005e0: 03 DW_LNS_advance_line (81)
0x000005e2: 05 DW_LNS_set_column (11)
0x000005e4: 06 DW_LNS_negate_stmt
0x000005e5: 01 DW_LNS_copy
            0x000000000000035e     81     11      1   0             0  is_stmt


0x000005e6: 00 DW_LNE_set_address (0x0000000000000363)
0x000005ed: 03 DW_LNS_advance_line (66)
0x000005ef: 05 DW_LNS_set_column (16)
0x000005f1: 01 DW_LNS_copy
            0x0000000000000363     66     16      1   0             0  is_stmt


0x000005f2: 00 DW_LNE_set_address (0x000000000000036a)
0x000005f9: 03 DW_LNS_advance_line (74)
0x000005fb: 05 DW_LNS_set_column (22)
0x000005fd: 01 DW_LNS_copy
            0x000000000000036a     74     22      1   0             0  is_stmt


0x000005fe: 00 DW_LNE_set_address (0x000000000000037a)
0x00000605: 03 DW_LNS_advance_line (67)
0x00000607: 05 DW_LNS_set_column (13)
0x00000609: 01 DW_LNS_copy
            0x000000000000037a     67     13      1   0             0  is_stmt


0x0000060a: 00 DW_LNE_set_address (0x000000000000037e)
0x00000611: 03 DW_LNS_advance_line (68)
0x00000613: 01 DW_LNS_copy
            0x000000000000037e     68     13      1   0             0  is_stmt


0x00000614: 00 DW_LNE_set_address (0x0000000000000382)
0x0000061b: 03 DW_LNS_advance_line (69)
0x0000061d: 01 DW_LNS_copy
            0x0000000000000382     69     13      1   0             0  is_stmt


0x0000061e: 00 DW_LNE_set_address (0x0000000000000386)
0x00000625: 03 DW_LNS_advance_line (70)
0x00000627: 01 DW_LNS_copy
            0x0000000000000386     70     13      1   0             0  is_stmt


0x00000628: 00 DW_LNE_set_address (0x0000000000000389)
0x0000062f: 00 DW_LNE_end_sequence
            0x0000000000000389     70     13      1   0             0  is_stmt end_sequence

0x00000632: 00 DW_LNE_set_address (0x000000000000038b)
0x00000639: 03 DW_LNS_advance_line (152)
0x0000063c: 01 DW_LNS_copy
            0x000000000000038b    152      0      1   0             0  is_stmt


0x0000063d: 00 DW_LNE_set_address (0x000000000000039d)
0x00000644: 03 DW_LNS_advance_line (153)
0x00000646: 05 DW_LNS_set_column (17)
0x00000648: 0a DW_LNS_set_prologue_end
0x00000649: 01 DW_LNS_copy
            0x000000000000039d    153     17      1   0             0  is_stmt prologue_end


0x0000064a: 00 DW_LNE_set_address (0x00000000000003a2)
0x00000651: 05 DW_LNS_set_column (12)
0x00000653: 06 DW_LNS_negate_stmt
0x00000654: 01 DW_LNS_copy
            0x00000000000003a2    153     12      1   0             0 


0x00000655: 00 DW_LNE_set_address (0x00000000000003a8)
0x0000065c: 05 DW_LNS_set_column (28)
0x0000065e: 01 DW_LNS_copy
            0x00000000000003a8    153     28      1   0             0 


0x0000065f: 00 DW_LNE_set_address (0x00000000000003ad)
0x00000666: 05 DW_LNS_set_column (23)
0x00000668: 01 DW_LNS_copy
            0x00000000000003ad    153     23      1   0             0 


0x00000669: 00 DW_LNE_set_address (0x00000000000003b3)
0x00000670: 03 DW_LNS_advance_line (155)
0x00000672: 05 DW_LNS_set_column (10)
0x00000674: 06 DW_LNS_negate_stmt
0x00000675: 01 DW_LNS_copy
            0x00000000000003b3    155     10      1   0             0  is_stmt


0x00000676: 00 DW_LNE_set_address (0x00000000000003b4)
0x0000067d: 05 DW_LNS_set_column (8)
0x0000067f: 06 DW_LNS_negate_stmt
0x00000680: 01 DW_LNS_copy
            0x00000000000003b4    155      8      1   0             0 


0x00000681: 00 DW_LNE_set_address (0x00000000000003b7)
0x00000688: 03 DW_LNS_advance_line (156)
0x0000068a: 05 DW_LNS_set_column (7)
0x0000068c: 06 DW_LNS_negate_stmt
0x0000068d: 01 DW_LNS_copy
            0x00000000000003b7    156      7      1   0             0  is_stmt


0x0000068e: 00 DW_LNE_set_address (0x00000000000003c6)
0x00000695: 03 DW_LNS_advance_line (94)
0x00000697: 05 DW_LNS_set_column (18)
0x00000699: 01 DW_LNS_copy
            0x00000000000003c6     94     18      1   0             0  is_stmt


0x0000069a: 00 DW_LNE_set_address (0x00000000000003cb)
0x000006a1: 05 DW_LNS_set_column (4)
0x000006a3: 06 DW_LNS_negate_stmt
0x000006a4: 01 DW_LNS_copy
            0x00000000000003cb     94      4      1   0             0 


0x000006a5: 00 DW_LNE_set_address (0x00000000000003e0)
0x000006ac: 03 DW_LNS_advance_line (95)
0x000006ae: 05 DW_LNS_set_column (29)
0x000006b0: 06 DW_LNS_negate_stmt
0x000006b1: 01 DW_LNS_copy
            0x00000000000003e0     95     29      1   0             0  is_stmt


0x000006b2: 00 DW_LNE_set_address (0x00000000000003e2)
0x000006b9: 03 DW_LNS_advance_line (98)
0x000006bb: 05 DW_LNS_set_column (19)
0x000006bd: 01 DW_LNS_copy
            0x00000000000003e2     98     19      1   0             0  is_stmt


0x000006be: 00 DW_LNE_set_address (0x00000000000003e9)
0x000006c5: 03 DW_LNS_advance_line (97)
0x000006c7: 05 DW_LNS_set_column (16)
0x000006c9: 01 DW_LNS_copy
            0x00000000000003e9     97     16      1   0             0  is_stmt


0x000006ca: 00 DW_LNE_set_address (0x00000000000003f0)
0x000006d1: 03 DW_LNS_advance_line (96)
0x000006d3: 01 DW_LNS_copy
            0x00000000000003f0     96     16      1   0             0  is_stmt


0x000006d4: 00 DW_LNE_set_address (0x00000000000003fb)
0x000006db: 03 DW_LNS_advance_line (94)
0x000006dd: 05 DW_LNS_set_column (28)
0x000006df: 01 DW_LNS_copy
            0x00000000000003fb     94     28      1   0             0  is_stmt


0x000006e0: 00 DW_LNE_set_address (0x0000000000000400)
0x000006e7: 05 DW_LNS_set_column (18)
0x000006e9: 06 DW_LNS_negate_stmt
0x000006ea: 01 DW_LNS_copy
            0x0000000000000400     94     18      1   0             0 


0x000006eb: 00 DW_LNE_set_address (0x0000000000000405)
0x000006f2: 05 DW_LNS_set_column (4)
0x000006f4: 01 DW_LNS_copy
            0x0000000000000405     94      4      1   0             0 


0x000006f5: 00 DW_LNE_set_address (0x000000000000040d)
0x000006fc: 03 DW_LNS_advance_line (102)
0x000006fe: 05 DW_LNS_set_column (27)
0x00000700: 06 DW_LNS_negate_stmt
0x00000701: 01 DW_LNS_copy
            0x000000000000040d    102     27      1   0             0  is_stmt


0x00000702: 00 DW_LNE_set_address (0x0000000000000412)
0x00000709: 05 DW_LNS_set_column (18)
0x0000070b: 06 DW_LNS_negate_stmt
0x0000070c: 01 DW_LNS_copy
            0x0000000000000412    102     18      1   0             0 


0x0000070d: 00 DW_LNE_set_address (0x0000000000000418)
0x00000714: 03 DW_LNS_advance_line (103)
0x00000716: 06 DW_LNS_negate_stmt
0x00000717: 01 DW_LNS_copy
            0x0000000000000418    103     18      1   0             0  is_stmt


0x00000718: 00 DW_LNE_set_address (0x0000000000000426)
0x0000071f: 03 DW_LNS_advance_line (105)
0x00000721: 01 DW_LNS_copy
            0x0000000000000426    105     18      1   0             0  is_stmt


0x00000722: 00 DW_LNE_set_address (0x000000000000042b)
0x00000729: 05 DW_LNS_set_column (4)
0x0000072b: 06 DW_LNS_negate_stmt
0x0000072c: 01 DW_LNS_copy
            0x000000000000042b    105      4      1   0             0 


0x0000072d: 00 DW_LNE_set_address (0x000000000000042f)
0x00000734: 03 DW_LNS_advance_line (106)
0x00000736: 05 DW_LNS_set_column (7)
0x00000738: 06 DW_LNS_negate_stmt
0x00000739: 01 DW_LNS_copy
            0x000000000000042f    106      7      1   0             0  is_stmt


0x0000073a: 00 DW_LNE_set_address (0x0000000000000437)
0x00000741: 05 DW_LNS_set_column (16)
0x00000743: 06 DW_LNS_negate_stmt
0x00000744: 01 DW_LNS_copy
            0x0000000000000437    106     16      1   0             0 


0x00000745: 00 DW_LNE_set_address (0x000000000000043c)
0x0000074c: 03 DW_LNS_advance_line (105)
0x0000074e: 05 DW_LNS_set_column (24)
0x00000750: 06 DW_LNS_negate_stmt
0x00000751: 01 DW_LNS_copy
            0x000000000000043c    105     24      1   0             0  is_stmt


0x00000752: 00 DW_LNE_set_address (0x0000000000000441)
0x00000759: 05 DW_LNS_set_column (18)
0x0000075b: 06 DW_LNS_negate_stmt
0x0000075c: 01 DW_LNS_copy
            0x0000000000000441    105     18      1   0             0 


0x0000075d: 00 DW_LNE_set_address (0x0000000000000467)
0x00000764: 03 DW_LNS_advance_line (112)
0x00000766: 05 DW_LNS_set_column (13)
0x00000768: 06 DW_LNS_negate_stmt
0x00000769: 01 DW_LNS_copy
            0x0000000000000467    112     13      1   0             0  is_stmt


0x0000076a: 00 DW_LNE_set_address (0x0000000000000469)
0x00000771: 05 DW_LNS_set_column (26)
0x00000773: 06 DW_LNS_negate_stmt
0x00000774: 01 DW_LNS_copy
            0x0000000000000469    112     26      1   0             0 


0x00000775: 00 DW_LNE_set_address (0x0000000000000476)
0x0000077c: 05 DW_LNS_set_column (35)
0x0000077e: 01 DW_LNS_copy
            0x0000000000000476    112     35      1   0             0 


0x0000077f: 00 DW_LNE_set_address (0x0000000000000477)
0x00000786: 05 DW_LNS_set_column (13)
0x00000788: 01 DW_LNS_copy
            0x0000000000000477    112     13      1   0             0 


0x00000789: 00 DW_LNE_set_address (0x0000000000000485)
0x00000790: 03 DW_LNS_advance_line (111)
0x00000792: 05 DW_LNS_set_column (30)
0x00000794: 06 DW_LNS_negate_stmt
0x00000795: 01 DW_LNS_copy
            0x0000000000000485    111     30      1   0             0  is_stmt


0x00000796: 00 DW_LNE_set_address (0x000000000000048a)
0x0000079d: 05 DW_LNS_set_column (24)
0x0000079f: 06 DW_LNS_negate_stmt
0x000007a0: 01 DW_LNS_copy
            0x000000000000048a    111     24      1   0             0 


0x000007a1: 00 DW_LNE_set_address (0x000000000000048f)
0x000007a8: 05 DW_LNS_set_column (10)
0x000007aa: 01 DW_LNS_copy
            0x000000000000048f    111     10      1   0             0 


0x000007ab: 00 DW_LNE_set_address (0x0000000000000494)
0x000007b2: 03 DW_LNS_advance_line (113)
0x000007b4: 06 DW_LNS_negate_stmt
0x000007b5: 01 DW_LNS_copy
            0x0000000000000494    113     10      1   0             0  is_stmt


0x000007b6: 00 DW_LNE_set_address (0x0000000000000499)
0x000007bd: 03 DW_LNS_advance_line (118)
0x000007bf: 05 DW_LNS_set_column (16)
0x000007c1: 01 DW_LNS_copy
            0x0000000000000499    118     16      1   0             0  is_stmt


0x000007c2: 00 DW_LNE_set_address (0x000000000000049e)
0x000007c9: 05 DW_LNS_set_column (7)
0x000007cb: 06 DW_LNS_negate_stmt
0x000007cc: 01 DW_LNS_copy
            0x000000000000049e    118      7      1   0             0 


0x000007cd: 00 DW_LNE_set_address (0x00000000000004a2)
0x000007d4: 03 DW_LNS_advance_line (119)
0x000007d6: 05 DW_LNS_set_column (10)
0x000007d8: 06 DW_LNS_negate_stmt
0x000007d9: 01 DW_LNS_copy
            0x00000000000004a2    119     10      1   0             0  is_stmt


0x000007da: 00 DW_LNE_set_address (0x00000000000004a4)
0x000007e1: 05 DW_LNS_set_column (18)
0x000007e3: 06 DW_LNS_negate_stmt
0x000007e4: 01 DW_LNS_copy
            0x00000000000004a4    119     18      1   0             0 


0x000007e5: 00 DW_LNE_set_address (0x00000000000004ad)
0x000007ec: 05 DW_LNS_set_column (10)
0x000007ee: 01 DW_LNS_copy
            0x00000000000004ad    119     10      1   0             0 


0x000007ef: 00 DW_LNE_set_address (0x00000000000004af)
0x000007f6: 05 DW_LNS_set_column (23)
0x000007f8: 01 DW_LNS_copy
            0x00000000000004af    119     23      1   0             0 


0x000007f9: 00 DW_LNE_set_address (0x00000000000004b4)
0x00000800: 03 DW_LNS_advance_line (118)
0x00000802: 05 DW_LNS_set_column (16)
0x00000804: 06 DW_LNS_negate_stmt
0x00000805: 01 DW_LNS_copy
            0x00000000000004b4    118     16      1   0             0  is_stmt


0x00000806: 00 DW_LNE_set_address (0x00000000000004bf)
0x0000080d: 05 DW_LNS_set_column (7)
0x0000080f: 06 DW_LNS_negate_stmt
0x00000810: 01 DW_LNS_copy
            0x00000000000004bf    118      7      1   0             0 


0x00000811: 00 DW_LNE_set_address (0x00000000000004c5)
0x00000818: 03 DW_LNS_advance_line (122)
0x0000081a: 05 DW_LNS_set_column (16)
0x0000081c: 06 DW_LNS_negate_stmt
0x0000081d: 01 DW_LNS_copy
            0x00000000000004c5    122     16      1   0             0  is_stmt


0x0000081e: 00 DW_LNE_set_address (0x00000000000004d9)
0x00000825: 03 DW_LNS_advance_line (125)
0x00000827: 05 DW_LNS_set_column (22)
0x00000829: 01 DW_LNS_copy
            0x00000000000004d9    125     22      1   0             0  is_stmt


0x0000082a: 00 DW_LNE_set_address (0x00000000000004e2)
0x00000831: 03 DW_LNS_advance_line (126)
0x00000833: 05 DW_LNS_set_column (27)
0x00000835: 01 DW_LNS_copy
            0x00000000000004e2    126     27      1   0             0  is_stmt


0x00000836: 00 DW_LNE_set_address (0x00000000000004e7)
0x0000083d: 05 DW_LNS_set_column (13)
0x0000083f: 06 DW_LNS_negate_stmt
0x00000840: 01 DW_LNS_copy
            0x00000000000004e7    126     13      1   0             0 


0x00000841: 00 DW_LNE_set_address (0x00000000000004eb)
0x00000848: 03 DW_LNS_advance_line (127)
0x0000084a: 05 DW_LNS_set_column (16)
0x0000084c: 06 DW_LNS_negate_stmt
0x0000084d: 01 DW_LNS_copy
            0x00000000000004eb    127     16      1   0             0  is_stmt


0x0000084e: 00 DW_LNE_set_address (0x00000000000004f3)
0x00000855: 05 DW_LNS_set_column (27)
0x00000857: 06 DW_LNS_negate_stmt
0x00000858: 01 DW_LNS_copy
            0x00000000000004f3    127     27      1   0             0 


0x00000859: 00 DW_LNE_set_address (0x00000000000004f5)
0x00000860: 05 DW_LNS_set_column (35)
0x00000862: 01 DW_LNS_copy
            0x00000000000004f5    127     35      1   0             0 


0x00000863: 00 DW_LNE_set_address (0x00000000000004fe)
0x0000086a: 05 DW_LNS_set_column (27)
0x0000086c: 01 DW_LNS_copy
            0x00000000000004fe    127     27      1   0             0 


0x0000086d: 00 DW_LNE_set_address (0x0000000000000503)
0x00000874: 05 DW_LNS_set_column (25)
0x00000876: 01 DW_LNS_copy
            0x0000000000000503    127     25      1   0             0 


0x00000877: 00 DW_LNE_set_address (0x0000000000000506)
0x0000087e: 03 DW_LNS_advance_line (126)
0x00000880: 05 DW_LNS_set_column (27)
0x00000882: 06 DW_LNS_negate_stmt
0x00000883: 01 DW_LNS_copy
            0x0000000000000506    126     27      1   0             0  is_stmt


0x00000884: 00 DW_LNE_set_address (0x000000000000050b)
0x0000088b: 05 DW_LNS_set_column (13)
0x0000088d: 06 DW_LNS_negate_stmt
0x0000088e: 01 DW_LNS_copy
            0x000000000000050b    126     13      1   0             0 


0x0000088f: 00 DW_LNE_set_address (0x0000000000000513)
0x00000896: 03 DW_LNS_advance_line (128)
0x00000898: 06 DW_LNS_negate_stmt
0x00000899: 01 DW_LNS_copy
            0x0000000000000513    128     13      1   0             0  is_stmt


0x0000089a: 00 DW_LNE_set_address (0x000000000000051b)
0x000008a1: 05 DW_LNS_set_column (22)
0x000008a3: 06 DW_LNS_negate_stmt
0x000008a4: 01 DW_LNS_copy
            0x000000000000051b    128     22      1   0             0 


0x000008a5: 00 DW_LNE_set_address (0x0000000000000520)
0x000008ac: 03 DW_LNS_advance_line (130)
0x000008ae: 05 DW_LNS_set_column (16)
0x000008b0: 06 DW_LNS_negate_stmt
0x000008b1: 01 DW_LNS_copy
            0x0000000000000520    130     16      1   0             0  is_stmt


0x000008b2: 00 DW_LNE_set_address (0x0000000000000528)
0x000008b9: 05 DW_LNS_set_column (14)
0x000008bb: 06 DW_LNS_negate_stmt
0x000008bc: 01 DW_LNS_copy
            0x0000000000000528    130     14      1   0             0 


0x000008bd: 00 DW_LNE_set_address (0x0000000000000539)
0x000008c4: 05 DW_LNS_set_column (25)
0x000008c6: 01 DW_LNS_copy
            0x0000000000000539    130     25      1   0             0 


0x000008c7: 00 DW_LNE_set_address (0x000000000000053e)
0x000008ce: 05 DW_LNS_set_column (14)
0x000008d0: 01 DW_LNS_copy
            0x000000000000053e    130     14      1   0             0 


0x000008d1: 00 DW_LNE_set_address (0x0000000000000540)
0x000008d8: 03 DW_LNS_advance_line (133)
0x000008da: 05 DW_LNS_set_column (11)
0x000008dc: 06 DW_LNS_negate_stmt
0x000008dd: 01 DW_LNS_copy
            0x0000000000000540    133     11      1   0             0  is_stmt


0x000008de: 00 DW_LNE_set_address (0x0000000000000545)
0x000008e5: 03 DW_LNS_advance_line (122)
0x000008e7: 05 DW_LNS_set_column (16)
0x000008e9: 01 DW_LNS_copy
            0x0000000000000545    122     16      1   0             0  is_stmt


0x000008ea: 00 DW_LNE_set_address (0x000000000000054a)
0x000008f1: 05 DW_LNS_set_column (14)
0x000008f3: 06 DW_LNS_negate_stmt
0x000008f4: 01 DW_LNS_copy
            0x000000000000054a    122     14      1   0             0 


0x000008f5: 00 DW_LNE_set_address (0x000000000000054f)
0x000008fc: 03 DW_LNS_advance_line (130)
0x000008fe: 06 DW_LNS_negate_stmt
0x000008ff: 01 DW_LNS_copy
            0x000000000000054f    130     14      1   0             0  is_stmt


0x00000900: 00 DW_LNE_set_address (0x0000000000000550)
0x00000907: 03 DW_LNS_advance_line (110)
0x00000909: 05 DW_LNS_set_column (11)
0x0000090b: 01 DW_LNS_copy
            0x0000000000000550    110     11      1   0             0  is_stmt


0x0000090c: 00 DW_LNE_set_address (0x000000000000055f)
0x00000913: 03 DW_LNS_advance_line (113)
0x00000915: 05 DW_LNS_set_column (10)
0x00000917: 01 DW_LNS_copy
            0x000000000000055f    113     10      1   0             0  is_stmt


0x00000918: 00 DW_LNE_set_address (0x0000000000000564)
0x0000091f: 03 DW_LNS_advance_line (118)
0x00000921: 05 DW_LNS_set_column (16)
0x00000923: 01 DW_LNS_copy
            0x0000000000000564    118     16      1   0             0  is_stmt


0x00000924: 00 DW_LNE_set_address (0x0000000000000569)
0x0000092b: 05 DW_LNS_set_column (7)
0x0000092d: 06 DW_LNS_negate_stmt
0x0000092e: 01 DW_LNS_copy
            0x0000000000000569    118      7      1   0             0 


0x0000092f: 00 DW_LNE_set_address (0x000000000000056d)
0x00000936: 03 DW_LNS_advance_line (119)
0x00000938: 05 DW_LNS_set_column (10)
0x0000093a: 06 DW_LNS_negate_stmt
0x0000093b: 01 DW_LNS_copy
            0x000000000000056d    119     10      1   0             0  is_stmt


0x0000093c: 00 DW_LNE_set_address (0x000000000000056f)
0x00000943: 05 DW_LNS_set_column (18)
0x00000945: 06 DW_LNS_negate_stmt
0x00000946: 01 DW_LNS_copy
            0x000000000000056f    119     18      1   0             0 


0x00000947: 00 DW_LNE_set_address (0x0000000000000578)
0x0000094e: 05 DW_LNS_set_column (10)
0x00000950: 01 DW_LNS_copy
            0x0000000000000578    119     10      1   0             0 


0x00000951: 00 DW_LNE_set_address (0x000000000000057a)
0x00000958: 05 DW_LNS_set_column (23)
0x0000095a: 01 DW_LNS_copy
            0x000000000000057a    119     23      1   0             0 


0x0000095b: 00 DW_LNE_set_address (0x000000000000057f)
0x00000962: 03 DW_LNS_advance_line (118)
0x00000964: 05 DW_LNS_set_column (16)
0x00000966: 06 DW_LNS_negate_stmt
0x00000967: 01 DW_LNS_copy
            0x000000000000057f    118     16      1   0             0  is_stmt


0x00000968: 00 DW_LNE_set_address (0x000000000000058a)
0x0000096f: 05 DW_LNS_set_column (7)
0x00000971: 06 DW_LNS_negate_stmt
0x00000972: 01 DW_LNS_copy
            0x000000000000058a    118      7      1   0             0 


0x00000973: 00 DW_LNE_set_address (0x0000000000000590)
0x0000097a: 03 DW_LNS_advance_line (122)
0x0000097c: 05 DW_LNS_set_column (16)
0x0000097e: 06 DW_LNS_negate_stmt
0x0000097f: 01 DW_LNS_copy
            0x0000000000000590    122     16      1   0             0  is_stmt


0x00000980: 00 DW_LNE_set_address (0x0000000000000595)
0x00000987: 05 DW_LNS_set_column (14)
0x00000989: 06 DW_LNS_negate_stmt
0x0000098a: 01 DW_LNS_copy
            0x0000000000000595    122     14      1   0             0 


0x0000098b: 00 DW_LNE_set_address (0x000000000000059e)
0x00000992: 03 DW_LNS_advance_line (125)
0x00000994: 05 DW_LNS_set_column (22)
0x00000996: 06 DW_LNS_negate_stmt
0x00000997: 01 DW_LNS_copy
            0x000000000000059e    125     22      1   0             0  is_stmt


0x00000998: 00 DW_LNE_set_address (0x00000000000005ad)
0x0000099f: 03 DW_LNS_advance_line (126)
0x000009a1: 05 DW_LNS_set_column (27)
0x000009a3: 01 DW_LNS_copy
            0x00000000000005ad    126     27      1   0             0  is_stmt


0x000009a4: 00 DW_LNE_set_address (0x00000000000005b2)
0x000009ab: 05 DW_LNS_set_column (13)
0x000009ad: 06 DW_LNS_negate_stmt
0x000009ae: 01 DW_LNS_copy
            0x00000000000005b2    126     13      1   0             0 


0x000009af: 00 DW_LNE_set_address (0x00000000000005b6)
0x000009b6: 03 DW_LNS_advance_line (127)
0x000009b8: 05 DW_LNS_set_column (16)
0x000009ba: 06 DW_LNS_negate_stmt
0x000009bb: 01 DW_LNS_copy
            0x00000000000005b6    127     16      1   0             0  is_stmt


0x000009bc: 00 DW_LNE_set_address (0x00000000000005be)
0x000009c3: 05 DW_LNS_set_column (27)
0x000009c5: 06 DW_LNS_negate_stmt
0x000009c6: 01 DW_LNS_copy
            0x00000000000005be    127     27      1   0             0 


0x000009c7: 00 DW_LNE_set_address (0x00000000000005c0)
0x000009ce: 05 DW_LNS_set_column (35)
0x000009d0: 01 DW_LNS_copy
            0x00000000000005c0    127     35      1   0             0 


0x000009d1: 00 DW_LNE_set_address (0x00000000000005c9)
0x000009d8: 05 DW_LNS_set_column (27)
0x000009da: 01 DW_LNS_copy
            0x00000000000005c9    127     27      1   0             0 


0x000009db: 00 DW_LNE_set_address (0x00000000000005ce)
0x000009e2: 05 DW_LNS_set_column (25)
0x000009e4: 01 DW_LNS_copy
            0x00000000000005ce    127     25      1   0             0 


0x000009e5: 00 DW_LNE_set_address (0x00000000000005d1)
0x000009ec: 03 DW_LNS_advance_line (126)
0x000009ee: 05 DW_LNS_set_column (27)
0x000009f0: 06 DW_LNS_negate_stmt
0x000009f1: 01 DW_LNS_copy
            0x00000000000005d1    126     27      1   0             0  is_stmt


0x000009f2: 00 DW_LNE_set_address (0x00000000000005d6)
0x000009f9: 05 DW_LNS_set_column (13)
0x000009fb: 06 DW_LNS_negate_stmt
0x000009fc: 01 DW_LNS_copy
            0x00000000000005d6    126     13      1   0             0 


0x000009fd: 00 DW_LNE_set_address (0x00000000000005de)
0x00000a04: 03 DW_LNS_advance_line (128)
0x00000a06: 06 DW_LNS_negate_stmt
0x00000a07: 01 DW_LNS_copy
            0x00000000000005de    128     13      1   0             0  is_stmt


0x00000a08: 00 DW_LNE_set_address (0x00000000000005e6)
0x00000a0f: 05 DW_LNS_set_column (22)
0x00000a11: 06 DW_LNS_negate_stmt
0x00000a12: 01 DW_LNS_copy
            0x00000000000005e6    128     22      1   0             0 


0x00000a13: 00 DW_LNE_set_address (0x00000000000005eb)
0x00000a1a: 03 DW_LNS_advance_line (130)
0x00000a1c: 05 DW_LNS_set_column (16)
0x00000a1e: 06 DW_LNS_negate_stmt
0x00000a1f: 01 DW_LNS_copy
            0x00000000000005eb    130     16      1   0             0  is_stmt


0x00000a20: 00 DW_LNE_set_address (0x00000000000005f3)
0x00000a27: 05 DW_LNS_set_column (14)
0x00000a29: 06 DW_LNS_negate_stmt
0x00000a2a: 01 DW_LNS_copy
            0x00000000000005f3    130     14      1   0             0 


0x00000a2b: 00 DW_LNE_set_address (0x0000000000000604)
0x00000a32: 05 DW_LNS_set_column (25)
0x00000a34: 01 DW_LNS_copy
            0x0000000000000604    130     25      1   0             0 


0x00000a35: 00 DW_LNE_set_address (0x0000000000000609)
0x00000a3c: 05 DW_LNS_set_column (14)
0x00000a3e: 01 DW_LNS_copy
            0x0000000000000609    130     14      1   0             0 


0x00000a3f: 00 DW_LNE_set_address (0x000000000000060b)
0x00000a46: 03 DW_LNS_advance_line (133)
0x00000a48: 05 DW_LNS_set_column (11)
0x00000a4a: 06 DW_LNS_negate_stmt
0x00000a4b: 01 DW_LNS_copy
            0x000000000000060b    133     11      1   0             0  is_stmt


0x00000a4c: 00 DW_LNE_set_address (0x0000000000000610)
0x00000a53: 03 DW_LNS_advance_line (122)
0x00000a55: 05 DW_LNS_set_column (16)
0x00000a57: 01 DW_LNS_copy
            0x0000000000000610    122     16      1   0             0  is_stmt


0x00000a58: 00 DW_LNE_set_address (0x0000000000000615)
0x00000a5f: 05 DW_LNS_set_column (14)
0x00000a61: 06 DW_LNS_negate_stmt
0x00000a62: 01 DW_LNS_copy
            0x0000000000000615    122     14      1   0             0 


0x00000a63: 00 DW_LNE_set_address (0x000000000000061a)
0x00000a6a: 03 DW_LNS_advance_line (130)
0x00000a6c: 06 DW_LNS_negate_stmt
0x00000a6d: 01 DW_LNS_copy
            0x000000000000061a    130     14      1   0             0  is_stmt


0x00000a6e: 00 DW_LNE_set_address (0x000000000000061b)
0x00000a75: 03 DW_LNS_advance_line (110)
0x00000a77: 05 DW_LNS_set_column (11)
0x00000a79: 01 DW_LNS_copy
            0x000000000000061b    110     11      1   0             0  is_stmt


0x00000a7a: 00 DW_LNE_set_address (0x0000000000000621)
0x00000a81: 03 DW_LNS_advance_line (138)
0x00000a83: 05 DW_LNS_set_column (4)
0x00000a85: 01 DW_LNS_copy
            0x0000000000000621    138      4      1   0             0  is_stmt


0x00000a86: 00 DW_LNE_set_address (0x0000000000000625)
0x00000a8d: 03 DW_LNS_advance_line (139)
0x00000a8f: 01 DW_LNS_copy
            0x0000000000000625    139      4      1   0             0  is_stmt


0x00000a90: 00 DW_LNE_set_address (0x0000000000000631)
0x00000a97: 03 DW_LNS_advance_line (141)
0x00000a99: 01 DW_LNS_copy
            0x0000000000000631    141      4      1   0             0  is_stmt


0x00000a9a: 00 DW_LNE_set_address (0x000000000000063c)
0x00000aa1: 03 DW_LNS_advance_line (142)
0x00000aa3: 05 DW_LNS_set_column (20)
0x00000aa5: 01 DW_LNS_copy
            0x000000000000063c    142     20      1   0             0  is_stmt


0x00000aa6: 00 DW_LNE_set_address (0x0000000000000644)
0x00000aad: 03 DW_LNS_advance_line (146)
0x00000aaf: 01 DW_LNS_copy
            0x0000000000000644    146     20      1   0             0  is_stmt


0x00000ab0: 00 DW_LNE_set_address (0x000000000000064b)
0x00000ab7: 03 DW_LNS_advance_line (147)
0x00000ab9: 05 DW_LNS_set_column (7)
0x00000abb: 01 DW_LNS_copy
            0x000000000000064b    147      7      1   0             0  is_stmt


0x00000abc: 00 DW_LNE_set_address (0x000000000000064f)
0x00000ac3: 03 DW_LNS_advance_line (143)
0x00000ac5: 05 DW_LNS_set_column (11)
0x00000ac7: 01 DW_LNS_copy
            0x000000000000064f    143     11      1   0             0  is_stmt


0x00000ac8: 00 DW_LNE_set_address (0x0000000000000653)
0x00000acf: 05 DW_LNS_set_column (20)
0x00000ad1: 06 DW_LNS_negate_stmt
0x00000ad2: 01 DW_LNS_copy
            0x0000000000000653    143     20      1   0             0 


0x00000ad3: 00 DW_LNE_set_address (0x0000000000000658)
0x00000ada: 05 DW_LNS_set_column (11)
0x00000adc: 01 DW_LNS_copy
            0x0000000000000658    143     11      1   0             0 


0x00000add: 00 DW_LNE_set_address (0x000000000000065f)
0x00000ae4: 03 DW_LNS_advance_line (141)
0x00000ae6: 05 DW_LNS_set_column (4)
0x00000ae8: 06 DW_LNS_negate_stmt
0x00000ae9: 01 DW_LNS_copy
            0x000000000000065f    141      4      1   0             0  is_stmt


0x00000aea: 00 DW_LNE_set_address (0x0000000000000665)
0x00000af1: 03 DW_LNS_advance_line (159)
0x00000af3: 01 DW_LNS_copy
            0x0000000000000665    159      4      1   0             0  is_stmt


0x00000af4: 00 DW_LNE_set_address (0x000000000000067c)
0x00000afb: 03 DW_LNS_advance_line (161)
0x00000afd: 05 DW_LNS_set_column (1)
0x00000aff: 01 DW_LNS_copy
            0x000000000000067c    161      1      1   0             0  is_stmt


0x00000b00: 00 DW_LNE_set_address (0x0000000000000686)
0x00000b07: 00 DW_LNE_end_sequence
            0x0000000000000686    161      1      1   0             0  is_stmt end_sequence


.debug_str contents:
0x00000000: "clang version 11.0.0 (https://github.com/llvm/llvm-project.git 313d89724ce3ccf66c1c51849903e1e6d184dd85)"
0x00000069: "/usr/local/google/home/azakai/Dev/emscripten/tests/fannkuch.cpp"
0x000000a9: "/usr/local/google/home/azakai/Dev/2-binaryen"
0x000000d6: "i"
0x000000d8: "int"
0x000000dc: "n"
0x000000de: "next"
0x000000e3: "worker_args"
0x000000ef: "std"
0x000000f3: "decltype(nullptr)"
0x00000105: "nullptr_t"
0x0000010f: "free"
0x00000114: "_ZL8fannkuchi"
0x00000122: "fannkuch"
0x0000012b: "showmax"
0x00000133: "args"
0x00000138: "targs"
0x0000013e: "perm1"
0x00000144: "count"
0x0000014a: "r"
0x0000014c: "maxflips"
0x00000155: "flips"
0x0000015b: "cleanup"
0x00000163: "p0"
0x00000166: "_Z15fannkuch_workerPv"
0x0000017c: "fannkuch_worker"
0x0000018c: "main"
0x00000191: "_arg"
0x00000196: "perm"
0x0000019b: "k"
0x0000019d: "j"
0x0000019f: "tmp"
0x000001a3: "argc"
0x000001a8: "argv"
0x000001ad: "char"

.debug_ranges contents:
00000000 00000175 000001b3
00000000 000001dd 000001e6
00000000 00000302 00000340
00000000 0000036a 00000373
00000000 <End of list>
00000028 000004d9 00000520
00000028 0000059e 000005eb
00000028 <End of list>
00000040 00000006 00000389
00000040 0000038b 00000686
00000040 <End of list>
(module
 (type $i32_=>_i32 (func (param i32) (result i32)))
 (type $i32_i32_=>_i32 (func (param i32 i32) (result i32)))
 (type $none_=>_none (func))
 (type $i32_=>_none (func (param i32)))
 (type $i32_i32_i32_=>_i32 (func (param i32 i32 i32) (result i32)))
 (import "env" "memory" (memory $7 256 256))
 (data (i32.const 1024) "Pfannkuchen(%d) = %d.\n\00%d\00Wrong argument.\00")
 (import "env" "__indirect_function_table" (table $timport$8 1 funcref))
 (import "env" "malloc" (func $malloc (param i32) (result i32)))
 (import "env" "memcpy" (func $memcpy (param i32 i32 i32) (result i32)))
 (import "env" "free" (func $free (param i32)))
 (import "env" "atoi" (func $atoi (param i32) (result i32)))
 (import "env" "puts" (func $puts (param i32) (result i32)))
 (import "env" "iprintf" (func $iprintf (param i32 i32) (result i32)))
 (import "env" "putchar" (func $putchar (param i32) (result i32)))
 (global $global$0 (mut i32) (i32.const 5243952))
 (global $global$1 i32 (i32.const 1066))
 (export "__wasm_call_ctors" (func $__wasm_call_ctors))
 (export "main" (func $main))
 (export "__data_end" (global $global$1))
 (func $__wasm_call_ctors (; 7 ;)
 )
 (func $fannkuch_worker\28void*\29 (; 8 ;) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  ;; code offset: 0xb
  (local.set $1
   ;; code offset: 0x9
   (i32.const 0)
  )
  ;; code offset: 0x1b
  (local.set $4
   ;; code offset: 0x19
   (call $malloc
    ;; code offset: 0x17
    (local.tee $3
     ;; code offset: 0x16
     (i32.shl
      ;; code offset: 0x12
      (local.tee $2
       ;; code offset: 0xf
       (i32.load offset=4
        ;; code offset: 0xd
        (local.get $0)
       )
      )
      ;; code offset: 0x14
      (i32.const 2)
     )
    )
   )
  )
  ;; code offset: 0x21
  (local.set $5
   ;; code offset: 0x1f
   (call $malloc
    ;; code offset: 0x1d
    (local.get $3)
   )
  )
  ;; code offset: 0x27
  (local.set $6
   ;; code offset: 0x25
   (call $malloc
    ;; code offset: 0x23
    (local.get $3)
   )
  )
  ;; code offset: 0x29
  (block $label$1
   (block $label$2
    (block $label$3
     ;; code offset: 0x34
     (br_if $label$3
      ;; code offset: 0x33
      (i32.le_s
       ;; code offset: 0x2f
       (local.get $2)
       ;; code offset: 0x31
       (i32.const 0)
      )
     )
     ;; code offset: 0x36
     (loop $label$4
      ;; code offset: 0x42
      (i32.store
       ;; code offset: 0x3f
       (i32.add
        ;; code offset: 0x38
        (local.get $4)
        ;; code offset: 0x3e
        (i32.shl
         ;; code offset: 0x3a
         (local.get $1)
         ;; code offset: 0x3c
         (i32.const 2)
        )
       )
       ;; code offset: 0x40
       (local.get $1)
      )
      ;; code offset: 0x4f
      (br_if $label$4
       ;; code offset: 0x4e
       (i32.ne
        ;; code offset: 0x4a
        (local.tee $1
         ;; code offset: 0x49
         (i32.add
          ;; code offset: 0x45
          (local.get $1)
          ;; code offset: 0x47
          (i32.const 1)
         )
        )
        ;; code offset: 0x4c
        (local.get $2)
       )
      )
     )
     ;; code offset: 0x66
     (i32.store
      ;; code offset: 0x5e
      (i32.add
       ;; code offset: 0x52
       (local.get $4)
       ;; code offset: 0x5d
       (i32.shl
        ;; code offset: 0x59
        (local.tee $1
         ;; code offset: 0x56
         (i32.load
          ;; code offset: 0x54
          (local.get $0)
         )
        )
        ;; code offset: 0x5b
        (i32.const 2)
       )
      )
      ;; code offset: 0x64
      (local.tee $7
       ;; code offset: 0x63
       (i32.add
        ;; code offset: 0x5f
        (local.get $2)
        ;; code offset: 0x61
        (i32.const -1)
       )
      )
     )
     ;; code offset: 0x75
     (i32.store
      ;; code offset: 0x71
      (local.tee $8
       ;; code offset: 0x70
       (i32.add
        ;; code offset: 0x69
        (local.get $4)
        ;; code offset: 0x6f
        (i32.shl
         ;; code offset: 0x6b
         (local.get $7)
         ;; code offset: 0x6d
         (i32.const 2)
        )
       )
      )
      ;; code offset: 0x73
      (local.get $1)
     )
     ;; code offset: 0x7a
     (local.set $9
      ;; code offset: 0x78
      (i32.const 0)
     )
     ;; code offset: 0x81
     (br_if $label$2
      ;; code offset: 0x80
      (i32.le_s
       ;; code offset: 0x7c
       (local.get $2)
       ;; code offset: 0x7e
       (i32.const 0)
      )
     )
     ;; code offset: 0x83
     (loop $label$5
      ;; code offset: 0x85
      (block $label$6
       ;; code offset: 0x8c
       (br_if $label$6
        ;; code offset: 0x8b
        (i32.le_s
         ;; code offset: 0x87
         (local.get $2)
         ;; code offset: 0x89
         (i32.const 1)
        )
       )
       ;; code offset: 0x8e
       (loop $label$7
        ;; code offset: 0x9f
        (i32.store
         ;; code offset: 0x9c
         (i32.add
          ;; code offset: 0x90
          (local.get $6)
          ;; code offset: 0x9b
          (i32.shl
           ;; code offset: 0x97
           (local.tee $1
            ;; code offset: 0x96
            (i32.add
             ;; code offset: 0x92
             (local.get $2)
             ;; code offset: 0x94
             (i32.const -1)
            )
           )
           ;; code offset: 0x99
           (i32.const 2)
          )
         )
         ;; code offset: 0x9d
         (local.get $2)
        )
        ;; code offset: 0xa7
        (local.set $0
         ;; code offset: 0xa6
         (i32.gt_s
          ;; code offset: 0xa2
          (local.get $2)
          ;; code offset: 0xa4
          (i32.const 2)
         )
        )
        ;; code offset: 0xab
        (local.set $2
         ;; code offset: 0xa9
         (local.get $1)
        )
        ;; code offset: 0xaf
        (br_if $label$7
         ;; code offset: 0xad
         (local.get $0)
        )
       )
      )
      ;; code offset: 0xb3
      (block $label$8
       ;; code offset: 0xbd
       (br_if $label$8
        ;; code offset: 0xbc
        (i32.eqz
         ;; code offset: 0xba
         (local.tee $10
          ;; code offset: 0xb7
          (i32.load
           ;; code offset: 0xb5
           (local.get $4)
          )
         )
        )
       )
       ;; code offset: 0xc7
       (br_if $label$8
        ;; code offset: 0xc6
        (i32.eq
         ;; code offset: 0xc1
         (i32.load
          ;; code offset: 0xbf
          (local.get $8)
         )
         ;; code offset: 0xc4
         (local.get $7)
        )
       )
       ;; code offset: 0xd6
       (local.set $12
        ;; code offset: 0xd3
        (i32.load
         ;; code offset: 0xd1
         (local.tee $11
          ;; code offset: 0xcf
          (call $memcpy
           ;; code offset: 0xc9
           (local.get $5)
           ;; code offset: 0xcb
           (local.get $4)
           ;; code offset: 0xcd
           (local.get $3)
          )
         )
        )
       )
       ;; code offset: 0xda
       (local.set $0
        ;; code offset: 0xd8
        (i32.const 0)
       )
       ;; code offset: 0xdc
       (loop $label$9
        ;; code offset: 0xe0
        (local.set $13
         ;; code offset: 0xde
         (local.get $0)
        )
        ;; code offset: 0xe2
        (block $label$10
         ;; code offset: 0xe9
         (br_if $label$10
          ;; code offset: 0xe8
          (i32.lt_s
           ;; code offset: 0xe4
           (local.get $12)
           ;; code offset: 0xe6
           (i32.const 3)
          )
         )
         ;; code offset: 0xf0
         (local.set $1
          ;; code offset: 0xef
          (i32.add
           ;; code offset: 0xeb
           (local.get $12)
           ;; code offset: 0xed
           (i32.const -1)
          )
         )
         ;; code offset: 0xf4
         (local.set $0
          ;; code offset: 0xf2
          (i32.const 1)
         )
         ;; code offset: 0xf6
         (loop $label$11
          ;; code offset: 0x105
          (local.set $15
           ;; code offset: 0x102
           (i32.load
            ;; code offset: 0x100
            (local.tee $14
             ;; code offset: 0xff
             (i32.add
              ;; code offset: 0xf8
              (local.get $11)
              ;; code offset: 0xfe
              (i32.shl
               ;; code offset: 0xfa
               (local.get $0)
               ;; code offset: 0xfc
               (i32.const 2)
              )
             )
            )
           )
          )
          ;; code offset: 0x116
          (i32.store
           ;; code offset: 0x107
           (local.get $14)
           ;; code offset: 0x113
           (i32.load
            ;; code offset: 0x111
            (local.tee $16
             ;; code offset: 0x110
             (i32.add
              ;; code offset: 0x109
              (local.get $11)
              ;; code offset: 0x10f
              (i32.shl
               ;; code offset: 0x10b
               (local.get $1)
               ;; code offset: 0x10d
               (i32.const 2)
              )
             )
            )
           )
          )
          ;; code offset: 0x11d
          (i32.store
           ;; code offset: 0x119
           (local.get $16)
           ;; code offset: 0x11b
           (local.get $15)
          )
          ;; code offset: 0x12f
          (br_if $label$11
           ;; code offset: 0x12e
           (i32.lt_s
            ;; code offset: 0x125
            (local.tee $0
             ;; code offset: 0x124
             (i32.add
              ;; code offset: 0x120
              (local.get $0)
              ;; code offset: 0x122
              (i32.const 1)
             )
            )
            ;; code offset: 0x12c
            (local.tee $1
             ;; code offset: 0x12b
             (i32.add
              ;; code offset: 0x127
              (local.get $1)
              ;; code offset: 0x129
              (i32.const -1)
             )
            )
           )
          )
         )
        )
        ;; code offset: 0x140
        (local.set $1
         ;; code offset: 0x13d
         (i32.load
          ;; code offset: 0x13b
          (local.tee $0
           ;; code offset: 0x13a
           (i32.add
            ;; code offset: 0x133
            (local.get $11)
            ;; code offset: 0x139
            (i32.shl
             ;; code offset: 0x135
             (local.get $12)
             ;; code offset: 0x137
             (i32.const 2)
            )
           )
          )
         )
        )
        ;; code offset: 0x146
        (i32.store
         ;; code offset: 0x142
         (local.get $0)
         ;; code offset: 0x144
         (local.get $12)
        )
        ;; code offset: 0x14e
        (local.set $0
         ;; code offset: 0x14d
         (i32.add
          ;; code offset: 0x149
          (local.get $13)
          ;; code offset: 0x14b
          (i32.const 1)
         )
        )
        ;; code offset: 0x152
        (local.set $12
         ;; code offset: 0x150
         (local.get $1)
        )
        ;; code offset: 0x156
        (br_if $label$9
         ;; code offset: 0x154
         (local.get $1)
        )
       )
       ;; code offset: 0x163
       (local.set $9
        ;; code offset: 0x162
        (select
         ;; code offset: 0x159
         (local.get $9)
         ;; code offset: 0x15b
         (local.get $0)
         ;; code offset: 0x161
         (i32.gt_s
          ;; code offset: 0x15d
          (local.get $9)
          ;; code offset: 0x15f
          (local.get $13)
         )
        )
       )
      )
      ;; code offset: 0x16b
      (br_if $label$1
       ;; code offset: 0x16a
       (i32.ge_s
        ;; code offset: 0x166
        (local.get $2)
        ;; code offset: 0x168
        (local.get $7)
       )
      )
      ;; code offset: 0x16d
      (loop $label$12
       ;; code offset: 0x171
       (local.set $1
        ;; code offset: 0x16f
        (i32.const 0)
       )
       ;; code offset: 0x173
       (block $label$13
        ;; code offset: 0x17a
        (br_if $label$13
         ;; code offset: 0x179
         (i32.le_s
          ;; code offset: 0x175
          (local.get $2)
          ;; code offset: 0x177
          (i32.const 0)
         )
        )
        ;; code offset: 0x17c
        (loop $label$14
         ;; code offset: 0x196
         (i32.store
          ;; code offset: 0x185
          (i32.add
           ;; code offset: 0x17e
           (local.get $4)
           ;; code offset: 0x184
           (i32.shl
            ;; code offset: 0x180
            (local.get $1)
            ;; code offset: 0x182
            (i32.const 2)
           )
          )
          ;; code offset: 0x193
          (i32.load
           ;; code offset: 0x192
           (i32.add
            ;; code offset: 0x186
            (local.get $4)
            ;; code offset: 0x191
            (i32.shl
             ;; code offset: 0x18d
             (local.tee $1
              ;; code offset: 0x18c
              (i32.add
               ;; code offset: 0x188
               (local.get $1)
               ;; code offset: 0x18a
               (i32.const 1)
              )
             )
             ;; code offset: 0x18f
             (i32.const 2)
            )
           )
          )
         )
         ;; code offset: 0x19e
         (br_if $label$14
          ;; code offset: 0x19d
          (i32.ne
           ;; code offset: 0x199
           (local.get $1)
           ;; code offset: 0x19b
           (local.get $2)
          )
         )
        )
        ;; code offset: 0x1a3
        (local.set $1
         ;; code offset: 0x1a1
         (local.get $2)
        )
       )
       ;; code offset: 0x1b0
       (i32.store
        ;; code offset: 0x1ad
        (i32.add
         ;; code offset: 0x1a6
         (local.get $4)
         ;; code offset: 0x1ac
         (i32.shl
          ;; code offset: 0x1a8
          (local.get $1)
          ;; code offset: 0x1aa
          (i32.const 2)
         )
        )
        ;; code offset: 0x1ae
        (local.get $10)
       )
       ;; code offset: 0x1c7
       (i32.store
        ;; code offset: 0x1bb
        (local.tee $1
         ;; code offset: 0x1ba
         (i32.add
          ;; code offset: 0x1b3
          (local.get $6)
          ;; code offset: 0x1b9
          (i32.shl
           ;; code offset: 0x1b5
           (local.get $2)
           ;; code offset: 0x1b7
           (i32.const 2)
          )
         )
        )
        ;; code offset: 0x1c6
        (i32.add
         ;; code offset: 0x1c2
         (local.tee $1
          ;; code offset: 0x1bf
          (i32.load
           ;; code offset: 0x1bd
           (local.get $1)
          )
         )
         ;; code offset: 0x1c4
         (i32.const -1)
        )
       )
       ;; code offset: 0x1cf
       (br_if $label$5
        ;; code offset: 0x1ce
        (i32.gt_s
         ;; code offset: 0x1ca
         (local.get $1)
         ;; code offset: 0x1cc
         (i32.const 1)
        )
       )
       ;; code offset: 0x1db
       (br_if $label$1
        ;; code offset: 0x1da
        (i32.eq
         ;; code offset: 0x1d6
         (local.tee $2
          ;; code offset: 0x1d5
          (i32.add
           ;; code offset: 0x1d1
           (local.get $2)
           ;; code offset: 0x1d3
           (i32.const 1)
          )
         )
         ;; code offset: 0x1d8
         (local.get $7)
        )
       )
       ;; code offset: 0x1e2
       (local.set $10
        ;; code offset: 0x1df
        (i32.load
         ;; code offset: 0x1dd
         (local.get $4)
        )
       )
       ;; code offset: 0x1e4
       (br $label$12)
      )
     )
    )
    ;; code offset: 0x201
    (i32.store
     ;; code offset: 0x1f9
     (i32.add
      ;; code offset: 0x1ed
      (local.get $4)
      ;; code offset: 0x1f8
      (i32.shl
       ;; code offset: 0x1f4
       (local.tee $1
        ;; code offset: 0x1f1
        (i32.load
         ;; code offset: 0x1ef
         (local.get $0)
        )
       )
       ;; code offset: 0x1f6
       (i32.const 2)
      )
     )
     ;; code offset: 0x1ff
     (local.tee $7
      ;; code offset: 0x1fe
      (i32.add
       ;; code offset: 0x1fa
       (local.get $2)
       ;; code offset: 0x1fc
       (i32.const -1)
      )
     )
    )
    ;; code offset: 0x210
    (i32.store
     ;; code offset: 0x20c
     (local.tee $8
      ;; code offset: 0x20b
      (i32.add
       ;; code offset: 0x204
       (local.get $4)
       ;; code offset: 0x20a
       (i32.shl
        ;; code offset: 0x206
        (local.get $7)
        ;; code offset: 0x208
        (i32.const 2)
       )
      )
     )
     ;; code offset: 0x20e
     (local.get $1)
    )
   )
   ;; code offset: 0x216
   (local.set $9
    ;; code offset: 0x214
    (i32.const 0)
   )
   ;; code offset: 0x218
   (loop $label$15
    ;; code offset: 0x21a
    (block $label$16
     ;; code offset: 0x221
     (br_if $label$16
      ;; code offset: 0x220
      (i32.lt_s
       ;; code offset: 0x21c
       (local.get $2)
       ;; code offset: 0x21e
       (i32.const 2)
      )
     )
     ;; code offset: 0x223
     (loop $label$17
      ;; code offset: 0x234
      (i32.store
       ;; code offset: 0x231
       (i32.add
        ;; code offset: 0x225
        (local.get $6)
        ;; code offset: 0x230
        (i32.shl
         ;; code offset: 0x22c
         (local.tee $1
          ;; code offset: 0x22b
          (i32.add
           ;; code offset: 0x227
           (local.get $2)
           ;; code offset: 0x229
           (i32.const -1)
          )
         )
         ;; code offset: 0x22e
         (i32.const 2)
        )
       )
       ;; code offset: 0x232
       (local.get $2)
      )
      ;; code offset: 0x23c
      (local.set $0
       ;; code offset: 0x23b
       (i32.gt_s
        ;; code offset: 0x237
        (local.get $2)
        ;; code offset: 0x239
        (i32.const 2)
       )
      )
      ;; code offset: 0x240
      (local.set $2
       ;; code offset: 0x23e
       (local.get $1)
      )
      ;; code offset: 0x244
      (br_if $label$17
       ;; code offset: 0x242
       (local.get $0)
      )
     )
    )
    ;; code offset: 0x248
    (block $label$18
     ;; code offset: 0x252
     (br_if $label$18
      ;; code offset: 0x251
      (i32.eqz
       ;; code offset: 0x24f
       (local.tee $12
        ;; code offset: 0x24c
        (i32.load
         ;; code offset: 0x24a
         (local.get $4)
        )
       )
      )
     )
     ;; code offset: 0x25c
     (br_if $label$18
      ;; code offset: 0x25b
      (i32.eq
       ;; code offset: 0x256
       (i32.load
        ;; code offset: 0x254
        (local.get $8)
       )
       ;; code offset: 0x259
       (local.get $7)
      )
     )
     ;; code offset: 0x263
     (local.set $16
      ;; code offset: 0x260
      (i32.load
       ;; code offset: 0x25e
       (local.get $5)
      )
     )
     ;; code offset: 0x267
     (local.set $0
      ;; code offset: 0x265
      (i32.const 0)
     )
     ;; code offset: 0x269
     (loop $label$19
      ;; code offset: 0x26d
      (local.set $10
       ;; code offset: 0x26b
       (local.get $0)
      )
      ;; code offset: 0x26f
      (block $label$20
       ;; code offset: 0x276
       (br_if $label$20
        ;; code offset: 0x275
        (i32.lt_s
         ;; code offset: 0x271
         (local.get $16)
         ;; code offset: 0x273
         (i32.const 3)
        )
       )
       ;; code offset: 0x27d
       (local.set $1
        ;; code offset: 0x27c
        (i32.add
         ;; code offset: 0x278
         (local.get $16)
         ;; code offset: 0x27a
         (i32.const -1)
        )
       )
       ;; code offset: 0x281
       (local.set $0
        ;; code offset: 0x27f
        (i32.const 1)
       )
       ;; code offset: 0x283
       (loop $label$21
        ;; code offset: 0x292
        (local.set $14
         ;; code offset: 0x28f
         (i32.load
          ;; code offset: 0x28d
          (local.tee $11
           ;; code offset: 0x28c
           (i32.add
            ;; code offset: 0x285
            (local.get $5)
            ;; code offset: 0x28b
            (i32.shl
             ;; code offset: 0x287
             (local.get $0)
             ;; code offset: 0x289
             (i32.const 2)
            )
           )
          )
         )
        )
        ;; code offset: 0x2a3
        (i32.store
         ;; code offset: 0x294
         (local.get $11)
         ;; code offset: 0x2a0
         (i32.load
          ;; code offset: 0x29e
          (local.tee $15
           ;; code offset: 0x29d
           (i32.add
            ;; code offset: 0x296
            (local.get $5)
            ;; code offset: 0x29c
            (i32.shl
             ;; code offset: 0x298
             (local.get $1)
             ;; code offset: 0x29a
             (i32.const 2)
            )
           )
          )
         )
        )
        ;; code offset: 0x2aa
        (i32.store
         ;; code offset: 0x2a6
         (local.get $15)
         ;; code offset: 0x2a8
         (local.get $14)
        )
        ;; code offset: 0x2bc
        (br_if $label$21
         ;; code offset: 0x2bb
         (i32.lt_s
          ;; code offset: 0x2b2
          (local.tee $0
           ;; code offset: 0x2b1
           (i32.add
            ;; code offset: 0x2ad
            (local.get $0)
            ;; code offset: 0x2af
            (i32.const 1)
           )
          )
          ;; code offset: 0x2b9
          (local.tee $1
           ;; code offset: 0x2b8
           (i32.add
            ;; code offset: 0x2b4
            (local.get $1)
            ;; code offset: 0x2b6
            (i32.const -1)
           )
          )
         )
        )
       )
      )
      ;; code offset: 0x2cd
      (local.set $1
       ;; code offset: 0x2ca
       (i32.load
        ;; code offset: 0x2c8
        (local.tee $0
         ;; code offset: 0x2c7
         (i32.add
          ;; code offset: 0x2c0
          (local.get $5)
          ;; code offset: 0x2c6
          (i32.shl
           ;; code offset: 0x2c2
           (local.get $16)
           ;; code offset: 0x2c4
           (i32.const 2)
          )
         )
        )
       )
      )
      ;; code offset: 0x2d3
      (i32.store
       ;; code offset: 0x2cf
       (local.get $0)
       ;; code offset: 0x2d1
       (local.get $16)
      )
      ;; code offset: 0x2db
      (local.set $0
       ;; code offset: 0x2da
       (i32.add
        ;; code offset: 0x2d6
        (local.get $10)
        ;; code offset: 0x2d8
        (i32.const 1)
       )
      )
      ;; code offset: 0x2df
      (local.set $16
       ;; code offset: 0x2dd
       (local.get $1)
      )
      ;; code offset: 0x2e3
      (br_if $label$19
       ;; code offset: 0x2e1
       (local.get $1)
      )
     )
     ;; code offset: 0x2f0
     (local.set $9
      ;; code offset: 0x2ef
      (select
       ;; code offset: 0x2e6
       (local.get $9)
       ;; code offset: 0x2e8
       (local.get $0)
       ;; code offset: 0x2ee
       (i32.gt_s
        ;; code offset: 0x2ea
        (local.get $9)
        ;; code offset: 0x2ec
        (local.get $10)
       )
      )
     )
    )
    ;; code offset: 0x2f8
    (br_if $label$1
     ;; code offset: 0x2f7
     (i32.ge_s
      ;; code offset: 0x2f3
      (local.get $2)
      ;; code offset: 0x2f5
      (local.get $7)
     )
    )
    ;; code offset: 0x2fa
    (loop $label$22
     ;; code offset: 0x2fe
     (local.set $1
      ;; code offset: 0x2fc
      (i32.const 0)
     )
     ;; code offset: 0x300
     (block $label$23
      ;; code offset: 0x307
      (br_if $label$23
       ;; code offset: 0x306
       (i32.lt_s
        ;; code offset: 0x302
        (local.get $2)
        ;; code offset: 0x304
        (i32.const 1)
       )
      )
      ;; code offset: 0x309
      (loop $label$24
       ;; code offset: 0x323
       (i32.store
        ;; code offset: 0x312
        (i32.add
         ;; code offset: 0x30b
         (local.get $4)
         ;; code offset: 0x311
         (i32.shl
          ;; code offset: 0x30d
          (local.get $1)
          ;; code offset: 0x30f
          (i32.const 2)
         )
        )
        ;; code offset: 0x320
        (i32.load
         ;; code offset: 0x31f
         (i32.add
          ;; code offset: 0x313
          (local.get $4)
          ;; code offset: 0x31e
          (i32.shl
           ;; code offset: 0x31a
           (local.tee $1
            ;; code offset: 0x319
            (i32.add
             ;; code offset: 0x315
             (local.get $1)
             ;; code offset: 0x317
             (i32.const 1)
            )
           )
           ;; code offset: 0x31c
           (i32.const 2)
          )
         )
        )
       )
       ;; code offset: 0x32b
       (br_if $label$24
        ;; code offset: 0x32a
        (i32.ne
         ;; code offset: 0x326
         (local.get $1)
         ;; code offset: 0x328
         (local.get $2)
        )
       )
      )
      ;; code offset: 0x330
      (local.set $1
       ;; code offset: 0x32e
       (local.get $2)
      )
     )
     ;; code offset: 0x33d
     (i32.store
      ;; code offset: 0x33a
      (i32.add
       ;; code offset: 0x333
       (local.get $4)
       ;; code offset: 0x339
       (i32.shl
        ;; code offset: 0x335
        (local.get $1)
        ;; code offset: 0x337
        (i32.const 2)
       )
      )
      ;; code offset: 0x33b
      (local.get $12)
     )
     ;; code offset: 0x354
     (i32.store
      ;; code offset: 0x348
      (local.tee $1
       ;; code offset: 0x347
       (i32.add
        ;; code offset: 0x340
        (local.get $6)
        ;; code offset: 0x346
        (i32.shl
         ;; code offset: 0x342
         (local.get $2)
         ;; code offset: 0x344
         (i32.const 2)
        )
       )
      )
      ;; code offset: 0x353
      (i32.add
       ;; code offset: 0x34f
       (local.tee $1
        ;; code offset: 0x34c
        (i32.load
         ;; code offset: 0x34a
         (local.get $1)
        )
       )
       ;; code offset: 0x351
       (i32.const -1)
      )
     )
     ;; code offset: 0x35c
     (br_if $label$15
      ;; code offset: 0x35b
      (i32.gt_s
       ;; code offset: 0x357
       (local.get $1)
       ;; code offset: 0x359
       (i32.const 1)
      )
     )
     ;; code offset: 0x368
     (br_if $label$1
      ;; code offset: 0x367
      (i32.eq
       ;; code offset: 0x363
       (local.tee $2
        ;; code offset: 0x362
        (i32.add
         ;; code offset: 0x35e
         (local.get $2)
         ;; code offset: 0x360
         (i32.const 1)
        )
       )
       ;; code offset: 0x365
       (local.get $7)
      )
     )
     ;; code offset: 0x36f
     (local.set $12
      ;; code offset: 0x36c
      (i32.load
       ;; code offset: 0x36a
       (local.get $4)
      )
     )
     ;; code offset: 0x371
     (br $label$22)
    )
   )
  )
  ;; code offset: 0x37c
  (call $free
   ;; code offset: 0x37a
   (local.get $4)
  )
  ;; code offset: 0x380
  (call $free
   ;; code offset: 0x37e
   (local.get $5)
  )
  ;; code offset: 0x384
  (call $free
   ;; code offset: 0x382
   (local.get $6)
  )
  ;; code offset: 0x386
  (local.get $9)
 )
 (func $main (; 9 ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  ;; code offset: 0x395
  (global.set $global$0
   ;; code offset: 0x393
   (local.tee $2
    ;; code offset: 0x392
    (i32.sub
     ;; code offset: 0x38e
     (global.get $global$0)
     ;; code offset: 0x390
     (i32.const 32)
    )
   )
  )
  ;; code offset: 0x397
  (block $label$1
   (block $label$2
    (block $label$3
     ;; code offset: 0x3a2
     (br_if $label$3
      ;; code offset: 0x3a1
      (i32.lt_s
       ;; code offset: 0x39d
       (local.get $0)
       ;; code offset: 0x39f
       (i32.const 2)
      )
     )
     ;; code offset: 0x3a6
     (local.set $3
      ;; code offset: 0x3a4
      (i32.const 0)
     )
     ;; code offset: 0x3b4
     (br_if $label$2
      ;; code offset: 0x3b3
      (i32.gt_s
       ;; code offset: 0x3af
       (local.tee $4
        ;; code offset: 0x3ad
        (call $atoi
         ;; code offset: 0x3aa
         (i32.load offset=4
          ;; code offset: 0x3a8
          (local.get $1)
         )
        )
       )
       ;; code offset: 0x3b1
       (i32.const 0)
      )
     )
    )
    ;; code offset: 0x3bc
    (drop
     ;; code offset: 0x3ba
     (call $puts
      ;; code offset: 0x3b7
      (i32.const 1050)
     )
    )
    ;; code offset: 0x3bf
    (local.set $5
     ;; code offset: 0x3bd
     (i32.const 1)
    )
    ;; code offset: 0x3c1
    (br $label$1)
   )
   ;; code offset: 0x3c4
   (block $label$4
    ;; code offset: 0x3cb
    (br_if $label$4
     ;; code offset: 0x3ca
     (i32.eq
      ;; code offset: 0x3c6
      (local.get $4)
      ;; code offset: 0x3c8
      (i32.const 1)
     )
    )
    ;; code offset: 0x3d2
    (local.set $6
     ;; code offset: 0x3d1
     (i32.add
      ;; code offset: 0x3cd
      (local.get $4)
      ;; code offset: 0x3cf
      (i32.const -1)
     )
    )
    ;; code offset: 0x3d6
    (local.set $1
     ;; code offset: 0x3d4
     (i32.const 0)
    )
    ;; code offset: 0x3da
    (local.set $0
     ;; code offset: 0x3d8
     (i32.const 0)
    )
    ;; code offset: 0x3dc
    (loop $label$5
     ;; code offset: 0x3e6
     (i32.store offset=8
      ;; code offset: 0x3e2
      (local.tee $3
       ;; code offset: 0x3e0
       (call $malloc
        ;; code offset: 0x3de
        (i32.const 12)
       )
      )
      ;; code offset: 0x3e4
      (local.get $1)
     )
     ;; code offset: 0x3ed
     (i32.store offset=4
      ;; code offset: 0x3e9
      (local.get $3)
      ;; code offset: 0x3eb
      (local.get $4)
     )
     ;; code offset: 0x3f4
     (i32.store
      ;; code offset: 0x3f0
      (local.get $3)
      ;; code offset: 0x3f2
      (local.get $0)
     )
     ;; code offset: 0x3f9
     (local.set $1
      ;; code offset: 0x3f7
      (local.get $3)
     )
     ;; code offset: 0x405
     (br_if $label$5
      ;; code offset: 0x404
      (i32.ne
       ;; code offset: 0x400
       (local.tee $0
        ;; code offset: 0x3ff
        (i32.add
         ;; code offset: 0x3fb
         (local.get $0)
         ;; code offset: 0x3fd
         (i32.const 1)
        )
       )
       ;; code offset: 0x402
       (local.get $6)
      )
     )
    )
   )
   ;; code offset: 0x40b
   (local.set $0
    ;; code offset: 0x409
    (i32.const 0)
   )
   ;; code offset: 0x416
   (local.set $1
    ;; code offset: 0x414
    (call $malloc
     ;; code offset: 0x412
     (local.tee $6
      ;; code offset: 0x411
      (i32.shl
       ;; code offset: 0x40d
       (local.get $4)
       ;; code offset: 0x40f
       (i32.const 2)
      )
     )
    )
   )
   ;; code offset: 0x41c
   (local.set $5
    ;; code offset: 0x41a
    (call $malloc
     ;; code offset: 0x418
     (local.get $6)
    )
   )
   ;; code offset: 0x41e
   (block $label$6
    (block $label$7
     (block $label$8
      (block $label$9
       ;; code offset: 0x42b
       (br_if $label$9
        ;; code offset: 0x42a
        (i32.le_s
         ;; code offset: 0x426
         (local.get $4)
         ;; code offset: 0x428
         (i32.const 0)
        )
       )
       ;; code offset: 0x42d
       (loop $label$10
        ;; code offset: 0x439
        (i32.store
         ;; code offset: 0x436
         (i32.add
          ;; code offset: 0x42f
          (local.get $1)
          ;; code offset: 0x435
          (i32.shl
           ;; code offset: 0x431
           (local.get $0)
           ;; code offset: 0x433
           (i32.const 2)
          )
         )
         ;; code offset: 0x437
         (local.get $0)
        )
        ;; code offset: 0x446
        (br_if $label$10
         ;; code offset: 0x445
         (i32.ne
          ;; code offset: 0x441
          (local.tee $0
           ;; code offset: 0x440
           (i32.add
            ;; code offset: 0x43c
            (local.get $0)
            ;; code offset: 0x43e
            (i32.const 1)
           )
          )
          ;; code offset: 0x443
          (local.get $4)
         )
        )
       )
       ;; code offset: 0x44b
       (local.set $7
        ;; code offset: 0x449
        (i32.const 30)
       )
       ;; code offset: 0x44f
       (local.set $6
        ;; code offset: 0x44d
        (local.get $4)
       )
       ;; code offset: 0x451
       (br $label$8)
      )
      ;; code offset: 0x456
      (local.set $7
       ;; code offset: 0x454
       (i32.const 30)
      )
      ;; code offset: 0x45a
      (local.set $6
       ;; code offset: 0x458
       (local.get $4)
      )
      ;; code offset: 0x45c
      (br $label$7)
     )
     ;; code offset: 0x45f
     (loop $label$11
      ;; code offset: 0x463
      (local.set $0
       ;; code offset: 0x461
       (i32.const 0)
      )
      ;; code offset: 0x465
      (loop $label$12
       ;; code offset: 0x477
       (i32.store offset=16
        ;; code offset: 0x467
        (local.get $2)
        ;; code offset: 0x476
        (i32.add
         ;; code offset: 0x471
         (i32.load
          ;; code offset: 0x470
          (i32.add
           ;; code offset: 0x469
           (local.get $1)
           ;; code offset: 0x46f
           (i32.shl
            ;; code offset: 0x46b
            (local.get $0)
            ;; code offset: 0x46d
            (i32.const 2)
           )
          )
         )
         ;; code offset: 0x474
         (i32.const 1)
        )
       )
       ;; code offset: 0x484
       (drop
        ;; code offset: 0x482
        (call $iprintf
         ;; code offset: 0x47a
         (i32.const 1047)
         ;; code offset: 0x481
         (i32.add
          ;; code offset: 0x47d
          (local.get $2)
          ;; code offset: 0x47f
          (i32.const 16)
         )
        )
       )
       ;; code offset: 0x48f
       (br_if $label$12
        ;; code offset: 0x48e
        (i32.ne
         ;; code offset: 0x48a
         (local.tee $0
          ;; code offset: 0x489
          (i32.add
           ;; code offset: 0x485
           (local.get $0)
           ;; code offset: 0x487
           (i32.const 1)
          )
         )
         ;; code offset: 0x48c
         (local.get $4)
        )
       )
      )
      ;; code offset: 0x496
      (drop
       ;; code offset: 0x494
       (call $putchar
        ;; code offset: 0x492
        (i32.const 10)
       )
      )
      ;; code offset: 0x497
      (block $label$13
       ;; code offset: 0x49e
       (br_if $label$13
        ;; code offset: 0x49d
        (i32.le_s
         ;; code offset: 0x499
         (local.get $6)
         ;; code offset: 0x49b
         (i32.const 1)
        )
       )
       ;; code offset: 0x4a0
       (loop $label$14
        ;; code offset: 0x4b1
        (i32.store
         ;; code offset: 0x4ae
         (i32.add
          ;; code offset: 0x4a2
          (local.get $5)
          ;; code offset: 0x4ad
          (i32.shl
           ;; code offset: 0x4a9
           (local.tee $0
            ;; code offset: 0x4a8
            (i32.add
             ;; code offset: 0x4a4
             (local.get $6)
             ;; code offset: 0x4a6
             (i32.const -1)
            )
           )
           ;; code offset: 0x4ab
           (i32.const 2)
          )
         )
         ;; code offset: 0x4af
         (local.get $6)
        )
        ;; code offset: 0x4b9
        (local.set $8
         ;; code offset: 0x4b8
         (i32.gt_s
          ;; code offset: 0x4b4
          (local.get $6)
          ;; code offset: 0x4b6
          (i32.const 2)
         )
        )
        ;; code offset: 0x4bd
        (local.set $6
         ;; code offset: 0x4bb
         (local.get $0)
        )
        ;; code offset: 0x4c1
        (br_if $label$14
         ;; code offset: 0x4bf
         (local.get $8)
        )
       )
      )
      ;; code offset: 0x4ca
      (br_if $label$6
       ;; code offset: 0x4c9
       (i32.eq
        ;; code offset: 0x4c5
        (local.get $6)
        ;; code offset: 0x4c7
        (local.get $4)
       )
      )
      ;; code offset: 0x4d1
      (local.set $7
       ;; code offset: 0x4d0
       (i32.add
        ;; code offset: 0x4cc
        (local.get $7)
        ;; code offset: 0x4ce
        (i32.const -1)
       )
      )
      ;; code offset: 0x4d3
      (loop $label$15
       ;; code offset: 0x4d7
       (local.set $0
        ;; code offset: 0x4d5
        (i32.const 0)
       )
       ;; code offset: 0x4de
       (local.set $8
        ;; code offset: 0x4db
        (i32.load
         ;; code offset: 0x4d9
         (local.get $1)
        )
       )
       ;; code offset: 0x4e0
       (block $label$16
        ;; code offset: 0x4e7
        (br_if $label$16
         ;; code offset: 0x4e6
         (i32.le_s
          ;; code offset: 0x4e2
          (local.get $6)
          ;; code offset: 0x4e4
          (i32.const 0)
         )
        )
        ;; code offset: 0x4e9
        (loop $label$17
         ;; code offset: 0x503
         (i32.store
          ;; code offset: 0x4f2
          (i32.add
           ;; code offset: 0x4eb
           (local.get $1)
           ;; code offset: 0x4f1
           (i32.shl
            ;; code offset: 0x4ed
            (local.get $0)
            ;; code offset: 0x4ef
            (i32.const 2)
           )
          )
          ;; code offset: 0x500
          (i32.load
           ;; code offset: 0x4ff
           (i32.add
            ;; code offset: 0x4f3
            (local.get $1)
            ;; code offset: 0x4fe
            (i32.shl
             ;; code offset: 0x4fa
             (local.tee $0
              ;; code offset: 0x4f9
              (i32.add
               ;; code offset: 0x4f5
               (local.get $0)
               ;; code offset: 0x4f7
               (i32.const 1)
              )
             )
             ;; code offset: 0x4fc
             (i32.const 2)
            )
           )
          )
         )
         ;; code offset: 0x50b
         (br_if $label$17
          ;; code offset: 0x50a
          (i32.ne
           ;; code offset: 0x506
           (local.get $0)
           ;; code offset: 0x508
           (local.get $6)
          )
         )
        )
        ;; code offset: 0x510
        (local.set $0
         ;; code offset: 0x50e
         (local.get $6)
        )
       )
       ;; code offset: 0x51d
       (i32.store
        ;; code offset: 0x51a
        (i32.add
         ;; code offset: 0x513
         (local.get $1)
         ;; code offset: 0x519
         (i32.shl
          ;; code offset: 0x515
          (local.get $0)
          ;; code offset: 0x517
          (i32.const 2)
         )
        )
        ;; code offset: 0x51b
        (local.get $8)
       )
       ;; code offset: 0x534
       (i32.store
        ;; code offset: 0x528
        (local.tee $0
         ;; code offset: 0x527
         (i32.add
          ;; code offset: 0x520
          (local.get $5)
          ;; code offset: 0x526
          (i32.shl
           ;; code offset: 0x522
           (local.get $6)
           ;; code offset: 0x524
           (i32.const 2)
          )
         )
        )
        ;; code offset: 0x533
        (i32.add
         ;; code offset: 0x52f
         (local.tee $0
          ;; code offset: 0x52c
          (i32.load
           ;; code offset: 0x52a
           (local.get $0)
          )
         )
         ;; code offset: 0x531
         (i32.const -1)
        )
       )
       ;; code offset: 0x537
       (block $label$18
        ;; code offset: 0x53e
        (br_if $label$18
         ;; code offset: 0x53d
         (i32.gt_s
          ;; code offset: 0x539
          (local.get $0)
          ;; code offset: 0x53b
          (i32.const 1)
         )
        )
        ;; code offset: 0x54a
        (br_if $label$15
         ;; code offset: 0x549
         (i32.ne
          ;; code offset: 0x545
          (local.tee $6
           ;; code offset: 0x544
           (i32.add
            ;; code offset: 0x540
            (local.get $6)
            ;; code offset: 0x542
            (i32.const 1)
           )
          )
          ;; code offset: 0x547
          (local.get $4)
         )
        )
        ;; code offset: 0x54c
        (br $label$6)
       )
      )
      ;; code offset: 0x553
      (br_if $label$6
       ;; code offset: 0x552
       (i32.eqz
        ;; code offset: 0x550
        (local.get $7)
       )
      )
      ;; code offset: 0x555
      (br $label$11)
     )
    )
    ;; code offset: 0x55b
    (loop $label$19
     ;; code offset: 0x561
     (drop
      ;; code offset: 0x55f
      (call $putchar
       ;; code offset: 0x55d
       (i32.const 10)
      )
     )
     ;; code offset: 0x562
     (block $label$20
      ;; code offset: 0x569
      (br_if $label$20
       ;; code offset: 0x568
       (i32.le_s
        ;; code offset: 0x564
        (local.get $6)
        ;; code offset: 0x566
        (i32.const 1)
       )
      )
      ;; code offset: 0x56b
      (loop $label$21
       ;; code offset: 0x57c
       (i32.store
        ;; code offset: 0x579
        (i32.add
         ;; code offset: 0x56d
         (local.get $5)
         ;; code offset: 0x578
         (i32.shl
          ;; code offset: 0x574
          (local.tee $0
           ;; code offset: 0x573
           (i32.add
            ;; code offset: 0x56f
            (local.get $6)
            ;; code offset: 0x571
            (i32.const -1)
           )
          )
          ;; code offset: 0x576
          (i32.const 2)
         )
        )
        ;; code offset: 0x57a
        (local.get $6)
       )
       ;; code offset: 0x584
       (local.set $8
        ;; code offset: 0x583
        (i32.gt_s
         ;; code offset: 0x57f
         (local.get $6)
         ;; code offset: 0x581
         (i32.const 2)
        )
       )
       ;; code offset: 0x588
       (local.set $6
        ;; code offset: 0x586
        (local.get $0)
       )
       ;; code offset: 0x58c
       (br_if $label$21
        ;; code offset: 0x58a
        (local.get $8)
       )
      )
     )
     ;; code offset: 0x595
     (br_if $label$6
      ;; code offset: 0x594
      (i32.eq
       ;; code offset: 0x590
       (local.get $6)
       ;; code offset: 0x592
       (local.get $4)
      )
     )
     ;; code offset: 0x59c
     (local.set $7
      ;; code offset: 0x59b
      (i32.add
       ;; code offset: 0x597
       (local.get $7)
       ;; code offset: 0x599
       (i32.const -1)
      )
     )
     ;; code offset: 0x59e
     (loop $label$22
      ;; code offset: 0x5a5
      (local.set $8
       ;; code offset: 0x5a2
       (i32.load
        ;; code offset: 0x5a0
        (local.get $1)
       )
      )
      ;; code offset: 0x5a9
      (local.set $0
       ;; code offset: 0x5a7
       (i32.const 0)
      )
      ;; code offset: 0x5ab
      (block $label$23
       ;; code offset: 0x5b2
       (br_if $label$23
        ;; code offset: 0x5b1
        (i32.lt_s
         ;; code offset: 0x5ad
         (local.get $6)
         ;; code offset: 0x5af
         (i32.const 1)
        )
       )
       ;; code offset: 0x5b4
       (loop $label$24
        ;; code offset: 0x5ce
        (i32.store
         ;; code offset: 0x5bd
         (i32.add
          ;; code offset: 0x5b6
          (local.get $1)
          ;; code offset: 0x5bc
          (i32.shl
           ;; code offset: 0x5b8
           (local.get $0)
           ;; code offset: 0x5ba
           (i32.const 2)
          )
         )
         ;; code offset: 0x5cb
         (i32.load
          ;; code offset: 0x5ca
          (i32.add
           ;; code offset: 0x5be
           (local.get $1)
           ;; code offset: 0x5c9
           (i32.shl
            ;; code offset: 0x5c5
            (local.tee $0
             ;; code offset: 0x5c4
             (i32.add
              ;; code offset: 0x5c0
              (local.get $0)
              ;; code offset: 0x5c2
              (i32.const 1)
             )
            )
            ;; code offset: 0x5c7
            (i32.const 2)
           )
          )
         )
        )
        ;; code offset: 0x5d6
        (br_if $label$24
         ;; code offset: 0x5d5
         (i32.ne
          ;; code offset: 0x5d1
          (local.get $0)
          ;; code offset: 0x5d3
          (local.get $6)
         )
        )
       )
       ;; code offset: 0x5db
       (local.set $0
        ;; code offset: 0x5d9
        (local.get $6)
       )
      )
      ;; code offset: 0x5e8
      (i32.store
       ;; code offset: 0x5e5
       (i32.add
        ;; code offset: 0x5de
        (local.get $1)
        ;; code offset: 0x5e4
        (i32.shl
         ;; code offset: 0x5e0
         (local.get $0)
         ;; code offset: 0x5e2
         (i32.const 2)
        )
       )
       ;; code offset: 0x5e6
       (local.get $8)
      )
      ;; code offset: 0x5ff
      (i32.store
       ;; code offset: 0x5f3
       (local.tee $0
        ;; code offset: 0x5f2
        (i32.add
         ;; code offset: 0x5eb
         (local.get $5)
         ;; code offset: 0x5f1
         (i32.shl
          ;; code offset: 0x5ed
          (local.get $6)
          ;; code offset: 0x5ef
          (i32.const 2)
         )
        )
       )
       ;; code offset: 0x5fe
       (i32.add
        ;; code offset: 0x5fa
        (local.tee $0
         ;; code offset: 0x5f7
         (i32.load
          ;; code offset: 0x5f5
          (local.get $0)
         )
        )
        ;; code offset: 0x5fc
        (i32.const -1)
       )
      )
      ;; code offset: 0x602
      (block $label$25
       ;; code offset: 0x609
       (br_if $label$25
        ;; code offset: 0x608
        (i32.gt_s
         ;; code offset: 0x604
         (local.get $0)
         ;; code offset: 0x606
         (i32.const 1)
        )
       )
       ;; code offset: 0x615
       (br_if $label$22
        ;; code offset: 0x614
        (i32.ne
         ;; code offset: 0x610
         (local.tee $6
          ;; code offset: 0x60f
          (i32.add
           ;; code offset: 0x60b
           (local.get $6)
           ;; code offset: 0x60d
           (i32.const 1)
          )
         )
         ;; code offset: 0x612
         (local.get $4)
        )
       )
       ;; code offset: 0x617
       (br $label$6)
      )
     )
     ;; code offset: 0x61d
     (br_if $label$19
      ;; code offset: 0x61b
      (local.get $7)
     )
    )
   )
   ;; code offset: 0x623
   (call $free
    ;; code offset: 0x621
    (local.get $1)
   )
   ;; code offset: 0x627
   (call $free
    ;; code offset: 0x625
    (local.get $5)
   )
   ;; code offset: 0x62b
   (local.set $5
    ;; code offset: 0x629
    (i32.const 0)
   )
   ;; code offset: 0x62f
   (local.set $0
    ;; code offset: 0x62d
    (i32.const 0)
   )
   ;; code offset: 0x631
   (block $label$26
    ;; code offset: 0x636
    (br_if $label$26
     ;; code offset: 0x635
     (i32.eqz
      ;; code offset: 0x633
      (local.get $3)
     )
    )
    ;; code offset: 0x63a
    (local.set $0
     ;; code offset: 0x638
     (i32.const 0)
    )
    ;; code offset: 0x63c
    (loop $label$27
     ;; code offset: 0x642
     (local.set $1
      ;; code offset: 0x640
      (call $fannkuch_worker\28void*\29
       ;; code offset: 0x63e
       (local.get $3)
      )
     )
     ;; code offset: 0x649
     (local.set $6
      ;; code offset: 0x646
      (i32.load offset=8
       ;; code offset: 0x644
       (local.get $3)
      )
     )
     ;; code offset: 0x64d
     (call $free
      ;; code offset: 0x64b
      (local.get $3)
     )
     ;; code offset: 0x659
     (local.set $0
      ;; code offset: 0x658
      (select
       ;; code offset: 0x64f
       (local.get $1)
       ;; code offset: 0x651
       (local.get $0)
       ;; code offset: 0x657
       (i32.lt_s
        ;; code offset: 0x653
        (local.get $0)
        ;; code offset: 0x655
        (local.get $1)
       )
      )
     )
     ;; code offset: 0x65d
     (local.set $3
      ;; code offset: 0x65b
      (local.get $6)
     )
     ;; code offset: 0x661
     (br_if $label$27
      ;; code offset: 0x65f
      (local.get $6)
     )
    )
   )
   ;; code offset: 0x669
   (i32.store offset=4
    ;; code offset: 0x665
    (local.get $2)
    ;; code offset: 0x667
    (local.get $0)
   )
   ;; code offset: 0x670
   (i32.store
    ;; code offset: 0x66c
    (local.get $2)
    ;; code offset: 0x66e
    (local.get $4)
   )
   ;; code offset: 0x67a
   (drop
    ;; code offset: 0x678
    (call $iprintf
     ;; code offset: 0x673
     (i32.const 1024)
     ;; code offset: 0x676
     (local.get $2)
    )
   )
  )
  ;; code offset: 0x681
  (global.set $global$0
   ;; code offset: 0x680
   (i32.add
    ;; code offset: 0x67c
    (local.get $2)
    ;; code offset: 0x67e
    (i32.const 32)
   )
  )
  ;; code offset: 0x683
  (local.get $5)
 )
 ;; custom section ".debug_info", size 851
 ;; custom section ".debug_loc", size 1073
 ;; custom section ".debug_ranges", size 88
 ;; custom section ".debug_abbrev", size 333
 ;; custom section ".debug_line", size 2826
 ;; custom section ".debug_str", size 434
 ;; custom section "producers", size 135
)
