(module
 (type $none_=>_i32 (func (result i32)))
 (type $i32_=>_i32 (func (param i32) (result i32)))
 (type $none_=>_none (func))
 (type $[i8] (array i8))
 (type $ref?|data|_=>_none (func (param (ref null data))))
 (type $ref|eq|_=>_none (func (param (ref eq))))
 (type $ref|none_->_i32|_=>_i32 (func (param (ref $none_=>_i32)) (result i32)))
 (type $ref|i32_->_i32|_i32_=>_i32 (func (param (ref $i32_=>_i32) i32) (result i32)))
 (elem declare func $callee-0 $callee-1 $callee-2 $callee-take-arg-0 $callee-take-arg-1)
 (func $callee-0 (result i32)
  (i32.const 0)
 )
 (func $callee-1 (result i32)
  (i32.const 1)
 )
 (func $callee-2 (result i32)
  (i32.const 2)
 )
 (func $callee-take-arg-0 (param $0 i32) (result i32)
  (i32.const 0)
 )
 (func $callee-take-arg-1 (param $0 i32) (result i32)
  (i32.const 1)
 )
 (func $callee-take-arg-2 (param $0 i32) (result i32)
  (i32.const 2)
 )
 (func $yes-call-callee-0 (result i32)
  (call $byn$mgfn-shared$yes-call-callee-0
   (ref.func $callee-0)
  )
 )
 (func $yes-call-callee-1 (result i32)
  (call $byn$mgfn-shared$yes-call-callee-0
   (ref.func $callee-1)
  )
 )
 (func $yes-call-callee-2 (result i32)
  (call $byn$mgfn-shared$yes-call-callee-0
   (ref.func $callee-2)
  )
 )
 (func $yes-call-callee-take-arg-0 (result i32)
  (call $byn$mgfn-shared$yes-call-callee-take-arg-0
   (ref.func $callee-take-arg-0)
   (i32.const 0)
  )
 )
 (func $yes-call-callee-take-arg-1 (result i32)
  (call $byn$mgfn-shared$yes-call-callee-take-arg-0
   (ref.func $callee-take-arg-1)
   (i32.const 1)
  )
 )
 (func $no-call-callee-take-arg-0 (result i32)
  (nop)
  (nop)
  (nop)
  (nop)
  (nop)
  (nop)
  (nop)
  (nop)
  (nop)
  (nop)
  (nop)
  (nop)
  (nop)
  (nop)
  (nop)
  (nop)
  (nop)
  (nop)
  (call $callee-take-arg-0
   (block $block (result i32)
    (drop
     (i32.const 0)
    )
    (i32.const 0)
   )
  )
 )
 (func $no-call-callee-take-arg-1 (result i32)
  (nop)
  (nop)
  (nop)
  (nop)
  (nop)
  (nop)
  (nop)
  (nop)
  (nop)
  (nop)
  (nop)
  (nop)
  (nop)
  (nop)
  (nop)
  (nop)
  (nop)
  (nop)
  (call $callee-take-arg-1
   (block $block (result i32)
    (drop
     (i32.const 0)
    )
    (drop
     (i32.const 0)
    )
    (i32.const 0)
   )
  )
 )
 (func $take-ref-null-data (param $0 (ref null data))
  (unreachable)
 )
 (func $take-ref-eq (param $0 (ref eq))
  (unreachable)
 )
 (func $no-call-subtyping-same-operand-0
  (nop)
  (nop)
  (nop)
  (nop)
  (nop)
  (nop)
  (nop)
  (nop)
  (nop)
  (nop)
  (nop)
  (nop)
  (nop)
  (nop)
  (nop)
  (nop)
  (nop)
  (nop)
  (call $take-ref-null-data
   (array.init_static $[i8])
  )
 )
 (func $no-call-subtyping-same-operand-1
  (nop)
  (nop)
  (nop)
  (nop)
  (nop)
  (nop)
  (nop)
  (nop)
  (nop)
  (nop)
  (nop)
  (nop)
  (nop)
  (nop)
  (nop)
  (nop)
  (nop)
  (nop)
  (call $take-ref-eq
   (array.init_static $[i8])
  )
 )
 (func $byn$mgfn-shared$yes-call-callee-0 (param $0 (ref $none_=>_i32)) (result i32)
  (nop)
  (nop)
  (nop)
  (nop)
  (nop)
  (nop)
  (nop)
  (nop)
  (nop)
  (nop)
  (nop)
  (nop)
  (nop)
  (nop)
  (nop)
  (nop)
  (nop)
  (nop)
  (call_ref
   (local.get $0)
  )
 )
 (func $byn$mgfn-shared$yes-call-callee-take-arg-0 (param $0 (ref $i32_=>_i32)) (param $1 i32) (result i32)
  (nop)
  (nop)
  (nop)
  (nop)
  (nop)
  (nop)
  (nop)
  (nop)
  (nop)
  (nop)
  (nop)
  (nop)
  (nop)
  (nop)
  (nop)
  (nop)
  (nop)
  (nop)
  (call_ref
   (local.get $1)
   (local.get $0)
  )
 )
)
