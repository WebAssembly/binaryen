(module
 (type $0 (func))
 (type $1 (func (param i32 i32) (result i32)))
 (type $2 (func (param i64 i32) (result f64)))
 (type $3 (func (param f64) (result f64)))
 (memory $0 (shared 1 1))
 (export "one" (func $0))
 (export "two" (func $1))
 (export "use-var" (func $2))
 (export "bad1" (func $3))
 (export "only-dfo" (func $4))
 (func $0 (; 0 ;) (; has Stack IR ;) (type $0)
  (loop $label$2
   (block $label$3
    (br_if $label$3
     (i32.load
      (i32.const 3060)
     )
    )
   )
  )
  (unreachable)
 )
 (func $1 (; 1 ;) (; has Stack IR ;) (type $1) (param $0 i32) (param $1 i32) (result i32)
  (i32.const 0)
 )
 (func $2 (; 2 ;) (; has Stack IR ;) (type $2) (param $0 i64) (param $1 i32) (result f64)
  (block $label$6
   (loop $label$8
    (br_if $label$8
     (get_local $1)
    )
   )
   (unreachable)
  )
 )
 (func $3 (; 3 ;) (; has Stack IR ;) (type $0)
  (i32.store
   (i32.const 1)
   (i32.const -16384)
  )
 )
 (func $4 (; 4 ;) (; has Stack IR ;) (type $3) (param $0 f64) (result f64)
  (local $1 i32)
  (local $2 i32)
  (loop $label$1
   (br $label$1)
  )
 )
)
