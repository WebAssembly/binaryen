(module
 (type $none_=>_none (func))
 (memory $0 i64 1 1)
 (func $func_4
  (local $0 i64)
  (local $1 i64)
  (local $2 i64)
  (local $3 i64)
  (local $4 i64)
  (local $5 i32)
  (local $6 i64)
  (local $7 i32)
  (local $8 i64)
  (local $9 i32)
  (local $10 i64)
  (local $11 i32)
  (drop
   (i32.load
    (i64.const 4)
   )
  )
  (drop
   (block (result i32)
    (local.set $0
     (i64.const 4)
    )
    (i32.or
     (i32.or
      (i32.load8_u
       (local.get $0)
      )
      (i32.shl
       (i32.load8_u offset=1
        (local.get $0)
       )
       (i32.const 8)
      )
     )
     (i32.or
      (i32.shl
       (i32.load8_u offset=2
        (local.get $0)
       )
       (i32.const 16)
      )
      (i32.shl
       (i32.load8_u offset=3
        (local.get $0)
       )
       (i32.const 24)
      )
     )
    )
   )
  )
  (drop
   (block (result i32)
    (local.set $1
     (i64.const 4)
    )
    (i32.or
     (i32.load16_u
      (local.get $1)
     )
     (i32.shl
      (i32.load16_u offset=2
       (local.get $1)
      )
      (i32.const 16)
     )
    )
   )
  )
  (drop
   (i32.load
    (i64.const 4)
   )
  )
  (drop
   (i32.load offset=100
    (i64.const 4)
   )
  )
  (drop
   (block (result i32)
    (local.set $2
     (i64.const 4)
    )
    (i32.or
     (i32.or
      (i32.load8_u offset=100
       (local.get $2)
      )
      (i32.shl
       (i32.load8_u offset=101
        (local.get $2)
       )
       (i32.const 8)
      )
     )
     (i32.or
      (i32.shl
       (i32.load8_u offset=102
        (local.get $2)
       )
       (i32.const 16)
      )
      (i32.shl
       (i32.load8_u offset=103
        (local.get $2)
       )
       (i32.const 24)
      )
     )
    )
   )
  )
  (drop
   (block (result i32)
    (local.set $3
     (i64.const 4)
    )
    (i32.or
     (i32.load16_u offset=100
      (local.get $3)
     )
     (i32.shl
      (i32.load16_u offset=102
       (local.get $3)
      )
      (i32.const 16)
     )
    )
   )
  )
  (drop
   (i32.load offset=100
    (i64.const 4)
   )
  )
  (drop
   (unreachable)
  )
  (i32.store
   (i64.const 4)
   (i32.const 8)
  )
  (block
   (local.set $4
    (i64.const 4)
   )
   (local.set $5
    (i32.const 8)
   )
   (i32.store8
    (local.get $4)
    (local.get $5)
   )
   (i32.store8 offset=1
    (local.get $4)
    (i32.shr_u
     (local.get $5)
     (i32.const 8)
    )
   )
   (i32.store8 offset=2
    (local.get $4)
    (i32.shr_u
     (local.get $5)
     (i32.const 16)
    )
   )
   (i32.store8 offset=3
    (local.get $4)
    (i32.shr_u
     (local.get $5)
     (i32.const 24)
    )
   )
  )
  (block
   (local.set $6
    (i64.const 4)
   )
   (local.set $7
    (i32.const 8)
   )
   (i32.store16
    (local.get $6)
    (local.get $7)
   )
   (i32.store16 offset=2
    (local.get $6)
    (i32.shr_u
     (local.get $7)
     (i32.const 16)
    )
   )
  )
  (i32.store
   (i64.const 4)
   (i32.const 8)
  )
  (i32.store offset=100
   (i64.const 4)
   (i32.const 8)
  )
  (block
   (local.set $8
    (i64.const 4)
   )
   (local.set $9
    (i32.const 8)
   )
   (i32.store8 offset=100
    (local.get $8)
    (local.get $9)
   )
   (i32.store8 offset=101
    (local.get $8)
    (i32.shr_u
     (local.get $9)
     (i32.const 8)
    )
   )
   (i32.store8 offset=102
    (local.get $8)
    (i32.shr_u
     (local.get $9)
     (i32.const 16)
    )
   )
   (i32.store8 offset=103
    (local.get $8)
    (i32.shr_u
     (local.get $9)
     (i32.const 24)
    )
   )
  )
  (block
   (local.set $10
    (i64.const 4)
   )
   (local.set $11
    (i32.const 8)
   )
   (i32.store16 offset=100
    (local.get $10)
    (local.get $11)
   )
   (i32.store16 offset=102
    (local.get $10)
    (i32.shr_u
     (local.get $11)
     (i32.const 16)
    )
   )
  )
  (i32.store offset=100
   (i64.const 4)
   (i32.const 8)
  )
  (block
   (drop
    (unreachable)
   )
   (drop
    (i32.const 8)
   )
  )
  (block
   (drop
    (i64.const 4)
   )
   (drop
    (unreachable)
   )
  )
 )
 (func $func_2
  (local $0 i64)
  (local $1 i64)
  (local $2 i64)
  (local $3 i32)
  (local $4 i64)
  (local $5 i32)
  (drop
   (i32.load16_u
    (i64.const 4)
   )
  )
  (drop
   (block (result i32)
    (local.set $0
     (i64.const 4)
    )
    (i32.or
     (i32.load8_u
      (local.get $0)
     )
     (i32.shl
      (i32.load8_u offset=1
       (local.get $0)
      )
      (i32.const 8)
     )
    )
   )
  )
  (drop
   (i32.load16_u
    (i64.const 4)
   )
  )
  (drop
   (i32.load16_u offset=100
    (i64.const 4)
   )
  )
  (drop
   (block (result i32)
    (local.set $1
     (i64.const 4)
    )
    (i32.or
     (i32.load8_u offset=100
      (local.get $1)
     )
     (i32.shl
      (i32.load8_u offset=101
       (local.get $1)
      )
      (i32.const 8)
     )
    )
   )
  )
  (drop
   (i32.load16_u offset=100
    (i64.const 4)
   )
  )
  (drop
   (unreachable)
  )
  (i32.store16
   (i64.const 4)
   (i32.const 8)
  )
  (block
   (local.set $2
    (i64.const 4)
   )
   (local.set $3
    (i32.const 8)
   )
   (i32.store8
    (local.get $2)
    (local.get $3)
   )
   (i32.store8 offset=1
    (local.get $2)
    (i32.shr_u
     (local.get $3)
     (i32.const 8)
    )
   )
  )
  (i32.store16
   (i64.const 4)
   (i32.const 8)
  )
  (i32.store16 offset=100
   (i64.const 4)
   (i32.const 8)
  )
  (block
   (local.set $4
    (i64.const 4)
   )
   (local.set $5
    (i32.const 8)
   )
   (i32.store8 offset=100
    (local.get $4)
    (local.get $5)
   )
   (i32.store8 offset=101
    (local.get $4)
    (i32.shr_u
     (local.get $5)
     (i32.const 8)
    )
   )
  )
  (i32.store16 offset=100
   (i64.const 4)
   (i32.const 8)
  )
  (block
   (drop
    (unreachable)
   )
   (drop
    (i32.const 8)
   )
  )
  (block
   (drop
    (i64.const 4)
   )
   (drop
    (unreachable)
   )
  )
 )
 (func $func_1
  (drop
   (i32.load8_u
    (i64.const 4)
   )
  )
  (drop
   (i32.load8_u
    (i64.const 4)
   )
  )
  (drop
   (i32.load8_u offset=100
    (i64.const 4)
   )
  )
  (drop
   (i32.load8_u offset=100
    (i64.const 4)
   )
  )
  (drop
   (unreachable)
  )
  (i32.store8
   (i64.const 4)
   (i32.const 8)
  )
  (i32.store8
   (i64.const 4)
   (i32.const 8)
  )
  (i32.store8 offset=100
   (i64.const 4)
   (i32.const 8)
  )
  (i32.store8 offset=100
   (i64.const 4)
   (i32.const 8)
  )
  (block
   (drop
    (unreachable)
   )
   (drop
    (i32.const 8)
   )
  )
  (block
   (drop
    (i64.const 4)
   )
   (drop
    (unreachable)
   )
  )
 )
 (func $func_signed
  (local $0 i64)
  (local $1 i64)
  (drop
   (i32.load16_s
    (i64.const 4)
   )
  )
  (drop
   (block (result i32)
    (local.set $0
     (i64.const 4)
    )
    (i32.shr_s
     (i32.shl
      (i32.or
       (i32.load8_u
        (local.get $0)
       )
       (i32.shl
        (i32.load8_u offset=1
         (local.get $0)
        )
        (i32.const 8)
       )
      )
      (i32.const 16)
     )
     (i32.const 16)
    )
   )
  )
  (drop
   (i32.load16_s
    (i64.const 4)
   )
  )
  (drop
   (i32.load16_s offset=100
    (i64.const 4)
   )
  )
  (drop
   (block (result i32)
    (local.set $1
     (i64.const 4)
    )
    (i32.shr_s
     (i32.shl
      (i32.or
       (i32.load8_u offset=100
        (local.get $1)
       )
       (i32.shl
        (i32.load8_u offset=101
         (local.get $1)
        )
        (i32.const 8)
       )
      )
      (i32.const 16)
     )
     (i32.const 16)
    )
   )
  )
  (drop
   (i32.load16_s offset=100
    (i64.const 4)
   )
  )
  (drop
   (unreachable)
  )
 )
 (func $i64-load
  (local $0 i64)
  (local $1 i64)
  (local $2 i64)
  (local $3 i64)
  (local $4 i64)
  (local $5 i64)
  (local $6 i64)
  (local $7 i64)
  (local $8 i64)
  (local $9 i64)
  (local $10 i64)
  (local $11 i64)
  (local $12 i64)
  (local $13 i64)
  (drop
   (block (result i64)
    (local.set $0
     (i64.const 12)
    )
    (i64.or
     (i64.extend_i32_u
      (block (result i32)
       (local.set $1
        (local.get $0)
       )
       (i32.or
        (i32.or
         (i32.load8_u
          (local.get $1)
         )
         (i32.shl
          (i32.load8_u offset=1
           (local.get $1)
          )
          (i32.const 8)
         )
        )
        (i32.or
         (i32.shl
          (i32.load8_u offset=2
           (local.get $1)
          )
          (i32.const 16)
         )
         (i32.shl
          (i32.load8_u offset=3
           (local.get $1)
          )
          (i32.const 24)
         )
        )
       )
      )
     )
     (i64.shl
      (i64.extend_i32_u
       (block (result i32)
        (local.set $2
         (local.get $0)
        )
        (i32.or
         (i32.or
          (i32.load8_u offset=4
           (local.get $2)
          )
          (i32.shl
           (i32.load8_u offset=5
            (local.get $2)
           )
           (i32.const 8)
          )
         )
         (i32.or
          (i32.shl
           (i32.load8_u offset=6
            (local.get $2)
           )
           (i32.const 16)
          )
          (i32.shl
           (i32.load8_u offset=7
            (local.get $2)
           )
           (i32.const 24)
          )
         )
        )
       )
      )
      (i64.const 32)
     )
    )
   )
  )
  (drop
   (block (result i64)
    (local.set $3
     (i64.const 16)
    )
    (i64.or
     (i64.extend_i32_u
      (block (result i32)
       (local.set $4
        (local.get $3)
       )
       (i32.or
        (i32.load16_u
         (local.get $4)
        )
        (i32.shl
         (i32.load16_u offset=2
          (local.get $4)
         )
         (i32.const 16)
        )
       )
      )
     )
     (i64.shl
      (i64.extend_i32_u
       (block (result i32)
        (local.set $5
         (local.get $3)
        )
        (i32.or
         (i32.load16_u offset=4
          (local.get $5)
         )
         (i32.shl
          (i32.load16_u offset=6
           (local.get $5)
          )
          (i32.const 16)
         )
        )
       )
      )
      (i64.const 32)
     )
    )
   )
  )
  (drop
   (block (result i64)
    (local.set $6
     (i64.const 20)
    )
    (i64.or
     (i64.extend_i32_u
      (i32.load
       (local.get $6)
      )
     )
     (i64.shl
      (i64.extend_i32_u
       (i32.load offset=4
        (local.get $6)
       )
      )
      (i64.const 32)
     )
    )
   )
  )
  (drop
   (block (result i64)
    (local.set $7
     (i64.const 20)
    )
    (i64.or
     (i64.extend_i32_u
      (block (result i32)
       (local.set $8
        (local.get $7)
       )
       (i32.or
        (i32.or
         (i32.load8_u offset=3
          (local.get $8)
         )
         (i32.shl
          (i32.load8_u offset=4
           (local.get $8)
          )
          (i32.const 8)
         )
        )
        (i32.or
         (i32.shl
          (i32.load8_u offset=5
           (local.get $8)
          )
          (i32.const 16)
         )
         (i32.shl
          (i32.load8_u offset=6
           (local.get $8)
          )
          (i32.const 24)
         )
        )
       )
      )
     )
     (i64.shl
      (i64.extend_i32_u
       (block (result i32)
        (local.set $9
         (local.get $7)
        )
        (i32.or
         (i32.or
          (i32.load8_u offset=7
           (local.get $9)
          )
          (i32.shl
           (i32.load8_u offset=8
            (local.get $9)
           )
           (i32.const 8)
          )
         )
         (i32.or
          (i32.shl
           (i32.load8_u offset=9
            (local.get $9)
           )
           (i32.const 16)
          )
          (i32.shl
           (i32.load8_u offset=10
            (local.get $9)
           )
           (i32.const 24)
          )
         )
        )
       )
      )
      (i64.const 32)
     )
    )
   )
  )
  (drop
   (i64.extend_i32_s
    (block (result i32)
     (local.set $10
      (i64.const 28)
     )
     (i32.shr_s
      (i32.shl
       (i32.or
        (i32.load8_u
         (local.get $10)
        )
        (i32.shl
         (i32.load8_u offset=1
          (local.get $10)
         )
         (i32.const 8)
        )
       )
       (i32.const 16)
      )
      (i32.const 16)
     )
    )
   )
  )
  (drop
   (i64.extend_i32_s
    (block (result i32)
     (local.set $11
      (i64.const 32)
     )
     (i32.or
      (i32.or
       (i32.load8_u
        (local.get $11)
       )
       (i32.shl
        (i32.load8_u offset=1
         (local.get $11)
        )
        (i32.const 8)
       )
      )
      (i32.or
       (i32.shl
        (i32.load8_u offset=2
         (local.get $11)
        )
        (i32.const 16)
       )
       (i32.shl
        (i32.load8_u offset=3
         (local.get $11)
        )
        (i32.const 24)
       )
      )
     )
    )
   )
  )
  (drop
   (i64.extend_i32_u
    (block (result i32)
     (local.set $12
      (i64.const 40)
     )
     (i32.or
      (i32.load8_u
       (local.get $12)
      )
      (i32.shl
       (i32.load8_u offset=1
        (local.get $12)
       )
       (i32.const 8)
      )
     )
    )
   )
  )
  (drop
   (i64.extend_i32_u
    (block (result i32)
     (local.set $13
      (i64.const 44)
     )
     (i32.or
      (i32.or
       (i32.load8_u
        (local.get $13)
       )
       (i32.shl
        (i32.load8_u offset=1
         (local.get $13)
        )
        (i32.const 8)
       )
      )
      (i32.or
       (i32.shl
        (i32.load8_u offset=2
         (local.get $13)
        )
        (i32.const 16)
       )
       (i32.shl
        (i32.load8_u offset=3
         (local.get $13)
        )
        (i32.const 24)
       )
      )
     )
    )
   )
  )
 )
 (func $f32-load
  (local $0 i64)
  (local $1 i64)
  (local $2 i64)
  (drop
   (f32.reinterpret_i32
    (block (result i32)
     (local.set $0
      (i64.const 12)
     )
     (i32.or
      (i32.or
       (i32.load8_u
        (local.get $0)
       )
       (i32.shl
        (i32.load8_u offset=1
         (local.get $0)
        )
        (i32.const 8)
       )
      )
      (i32.or
       (i32.shl
        (i32.load8_u offset=2
         (local.get $0)
        )
        (i32.const 16)
       )
       (i32.shl
        (i32.load8_u offset=3
         (local.get $0)
        )
        (i32.const 24)
       )
      )
     )
    )
   )
  )
  (drop
   (f32.reinterpret_i32
    (block (result i32)
     (local.set $1
      (i64.const 16)
     )
     (i32.or
      (i32.load16_u
       (local.get $1)
      )
      (i32.shl
       (i32.load16_u offset=2
        (local.get $1)
       )
       (i32.const 16)
      )
     )
    )
   )
  )
  (drop
   (f32.reinterpret_i32
    (block (result i32)
     (local.set $2
      (i64.const 20)
     )
     (i32.or
      (i32.or
       (i32.load8_u offset=3
        (local.get $2)
       )
       (i32.shl
        (i32.load8_u offset=4
         (local.get $2)
        )
        (i32.const 8)
       )
      )
      (i32.or
       (i32.shl
        (i32.load8_u offset=5
         (local.get $2)
        )
        (i32.const 16)
       )
       (i32.shl
        (i32.load8_u offset=6
         (local.get $2)
        )
        (i32.const 24)
       )
      )
     )
    )
   )
  )
 )
 (func $f64-load
  (local $0 i64)
  (local $1 i64)
  (local $2 i64)
  (local $3 i64)
  (local $4 i64)
  (local $5 i64)
  (local $6 i64)
  (local $7 i64)
  (local $8 i64)
  (local $9 i64)
  (drop
   (f64.reinterpret_i64
    (block (result i64)
     (local.set $0
      (i64.const 12)
     )
     (i64.or
      (i64.extend_i32_u
       (block (result i32)
        (local.set $1
         (local.get $0)
        )
        (i32.or
         (i32.or
          (i32.load8_u
           (local.get $1)
          )
          (i32.shl
           (i32.load8_u offset=1
            (local.get $1)
           )
           (i32.const 8)
          )
         )
         (i32.or
          (i32.shl
           (i32.load8_u offset=2
            (local.get $1)
           )
           (i32.const 16)
          )
          (i32.shl
           (i32.load8_u offset=3
            (local.get $1)
           )
           (i32.const 24)
          )
         )
        )
       )
      )
      (i64.shl
       (i64.extend_i32_u
        (block (result i32)
         (local.set $2
          (local.get $0)
         )
         (i32.or
          (i32.or
           (i32.load8_u offset=4
            (local.get $2)
           )
           (i32.shl
            (i32.load8_u offset=5
             (local.get $2)
            )
            (i32.const 8)
           )
          )
          (i32.or
           (i32.shl
            (i32.load8_u offset=6
             (local.get $2)
            )
            (i32.const 16)
           )
           (i32.shl
            (i32.load8_u offset=7
             (local.get $2)
            )
            (i32.const 24)
           )
          )
         )
        )
       )
       (i64.const 32)
      )
     )
    )
   )
  )
  (drop
   (f64.reinterpret_i64
    (block (result i64)
     (local.set $3
      (i64.const 16)
     )
     (i64.or
      (i64.extend_i32_u
       (block (result i32)
        (local.set $4
         (local.get $3)
        )
        (i32.or
         (i32.load16_u
          (local.get $4)
         )
         (i32.shl
          (i32.load16_u offset=2
           (local.get $4)
          )
          (i32.const 16)
         )
        )
       )
      )
      (i64.shl
       (i64.extend_i32_u
        (block (result i32)
         (local.set $5
          (local.get $3)
         )
         (i32.or
          (i32.load16_u offset=4
           (local.get $5)
          )
          (i32.shl
           (i32.load16_u offset=6
            (local.get $5)
           )
           (i32.const 16)
          )
         )
        )
       )
       (i64.const 32)
      )
     )
    )
   )
  )
  (drop
   (f64.reinterpret_i64
    (block (result i64)
     (local.set $6
      (i64.const 20)
     )
     (i64.or
      (i64.extend_i32_u
       (i32.load
        (local.get $6)
       )
      )
      (i64.shl
       (i64.extend_i32_u
        (i32.load offset=4
         (local.get $6)
        )
       )
       (i64.const 32)
      )
     )
    )
   )
  )
  (drop
   (f64.reinterpret_i64
    (block (result i64)
     (local.set $7
      (i64.const 20)
     )
     (i64.or
      (i64.extend_i32_u
       (block (result i32)
        (local.set $8
         (local.get $7)
        )
        (i32.or
         (i32.or
          (i32.load8_u offset=3
           (local.get $8)
          )
          (i32.shl
           (i32.load8_u offset=4
            (local.get $8)
           )
           (i32.const 8)
          )
         )
         (i32.or
          (i32.shl
           (i32.load8_u offset=5
            (local.get $8)
           )
           (i32.const 16)
          )
          (i32.shl
           (i32.load8_u offset=6
            (local.get $8)
           )
           (i32.const 24)
          )
         )
        )
       )
      )
      (i64.shl
       (i64.extend_i32_u
        (block (result i32)
         (local.set $9
          (local.get $7)
         )
         (i32.or
          (i32.or
           (i32.load8_u offset=7
            (local.get $9)
           )
           (i32.shl
            (i32.load8_u offset=8
             (local.get $9)
            )
            (i32.const 8)
           )
          )
          (i32.or
           (i32.shl
            (i32.load8_u offset=9
             (local.get $9)
            )
            (i32.const 16)
           )
           (i32.shl
            (i32.load8_u offset=10
             (local.get $9)
            )
            (i32.const 24)
           )
          )
         )
        )
       )
       (i64.const 32)
      )
     )
    )
   )
  )
 )
 (func $i64-store
  (local $0 i64)
  (local $1 i64)
  (local $2 i64)
  (local $3 i32)
  (local $4 i64)
  (local $5 i32)
  (local $6 i64)
  (local $7 i64)
  (local $8 i64)
  (local $9 i32)
  (local $10 i64)
  (local $11 i32)
  (local $12 i64)
  (local $13 i64)
  (local $14 i64)
  (local $15 i64)
  (local $16 i64)
  (local $17 i32)
  (local $18 i64)
  (local $19 i32)
  (local $20 i64)
  (local $21 i32)
  (local $22 i64)
  (local $23 i32)
  (block
   (local.set $0
    (i64.const 12)
   )
   (local.set $1
    (i64.const 100)
   )
   (block
    (local.set $2
     (local.get $0)
    )
    (local.set $3
     (i32.wrap_i64
      (local.get $1)
     )
    )
    (i32.store8
     (local.get $2)
     (local.get $3)
    )
    (i32.store8 offset=1
     (local.get $2)
     (i32.shr_u
      (local.get $3)
      (i32.const 8)
     )
    )
    (i32.store8 offset=2
     (local.get $2)
     (i32.shr_u
      (local.get $3)
      (i32.const 16)
     )
    )
    (i32.store8 offset=3
     (local.get $2)
     (i32.shr_u
      (local.get $3)
      (i32.const 24)
     )
    )
   )
   (block
    (local.set $4
     (local.get $0)
    )
    (local.set $5
     (i32.wrap_i64
      (i64.shr_u
       (local.get $1)
       (i64.const 32)
      )
     )
    )
    (i32.store8 offset=4
     (local.get $4)
     (local.get $5)
    )
    (i32.store8 offset=5
     (local.get $4)
     (i32.shr_u
      (local.get $5)
      (i32.const 8)
     )
    )
    (i32.store8 offset=6
     (local.get $4)
     (i32.shr_u
      (local.get $5)
      (i32.const 16)
     )
    )
    (i32.store8 offset=7
     (local.get $4)
     (i32.shr_u
      (local.get $5)
      (i32.const 24)
     )
    )
   )
  )
  (block
   (local.set $6
    (i64.const 16)
   )
   (local.set $7
    (i64.const 200)
   )
   (block
    (local.set $8
     (local.get $6)
    )
    (local.set $9
     (i32.wrap_i64
      (local.get $7)
     )
    )
    (i32.store16
     (local.get $8)
     (local.get $9)
    )
    (i32.store16 offset=2
     (local.get $8)
     (i32.shr_u
      (local.get $9)
      (i32.const 16)
     )
    )
   )
   (block
    (local.set $10
     (local.get $6)
    )
    (local.set $11
     (i32.wrap_i64
      (i64.shr_u
       (local.get $7)
       (i64.const 32)
      )
     )
    )
    (i32.store16 offset=4
     (local.get $10)
     (local.get $11)
    )
    (i32.store16 offset=6
     (local.get $10)
     (i32.shr_u
      (local.get $11)
      (i32.const 16)
     )
    )
   )
  )
  (block
   (local.set $12
    (i64.const 20)
   )
   (local.set $13
    (i64.const 300)
   )
   (i32.store
    (local.get $12)
    (i32.wrap_i64
     (local.get $13)
    )
   )
   (i32.store offset=4
    (local.get $12)
    (i32.wrap_i64
     (i64.shr_u
      (local.get $13)
      (i64.const 32)
     )
    )
   )
  )
  (block
   (local.set $14
    (i64.const 24)
   )
   (local.set $15
    (i64.const 400)
   )
   (block
    (local.set $16
     (local.get $14)
    )
    (local.set $17
     (i32.wrap_i64
      (local.get $15)
     )
    )
    (i32.store8 offset=3
     (local.get $16)
     (local.get $17)
    )
    (i32.store8 offset=4
     (local.get $16)
     (i32.shr_u
      (local.get $17)
      (i32.const 8)
     )
    )
    (i32.store8 offset=5
     (local.get $16)
     (i32.shr_u
      (local.get $17)
      (i32.const 16)
     )
    )
    (i32.store8 offset=6
     (local.get $16)
     (i32.shr_u
      (local.get $17)
      (i32.const 24)
     )
    )
   )
   (block
    (local.set $18
     (local.get $14)
    )
    (local.set $19
     (i32.wrap_i64
      (i64.shr_u
       (local.get $15)
       (i64.const 32)
      )
     )
    )
    (i32.store8 offset=7
     (local.get $18)
     (local.get $19)
    )
    (i32.store8 offset=8
     (local.get $18)
     (i32.shr_u
      (local.get $19)
      (i32.const 8)
     )
    )
    (i32.store8 offset=9
     (local.get $18)
     (i32.shr_u
      (local.get $19)
      (i32.const 16)
     )
    )
    (i32.store8 offset=10
     (local.get $18)
     (i32.shr_u
      (local.get $19)
      (i32.const 24)
     )
    )
   )
  )
  (block
   (local.set $20
    (i64.const 20)
   )
   (local.set $21
    (i32.wrap_i64
     (i64.const 600)
    )
   )
   (i32.store8
    (local.get $20)
    (local.get $21)
   )
   (i32.store8 offset=1
    (local.get $20)
    (i32.shr_u
     (local.get $21)
     (i32.const 8)
    )
   )
  )
  (block
   (local.set $22
    (i64.const 20)
   )
   (local.set $23
    (i32.wrap_i64
     (i64.const 700)
    )
   )
   (i32.store8
    (local.get $22)
    (local.get $23)
   )
   (i32.store8 offset=1
    (local.get $22)
    (i32.shr_u
     (local.get $23)
     (i32.const 8)
    )
   )
   (i32.store8 offset=2
    (local.get $22)
    (i32.shr_u
     (local.get $23)
     (i32.const 16)
    )
   )
   (i32.store8 offset=3
    (local.get $22)
    (i32.shr_u
     (local.get $23)
     (i32.const 24)
    )
   )
  )
 )
 (func $f32-store
  (local $0 i64)
  (local $1 i32)
  (local $2 i64)
  (local $3 i32)
  (local $4 i64)
  (local $5 i32)
  (block
   (local.set $0
    (i64.const 12)
   )
   (local.set $1
    (i32.reinterpret_f32
     (f32.const 100)
    )
   )
   (i32.store8
    (local.get $0)
    (local.get $1)
   )
   (i32.store8 offset=1
    (local.get $0)
    (i32.shr_u
     (local.get $1)
     (i32.const 8)
    )
   )
   (i32.store8 offset=2
    (local.get $0)
    (i32.shr_u
     (local.get $1)
     (i32.const 16)
    )
   )
   (i32.store8 offset=3
    (local.get $0)
    (i32.shr_u
     (local.get $1)
     (i32.const 24)
    )
   )
  )
  (block
   (local.set $2
    (i64.const 16)
   )
   (local.set $3
    (i32.reinterpret_f32
     (f32.const 200)
    )
   )
   (i32.store16
    (local.get $2)
    (local.get $3)
   )
   (i32.store16 offset=2
    (local.get $2)
    (i32.shr_u
     (local.get $3)
     (i32.const 16)
    )
   )
  )
  (block
   (local.set $4
    (i64.const 24)
   )
   (local.set $5
    (i32.reinterpret_f32
     (f32.const 400)
    )
   )
   (i32.store8 offset=3
    (local.get $4)
    (local.get $5)
   )
   (i32.store8 offset=4
    (local.get $4)
    (i32.shr_u
     (local.get $5)
     (i32.const 8)
    )
   )
   (i32.store8 offset=5
    (local.get $4)
    (i32.shr_u
     (local.get $5)
     (i32.const 16)
    )
   )
   (i32.store8 offset=6
    (local.get $4)
    (i32.shr_u
     (local.get $5)
     (i32.const 24)
    )
   )
  )
 )
 (func $f64-store
  (local $0 i64)
  (local $1 i64)
  (local $2 i64)
  (local $3 i32)
  (local $4 i64)
  (local $5 i32)
  (local $6 i64)
  (local $7 i64)
  (local $8 i64)
  (local $9 i32)
  (local $10 i64)
  (local $11 i32)
  (local $12 i64)
  (local $13 i64)
  (local $14 i64)
  (local $15 i64)
  (local $16 i64)
  (local $17 i32)
  (local $18 i64)
  (local $19 i32)
  (block
   (local.set $0
    (i64.const 12)
   )
   (local.set $1
    (i64.reinterpret_f64
     (f64.const 100)
    )
   )
   (block
    (local.set $2
     (local.get $0)
    )
    (local.set $3
     (i32.wrap_i64
      (local.get $1)
     )
    )
    (i32.store8
     (local.get $2)
     (local.get $3)
    )
    (i32.store8 offset=1
     (local.get $2)
     (i32.shr_u
      (local.get $3)
      (i32.const 8)
     )
    )
    (i32.store8 offset=2
     (local.get $2)
     (i32.shr_u
      (local.get $3)
      (i32.const 16)
     )
    )
    (i32.store8 offset=3
     (local.get $2)
     (i32.shr_u
      (local.get $3)
      (i32.const 24)
     )
    )
   )
   (block
    (local.set $4
     (local.get $0)
    )
    (local.set $5
     (i32.wrap_i64
      (i64.shr_u
       (local.get $1)
       (i64.const 32)
      )
     )
    )
    (i32.store8 offset=4
     (local.get $4)
     (local.get $5)
    )
    (i32.store8 offset=5
     (local.get $4)
     (i32.shr_u
      (local.get $5)
      (i32.const 8)
     )
    )
    (i32.store8 offset=6
     (local.get $4)
     (i32.shr_u
      (local.get $5)
      (i32.const 16)
     )
    )
    (i32.store8 offset=7
     (local.get $4)
     (i32.shr_u
      (local.get $5)
      (i32.const 24)
     )
    )
   )
  )
  (block
   (local.set $6
    (i64.const 16)
   )
   (local.set $7
    (i64.reinterpret_f64
     (f64.const 200)
    )
   )
   (block
    (local.set $8
     (local.get $6)
    )
    (local.set $9
     (i32.wrap_i64
      (local.get $7)
     )
    )
    (i32.store16
     (local.get $8)
     (local.get $9)
    )
    (i32.store16 offset=2
     (local.get $8)
     (i32.shr_u
      (local.get $9)
      (i32.const 16)
     )
    )
   )
   (block
    (local.set $10
     (local.get $6)
    )
    (local.set $11
     (i32.wrap_i64
      (i64.shr_u
       (local.get $7)
       (i64.const 32)
      )
     )
    )
    (i32.store16 offset=4
     (local.get $10)
     (local.get $11)
    )
    (i32.store16 offset=6
     (local.get $10)
     (i32.shr_u
      (local.get $11)
      (i32.const 16)
     )
    )
   )
  )
  (block
   (local.set $12
    (i64.const 20)
   )
   (local.set $13
    (i64.reinterpret_f64
     (f64.const 300)
    )
   )
   (i32.store
    (local.get $12)
    (i32.wrap_i64
     (local.get $13)
    )
   )
   (i32.store offset=4
    (local.get $12)
    (i32.wrap_i64
     (i64.shr_u
      (local.get $13)
      (i64.const 32)
     )
    )
   )
  )
  (block
   (local.set $14
    (i64.const 24)
   )
   (local.set $15
    (i64.reinterpret_f64
     (f64.const 400)
    )
   )
   (block
    (local.set $16
     (local.get $14)
    )
    (local.set $17
     (i32.wrap_i64
      (local.get $15)
     )
    )
    (i32.store8 offset=3
     (local.get $16)
     (local.get $17)
    )
    (i32.store8 offset=4
     (local.get $16)
     (i32.shr_u
      (local.get $17)
      (i32.const 8)
     )
    )
    (i32.store8 offset=5
     (local.get $16)
     (i32.shr_u
      (local.get $17)
      (i32.const 16)
     )
    )
    (i32.store8 offset=6
     (local.get $16)
     (i32.shr_u
      (local.get $17)
      (i32.const 24)
     )
    )
   )
   (block
    (local.set $18
     (local.get $14)
    )
    (local.set $19
     (i32.wrap_i64
      (i64.shr_u
       (local.get $15)
       (i64.const 32)
      )
     )
    )
    (i32.store8 offset=7
     (local.get $18)
     (local.get $19)
    )
    (i32.store8 offset=8
     (local.get $18)
     (i32.shr_u
      (local.get $19)
      (i32.const 8)
     )
    )
    (i32.store8 offset=9
     (local.get $18)
     (i32.shr_u
      (local.get $19)
      (i32.const 16)
     )
    )
    (i32.store8 offset=10
     (local.get $18)
     (i32.shr_u
      (local.get $19)
      (i32.const 24)
     )
    )
   )
  )
 )
)
