(module
 (type $0 (func))
 (type $1 (func (param i32)))
 (type $2 (func (result i32)))
 (memory $0 0)
 (func $drop-block (; 0 ;) (type $0)
  (block $block
   (block $x
    (drop
     (i32.const 0)
    )
   )
  )
 )
 (func $drop-block-br (; 1 ;) (type $0)
  (block $block
   (drop
    (block $x (result i32)
     (br $x
      (i32.const 1)
     )
     (i32.const 0)
    )
   )
  )
 )
 (func $drop-block-br-if (; 2 ;) (type $0)
  (block $block
   (block $x
    (drop
     (i32.const 1)
    )
    (br_if $x
     (i32.const 2)
    )
    (drop
     (i32.const 0)
    )
   )
  )
 )
 (func $undroppable-block-br-if (; 3 ;) (type $1) (param $0 i32)
  (block $block
   (drop
    (block $x (result i32)
     (call $undroppable-block-br-if
      (br_if $x
       (i32.const 1)
       (i32.const 2)
      )
     )
     (i32.const 0)
    )
   )
  )
 )
 (func $drop-block-nested-br-if (; 4 ;) (type $0)
  (block $block
   (block $x
    (if
     (i32.const 100)
     (block $block0
      (drop
       (i32.const 1)
      )
      (br_if $x
       (i32.const 2)
      )
      (nop)
     )
    )
    (drop
     (i32.const 0)
    )
   )
  )
 )
 (func $drop-unreachable-br_if (; 5 ;) (type $2) (result i32)
  (block $label$0 (result i32)
   (block $label$2 (result i32)
    (br_if $label$2
     (br $label$0
      (i32.const 538976371)
     )
     (i32.const 1918987552)
    )
   )
  )
 )
 (func $drop-block-squared-iloop (; 6 ;) (type $0)
  (drop
   (block $label$0 (result i32)
    (drop
     (block $label$1
      (loop $label$2
       (br $label$2)
      )
     )
    )
   )
  )
 )
 (func $br-goes-away-label2-becomes-unreachable (; 7 ;) (type $0)
  (block $block
   (drop
    (block $label$1 (result i32)
     (block $label$2
      (drop
       (br_if $label$1
        (unreachable)
        (i32.eqz
         (br $label$2)
        )
       )
      )
     )
     (i32.const 1)
    )
   )
  )
 )
 (func $loop-block-drop-block-return (; 8 ;) (type $0)
  (loop $label$4
   (block $label$5
    (drop
     (block $label$6 (result i32)
      (return)
     )
    )
   )
  )
 )
)
