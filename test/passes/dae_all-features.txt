(module
 (type $none_=>_none (func))
 (type $i32_=>_none (func (param i32)))
 (type $none_=>_i32 (func (result i32)))
 (type $f64_=>_none (func (param f64)))
 (table $0 2 2 funcref)
 (elem (i32.const 0) $a9 $c8)
 (export "a8" (func $a8))
 (func $a
  (local $0 i32)
  (local.set $0
   (i32.const 1)
  )
  (nop)
 )
 (func $b
  (call $a)
 )
 (func $a1
  (local $0 i32)
  (local.set $0
   (i32.const 2)
  )
  (unreachable)
 )
 (func $b1
  (call $a1)
 )
 (func $b11
  (call $a1)
 )
 (func $a2 (param $x i32)
  (drop
   (local.get $x)
  )
 )
 (func $b2
  (call $a2
   (i32.const 3)
  )
 )
 (func $b22
  (call $a2
   (i32.const 4)
  )
 )
 (func $a3
  (local $0 i32)
  (drop
   (i32.const -1)
  )
 )
 (func $b3
  (call $a3)
 )
 (func $b33
  (call $a3)
 )
 (func $a4 (param $x i32)
  (nop)
 )
 (func $b4
  (call $a4
   (unreachable)
  )
 )
 (func $b43
  (call $a4
   (i32.const 4)
  )
 )
 (func $a5
  (local $0 f64)
  (local $1 i32)
  (local.set $0
   (f64.const 3.14159)
  )
  (block
   (local.set $1
    (i32.const 1)
   )
   (block
    (drop
     (local.get $1)
    )
    (drop
     (local.get $0)
    )
   )
  )
 )
 (func $b5
  (call $a5)
 )
 (func $a6 (param $0 i32)
  (local $1 f64)
  (local.set $1
   (f64.const 3.14159)
  )
  (block
   (drop
    (local.get $0)
   )
   (drop
    (local.get $1)
   )
  )
 )
 (func $b6
  (call $a6
   (unreachable)
  )
 )
 (func $a7 (param $0 f64)
  (local $1 i32)
  (local.set $1
   (i32.const 1)
  )
  (block
   (drop
    (local.get $1)
   )
   (drop
    (local.get $0)
   )
  )
 )
 (func $b7
  (call $a7
   (unreachable)
  )
 )
 (func $a8 (param $x i32)
  (nop)
 )
 (func $b8
  (call $a8
   (i32.const 1)
  )
 )
 (func $a9 (param $x i32)
  (nop)
 )
 (func $b9
  (call $a9
   (i32.const 1)
  )
 )
 (func $a10
  (local $0 i32)
  (local.set $0
   (i32.const 1)
  )
  (block
   (call $a10)
   (call $a10)
  )
 )
 (func $a11
  (local $0 i32)
  (call $a11)
  (call $a11)
 )
 (func $a12 (param $x i32)
  (drop
   (local.get $x)
  )
  (call $a12
   (i32.const 1)
  )
  (call $a12
   (i32.const 2)
  )
 )
 (func $c1
  (local $x i32)
  (call $c2)
  (call $c3)
  (call $c3)
  (drop
   (call $c4)
  )
  (local.set $x
   (call $c4)
  )
  (call $c5
   (unreachable)
  )
  (call $c6)
  (call $c7)
  (drop
   (call $c8)
  )
 )
 (func $c2
  (drop
   (i32.const 1)
  )
 )
 (func $c3
  (drop
   (i32.const 2)
  )
 )
 (func $c4 (result i32)
  (i32.const 3)
 )
 (func $c5 (param $x i32)
  (drop
   (local.get $x)
  )
 )
 (func $c6
  (unreachable)
 )
 (func $c7
  (drop
   (i32.const 4)
  )
  (return)
 )
 (func $c8 (result i32)
  (i32.const 5)
 )
)
(module
 (type $none_=>_none (func))
 (export "a" (func $0))
 (func $0
  (call $b)
 )
 (func $b
  (local $0 i32)
  (drop
   (block (result i32)
    (local.set $0
     (i32.const 1)
    )
    (local.get $0)
   )
  )
 )
)
(module
 (type $none_=>_i32 (func (result i32)))
 (type $i32_=>_i32 (func (param i32) (result i32)))
 (func $foo (param $x i32) (result i32)
  (drop
   (return_call $bar)
  )
  (i32.const 42)
 )
 (func $bar (result i32)
  (local $0 i32)
  (local.set $0
   (i32.const 0)
  )
  (i32.const 7)
 )
)
(module
 (type $none_=>_i32 (func (result i32)))
 (type $none_=>_none (func))
 (table $0 1 1 funcref)
 (func $foo (result i32)
  (local $0 i32)
  (local.set $0
   (i32.const 42)
  )
  (drop
   (return_call_indirect $0 (type $none_=>_i32)
    (i32.const 0)
   )
  )
 )
 (func $bar
  (drop
   (call $foo)
  )
 )
)
(module
 (type $funcref_i32_f64_=>_i64 (func (param funcref i32 f64) (result i64)))
 (type $f32_=>_funcref (func (param f32) (result funcref)))
 (export "export" (func $1))
 (func $0 (param $0 funcref) (param $1 i32) (param $2 f64) (result i64)
  (nop)
  (unreachable)
 )
 (func $1 (param $0 f32) (result funcref)
  (ref.func $0)
 )
)
