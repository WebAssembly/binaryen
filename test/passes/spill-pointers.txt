zz walk $nothing
zz spill $nothing
zz walk $not-alive
add get/set 1 : (set_local $0
 (i32.const 1)
)
add get/set 1 : (set_local $1
 (i64.const 1)
)
add get/set 1 : (set_local $2
 (f32.const zz walk $spill
1)
)
add get/set 1 : (set_local $3
 (f64.const 1)
)
add Other/call (call $nothing) : (call $nothing)
add get/set 1 : (set_local zz spill $not-alive
action 2 : (call $nothing)
call!
action 1 : (set_local $3
 $(0f64.const 
 (i32.const 11))

))

set!
action 1 : (set_local add get/set 1 : $2
( set_local (f32.const 1)
)
set!
action $11 : 
 (i64.const (1set_local )
)
$1
 (i64.const 1)
)add get/set 
set!
1 : action 1 : (set_local (set_local $0
 (i32.const $12)

 )(
f32set!
.const 1)
)
add get/set 1 : (set_local $3
 (f64.const 1)
)
add Other/call (call $nothing) : (call $nothing)
add get/set 0 : (get_local $0)
add get/set 0 : (get_local $1)
add get/set 0 : (get_local $2)
add get/set 0 : (get_local $3)
zz spill $spill
action 0 : (get_local $3)
get!
action 0 : (get_local $2)
get!
action 0 : (get_local $1)
get!
action 0 : (get_local $0)
get!
action 2 : (call $nothing)
call!
action 1 : (set_local $3
 (f64.const 1)
)
set!
action 1 : (set_local $2
 (f32.const 1)
)
set!
action 1 : (set_local $1
 (i64.const 1)
)
set!
action 1 : (set_local $0
 (i32.const 1)
)
set!
(module
 (type $0 (func))
 (import "env" "STACKTOP" (global $STACKTOP$asm2wasm$import i32))
 (global $stack_ptr (mut i32) (get_global $STACKTOP$asm2wasm$import))
 (memory $0 0)
 (func $nothing (; 0 ;) (type $0)
  (nop)
 )
 (func $not-alive (; 1 ;) (type $0)
  (local $x i32)
  (local $y i64)
  (local $z f32)
  (local $w f64)
  (set_local $x
   (i32.const 1)
  )
  (set_local $y
   (i64.const 1)
  )
  (set_local $z
   (f32.const 1)
  )
  (set_local $w
   (f64.const 1)
  )
  (call $nothing)
 )
 (func $spill (; 2 ;) (type $0)
  (local $x i32)
  (local $y i64)
  (local $z f32)
  (local $w f64)
  (local $4 i32)
  (local $5 i32)
  (set_local $5
   (get_global $stack_ptr)
  )
  (set_local $4
   (i32.add
    (get_local $5)
    (i32.const 16)
   )
  )
  (block
   (set_local $x
    (i32.const 1)
   )
   (set_local $y
    (i64.const 1)
   )
   (set_local $z
    (f32.const 1)
   )
   (set_local $w
    (f64.const 1)
   )
   (block
    (i32.store
     (get_local $4)
     (get_local $x)
    )
    (call $nothing)
   )
   (drop
    (get_local $x)
   )
   (drop
    (get_local $y)
   )
   (drop
    (get_local $z)
   )
   (drop
    (get_local $w)
   )
  )
  (set_global $stack_ptr
   (get_local $5)
  )
 )
)
