(module
 (type $FUNCSIG$vi (func (param i32)))
 (type $FUNCSIG$v (func))
 (memory $0 1 2)
 (global $sleeping (mut i32) (i32.const 0))
 (global $__bysyncify_state (mut i32) (i32.const 0))
 (global $__bysyncify_data (mut i32) (i32.const 0))
 (export "bysyncify_start_unwind" (func $bysyncify_start_unwind))
 (export "bysyncify_stop_unwind" (func $bysyncify_stop_unwind))
 (export "bysyncify_start_rewind" (func $bysyncify_start_rewind))
 (export "bysyncify_stop_rewind" (func $bysyncify_stop_rewind))
 (func $do_sleep (; 0 ;) (type $FUNCSIG$v)
  (local $0 i32)
  (local $1 i32)
  (local.set $0
   (global.get $sleeping)
  )
  (local.set $1
   (i32.eqz
    (local.get $0)
   )
  )
  (if
   (local.get $1)
   (block
    (global.set $sleeping
     (i32.const 1)
    )
    (call $bysyncify_start_unwind
     (i32.const 4)
    )
   )
   (block
    (global.set $sleeping
     (i32.const 0)
    )
    (call $bysyncify_stop_rewind)
   )
  )
 )
 (func $work (; 1 ;) (type $FUNCSIG$v)
  (local $0 i32)
  (local $1 i32)
  (if
   (i32.eq
    (global.get $__bysyncify_state)
    (i32.const 2)
   )
   (nop)
  )
  (local.set $0
   (block $__bysyncify_unwind (result i32)
    (block
     (block
      (if
       (i32.eq
        (global.get $__bysyncify_state)
        (i32.const 2)
       )
       (block
        (i32.store
         (global.get $__bysyncify_data)
         (i32.add
          (i32.load
           (global.get $__bysyncify_data)
          )
          (i32.const -4)
         )
        )
        (local.set $1
         (i32.load
          (i32.load
           (global.get $__bysyncify_data)
          )
         )
        )
       )
      )
      (block
       (if
        (i32.eq
         (global.get $__bysyncify_state)
         (i32.const 0)
        )
        (call $stuff)
       )
       (if
        (if (result i32)
         (i32.eq
          (global.get $__bysyncify_state)
          (i32.const 0)
         )
         (i32.const 1)
         (i32.eq
          (local.get $1)
          (i32.const 0)
         )
        )
        (block
         (call $do_sleep)
         (if
          (i32.eq
           (global.get $__bysyncify_state)
           (i32.const 1)
          )
          (br $__bysyncify_unwind
           (i32.const 0)
          )
         )
        )
       )
       (if
        (i32.eq
         (global.get $__bysyncify_state)
         (i32.const 0)
        )
        (call $stuff)
       )
      )
     )
     (return)
    )
   )
  )
  (block
   (i32.store
    (i32.load
     (global.get $__bysyncify_data)
    )
    (local.get $0)
   )
   (i32.store
    (global.get $__bysyncify_data)
    (i32.add
     (i32.load
      (global.get $__bysyncify_data)
     )
     (i32.const 4)
    )
   )
  )
  (nop)
 )
 (func $stuff (; 2 ;) (type $FUNCSIG$v)
  (nop)
 )
 (func $first_event (; 3 ;) (type $FUNCSIG$v)
  (local $0 i32)
  (local $1 i32)
  (if
   (i32.eq
    (global.get $__bysyncify_state)
    (i32.const 2)
   )
   (nop)
  )
  (local.set $0
   (block $__bysyncify_unwind (result i32)
    (block
     (block
      (if
       (i32.eq
        (global.get $__bysyncify_state)
        (i32.const 2)
       )
       (block
        (i32.store
         (global.get $__bysyncify_data)
         (i32.add
          (i32.load
           (global.get $__bysyncify_data)
          )
          (i32.const -4)
         )
        )
        (local.set $1
         (i32.load
          (i32.load
           (global.get $__bysyncify_data)
          )
         )
        )
       )
      )
      (if
       (if (result i32)
        (i32.eq
         (global.get $__bysyncify_state)
         (i32.const 0)
        )
        (i32.const 1)
        (i32.eq
         (local.get $1)
         (i32.const 0)
        )
       )
       (block
        (call $work)
        (if
         (i32.eq
          (global.get $__bysyncify_state)
          (i32.const 1)
         )
         (br $__bysyncify_unwind
          (i32.const 0)
         )
        )
       )
      )
     )
     (return)
    )
   )
  )
  (block
   (i32.store
    (i32.load
     (global.get $__bysyncify_data)
    )
    (local.get $0)
   )
   (i32.store
    (global.get $__bysyncify_data)
    (i32.add
     (i32.load
      (global.get $__bysyncify_data)
     )
     (i32.const 4)
    )
   )
  )
  (nop)
 )
 (func $second_event (; 4 ;) (type $FUNCSIG$v)
  (call $bysyncify_start_rewind
   (i32.const 4)
  )
  (call $work)
 )
 (func $never_sleep (; 5 ;) (type $FUNCSIG$v)
  (call $stuff)
  (call $stuff)
  (call $stuff)
 )
 (func $bysyncify_start_unwind (; 6 ;) (param $0 i32)
  (if
   (i32.gt_u
    (i32.load
     (local.get $0)
    )
    (i32.load offset=4
     (local.get $0)
    )
   )
   (unreachable)
  )
  (global.set $__bysyncify_state
   (i32.const 1)
  )
  (global.set $__bysyncify_data
   (local.get $0)
  )
 )
 (func $bysyncify_stop_unwind (; 7 ;)
  (global.set $__bysyncify_state
   (i32.const 0)
  )
 )
 (func $bysyncify_start_rewind (; 8 ;) (param $0 i32)
  (if
   (i32.gt_u
    (i32.load
     (local.get $0)
    )
    (i32.load offset=4
     (local.get $0)
    )
   )
   (unreachable)
  )
  (global.set $__bysyncify_state
   (i32.const 2)
  )
  (global.set $__bysyncify_data
   (local.get $0)
  )
 )
 (func $bysyncify_stop_rewind (; 9 ;)
  (global.set $__bysyncify_state
   (i32.const 0)
  )
 )
)
(module
 (type $FUNCSIG$v (func))
 (type $FUNCSIG$i (func (result i32)))
 (type $FUNCSIG$vi (func (param i32)))
 (type $FUNCSIG$ii (func (param i32) (result i32)))
 (import "env" "import" (func $import))
 (import "env" "import2" (func $import2 (result i32)))
 (import "env" "import3" (func $import3 (param i32)))
 (memory $0 1 2)
 (global $__bysyncify_state (mut i32) (i32.const 0))
 (global $__bysyncify_data (mut i32) (i32.const 0))
 (export "bysyncify_start_unwind" (func $bysyncify_start_unwind))
 (export "bysyncify_stop_unwind" (func $bysyncify_stop_unwind))
 (export "bysyncify_start_rewind" (func $bysyncify_start_rewind))
 (export "bysyncify_stop_rewind" (func $bysyncify_stop_rewind))
 (func $calls-import (; 3 ;) (type $FUNCSIG$v)
  (local $0 i32)
  (local $1 i32)
  (if
   (i32.eq
    (global.get $__bysyncify_state)
    (i32.const 2)
   )
   (nop)
  )
  (local.set $0
   (block $__bysyncify_unwind (result i32)
    (block
     (block
      (if
       (i32.eq
        (global.get $__bysyncify_state)
        (i32.const 2)
       )
       (block
        (i32.store
         (global.get $__bysyncify_data)
         (i32.add
          (i32.load
           (global.get $__bysyncify_data)
          )
          (i32.const -4)
         )
        )
        (local.set $1
         (i32.load
          (i32.load
           (global.get $__bysyncify_data)
          )
         )
        )
       )
      )
      (if
       (if (result i32)
        (i32.eq
         (global.get $__bysyncify_state)
         (i32.const 0)
        )
        (i32.const 1)
        (i32.eq
         (local.get $1)
         (i32.const 0)
        )
       )
       (block
        (call $import)
        (if
         (i32.eq
          (global.get $__bysyncify_state)
          (i32.const 1)
         )
         (br $__bysyncify_unwind
          (i32.const 0)
         )
        )
       )
      )
     )
     (return)
    )
   )
  )
  (block
   (i32.store
    (i32.load
     (global.get $__bysyncify_data)
    )
    (local.get $0)
   )
   (i32.store
    (global.get $__bysyncify_data)
    (i32.add
     (i32.load
      (global.get $__bysyncify_data)
     )
     (i32.const 4)
    )
   )
  )
  (nop)
 )
 (func $calls-import2 (; 4 ;) (type $FUNCSIG$i) (result i32)
  (local $temp i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (if
   (i32.eq
    (global.get $__bysyncify_state)
    (i32.const 2)
   )
   (block
    (i32.store
     (global.get $__bysyncify_data)
     (i32.add
      (i32.load
       (global.get $__bysyncify_data)
      )
      (i32.const -20)
     )
    )
    (local.set $7
     (i32.load
      (global.get $__bysyncify_data)
     )
    )
    (local.set $temp
     (i32.load
      (local.get $7)
     )
    )
    (local.set $1
     (i32.load offset=4
      (local.get $7)
     )
    )
    (local.set $2
     (i32.load offset=8
      (local.get $7)
     )
    )
    (local.set $3
     (i32.load offset=12
      (local.get $7)
     )
    )
    (local.set $4
     (i32.load offset=16
      (local.get $7)
     )
    )
   )
  )
  (local.set $5
   (block $__bysyncify_unwind (result i32)
    (block
     (block
      (if
       (i32.eq
        (global.get $__bysyncify_state)
        (i32.const 2)
       )
       (block
        (i32.store
         (global.get $__bysyncify_data)
         (i32.add
          (i32.load
           (global.get $__bysyncify_data)
          )
          (i32.const -4)
         )
        )
        (local.set $6
         (i32.load
          (i32.load
           (global.get $__bysyncify_data)
          )
         )
        )
       )
      )
      (block
       (if
        (if (result i32)
         (i32.eq
          (global.get $__bysyncify_state)
          (i32.const 0)
         )
         (i32.const 1)
         (i32.eq
          (local.get $6)
          (i32.const 0)
         )
        )
        (block
         (local.set $2
          (call $import2)
         )
         (if
          (i32.eq
           (global.get $__bysyncify_state)
           (i32.const 1)
          )
          (br $__bysyncify_unwind
           (i32.const 0)
          )
         )
        )
       )
       (if
        (i32.eq
         (global.get $__bysyncify_state)
         (i32.const 0)
        )
        (return
         (local.get $2)
        )
       )
      )
      (unreachable)
     )
     (unreachable)
    )
   )
  )
  (block
   (i32.store
    (i32.load
     (global.get $__bysyncify_data)
    )
    (local.get $5)
   )
   (i32.store
    (global.get $__bysyncify_data)
    (i32.add
     (i32.load
      (global.get $__bysyncify_data)
     )
     (i32.const 4)
    )
   )
  )
  (block
   (local.set $8
    (i32.load
     (global.get $__bysyncify_data)
    )
   )
   (i32.store
    (local.get $8)
    (local.get $temp)
   )
   (i32.store offset=4
    (local.get $8)
    (local.get $1)
   )
   (i32.store offset=8
    (local.get $8)
    (local.get $2)
   )
   (i32.store offset=12
    (local.get $8)
    (local.get $3)
   )
   (i32.store offset=16
    (local.get $8)
    (local.get $4)
   )
   (i32.store
    (global.get $__bysyncify_data)
    (i32.add
     (i32.load
      (global.get $__bysyncify_data)
     )
     (i32.const 20)
    )
   )
  )
  (i32.const 0)
 )
 (func $calls-import2-drop (; 5 ;) (type $FUNCSIG$v)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (if
   (i32.eq
    (global.get $__bysyncify_state)
    (i32.const 2)
   )
   (block
    (i32.store
     (global.get $__bysyncify_data)
     (i32.add
      (i32.load
       (global.get $__bysyncify_data)
      )
      (i32.const -4)
     )
    )
    (local.set $3
     (i32.load
      (global.get $__bysyncify_data)
     )
    )
    (local.set $0
     (i32.load
      (local.get $3)
     )
    )
   )
  )
  (local.set $1
   (block $__bysyncify_unwind (result i32)
    (block
     (block
      (if
       (i32.eq
        (global.get $__bysyncify_state)
        (i32.const 2)
       )
       (block
        (i32.store
         (global.get $__bysyncify_data)
         (i32.add
          (i32.load
           (global.get $__bysyncify_data)
          )
          (i32.const -4)
         )
        )
        (local.set $2
         (i32.load
          (i32.load
           (global.get $__bysyncify_data)
          )
         )
        )
       )
      )
      (if
       (if (result i32)
        (i32.eq
         (global.get $__bysyncify_state)
         (i32.const 0)
        )
        (i32.const 1)
        (i32.eq
         (local.get $2)
         (i32.const 0)
        )
       )
       (block
        (local.set $0
         (call $import2)
        )
        (if
         (i32.eq
          (global.get $__bysyncify_state)
          (i32.const 1)
         )
         (br $__bysyncify_unwind
          (i32.const 0)
         )
        )
       )
      )
     )
     (return)
    )
   )
  )
  (block
   (i32.store
    (i32.load
     (global.get $__bysyncify_data)
    )
    (local.get $1)
   )
   (i32.store
    (global.get $__bysyncify_data)
    (i32.add
     (i32.load
      (global.get $__bysyncify_data)
     )
     (i32.const 4)
    )
   )
  )
  (block
   (local.set $4
    (i32.load
     (global.get $__bysyncify_data)
    )
   )
   (i32.store
    (local.get $4)
    (local.get $0)
   )
   (i32.store
    (global.get $__bysyncify_data)
    (i32.add
     (i32.load
      (global.get $__bysyncify_data)
     )
     (i32.const 4)
    )
   )
  )
 )
 (func $calls-nothing (; 6 ;) (type $FUNCSIG$v)
  (local $0 i32)
  (local.set $0
   (i32.eqz
    (i32.const 17)
   )
  )
 )
 (func $many-locals (; 7 ;) (type $FUNCSIG$ii) (param $x i32) (result i32)
  (local $y i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (if
   (i32.eq
    (global.get $__bysyncify_state)
    (i32.const 2)
   )
   (block
    (i32.store
     (global.get $__bysyncify_data)
     (i32.add
      (i32.load
       (global.get $__bysyncify_data)
      )
      (i32.const -40)
     )
    )
    (local.set $12
     (i32.load
      (global.get $__bysyncify_data)
     )
    )
    (local.set $x
     (i32.load
      (local.get $12)
     )
    )
    (local.set $y
     (i32.load offset=4
      (local.get $12)
     )
    )
    (local.set $2
     (i32.load offset=8
      (local.get $12)
     )
    )
    (local.set $3
     (i32.load offset=12
      (local.get $12)
     )
    )
    (local.set $4
     (i32.load offset=16
      (local.get $12)
     )
    )
    (local.set $5
     (i32.load offset=20
      (local.get $12)
     )
    )
    (local.set $6
     (i32.load offset=24
      (local.get $12)
     )
    )
    (local.set $7
     (i32.load offset=28
      (local.get $12)
     )
    )
    (local.set $8
     (i32.load offset=32
      (local.get $12)
     )
    )
    (local.set $9
     (i32.load offset=36
      (local.get $12)
     )
    )
   )
  )
  (local.set $10
   (block $__bysyncify_unwind (result i32)
    (block
     (block
      (if
       (i32.eq
        (global.get $__bysyncify_state)
        (i32.const 2)
       )
       (block
        (i32.store
         (global.get $__bysyncify_data)
         (i32.add
          (i32.load
           (global.get $__bysyncify_data)
          )
          (i32.const -4)
         )
        )
        (local.set $11
         (i32.load
          (i32.load
           (global.get $__bysyncify_data)
          )
         )
        )
       )
      )
      (block
       (if
        (i32.eq
         (global.get $__bysyncify_state)
         (i32.const 0)
        )
        (loop $l
         (local.set $4
          (i32.add
           (local.get $y)
           (i32.const 1)
          )
         )
         (local.set $y
          (i32.div_s
           (local.get $4)
           (i32.const 3)
          )
         )
         (br_if $l
          (local.get $y)
         )
        )
       )
       (if
        (if (result i32)
         (i32.eq
          (global.get $__bysyncify_state)
          (i32.const 0)
         )
         (i32.const 1)
         (i32.eq
          (local.get $11)
          (i32.const 0)
         )
        )
        (block
         (call $import)
         (if
          (i32.eq
           (global.get $__bysyncify_state)
           (i32.const 1)
          )
          (br $__bysyncify_unwind
           (i32.const 0)
          )
         )
        )
       )
       (if
        (i32.eq
         (global.get $__bysyncify_state)
         (i32.const 0)
        )
        (return
         (local.get $y)
        )
       )
      )
      (unreachable)
     )
     (unreachable)
    )
   )
  )
  (block
   (i32.store
    (i32.load
     (global.get $__bysyncify_data)
    )
    (local.get $10)
   )
   (i32.store
    (global.get $__bysyncify_data)
    (i32.add
     (i32.load
      (global.get $__bysyncify_data)
     )
     (i32.const 4)
    )
   )
  )
  (block
   (local.set $13
    (i32.load
     (global.get $__bysyncify_data)
    )
   )
   (i32.store
    (local.get $13)
    (local.get $x)
   )
   (i32.store offset=4
    (local.get $13)
    (local.get $y)
   )
   (i32.store offset=8
    (local.get $13)
    (local.get $2)
   )
   (i32.store offset=12
    (local.get $13)
    (local.get $3)
   )
   (i32.store offset=16
    (local.get $13)
    (local.get $4)
   )
   (i32.store offset=20
    (local.get $13)
    (local.get $5)
   )
   (i32.store offset=24
    (local.get $13)
    (local.get $6)
   )
   (i32.store offset=28
    (local.get $13)
    (local.get $7)
   )
   (i32.store offset=32
    (local.get $13)
    (local.get $8)
   )
   (i32.store offset=36
    (local.get $13)
    (local.get $9)
   )
   (i32.store
    (global.get $__bysyncify_data)
    (i32.add
     (i32.load
      (global.get $__bysyncify_data)
     )
     (i32.const 40)
    )
   )
  )
  (i32.const 0)
 )
 (func $calls-import2-if (; 8 ;) (type $FUNCSIG$vi) (param $x i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (if
   (i32.eq
    (global.get $__bysyncify_state)
    (i32.const 2)
   )
   (block
    (i32.store
     (global.get $__bysyncify_data)
     (i32.add
      (i32.load
       (global.get $__bysyncify_data)
      )
      (i32.const -8)
     )
    )
    (local.set $4
     (i32.load
      (global.get $__bysyncify_data)
     )
    )
    (local.set $x
     (i32.load
      (local.get $4)
     )
    )
    (local.set $1
     (i32.load offset=4
      (local.get $4)
     )
    )
   )
  )
  (local.set $2
   (block $__bysyncify_unwind (result i32)
    (block
     (block
      (if
       (i32.eq
        (global.get $__bysyncify_state)
        (i32.const 2)
       )
       (block
        (i32.store
         (global.get $__bysyncify_data)
         (i32.add
          (i32.load
           (global.get $__bysyncify_data)
          )
          (i32.const -4)
         )
        )
        (local.set $3
         (i32.load
          (i32.load
           (global.get $__bysyncify_data)
          )
         )
        )
       )
      )
      (if
       (i32.or
        (local.get $x)
        (i32.eq
         (global.get $__bysyncify_state)
         (i32.const 2)
        )
       )
       (if
        (if (result i32)
         (i32.eq
          (global.get $__bysyncify_state)
          (i32.const 0)
         )
         (i32.const 1)
         (i32.eq
          (local.get $3)
          (i32.const 0)
         )
        )
        (block
         (call $import)
         (if
          (i32.eq
           (global.get $__bysyncify_state)
           (i32.const 1)
          )
          (br $__bysyncify_unwind
           (i32.const 0)
          )
         )
        )
       )
      )
     )
     (return)
    )
   )
  )
  (block
   (i32.store
    (i32.load
     (global.get $__bysyncify_data)
    )
    (local.get $2)
   )
   (i32.store
    (global.get $__bysyncify_data)
    (i32.add
     (i32.load
      (global.get $__bysyncify_data)
     )
     (i32.const 4)
    )
   )
  )
  (block
   (local.set $5
    (i32.load
     (global.get $__bysyncify_data)
    )
   )
   (i32.store
    (local.get $5)
    (local.get $x)
   )
   (i32.store offset=4
    (local.get $5)
    (local.get $1)
   )
   (i32.store
    (global.get $__bysyncify_data)
    (i32.add
     (i32.load
      (global.get $__bysyncify_data)
     )
     (i32.const 8)
    )
   )
  )
 )
 (func $calls-import2-if-else (; 9 ;) (type $FUNCSIG$vi) (param $x i32)
  (local $1 i32)
  (if
   (local.get $x)
   (call $import3
    (i32.const 1)
   )
   (call $import3
    (i32.const 2)
   )
  )
 )
 (func $calls-import2-if-else-oneside (; 10 ;) (type $FUNCSIG$ii) (param $x i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (if
   (local.get $x)
   (return
    (i32.const 1)
   )
   (call $import3
    (i32.const 2)
   )
  )
  (return
   (i32.const 3)
  )
 )
 (func $calls-import2-if-else-oneside2 (; 11 ;) (type $FUNCSIG$ii) (param $x i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (if
   (local.get $x)
   (call $import3
    (i32.const 1)
   )
   (return
    (i32.const 2)
   )
  )
  (return
   (i32.const 3)
  )
 )
 (func $calls-loop (; 12 ;) (type $FUNCSIG$vi) (param $x i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (loop $l
   (call $import3
    (i32.const 1)
   )
   (local.set $x
    (i32.add
     (local.get $x)
     (i32.const 1)
    )
   )
   (br_if $l
    (local.get $x)
   )
  )
 )
 (func $calls-loop2 (; 13 ;) (type $FUNCSIG$v)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (if
   (i32.eq
    (global.get $__bysyncify_state)
    (i32.const 2)
   )
   (block
    (i32.store
     (global.get $__bysyncify_data)
     (i32.add
      (i32.load
       (global.get $__bysyncify_data)
      )
      (i32.const -4)
     )
    )
    (local.set $3
     (i32.load
      (global.get $__bysyncify_data)
     )
    )
    (local.set $0
     (i32.load
      (local.get $3)
     )
    )
   )
  )
  (local.set $1
   (block $__bysyncify_unwind (result i32)
    (block
     (block
      (if
       (i32.eq
        (global.get $__bysyncify_state)
        (i32.const 2)
       )
       (block
        (i32.store
         (global.get $__bysyncify_data)
         (i32.add
          (i32.load
           (global.get $__bysyncify_data)
          )
          (i32.const -4)
         )
        )
        (local.set $2
         (i32.load
          (i32.load
           (global.get $__bysyncify_data)
          )
         )
        )
       )
      )
      (loop $l
       (if
        (if (result i32)
         (i32.eq
          (global.get $__bysyncify_state)
          (i32.const 0)
         )
         (i32.const 1)
         (i32.eq
          (local.get $2)
          (i32.const 0)
         )
        )
        (block
         (local.set $0
          (call $import2)
         )
         (if
          (i32.eq
           (global.get $__bysyncify_state)
           (i32.const 1)
          )
          (br $__bysyncify_unwind
           (i32.const 0)
          )
         )
        )
       )
       (if
        (i32.eq
         (global.get $__bysyncify_state)
         (i32.const 0)
        )
        (br_if $l
         (local.get $0)
        )
       )
      )
     )
     (return)
    )
   )
  )
  (block
   (i32.store
    (i32.load
     (global.get $__bysyncify_data)
    )
    (local.get $1)
   )
   (i32.store
    (global.get $__bysyncify_data)
    (i32.add
     (i32.load
      (global.get $__bysyncify_data)
     )
     (i32.const 4)
    )
   )
  )
  (block
   (local.set $4
    (i32.load
     (global.get $__bysyncify_data)
    )
   )
   (i32.store
    (local.get $4)
    (local.get $0)
   )
   (i32.store
    (global.get $__bysyncify_data)
    (i32.add
     (i32.load
      (global.get $__bysyncify_data)
     )
     (i32.const 4)
    )
   )
  )
 )
 (func $calls-mix (; 14 ;) (type $FUNCSIG$v)
  (local $0 i32)
  (local $1 i32)
  (if
   (i32.eq
    (global.get $__bysyncify_state)
    (i32.const 2)
   )
   (nop)
  )
  (local.set $0
   (block $__bysyncify_unwind (result i32)
    (block
     (block
      (if
       (i32.eq
        (global.get $__bysyncify_state)
        (i32.const 2)
       )
       (block
        (i32.store
         (global.get $__bysyncify_data)
         (i32.add
          (i32.load
           (global.get $__bysyncify_data)
          )
          (i32.const -4)
         )
        )
        (local.set $1
         (i32.load
          (i32.load
           (global.get $__bysyncify_data)
          )
         )
        )
       )
      )
      (block
       (if
        (i32.eq
         (global.get $__bysyncify_state)
         (i32.const 0)
        )
        (call $boring)
       )
       (if
        (if (result i32)
         (i32.eq
          (global.get $__bysyncify_state)
          (i32.const 0)
         )
         (i32.const 1)
         (i32.eq
          (local.get $1)
          (i32.const 0)
         )
        )
        (block
         (call $import)
         (if
          (i32.eq
           (global.get $__bysyncify_state)
           (i32.const 1)
          )
          (br $__bysyncify_unwind
           (i32.const 0)
          )
         )
        )
       )
       (if
        (i32.eq
         (global.get $__bysyncify_state)
         (i32.const 0)
        )
        (call $boring)
       )
       (if
        (if (result i32)
         (i32.eq
          (global.get $__bysyncify_state)
          (i32.const 0)
         )
         (i32.const 1)
         (i32.eq
          (local.get $1)
          (i32.const 1)
         )
        )
        (block
         (call $import)
         (if
          (i32.eq
           (global.get $__bysyncify_state)
           (i32.const 1)
          )
          (br $__bysyncify_unwind
           (i32.const 1)
          )
         )
        )
       )
      )
     )
     (return)
    )
   )
  )
  (block
   (i32.store
    (i32.load
     (global.get $__bysyncify_data)
    )
    (local.get $0)
   )
   (i32.store
    (global.get $__bysyncify_data)
    (i32.add
     (i32.load
      (global.get $__bysyncify_data)
     )
     (i32.const 4)
    )
   )
  )
  (nop)
 )
 (func $boring (; 15 ;) (type $FUNCSIG$v)
  (nop)
 )
 (func $calls-mix-deep (; 16 ;) (type $FUNCSIG$v)
  (local $0 i32)
  (local $1 i32)
  (if
   (i32.eq
    (global.get $__bysyncify_state)
    (i32.const 2)
   )
   (nop)
  )
  (local.set $0
   (block $__bysyncify_unwind (result i32)
    (block
     (block
      (if
       (i32.eq
        (global.get $__bysyncify_state)
        (i32.const 2)
       )
       (block
        (i32.store
         (global.get $__bysyncify_data)
         (i32.add
          (i32.load
           (global.get $__bysyncify_data)
          )
          (i32.const -4)
         )
        )
        (local.set $1
         (i32.load
          (i32.load
           (global.get $__bysyncify_data)
          )
         )
        )
       )
      )
      (block
       (if
        (i32.eq
         (global.get $__bysyncify_state)
         (i32.const 0)
        )
        (call $boring-deep)
       )
       (if
        (if (result i32)
         (i32.eq
          (global.get $__bysyncify_state)
          (i32.const 0)
         )
         (i32.const 1)
         (i32.eq
          (local.get $1)
          (i32.const 0)
         )
        )
        (block
         (call $import-deep)
         (if
          (i32.eq
           (global.get $__bysyncify_state)
           (i32.const 1)
          )
          (br $__bysyncify_unwind
           (i32.const 0)
          )
         )
        )
       )
       (if
        (i32.eq
         (global.get $__bysyncify_state)
         (i32.const 0)
        )
        (call $boring)
       )
       (if
        (if (result i32)
         (i32.eq
          (global.get $__bysyncify_state)
          (i32.const 0)
         )
         (i32.const 1)
         (i32.eq
          (local.get $1)
          (i32.const 1)
         )
        )
        (block
         (call $import)
         (if
          (i32.eq
           (global.get $__bysyncify_state)
           (i32.const 1)
          )
          (br $__bysyncify_unwind
           (i32.const 1)
          )
         )
        )
       )
      )
     )
     (return)
    )
   )
  )
  (block
   (i32.store
    (i32.load
     (global.get $__bysyncify_data)
    )
    (local.get $0)
   )
   (i32.store
    (global.get $__bysyncify_data)
    (i32.add
     (i32.load
      (global.get $__bysyncify_data)
     )
     (i32.const 4)
    )
   )
  )
  (nop)
 )
 (func $boring-deep (; 17 ;) (type $FUNCSIG$v)
  (call $boring)
 )
 (func $import-deep (; 18 ;) (type $FUNCSIG$v)
  (local $0 i32)
  (local $1 i32)
  (if
   (i32.eq
    (global.get $__bysyncify_state)
    (i32.const 2)
   )
   (nop)
  )
  (local.set $0
   (block $__bysyncify_unwind (result i32)
    (block
     (block
      (if
       (i32.eq
        (global.get $__bysyncify_state)
        (i32.const 2)
       )
       (block
        (i32.store
         (global.get $__bysyncify_data)
         (i32.add
          (i32.load
           (global.get $__bysyncify_data)
          )
          (i32.const -4)
         )
        )
        (local.set $1
         (i32.load
          (i32.load
           (global.get $__bysyncify_data)
          )
         )
        )
       )
      )
      (if
       (if (result i32)
        (i32.eq
         (global.get $__bysyncify_state)
         (i32.const 0)
        )
        (i32.const 1)
        (i32.eq
         (local.get $1)
         (i32.const 0)
        )
       )
       (block
        (call $import)
        (if
         (i32.eq
          (global.get $__bysyncify_state)
          (i32.const 1)
         )
         (br $__bysyncify_unwind
          (i32.const 0)
         )
        )
       )
      )
     )
     (return)
    )
   )
  )
  (block
   (i32.store
    (i32.load
     (global.get $__bysyncify_data)
    )
    (local.get $0)
   )
   (i32.store
    (global.get $__bysyncify_data)
    (i32.add
     (i32.load
      (global.get $__bysyncify_data)
     )
     (i32.const 4)
    )
   )
  )
  (nop)
 )
 (func $bysyncify_start_unwind (; 19 ;) (param $0 i32)
  (if
   (i32.gt_u
    (i32.load
     (local.get $0)
    )
    (i32.load offset=4
     (local.get $0)
    )
   )
   (unreachable)
  )
  (global.set $__bysyncify_state
   (i32.const 1)
  )
  (global.set $__bysyncify_data
   (local.get $0)
  )
 )
 (func $bysyncify_stop_unwind (; 20 ;)
  (global.set $__bysyncify_state
   (i32.const 0)
  )
 )
 (func $bysyncify_start_rewind (; 21 ;) (param $0 i32)
  (if
   (i32.gt_u
    (i32.load
     (local.get $0)
    )
    (i32.load offset=4
     (local.get $0)
    )
   )
   (unreachable)
  )
  (global.set $__bysyncify_state
   (i32.const 2)
  )
  (global.set $__bysyncify_data
   (local.get $0)
  )
 )
 (func $bysyncify_stop_rewind (; 22 ;)
  (global.set $__bysyncify_state
   (i32.const 0)
  )
 )
)
