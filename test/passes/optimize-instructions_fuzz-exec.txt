[fuzz-exec] calling test32
[LoggingExternalInterface logging nan:0x400000]
[LoggingExternalInterface logging nan:0x400000]
[LoggingExternalInterface logging nan:0x400000]
[LoggingExternalInterface logging nan:0x400000]
[LoggingExternalInterface logging nan:0x7fff82]
[LoggingExternalInterface logging nan:0x400000]
[LoggingExternalInterface logging nan:0x400000]
[fuzz-exec] calling test64
[LoggingExternalInterface logging nan:0x8000000000000]
[LoggingExternalInterface logging nan:0x8000000000000]
[LoggingExternalInterface logging nan:0x8000000000000]
[LoggingExternalInterface logging nan:0x8000000000000]
[LoggingExternalInterface logging nan:0xfffffffffff82]
[LoggingExternalInterface logging nan:0x8000000000000]
[LoggingExternalInterface logging nan:0x8000000000000]
[fuzz-exec] calling just-one-nan
[LoggingExternalInterface logging nan:0x400000]
[LoggingExternalInterface logging nan:0x400000]
[LoggingExternalInterface logging nan:0x400000]
[LoggingExternalInterface logging nan:0x400000]
[LoggingExternalInterface logging nan:0x400000]
[LoggingExternalInterface logging nan:0x400000]
[fuzz-exec] calling ignore
[LoggingExternalInterface logging nan:0x400000]
[LoggingExternalInterface logging nan:0x400000]
[LoggingExternalInterface logging nan:0x400000]
[LoggingExternalInterface logging nan:0x400000]
(module
 (type $none_=>_none (func))
 (type $f32_=>_none (func (param f32)))
 (type $f64_=>_none (func (param f64)))
 (import "fuzzing-support" "log-f32" (func $logf32 (param f32)))
 (import "fuzzing-support" "log-f64" (func $logf64 (param f64)))
 (export "test32" (func $0))
 (export "test64" (func $1))
 (export "just-one-nan" (func $2))
 (export "ignore" (func $3))
 (func $0
  (call $logf32
   (f32.add
    (f32.const -nan:0x7fff82)
    (f32.neg
     (f32.const -nan:0x7ff622)
    )
   )
  )
  (call $logf32
   (f32.sub
    (f32.const -nan:0x7fff82)
    (f32.neg
     (f32.const -nan:0x7ff622)
    )
   )
  )
  (call $logf32
   (f32.mul
    (f32.const -nan:0x7fff82)
    (f32.neg
     (f32.const -nan:0x7ff622)
    )
   )
  )
  (call $logf32
   (f32.div
    (f32.const nan:0x7fff82)
    (f32.const -nan:0x7ff622)
   )
  )
  (call $logf32
   (f32.copysign
    (f32.const -nan:0x7fff82)
    (f32.neg
     (f32.const -nan:0x7ff622)
    )
   )
  )
  (call $logf32
   (f32.min
    (f32.const -nan:0x7fff82)
    (f32.neg
     (f32.const -nan:0x7ff622)
    )
   )
  )
  (call $logf32
   (f32.max
    (f32.const -nan:0x7fff82)
    (f32.neg
     (f32.const -nan:0x7ff622)
    )
   )
  )
 )
 (func $1
  (call $logf64
   (f64.add
    (f64.const -nan:0xfffffffffff82)
    (f64.neg
     (f64.const -nan:0xfffffffffa622)
    )
   )
  )
  (call $logf64
   (f64.sub
    (f64.const -nan:0xfffffffffff82)
    (f64.neg
     (f64.const -nan:0xfffffffffa622)
    )
   )
  )
  (call $logf64
   (f64.mul
    (f64.const -nan:0xfffffffffff82)
    (f64.neg
     (f64.const -nan:0xfffffffffa622)
    )
   )
  )
  (call $logf64
   (f64.div
    (f64.const nan:0xfffffffffff82)
    (f64.const -nan:0xfffffffffa622)
   )
  )
  (call $logf64
   (f64.copysign
    (f64.const -nan:0xfffffffffff82)
    (f64.neg
     (f64.const -nan:0xfffffffffa622)
    )
   )
  )
  (call $logf64
   (f64.min
    (f64.const -nan:0xfffffffffff82)
    (f64.neg
     (f64.const -nan:0xfffffffffa622)
    )
   )
  )
  (call $logf64
   (f64.max
    (f64.const -nan:0xfffffffffff82)
    (f64.neg
     (f64.const -nan:0xfffffffffa622)
    )
   )
  )
 )
 (func $2
  (call $logf32
   (f32.add
    (f32.neg
     (f32.const -nan:0x7ff622)
    )
    (f32.const 0)
   )
  )
  (call $logf32
   (f32.add
    (f32.const -nan:0x7ff622)
    (f32.neg
     (f32.const 0)
    )
   )
  )
  (call $logf32
   (f32.add
    (f32.neg
     (f32.const -nan:0x7ff622)
    )
    (f32.const -0)
   )
  )
  (call $logf32
   (f32.add
    (f32.const -nan:0x7ff622)
    (f32.neg
     (f32.const -0)
    )
   )
  )
  (call $logf32
   (f32.add
    (f32.neg
     (f32.const nan:0x7ff622)
    )
    (f32.const 0)
   )
  )
  (call $logf32
   (f32.add
    (f32.const nan:0x7ff622)
    (f32.neg
     (f32.const 0)
    )
   )
  )
 )
 (func $3
  (call $logf32
   (f32.div
    (f32.const -0)
    (f32.const 0)
   )
  )
  (call $logf32
   (f32.div
    (f32.const 0)
    (f32.const 0)
   )
  )
  (call $logf32
   (f32.div
    (f32.const -0)
    (f32.const -0)
   )
  )
  (call $logf32
   (f32.div
    (f32.const 0)
    (f32.const -0)
   )
  )
 )
)
[fuzz-exec] calling test32
[LoggingExternalInterface logging nan:0x400000]
[LoggingExternalInterface logging nan:0x400000]
[LoggingExternalInterface logging nan:0x400000]
[LoggingExternalInterface logging nan:0x400000]
[LoggingExternalInterface logging nan:0x7fff82]
[LoggingExternalInterface logging nan:0x400000]
[LoggingExternalInterface logging nan:0x400000]
[fuzz-exec] calling test64
[LoggingExternalInterface logging nan:0x8000000000000]
[LoggingExternalInterface logging nan:0x8000000000000]
[LoggingExternalInterface logging nan:0x8000000000000]
[LoggingExternalInterface logging nan:0x8000000000000]
[LoggingExternalInterface logging nan:0xfffffffffff82]
[LoggingExternalInterface logging nan:0x8000000000000]
[LoggingExternalInterface logging nan:0x8000000000000]
[fuzz-exec] calling just-one-nan
[LoggingExternalInterface logging nan:0x400000]
[LoggingExternalInterface logging nan:0x400000]
[LoggingExternalInterface logging nan:0x400000]
[LoggingExternalInterface logging nan:0x400000]
[LoggingExternalInterface logging nan:0x400000]
[LoggingExternalInterface logging nan:0x400000]
[fuzz-exec] calling ignore
[LoggingExternalInterface logging nan:0x400000]
[LoggingExternalInterface logging nan:0x400000]
[LoggingExternalInterface logging nan:0x400000]
[LoggingExternalInterface logging nan:0x400000]
