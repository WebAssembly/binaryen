(module
 (type $i32_i32_i32_=>_i32 (func (param i32 i32 i32) (result i32)))
 (type $i32_i32_i64_=>_i64 (func (param i32 i32 i64) (result i64)))
 (type $i32_i32_f32_=>_f32 (func (param i32 i32 f32) (result f32)))
 (type $i32_i32_f64_=>_f64 (func (param i32 i32 f64) (result f64)))
 (type $i32_i32_anyref_=>_anyref (func (param i32 i32 anyref) (result anyref)))
 (type $i32_i32_exnref_=>_exnref (func (param i32 i32 exnref) (result exnref)))
 (type $none_=>_none (func))
 (import "env" "get_i32" (func $get_i32 (param i32 i32 i32) (result i32)))
 (import "env" "get_i64" (func $get_i64 (param i32 i32 i64) (result i64)))
 (import "env" "get_f32" (func $get_f32 (param i32 i32 f32) (result f32)))
 (import "env" "get_f64" (func $get_f64 (param i32 i32 f64) (result f64)))
 (import "env" "set_i32" (func $set_i32 (param i32 i32 i32) (result i32)))
 (import "env" "set_i64" (func $set_i64 (param i32 i32 i64) (result i64)))
 (import "env" "set_f32" (func $set_f32 (param i32 i32 f32) (result f32)))
 (import "env" "set_f64" (func $set_f64 (param i32 i32 f64) (result f64)))
 (import "env" "get_anyref" (func $get_anyref (param i32 i32 anyref) (result anyref)))
 (import "env" "set_anyref" (func $set_anyref (param i32 i32 anyref) (result anyref)))
 (import "env" "get_exnref" (func $get_exnref (param i32 i32 exnref) (result exnref)))
 (import "env" "set_exnref" (func $set_exnref (param i32 i32 exnref) (result exnref)))
 (func $A (; 12 ;)
  (local $x i32)
  (local $y i64)
  (local $z f32)
  (local $w f64)
  (local $a anyref)
  (local $e exnref)
  (drop
   (call $get_i32
    (i32.const 0)
    (i32.const 0)
    (local.get $x)
   )
  )
  (drop
   (local.get $y)
  )
  (drop
   (call $get_f32
    (i32.const 1)
    (i32.const 2)
    (local.get $z)
   )
  )
  (drop
   (call $get_f64
    (i32.const 2)
    (i32.const 3)
    (local.get $w)
   )
  )
  (drop
   (call $get_anyref
    (i32.const 3)
    (i32.const 4)
    (local.get $a)
   )
  )
  (drop
   (call $get_exnref
    (i32.const 4)
    (i32.const 5)
    (local.get $e)
   )
  )
  (drop
   (call $get_i32
    (i32.const 5)
    (i32.const 0)
    (local.get $x)
   )
  )
  (drop
   (local.get $y)
  )
  (drop
   (call $get_f32
    (i32.const 6)
    (i32.const 2)
    (local.get $z)
   )
  )
  (drop
   (call $get_f64
    (i32.const 7)
    (i32.const 3)
    (local.get $w)
   )
  )
  (drop
   (call $get_anyref
    (i32.const 8)
    (i32.const 4)
    (local.get $a)
   )
  )
  (drop
   (call $get_exnref
    (i32.const 9)
    (i32.const 5)
    (local.get $e)
   )
  )
  (local.set $x
   (call $set_i32
    (i32.const 10)
    (i32.const 0)
    (i32.const 1)
   )
  )
  (local.set $y
   (i64.const 2)
  )
  (local.set $z
   (call $set_f32
    (i32.const 11)
    (i32.const 2)
    (f32.const 3.2100000381469727)
   )
  )
  (local.set $w
   (call $set_f64
    (i32.const 12)
    (i32.const 3)
    (f64.const 4.321)
   )
  )
  (local.set $a
   (call $set_anyref
    (i32.const 14)
    (i32.const 4)
    (call $get_anyref
     (i32.const 13)
     (i32.const 4)
     (local.get $a)
    )
   )
  )
  (local.set $e
   (call $set_exnref
    (i32.const 16)
    (i32.const 5)
    (call $get_exnref
     (i32.const 15)
     (i32.const 5)
     (local.get $e)
    )
   )
  )
  (local.set $x
   (call $set_i32
    (i32.const 17)
    (i32.const 0)
    (i32.const 11)
   )
  )
  (local.set $y
   (i64.const 22)
  )
  (local.set $z
   (call $set_f32
    (i32.const 18)
    (i32.const 2)
    (f32.const 33.209999084472656)
   )
  )
  (local.set $w
   (call $set_f64
    (i32.const 19)
    (i32.const 3)
    (f64.const 44.321)
   )
  )
  (local.set $a
   (call $set_anyref
    (i32.const 21)
    (i32.const 4)
    (call $get_anyref
     (i32.const 20)
     (i32.const 4)
     (local.get $a)
    )
   )
  )
  (local.set $e
   (call $set_exnref
    (i32.const 23)
    (i32.const 5)
    (call $get_exnref
     (i32.const 22)
     (i32.const 5)
     (local.get $e)
    )
   )
  )
  (local.set $a
   (anyref.pop)
  )
  (local.set $e
   (exnref.pop)
  )
 )
)
