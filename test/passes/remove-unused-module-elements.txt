(module
 (type $0 (func))
 (table 1 1 anyfunc)
 (elem (i32.const 0) $called_indirect)
 (memory $0 0)
 (export "memory" (memory $0))
 (export "exported" (func $exported))
 (start $start)
 (func $start (type $0)
  (call $called0)
 )
 (func $called0 (type $0)
  (call $called1)
 )
 (func $called1 (type $0)
  (nop)
 )
 (func $called_indirect (type $0)
  (nop)
 )
 (func $exported (type $0)
  (call $called2)
 )
 (func $called2 (type $0)
  (call $called2)
  (call $called3)
 )
 (func $called3 (type $0)
  (call $called4)
 )
 (func $called4 (type $0)
  (call $called3)
 )
)
(module
 (import "env" "memory" (memory $0 256))
 (import "env" "table" (table 0 anyfunc))
)
(module
 (type $0 (func))
 (import "env" "memory" (memory $0 256))
 (import "env" "table" (table 0 anyfunc))
 (import "env" "memoryBase" (global $memoryBase i32))
 (import "env" "tableBase" (global $tableBase i32))
 (elem (get_global $tableBase) $waka)
 (data (get_global $memoryBase) "hello, world!")
 (func $waka (type $0)
  (nop)
 )
)
(module
 (type $FUNCSIG$ii (func (param i32) (result i32)))
 (type $1 (func (result i32)))
 (type $2 (func))
 (import "env" "imported" (global $imported i32))
 (import "env" "_puts" (func $_puts (param i32) (result i32)))
 (global $int (mut i32) (get_global $imported))
 (global $set (mut i32) (i32.const 100))
 (global $exp_glob i32 (i32.const 600))
 (memory $0 0)
 (export "one" (func $one))
 (export "three" (func $three))
 (export "exp_glob" (global $exp_glob))
 (start $starter)
 (func $one (type $1) (result i32)
  (call $two)
 )
 (func $two (type $1) (result i32)
  (get_global $int)
 )
 (func $three (type $2)
  (call $four)
 )
 (func $four (type $2)
  (set_global $set
   (i32.const 200)
  )
  (drop
   (call $_puts
    (i32.const 300)
   )
  )
 )
 (func $starter (type $2)
  (nop)
 )
)
