(module
 (type $FUNCSIG$v (func))
 (import "env" "import" (func $import))
 (memory $0 1 2)
 (global $__bysyncify_state (mut i32) (i32.const 0))
 (global $__bysyncify_data (mut i32) (i32.const 0))
 (export "__bysyncify_set" (func $__bysyncify_set))
 (func $calls-import (; 1 ;) (type $FUNCSIG$v)
  (nop)
  (block $bysyncify_unwind
   (block
    (block
     (if
      (if (result i32)
       (i32.eq
        (global.get $__bysyncify_state)
        (i32.const 0)
       )
       (i32.const 1)
       (if (result i32)
        (i32.eq
         (i32.load
          (i32.load offset=8
           (global.get $__bysyncify_data)
          )
         )
         (i32.const 0)
        )
        (block (result i32)
         (i32.store offset=8
          (global.get $__bysyncify_data)
          (i32.sub
           (i32.load offset=8
            (global.get $__bysyncify_data)
           )
           (i32.const 4)
          )
         )
         (i32.const 1)
        )
        (i32.const 0)
       )
      )
      (call $import)
     )
     (if
      (i32.eq
       (global.get $__bysyncify_state)
       (i32.const 1)
      )
      (block
       (block
        (i32.store offset=4
         (i32.load offset=8
          (global.get $__bysyncify_data)
         )
         (i32.const 0)
        )
        (i32.store offset=8
         (global.get $__bysyncify_data)
         (i32.add
          (i32.load offset=8
           (global.get $__bysyncify_data)
          )
          (i32.const 4)
         )
        )
       )
       (br $bysyncify_unwind)
      )
     )
    )
    (return)
   )
  )
  (nop)
 )
 (func $calls-nothing (; 2 ;) (type $FUNCSIG$v)
  (drop
   (i32.eqz
    (i32.const 17)
   )
  )
 )
 (func $__bysyncify_set (; 3 ;) (param $0 i32) (param $1 i32)
  (global.set $__bysyncify_state
   (local.get $0)
  )
  (global.set $__bysyncify_data
   (local.get $1)
  )
 )
)
