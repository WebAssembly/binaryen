(module
 (type $0 (func))
 (type $1 (func (result f64)))
 (type $2 (func (param i32 f64 f64) (result i32)))
 (type $3 (func (param i64)))
 (type $4 (func (param f64) (result i32)))
 (export "if-select" (func $0))
 (export "unreachable-body-update-zext" (func $1))
 (export "ssa-const" (func $2))
 (export "if-nothing" (func $3))
 (export "only-dfo" (func $4))
 (func $0 (; 0 ;) (; has Stack IR ;) (type $0)
  (nop)
 )
 (func $1 (; 1 ;) (; has Stack IR ;) (type $1) (result f64)
  (unreachable)
 )
 (func $2 (; 2 ;) (; has Stack IR ;) (type $2) (param $0 i32) (param $1 f64) (param $2 f64) (result i32)
  (unreachable)
 )
 (func $3 (; 3 ;) (; has Stack IR ;) (type $3) (param $0 i64)
  (unreachable)
 )
 (func $4 (; 4 ;) (; has Stack IR ;) (type $4) (param $0 f64) (result i32)
  (local $1 i32)
  (loop $label$1
   (if
    (i32.eqz
     (local.get $1)
    )
    (block
     (local.set $1
      (i32.const -2147483648)
     )
     (br $label$1)
    )
   )
  )
  (i32.const -2766)
 )
)
