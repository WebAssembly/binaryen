(module
 (type $0 (func (param i32)))
 (type $FUNCSIG$ddd (func (param f64 f64) (result f64)))
 (type $2 (func))
 (import "global.Math" "pow" (func $Math_pow (param f64 f64) (result f64)))
 (memory $0 256 256)
 (func $pow2 (; 1 ;) (type $2)
  (local $x f64)
  (local $y f64)
  (local $2 f64)
  (local $3 f64)
  (drop
   (f64.mul
    (local.tee $2
     (f64.const 1)
    )
    (local.get $2)
   )
  )
  (drop
   (call $Math_pow
    (f64.const 1)
    (f64.const 3)
   )
  )
  (drop
   (call $Math_pow
    (f64.const 2)
    (f64.const 1)
   )
  )
  (local.set $x
   (f64.const 5)
  )
  (drop
   (f64.mul
    (local.get $x)
    (local.get $x)
   )
  )
  (drop
   (f64.mul
    (local.tee $y
     (f64.const 7)
    )
    (local.get $y)
   )
  )
  (drop
   (f64.mul
    (local.tee $3
     (f64.const 8)
    )
    (local.get $3)
   )
  )
 )
 (func $pow.2 (; 2 ;) (type $2)
  (drop
   (f64.sqrt
    (f64.const 1)
   )
  )
  (drop
   (call $Math_pow
    (f64.const 1)
    (f64.const 0.51)
   )
  )
 )
)
