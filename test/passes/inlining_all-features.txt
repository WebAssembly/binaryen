(module
 (type $none_=>_none (func))
 (type $none_=>_funcref (func (result funcref)))
 (elem declare func $foo)
 (export "ref_func_test" (func $ref_func_test))
 (func $foo
  (nop)
 )
 (func $ref_func_test (result funcref)
  (block
   (block $__inlined_func$foo
    (nop)
   )
  )
  (ref.func $foo)
 )
)
(module
 (type $none_=>_i32 (func (result i32)))
 (global $global$0 (mut funcref) (ref.func $0))
 (func $0 (result i32)
  (i32.const 1337)
 )
 (func $1 (result i32)
  (block $__inlined_func$0 (result i32)
   (i32.const 1337)
  )
 )
)
(module
 (type $none_=>_none (func))
 (start $0)
 (func $0
  (nop)
 )
 (func $1
  (block $__inlined_func$0
   (nop)
  )
 )
)
(module
 (type $none_=>_none (func))
 (export "func_36_invoker" (func $1))
 (func $1
  (block $__inlined_func$0
   (block
    (call_ref
     (ref.null $none_=>_none)
    )
    (br $__inlined_func$0)
   )
   (br $__inlined_func$0)
  )
 )
)
(module
 (type $none_=>_ref|func| (func (result (ref func))))
 (elem declare func $1)
 (func $1 (result (ref func))
  (local $0 funcref)
  (block $__inlined_func$0 (result (ref func))
   (local.set $0
    (ref.func $1)
   )
   (ref.as_non_null
    (local.get $0)
   )
  )
 )
)
(module
 (type $struct (struct ))
 (type $rtt_$struct_=>_none (func (param (rtt $struct))))
 (type $none_=>_none (func))
 (func $0 (param $rtt (rtt $struct))
  (nop)
 )
 (func $1
  (call $0
   (rtt.canon $struct)
  )
 )
)
